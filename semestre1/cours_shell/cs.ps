%!PS-Adobe-2.0
%%Creator: dvipsk 5.55a Copyright 1986, 1994 Radical Eye Software
%%Title: cs.dvi
%%Pages: 162
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: dvips cs.dvi -o cs.ps
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1998.11.30:1603
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 300 300 (cs.dvi)
@start /Fa 15 118 df<1380EA010012025A120C120812185AA35AA412E0AA1260A47E
A37E1208120C12047E7EEA008009267C9B10>40 D<7E12407E7E12181208120C7EA37EA4
1380AA1300A41206A35A1208121812105A5A5A09267D9B10>I<126012F0A212701210A3
1220A21240A2040B7C830C>44 D<1360A213F0A3EA0138A3EA021CA2487EA2EA07FEEA08
07A2001013801303003813C038FC0FF014137F9217>97 D<EAFFFCEA1C07EB0180EB00C0
14E014601470A7146014E014C0EB0180EB0700EAFFFC1413809217>100
D<B5FCEA1C037F14801300A2EB1000A21330EA1FF0EA1C30131014401300A21480A21303
B5FC12137F9215>I<EAFF80EA1C00B1EAFF8009137F920B>105 D<B47E001CC7FCAB1480
A2130114005B5BB5FC1113809213>108 D<38FC07F0381E01C0381F00801217EA1380EA
11C0A2EA10E0137013781338131C130EA21307130313011238EAFE0014137F9217>110
D<EA03F8EA0E0E487E38380380387001C0A2EA600000E013E0A6387001C0A23838038038
1C0700EA0E0EEA03F813137E9218>I<EAFFF8EA1C0E7FEB0380A4EB0700130EEA1FF800
1CC7FCA8B47E11137F9215>I<EAFFF8EA1C0E7FEB0380A4EB0700130EEA1FF8EA1C0E7F
A51408EB038838FF81F01513809216>114 D<EA1F90EA2070EA4030EAC010A213007E12
7CEA7F80EA3FC0EA07E0EA0070A213301280A2EAC020EAE040EA9F800C137E9211>I<B5
12E038C0E06000801320A400001300ACEA0FFE13137F9216>I<38FF87F0381C01C0EB00
80AD380C01001206EA0306EA00F814137F9217>I E /Fb 2 122
df<EA071F381FFF803838F1C0EA70E1EBE0801400EA01C0A438038380124300E31300EA
E787EA7EFEEA3C7812107D8F14>120 D<EA1C03003E13803877070012E712EEA2EA0E0E
121CA3485AA2EA183CEA1C7CEA0FF8EA07B8EA003813301370EA70E05BEA7380003FC7FC
121E11187C8F14>I E /Fc 3 113 df<EB07F0EB3FFCEBFC1E3801F00FEA03E0EA07C012
0FEA1F80003F131E130048137CEB07F8EBFFE038FFFE0048C7FCA45AA2007C130214076C
130F143C381F01F83807FFE000011300181B799A20>101 D<131C133E137FA2137E137C
13381300A8EA07C0EA0FE0EA18F0EA38F81270127112E1A2EAE3F012C3EA07E0A3EA0FC0
A3EA1F801386138EEA3F0E130CEA3E1C13181338EA1E70EA0FE0EA0780102A7AA915>
105 D<90387807F09038FE1FFC3901DF3C3E39039FF01F02C0138039071F800F16C0A215
1F38063F001200A3017EEB3F80A31600495B157EA25D48485B6D485A4A5A9038FF0FC026
03F3FFC7FCEBF1FC01F0C8FCA2485AA4485AA3EA7FF8487E6C5A22277F9A23>112
D E /Fd 1 106 df<1204120C1200A5123012581298A21230A212601264A21268123006
127E910B>105 D E /Fe 2 18 df<1306130C131813301370136013C012011380120313
005A1206120E120C121CA212181238A312301270A65AB21270A612301238A31218121CA2
120C120E120612077E1380120113C012001360137013301318130C13060F4A788119>16
D<12C012607E7E121C120C7E12077E1380120113C0120013E013601370A213301338A313
18131CA6130EB2131CA613181338A313301370A2136013E013C012011380120313005A12
065A121C12185A5A5A0F4A7F8119>I E /Ff 11 118 df<EA0FE0EA18701220EA6020EA
C000A51260EA2010EA1820EA0FC00C0D7F8C0F>99 D<EA0F80EA1040EA2020EA6030EAC0
10EAFFF0EAC000A31260EA2010EA1820EA0FC00C0D7F8C0F>101
D<1220127012201200A512F01230AB12FC06157F9409>105 D<12F01230B212FC06147F
9309>108 D<38F3E1F03834321838381C0CEA3018A938FC7E3F180D7F8C1B>I<EAF3E0EA
3430EA38181230A9EAFC7E0F0D7F8C12>I<EAF3E0EA3430EA3808EA300C1306A5130CEA
3808EA3430EA33E0EA3000A512FC0F137F8C12>112 D<EAF3C0EA34E01238EA30401300
A812FE0B0D7F8C0D>114 D<EA3E80126112C0A2EAE000127EEA3F80EA03C01280A212C0
EAE180EA9F000A0D7F8C0D>I<1210A312301270EAFF80EA3000A71380A3EA1100120E09
127F910D>I<EAF078EA3018A91338EA1858EA0F9E0F0D7F8C12>I
E /Fg 16 118 df<EA01F338071F80EA0E0F001C130012381278A2EAF01EA438E03CC0A3
38707C80EA30DD381F0F0012117C9016>97 D<123F5A120FA2121EA45AEA3DF0EA3F1CEA
3C0E1278A4EAF01EA3131CEAE03C13381378EA7070EA31C0EA1F000F1A7C9914>I<EA01
F8EA0704EA0E0EEA1C1E1238EA780C13005AA55AEAF004EA700CEA3838EA0FE00F117C90
14>I<EB07E0130F1301A2EB03C0A4EB0780EA01F7EA071FEA0E0F001C130012381278A2
EAF01EA438E03CC0A338707C80EA30DD381F0F00131A7C9916>I<EA01F8EA0704EA0E06
121C12381278131CEAF0F8EAFF80EAF000A41304EA700CEA3838EA0FE00F117C9014>I<
EA0FC0121F1203A2485AA448C7FC133FEB4380EB83C0EA1F03121EA3383C0780A3EB0F00
00781330A2131E146038F00E4038600780141A7E9916>104 D<EA01C0A21203EA0180C7
FCA6121E1237EA6780A212C7EACF00120F121EA35A13C0A21278EA7980EA3900121E0A1B
7D9A0D>I<EA1F80A21207A2EA0F00A4121EA45AA45AA412F3A312F61276123C091A7D99
0B>108 D<391C1F83F0392621C4383967C1F83C38CF81F0EB01E0A2120F391E03C078A3
15F0393C0780F3A2EC81E315E639780F00E4D83006137820117D9023>I<381C1F803826
21C03867C1E0EACF811301A2120F381E03C0A3EB0780003C1398A2EB0F18143038780720
383003C015117D9018>I<EA01FCEA0706EA0E07381C038012381278A2EAF007A314005B
EAE00E6C5AEA70386C5AEA0FC011117C9016>I<380387C03804DC70380CF038EA19E0A3
12013803C078A31470380780F014E0138114C0380FC700137C90C7FCA2121EA3EA7F8012
FF1518809016>I<EA1C1E38266180EA6783EACF871307EB0300000FC7FC121EA45AA45A
123011117D9013>114 D<EA01F0EA060CEA0C1CEA083C1218EA1C18EA1FC013F0EA0FF8
1203EA0038EA701812F0A2EAE030EA6060EA1F800E117D9012>I<1203EA0780EA0F00A4
121EEAFFE0A2EA1E005AA45AA4EAF0C0A2EAF180A2EA7300123C0B187C970E>I<001E13
C0383701E0EA6781384783C012C7EACF03120FEB0780121EA3383C0F30A2121CEB1F2038
0E37603807C3C014117D9017>I E /Fh 19 121 df<3801F180EA07FBEA0FFFEA1F0FEA
3C07EA38031270A200F0C7FC5AA77E38700380A21238383C0700EA1F0FEA0FFE6C5AEA01
F011197E9816>67 D<387FFFC0B5FC7EEA1C01A490C7FCA2131CA2EA1FFCA3EA1C1CA290
C7FC14E0A5EA7FFFB5FC7E13197F9816>69 D<387FFFE0B5FC7EEA1C00A41400A2131CA2
EA1FFCA3EA1C1CA290C7FCA6EA7F80487E6C5A13197F9816>I<387F0FE038FF8FF0387F
0FE0381C0780EB0F00130E5B133C5B5B5BEA1DF0121F7F1338EA1E1C121C7FA27FA2EB03
80387F07E038FF8FF0387F07E01419809816>75 D<B47E7F5B001CC7FCAE144014E0A4B5
FCA313197F9816>I<387E07F038FF0FF8387F07F0381D81C0A313C1121C13E1A2136113
71A313311339A21319131D130DA3EA7F07EAFF87EA7F031519809816>78
D<EA1FFC487E487EEA780F38F00780EAE003AEEAF007A238780F00EA7FFF6C5A6C5A1119
7E9816>I<EA7FF8EAFFFE6C7E381C0F80130314C01301A313031480130F381FFF005B13
F8001CC7FCA7127F487E6CC7FC12197F9816>I<EA07E3EA1FFF5AEA781FEAF00712E0A2
90C7FC7E1278EA3F80EA1FF0EA07FCC67E130F7FEB0380A2126012E0EB0700EAF80FEAFF
FE5BEAC7F011197E9816>83 D<387FFFE0B5FCA2EAE0E0A400001300AFEA07FC487E6C5A
13197F9816>I<387F1F80EB3FC0EB1F80380E1E00131C12075BEA03B813F012015B1200
12017F120313B81207131C120FEA0E0EA2487E387E0FC038FF1FE0387E0FC013197F9816
>88 D<EA03F8EA0FFCEA1FFEEA3C1EEA780CEA70005AA57EEA70071278EA3E0EEA1FFCEA
0FF8EA03F010127D9116>99 D<EA03F0EA0FFC487EEA3C0F487E3870038012E0B5FCA300
E0C7FCA2387003801278EA3E07381FFF00EA07FEEA01F811127E9116>101
D<131E137F3801FF8013C7380383001380A2EA7FFFB5FCA2EA0380ACEA7FFC487E6C5A11
197F9816>I<127E12FE127E120EA4EB7FE0A3EB0F00131E5B5B5B120F7F13BC131EEA0E
0E7F1480387F87F0EAFFCFEA7F871419809816>107 D<EAFC78EAFDFCB47EEA1F0FEA1E
07121CAA38FF8FE0139F138F13127F9116>110 D<EA03E0EA0FF8487EEA3C1E487EEA70
0738E00380A5EAF00700701300EA780FEA3C1EEA1FFC6C5AEA03E011127E9116>I<387F
0FC038FF3FE0EA7F7F3807F040EBC0005BA290C7FCA8EA7FFC12FF127F13127F9116>
114 D<387F1FC0133F131F380F1E006C5AEA03B813F012016C5A12017FEA03B8EA073C13
1CEA0E0E387F1FC038FF3FE0387F1FC013127F9116>120 D E /Fi
31 121 df<90383FE3F83901F03F1C3903C03E3E0007137CEA0F80151C1500A5B612C0A2
390F807C00AE397FE1FF80A21F1D809C1C>11 D<1278127C12FE127E7EEA0F8012071201
09087C9C18>18 D<120F5AEA3F801300127E12F85A12C00908769C18>I<127812FCA212
FEA2127A1202A21204A21208A212101260070E7D9C0D>39 D<EAFFF8A40D04808A10>45
D<127812FCA4127806067D850D>I<90381FE0209038FFF8E03803F80F3807C003380F80
0148C7FC123E1560127E127C00FC1400A8007C1460127E123E15C07E390F8001803907C0
03003803F80E3800FFFCEB1FE01B1C7D9B22>67 D<EAFFFEA2EA0FC0AF1403A31407A214
06140E141E147EB512FEA2181C7E9B1D>76 D<D8FFC0EB03FF6D5B000F15F0D80DF0130D
A3D80CF81319A2017C1331A26D1361A26D13C1A390380F8181A2903807C301A2EB03E6A2
EB01FCA3EB00F8A23AFFC0701FFFA2281C7E9B2D>I<B512F814FE390FC03F80140FEC07
C015E0A515C0A2EC0F80EC3F00EBFFFC01C0C7FCABEAFFFCA21B1C7E9B21>80
D<007FB512E0A238781F81007013800060146000E0147000C01430A400001400B03807FF
FEA21C1C7E9B21>84 D<EA0FF8EA1C1E383E0F80130714C0121C1200137FEA07E7EA1F07
123C127C12F8A3EA780B383E13F8EA0FE115127F9117>97 D<B4FCA2121FA9EB3F80EBE1
E0EB8070EB0078143CA2143EA6143CA21478EB8070381EC1E0381C3F00171D7F9C1B>I<
EA03FCEA0E0EEA1C1F123C1278130E00F8C7FCA61278EB0180123C381C0300EA0E0EEA03
F811127E9115>I<EB0FF0A21301A9EA01F9EA0F07EA1C03EA3C011278A212F8A61278A2
123CEA1C03380F0FFEEA03F9171D7E9C1B>I<EA03FCEA0F07381C0380383C01C0127814
E012F8A2B5FC00F8C7FCA3127814607E6C13C0380F03803801FC0013127F9116>I<3803
F0F0380E1F38EA3C0F3838073000781380A400381300EA3C0FEA1E1CEA33F00030C7FCA3
EA3FFF14C06C13E014F0387801F838F00078A300701370007813F0381E03C03807FF0015
1B7F9118>103 D<B4FCA2121FA9EB0FC0EB31E0EB40F0EB80F8A21300AB38FFE7FFA218
1D7F9C1B>I<121E123FA4121EC7FCA6127FA2121FAEEAFFC0A20A1E7F9D0E>I<B4FCA212
1FB3A7EAFFE0A20B1D7F9C0E>108 D<39FF0FC07E903831E18F3A1F40F20780D980FC13
C0A2EB00F8AB3AFFE7FF3FF8A225127F9128>I<38FF0FC0EB31E0381F40F0EB80F8A213
00AB38FFE7FFA218127F911B>I<EA01FC380F0780381C01C0003C13E0387800F0A200F8
13F8A6007813F0A2383C01E0381E03C0380F07803801FC0015127F9118>I<38FF3F80EB
E1E0381F80F0EB0078147C143C143EA6143C147C1478EB80F0EBC1E0EB3F0090C7FCA6EA
FFE0A2171A7F911B>I<3803F060380F0CE0EA1E07EA3C03127C127812F8A61278127C12
3CEA1C07EA0E0FEA03F3EA0003A6EB1FFCA2161A7E9119>I<EAFE3E1347381E8F80A338
1F070090C7FCAAEAFFE0A211127F9114>I<EA1FD8EA3078EA601812E0A2EAF000EAFF80
EA7FE013F0EA1FF8EA07FCEA007CEAC01CA212E01318EAF830EACFC00E127E9113>I<12
03A45AA25AA2EA3FFC12FFEA1F00A9130CA4EA0F08EA0798EA03F00E1A7F9913>I<38FF
07F8A2EA1F00AC1301120F380786FFEA01F818127F911B>I<38FFC1FCA2381F00601380
000F13C0A23807C180A23803E300A213F7EA01F613FE6C5AA21378A2133016127F9119>
I<38FFC7FCA2381F81C0380F83803807C700EA03EEEA01FC5B1200137C13FEEA01DF3803
9F80EA070F380607C0380C03E038FF07FCA216127F9119>120 D
E /Fj 20 121 df<1338137813F0EA01E0EA03C0EA0780EA0F00120E5AA25AA25AA35AAA
1270A37EA27EA27E120FEA0780EA03C0EA01E0EA00F8137813380D2878A21A>40
D<126012F012787E7E7EEA07801203EA01C0A2EA00E0A21370A31338AA1370A313E0A2EA
01C0A2EA03801207EA0F00121E5A5A5A12600D287CA21A>I<EA1FF0EA3FFC487EEA780F
EA300738000380A2137FEA07FF121FEA3F83EA7803127012E0A3EA7007EA780F383FFFFC
EA1FFDEA07F016157D941A>97 D<EBFF80000313C0000F13E0EA1F01383C00C048130012
70A25AA51270A2007813707E381F01F0380FFFE0000313C03800FE0014157D941A>99
D<EB0FC0131F130F1301A6EA01F1EA07FDEA0FFFEA1E0FEA3C07EA7803EA700112E0A7EA
7003A2EA3807EA3E0F381FFFF83807FDFC3801F1F8161E7E9D1A>I<EA01F8EA07FF4813
80381E07C0EA3C01387800E01270481370A2B512F0A300E0C7FC1270A2007813707E381F
01F0380FFFE0000313803800FE0014157D941A>I<EB07E0EB1FF0EB3FF8EB7878EBF030
EBE000A4387FFFF0B5FCA23800E000AF383FFF804813C06C1380151E7F9D1A>I<3801F8
7C3807FFFE5A381E078C381C0380383801C0A5381C0380EA1E07381FFF005BEA39F80038
C7FCA27E381FFF8014E04813F83878007C0070131C48130EA40070131C0078133C003E13
F8381FFFF0000713C00001130017217F941A>I<13C0487EA26C5A90C7FCA6EA7FE0A312
00AF387FFF80B512C06C1380121F7C9E1A>105 D<12FEA3120EA6EB0FFC131F130FEB03
C0EB0780EB0F00131E5B5B13FC120F13DE138F380E07801303EB01C014E0EB00F038FFE3
FEA3171E7F9D1A>107 D<EA7FE012FF127F1200B3A6387FFFC0B512E06C13C0131E7D9D
1A>I<387CE0E038FFFBF8EA7FFF381F1F1CEA1E1EA2EA1C1CAC387F1F1F39FFBFBF8039
7F1F1F00191580941A>I<EA7E3E38FEFF80007F13C0EA0FC1EB80E01300120EAC387FC3
FC38FFE7FE387FC3FC17157F941A>I<EA01F0EA07FCEA1FFF383E0F80EA3C07387803C0
EA700138E000E0A6EAF001007013C0EA7803383C0780EA3E0F381FFF00EA07FCEA01F013
157D941A>I<EA7E3E38FEFF80007F13E0380FC1F0EB8070EB0038120E141CA7000F1338
1478EB80F0EBC1E0EBFFC0000E1380EB3E0090C7FCA8EA7FC0487E6C5A16207F941A>I<
387F81F838FF8FFC387F9FFE3803FE1EEBF80CEBE000A25B5BAAEA7FFFB5FC7E17157F94
1A>114 D<3807FB80EA1FFF127FEA7807EAE003A30078C7FCEA7FC0EA1FFCEA07FE3800
3F801307386001C012E0A2EAF00338FC0780B51200EAEFFEEAE3F812157C941A>I<487E
1203A6387FFFE0B5FCA238038000AA1470A43801C1E013FF6C1380EB3F00141C7F9B1A>
I<38FF83FEA338380038A26C1370A31338137CA2380C6C60380EEEE0A413C6000613C0EA
07C71383A217157F941A>119 D<387FC7F8EBCFFCEBC7F8380703C038038380EBC700EA
01EFEA00FE137C13781338137C13EE120113C738038380000713C0EA0F01387FC7FC00FF
13FE007F13FC17157F941A>I E /Fk 11 118 df<EA03F0EA0618EA1C0C1238EA300E12
70EA7FFEEAE000A412601304EA3008EA1830EA0FC00F107E8F11>101
D<EA0180EA03C0A2EA0180C7FCA6EA1F80EA0700A6120EA65AA2EAFF800A1A80990A>
105 D<EA07C01201A4EA0380A6EA0700A6120EA65AA2EAFF800A1A80990A>108
D<391F9F07C03907218860903841D070EB81E0EB01C0A3390E0380E0A6391C0701C0A239
FF9FE7F81D107F8F20>I<381F8F80380730C0EB40E013801300A3380E01C0A6381C0380
A238FF9FF01410808F15>I<EA01F0EA060CEA1C06EA1807EA30031270A2EAE007A4EA60
0E130CEA3018EA1870EA0FC010107E8F13>I<380FCF803803B0E0EBC070EB8038A4EA07
00A31430147014E0380F01C0380E8380EB7E0090C7FCA35AA3B47E1517818F15>I<EA1F
9EEA0723134713821300A3120EA65A121EEAFF801010808F0F>114
D<EA07ECEA0C18EA10081230A2EA3C00EA3FC0EA1FE0EA07F0EA0078EA403813181310EA
E030EAD060EA8F800E107F8F0F>I<1204A25AA21218A21278EAFFC0EA7000A65AA21380
A3EAE100A21262123C0A177C960F>I<38FC1F8038380700A6EA700EA5131E5BEA305E38
1F9F8011107D8F15>I E /Fl 6 85 df<EA0FFF4813C07E380381E0EA0700A4EB01C013
03380FFF8014001480EA0E0FEB03C01301121CA4EB0380130FB512005B13F813197E9816
>66 D<3807FFF84813FC7E3801C01C38038038A214181400A21383485A13FFA313071306
000EC7FC14301470A4387FFFE0B5FC7E16197F9816>69 D<EB7C603801FEE0EA03FFEA07
83380E01C0121C123C123848C7FCA35AA2EB1FC0EB3FE0EB1FC0EB0700A3EA700F5BEA3C
3FEA1FFEEA0FEEEA07CE13197D9816>71 D<380FE1FC121F120F380380E0380701C0EB03
80EB0700130E131E5BEA0E7813F8120F7F139C131CEA1E0E121CA27FA2148038FE0FC000
FF13E000FE13C016197F9816>75 D<EA0FF87F5BEA01C0485AA648C7FCA6120E14201470
A4387FFFE0B5FC7E14197F9816>I<387FFFE014F0A23870707038E0E0E0A20060136000
001300A3485AA6485AA6EA3FE07F5B14197C9816>84 D E /Fm 20
121 df<13FE3803FFC0000F13F0381F01F8383E007C48133C0078131E5A140F7EA21270
C7FCA2141EA3143C147814F8EB01F0EB03E0EB07C0EB0F80EB1F00133E5B5B485AEA03C0
485A380F000F121E5A007FB5FCB6FC7E18257DA41F>50 D<EA07FCEA1FFF4813C0383E03
E06D7EEA1C00C71278A4EB3FF8EA01FF1207381FE078EA3E005A12785AA4007813F8EA7E
036CB512E0000F133F3803FC0F1B1A7D991F>97 D<EA7F8012FF127F1207A8EB83E0EB9F
FCEBBFFEEBFC1F9038F007809038E003C013C090388001E0A2EC00F0A8EC01E013C0EC03
C0EBE0079038F00F809038F81F00EBBFFEEB9FF8380387E01C2580A41F>I<EB7FE03801
FFF8000713FC380FC07CEA1F00003E1338003C13005AA2127012F0A612701278A26C133C
123E6C137C380FC0F83807FFF0000113E038007F80161A7C991F>I<EB01FE13031301EB
001EA8137E3801FF9E000713DE380F81FEEA1F00003E137E003C133E48131EA25AA81278
143E7E147E6C13FEEA0F833907FFDFE06CEB1FF0D8007C13E01C257EA41F>I<137F3801
FFC0000713E0380F81F0381F0078123E003C133C5A141E127012F0B512FEA300F0C7FCA2
1278A36C131E7E001F133E380FC0FC3803FFF86C13F038003F80171A7D991F>I<EB01FC
EB07FF011F1380EB3F0F133C903878070091C7FCA5387FFFFEB5FCA2D80078C7FCB3A238
3FFFF0487F6C5B19257FA41F>I<90387C0F803901FF3FC00007EBFFE0380F83F1D81F01
13C0391E00F000481378A66C5BEA1F01380F83E048B45A001D90C7FCEA1C7C003CC8FCA3
7E381FFFE06C13F814FE487F393C003F8048130FEC07C0481303A40078EB0780A2003EEB
1F00381F807E6CB45A000313F038007F801B287E991F>I<137013F8A3137090C7FCA7EA
7FF812FF127FEA0078B3A2B512F8A315267BA51F>105 D<EA7F8012FF127F1207A89038
87FFC015E015C09038807E005CEB81F8EB83F0EB87E0EB8FC0EB9F8001BFC7FC13FF8080
13F3EBE3E0EBC1F0138080147C143C80141F397FF87FE039FFFCFFF0397FF87FE01C257F
A41F>107 D<EAFFF8A3EA0078B3ADB512FCA316257CA41F>I<387F83F038FF8FFC387FBF
FE3807FC1FEBF00F9038E0078013C0A21380AF397FF87FF839FFFCFFFC397FF87FF81E1A
80991F>110 D<13FCEA03FF481380381F87E0EA1E01383C00F0007C13F800781378A248
133CA76C137C00781378A2007C13F8003C13F0381E01E0EA1F873807FF806C1300EA00FC
161A7C991F>I<387F83E038FF9FFC387FBFFE3807FC1F9038F007809038E003C013C090
388001E0A2EC00F0A8EC01E013C0EC03C0EBE0079038F00F809038F81F00EBBFFEEB9FF8
EB87E00180C7FCAAEA7FF8487E6C5A1C2780991F>I<387FE07E39FFE1FF80D87FE313C0
3801EF87EBFF079038FC038049C7FCA25BA35BAC387FFFE0B5FC7E1A1A7E991F>114
D<3803FC70380FFFF0123FEA7C03EA7001EAE000A37E007C1300EA3FE06CB4FC000713C0
C613F0EB03F8EB00780070133C00F0131CA27EA26C1338B413F013FF00E713C038E1FE00
161A7C991F>I<137013F0A6387FFFFEB5FCA2D800F0C7FCADEC0780A5EC0F00EB7C1FEB
3FFE6D5AEB07F019217FA01F>I<397F807F8000FF13FF007F137F00071307B1140F141F
3803C07F6CB512F86CEBE7FC90383F87F81E1A80991F>I<39FFE07FF0EBF0FFEBE07F39
1E000780A56CEB0F00A2130FA2EB1F8FA238071B8EEB9B9EA2EBBBDEA213B1000313DCA2
EBF1FC13E0A2000113781C1A7F991F>119 D<397FF1FFC015E015C03907C07C003803E0
78000113F83800F1F0EBF9E0137F6D5A5C131F6DC7FC5B80497EEB79E013F9EBF0F04848
7E0003137CEBC03C3807803E397FF0FFE0D8FFF913F0D87FF013E01C1A7F991F>I
E /Fn 5 117 df<EA4040EAE0E0A7EA40400B097D9312>34 D<126012F0A21260040479
8312>46 D<EA1FC0EA3FF0EA3838EA101C1200EA07FC123FEA781C12E0A3EA703C383FFF
80EA1FCF110E7F8D12>97 D<EA07F0EA1FF8EA3838EA7010EA600012E0A41260EA703812
38EA1FF0EA07E00D0E7E8D12>99 D<1206120EA3EA7FF812FFEA0E00A7131CA3EA07F8EA
01E00E127F9112>116 D E /Fo 47 123 df<13FCEA0782EA0E07121C130290C7FCA4B5
FCEA1C07AC387F1FC01217809614>12 D<12E0A212F012381218120C06067C9612>18
D<121CA2123C1270126012C00606799612>I<126012F0A212701210A21220A21240A204
0A7D960A>39 D<120112021204120C1218A21230A212701260A312E0AA1260A312701230
A21218A2120C12041202120108227D980E>I<12801240122012301218A2120CA2120E12
06A31207AA1206A3120E120CA21218A2123012201240128008227E980E>I<126012F0A2
12701210A21220A21240A2040A7D830A>44 D<126012F0A2126004047D830A>46
D<1206120E12FE120EB1EAFFE00B157D9412>49 D<EA0F80EA30E0EA4070EA8030EAC038
12E0124012001370A2136013C0EA0180EA03001206EA0C081208EA1018EA3FF0127F12FF
0D157E9412>I<EA0FE0EA3030EA6018EA701CA21200131813381360EA07E0EA00301318
130C130EA212E0A2EAC00CEA4018EA3030EA0FE00F157F9412>I<126012F0A212601200
A6126012F0A21260040E7D8D0A>58 D<EAFFFE381C0380EB00E014601470A414E0EB01C0
381FFF8014C0381C00E0147014301438A4147014E0EB01C0B5120015177F9619>66
D<EBFC1038038330380E00B0481370481330123000701310126012E01400A51410126012
700030132012386C13406C138038038300EA00FC14177E9619>I<B5FC381C01C0EB00E0
143014381418141C140C140EA7140C141CA2143814301460EB01C0B5120017177F961B>
I<B512E0EA1C00146014201410A3EB0400A3130CEA1FFCEA1C0C13041408A21300141814
10A2143014F0B5FC15177F9618>I<EAFFC0001CC7FCAD1420A31460A2144014C01303B5
FC13177F9616>76 D<EAFFFE381C0380EB00C014601470A4146014C0EB0380381FFE0000
1CC7FCAAB47E14177F9618>80 D<EAFFFC381C0380EB00C014E01470A414E014C0EB0380
381FFE00381C0780EB01C0EB00E0A514E1A2147238FF803C18177F961A>82
D<38FF80FE381C00381410B06C132012066C13403801818038007E0017177F961A>85
D<38FF83FC381F01E0380E00807EEB8100EA0382EA01C213E4EA00E81378A21338137C13
5E138EEA0187EB0780EA0203380601C0000413E0EA0C00001C13F038FF03FE17177F961A
>88 D<1208121C12361263EA808009057C9612>94 D<EA3FC0EA70601330EA20381200EA
03F8EA1E3812301270EAE039A21379EA70FFEA1F1E100E7F8D12>97
D<12F81238A8EA39F0EA3E0CEA380613077F1480A414005B1306EA361CEA21F011177F96
14>I<EA07F0EA18381230EA7010EA600012E0A41260EA70081230EA1830EA07C00D0E7F
8D10>I<133E130EA8EA07CEEA1C3EEA300E1270126012E0A412601270EA301EEA182E38
07CF8011177F9614>I<EA0FC0EA1860EA3030EA7038EAE018EAFFF8EAE000A31260EA70
08EA3010EA1830EA07C00D0E7F8D10>I<EA03E0EA0670120EEA1C201300A5EAFF80EA1C
00ACEA7F800C1780960B>I<EA0F9EEA18E3EA3060EA7070A3EA3060EA18C0EA2F80EA20
001260EA3FE013F813FCEA600EEAC006A3EA600CEA3838EA0FE010157F8D12>I<12F812
38A813F8EA3B1CEA3C0E1238AA38FE3F8011177F9614>I<12301278A212301200A512F8
1238AC12FE07177F960A>I<1203EA0780A2EA0300C7FCA5EA1F801203AF1243EAE30012
E7127C091D82960B>I<12F81238B3A312FE07177F960A>108 D<38F8F83E383B1CC7393C
0F0380EA380EAA39FE3F8FE01B0E7F8D1E>I<EAF8F8EA3B1CEA3C0E1238AA38FE3F8011
0E7F8D14>I<EA07C0EA1830EA3018EA600CA2EAE00EA5EA701CEA3018EA1830EA07C00F
0E7F8D12>I<EAF9F0EA3E1CEA380613077F1480A414005B130EEA3E1CEA39F00038C7FC
A512FE11147F8D14>I<EA07C2EA1C26EA381EEA700E126012E0A412601270EA301EEA1C
2EEA07CEEA000EA5EB3F8011147F8D13>I<EAF9E0EA3A70123CEA38201300A9B4FC0C0E
7F8D0E>I<EA1F40EA60C0EAC040A2EAE000B4FCEA7F80EA1FC0EA01E0EA8060A212C0EA
E0C0EA9F000B0E7F8D0E>I<1208A31218A21238EAFFC0EA3800A71340A4EA1C80EA0F00
0A147F930E>I<EAF83EEA380EAA131EEA1C2E3807CF80110E7F8D14>I<EAFE1FEA380EEA
3C0CEA1C08A2EA0E10A2EA0720A213E0EA03C0A2EA0180A2100E7F8D13>I<38FEFE7C38
3838381410133C001C1320134C381E4E60380ECE401387000713801303A200031300EA02
01160E7F8D19>I<EAFE3FEA3C1CEA1C10EA0E20EA074013C0EA0380EA01C0EA02E0EA04
F0EA0870EA1838EA383CEAFC7F100E7F8D13>I<EAFE1FEA380EEA3C0CEA1C08A2EA0E10
A2EA0720A213E0EA03C0A2EA0180A21300A212E2A212A4127810147F8D13>I<EAFFF0EA
C0E01280EA81C0EA83801287EA0700120EEA1E08121CEA3818EA70101330EAFFF00D0E7F
8D10>I E /Fp 68 122 df<903801F03C9038071C47010C13C7EC19C690381C01801403
13181338A2EC0700A20003B512F03900700700A3140EA213E0A35CA2EA01C0A35CA2EA03
80A21430EB0070A248136038C630E038E638C038CC3180D8781EC7FC2025819C19>11
D<14FE90380301801306EB0C03EB1C0191C7FC13181338A43803FFFE3800700EA35CA213
E0A25CA3EA01C01472A438038034141891C7FC90C8FCA25A12C612E65A12781925819C17
>I<12E0A3127012301210121812080508749C15>18 D<12031207120E121C1238126012
C012800808729C15>I<EA1830EA3C78A2EA3870EA0810A2EA1020A2EA2040A2EA4080EA
81000D0C799C15>34 D<133C0163133001C1137038018080000314201301D807031340EC
0080390E00010014025CEBE01A380F1021000E1341EC8080EA1A203839C1003830016038
7000E0A248EB0100A31402A200605B00705B00305B6C1360380E0380D801FCC7FC1C1F7B
9D20>38 D<1218123CA31204A21208A21210122012401280060C779C0D>I<1303130613
0813181330136013C0A2EA0180EA0300A21206A25AA2121C1218A212381230A21270A212
60A412E0A51260A51220123012107EA2102A7B9E11>I<1310A21308130C13041306A513
07A51306A4130EA2130CA2131C1318A213381330A21360A213C0A2EA0180EA0300A21206
5A5A121012605A102A809E11>I<12181238127812381208A21210A212201240A2128005
0C7D830D>44 D<EAFFC0A30A037D890F>I<1230127812F0126005047C830D>I<133EEBE1
80380181C0EA03005A1206000E13E0120C001C13C0A2EA18011238A338700380A4386007
0012E01306130EA2130C5BEA60385BEA30C0001FC7FC131D7C9B15>48
D<1304130C131813381378EA07B8EA0070A413E0A4EA01C0A4EA0380A4EA0700A45AEAFF
F00E1C7B9B15>I<133EEB4180EB80C0EA0100000213E0EA0440A21208A3381081C0A238
110380000E1300EA00065B5B136013800003C7FC12044813404813805AEB0100EA7F07EA
43FEEA81FCEA8078131D7D9B15>I<131FEB60C013803801006012021340000413E0A3EB
81C0EA030138000380EB070013FC131C1306A21307A41270EAE00E12805BEA40185BEA20
E0EA1F80131D7D9B15>I<EB018014C0EB0380A314005BA21306130E130C131C1318A25B
A25B134013C6EA018E130E1202EA061C120C1218123FEA40F838803F8038003800A25BA4
5B136012247E9B15>I<EB80603801FFC01480EBFE0090C7FC1202A45A13F8EA050CEA06
06120C1208120013071306130EA21270130CEAE01CEA80181338EA40305BEA21C0001FC7
FC131D7C9B15>I<EB0F80EB3860EB6020EBC0E0EA018048C7FC1206120E120C121C13F8
EA3904EA3A06EA3C031278A2007013801400EA600712E0A21306130E130CEA601C1318EA
2030EA30C0EA0F80131D7C9B15>I<3809C040380FE080EA1FE1381C6100EA3026EA201A
EA6004EA400CEA80081318485AA25BA25BA212015B120390C7FC5AA3120EA35AA2121812
1D799B15>I<131FEB60C0EBC060EA018038030030A200061360120714C013803803C100
13E6EA01FCEA0078EA01BCEA061E487E487E383003801220EA6001A238C00300A21306EA
60045BEA3830EA0FC0141D7D9B15>I<133E13E138018180380300C01206120E120C121C
A213011238A31303001813801307EA080B380C3300EA03C7EA0007130E130C131C1318EA
E0305BEA80C0EAC180003EC7FC121D7C9B15>I<1418A21438A21478A214B8EB0138A2EB
023C141C1304130C13081310A21320A2EB7FFCEBC01C1380EA0100141E0002130EA25A12
0C001C131EB4EBFFC01A1D7E9C1F>65 D<48B5FC39003C038090383801C0EC00E0A35B14
01A2EC03C001E01380EC0F00141EEBFFFC3801C00E801580A2EA0380A43907000F00140E
141E5C000E13F0B512C01B1C7E9B1D>I<903803F02090381E0C6090383002E09038E003
C03801C001EA038048C7FC000E1480121E121C123C15005AA35AA41404A35C12705C6C5B
00185B6C485AD80706C7FCEA01F81B1E7A9C1E>I<48B5FC39003C03C090383800E0A215
70A24913781538A215785BA4484813F0A315E03803800115C0140315803907000700140E
5C5C000E13E0B512801D1C7E9B1F>I<48B512F038003C00013813301520A35BA2140815
00495AA21430EBFFF03801C020A439038040801400A2EC0100EA07005C14021406000E13
3CB512FC1C1C7E9B1C>I<48B512F038003C00013813301520A35BA214081500495AA214
30EBFFF03801C020A448485A91C7FCA348C8FCA45AEAFFF01C1C7E9B1B>I<3A01FFC3FF
803A003C00780001381370A4495BA449485AA390B5FC3901C00380A4484848C7FCA43807
000EA448131E39FFE1FFC0211C7E9B1F>72 D<EA03FFEA00781370A413E0A4EA01C0A4EA
0380A4EA0700A4120EA4121EEAFFC0101C7D9B10>I<3A01FFC07F803A003C001E000138
131815205D5DD97002C7FC5C5C5CEBE04014C013E1EBE2E0EA01C4EBD07013E013C04848
7EA21418141CEA070080A348130F39FFE07FC0211C7E9B20>75 D<3801FFC038003C0013
38A45BA45BA4485AA438038002A31404EA0700140C14181438000E13F0B5FC171C7E9B1A
>I<D801FEEB01FED8003E14E0012EEB03C01505A21509014EEB0B801513152313470187
EB4700A21587EC0107D80107130E14021404A20002495AEB0388149014A000045C14C0A2
000C1380001CEB007839FF8307FF271C7E9B25>I<D801FCEBFF80D8001CEB1C00012E13
181510A2132701475B13431480A2903881C040A3EB80E0D801005B1470A300020139C7FC
A3141D48131E140EA2120C001C1304EAFF80211C7E9B1F>I<EB07F0EB1C1CEB700E497E
3901C00380EA0380EA0700000E14C0121E121C123CA25AA348EB0780A3EC0F00A2140E14
1E5C007013385C00785B383801C06C485AD80E0EC7FCEA03F81A1E7A9C20>I<3801FFFE
39003C038090383801C0EC00E0A3EB7001A315C0EBE0031580EC0700141C3801FFF001C0
C7FCA3485AA448C8FCA45AEAFFE01B1C7E9B1C>I<3801FFFE39003C078090383801C015
E01400A2EB7001A3EC03C001E01380EC0700141CEBFFE03801C03080141CA2EA0380A438
07003C1520A348144039FFE01E80C7EA0F001B1D7E9B1E>82 D<EB0F84EB304CEB403CEB
8018EA01005AA200061310A214001207A2EA03E013FC6CB4FC38007F80EB07C01301A213
00A21220A238600180A2EB03001302EAF004EACC18EA83E0161E7D9C17>I<001FB512C0
381C070138300E0000201480126012405B1280A2000014005BA45BA45BA4485AA41203EA
7FFE1A1C799B1E>I<397FF03FE0390F000700000E13061404A3485BA4485BA4485BA448
5BA35CA249C7FCEA60025B6C5AEA1830EA07C01B1D789B1F>I<39FF801FC0393C000700
001C1304A25C5CA25CA25C5CA26C48C7FCA213025BA25BA25B5B120F6C5AA25B90C8FCA2
1206A21A1D779B1F>I<3901FF81FE39003E0078011C136015C0011E138090380E0100EB
0F026D5A5C1490EB03A014E06D5AA28013021304497EEB10701320EB603813C0EB803C38
01001C12020006131E121EB4EB7FC01F1C7E9B1F>88 D<39FFC00FE0391E000380000EEB
02005C000F130C6C13086D5A00035B5CEBC0C000015B01C1C7FC13E2EA00E413EC13F813
70A25BA4485AA4485AEA3FF81B1C789B1F>I<12021206121B1231EA608012C00906759C
15>94 D<EA01E3EA0717EA0C0F1218EA380E12301270A2EAE01CA41339A3EA6079EA319A
EA1E0C10127C9115>97 D<123F1207A2120EA45AA4EA39E0EA3A18EA3C0C12381270130E
A3EAE01CA31318133813301360EA60C0EA3180EA1E000F1D7C9C13>I<13F8EA0304120E
EA1C0EEA181CEA30001270A25AA51304EA60081310EA3060EA0F800F127C9113>I<EB07
E01300A2EB01C0A4EB0380A43801E700EA0717EA0C0F1218EA380E12301270A2485AA413
39A3EA6079EA319AEA1E0C131D7C9C15>I<13F8EA0704120CEA1802EA38041230EA7008
EA7FF0EAE000A5EA60041308EA30101360EA0F800F127C9113>I<EB03C0EB0670130CEB
1C601400A25BA53803FF8038007000A55BA5485AA5485AA390C7FCA25A12C612E65A1278
1425819C0D>I<EB78C0EA01C5EA03031206000E1380120C121CA238380700A4130EA3EA
181EEA0C7CEA079CEA001CA25BA2EAC030EAE070EAC1C0007FC7FC121A7E9113>I<EA0F
C01201A2485AA448C7FCA4EA0E3E13C3380F0380120E121E121CA338380700A3130E0070
1340A2131C1480EAE00C38600700121D7E9C15>I<EA01801203EA0100C7FCA7121C1226
1247A2128EA2120E5AA35AA21271A31272A2123C091C7C9B0D>I<1303130713031300A7
1378138CEA010C1202131C12041200A21338A41370A413E0A4EA01C0A2EAC180EAE30012
C612781024819B0D>I<EA1F801203A2EA0700A4120EA45AA45AA45AA412E2A312E41264
1238091D7D9C0B>108 D<391C1E078039266318C0394683A0E0384703C0008E1380A212
0EA2391C0701C0A3EC0380D8380E1388A2EC0708151039701C032039300C01C01D127C91
22>I<EA383EEA4CC3384D0380124E129E129C121CA238380700A3130E00701340A2131C
1480EAE00C3860070012127C9117>I<13F8EA030CEA0E06487E1218123000701380A238
E00700A3130EA25BEA60185BEA30E0EA0F8011127C9115>I<380387803804C860EBD030
13E0EA09C014381201A238038070A31460380700E014C0EB0180EB8300EA0E86137890C7
FCA25AA45AB4FC151A809115>I<EA01E1EA0713EA0C0F1218EA380E12301270A2EAE01C
A41338A3EA6078EA31F0EA1E701200A213E0A4EA01C0EA0FF8101A7C9113>I<EA1C3CEA
2642EA4687EA4707EA8E061300120EA25AA45AA45A123010127C9112>I<EA01F0EA0608
120C131CEA1818EA1C00121F13C0EA0FF01207EA00781338EA603012E012C0EA8060EA60
C0EA1F000E127D9111>I<12035AA3120EA4EAFFE0EA1C00A35AA45AA4EAE080A2EAE100
A2126612380B1A7C990E>I<381C0180EA2E03124EA2388E0700A2121CA2EA380EA43830
1C80A3EA383C38184D00EA0F8611127C9116>I<EA1C06EA2E0EEA4E06A2EA8E02A2121C
A2EA3804A313081230A21310EA3820EA1840EA0F800F127C9113>I<381E018338270387
1247148338870701A2120EA2381C0E02A31404EA180C131C1408EA1C1E380C26303807C3
C018127C911C>I<38038780380CC840380870E012103820E0C014001200A2485AA4EA03
811263EAE38212C5EA8584EA787813127E9113>I<381C0180EA2E03124EA2388E0700A2
121CA2EA380EA4EA301CA3EA383CEA1878EA0FB8EA003813301370EAE0605BEA81800043
C7FC123C111A7C9114>I E /Fq 4 106 df<126012F0A2126004047B830D>46
D<B512FE380F001E14061402A214031401A214811480A3130113FF13011300A41400A77F
EAFFF8181C7D9B1E>70 D<EBFC2038078260380E01E0EA1C0048136000781320127012F0
1400A3EB0FF8EB00E0A21270127812387E7E380783603800FC2015157E941B>103
D<EAFF80EA1C00B3EAFF8009157F940D>105 D E /Fr 10 111 df<B512FEA217027D89
1E>0 D<6C13C0EAC00138600300EA30066C5A6C5A6C5A6C5A6C5AA2EA0360EA0630487E
487E487E487E38C001C0EA800012127A911E>2 D<1406141E1478EB01E0EB0780EB1E00
1378EA01E0EA0780001EC7FC127812E01278121EEA0780EA01E0EA0078131EEB0780EB01
E0EB0078141E14061400A6387FFFFCB512FE171F7D971E>20 D<4A7EA26E7EA21560A281
8181B71280A2C8EA0C005D5D5DA25DA24A5AA221147E9226>33 D<EB7FE0EA03FF380780
00000CC7FC5A5AA25AA25AA2B512E0A200C0C7FCA21260A27EA27E7EEA07803803FFE0EA
007F13187D941A>50 D<1460A214C0A2EB0180A2EB0300A213065BA25BA25BA25BA25BA2
485AA248C7FCA21206A25A5AA25AA25AA25A124013227B9900>54
D<133C13E0EA01C0EA0380ADEA0700121E12F8121E1207EA0380ADEA01C0EA00E0133C0E
257E9B13>102 D<12F8121E1207EA0380ADEA01C0EA00E0133C13E0EA01C0EA0380ADEA
0700121E12F80E257E9B13>I<12C0B3B302257C9B0B>106 D<12C0A21260A37EA37EA37E
A37EA37EA3EA0180A3EA00C0A31360A31330A31318A3130C13040E257E9B13>110
D E /Fs 4 52 df<13C0A9B51280A23800C000A911147E8F17>43
D<1218127812981218AC12FF08107D8F0F>49 D<121FEA6180EA40C0EA806012C01200A2
13C0EA0180EA030012065AEA10201220EA7FC012FF0B107F8F0F>I<121FEA2180EA60C0
A212001380EA0100121FEA00801340136012C0A2EA8040EA6080EA1F000B107F8F0F>I
E /Ft 9 116 df<126012F0A212701210A31220A21240A2040B7D830B>59
D<140E143C14F0EB03C0EB0F00133C13F0EA03C0000FC7FC123C12F0A2123C120FEA03C0
EA00F0133C130FEB03C0EB00F0143C140E17167D931E>I<1304130C1318A31330A31360
A313C0A3EA0180A3EA0300A31206A35AA35AA35AA35AA35AA20E257E9B13>I<12E01278
121EEA0780EA01E0EA0078131EEB0780EB01E0EB0078141EA21478EB01E0EB0780EB1E00
1378EA01E0EA0780001EC7FC127812E017167D931E>I<3803FFFC3800700FEC0380A201
E013C0A43901C00780A2EC0F00141E38038038EBFFE00180C7FCA248C8FCA4120EA45AEA
FFC01A1A7E9919>80 D<EB1F08EB60D8EB8038EA01004813101206A31400120713C0EA03
FC6CB4FC38007F80EB0FC01301A213001220A238600180A2EB0300EA7006EACC1CEA83F0
151A7E9917>83 D<39383E0F80394CC330C0398F03C0E0A2008E1380A2391C0701C0A3EC
0380D8380E1388A2EC0708151039701C032039300C01C01D107E8F22>109
D<38070780380598403809E060EBC07014301470EA0380A31460380700E014C01301EB03
80380E8600137C90C7FCA25AA4B4FC1417828F13>112 D<EA03E0EA06181208EA183813
30EA1C00EA1FC0EA0FE0EA07F0EA0070133012E0A2EA8060EA40C0EA3F000D107E8F12>
115 D E /Fu 72 122 df<90380FF83F90397FFDFFC03A01F81FE3E03903E03F87EA07C0
D80F801307ED03C06EC7FCA6B612FCA2260F801FC7FCB2397FF0FFF0A223237FA221>11
D<EB0FF0EB7FFC3801F80E3803E01F48485AEA0F80A2141E140C91C7FCA4B6FCA2380F80
1FB2397FF0FFE0A21B237FA21F>I<903907F80FF090397FFE7FFC3A01F80FF80ED803E0
EBE01F484848485AD80F801380A2020F131E160C93C7FCA4B8FCA23A0F800F801FB23B7F
F07FF0FFE0A22B237FA22F>14 D<B4FCA2121FB2EAFFE0A20B167E9510>16
D<12F07E7EA2127E121FEA0F80EA03C0EA01800A097AA21C>18 D<EA03C01207120FA2EA
1F80EA3E005A12F012600A0975A21C>I<EB0F80497EEB38601370EBF030A2EA01E0A26D
5AA25CEBF18001F3C8FC6CB4EB1FFC5B01F8EB01807F017CEB030001FE1306EA03BED807
3F5B390E1F8018121E486C6C5A397C07E0606D6C5A00FC13F8903801F9806DB4C7FC6C01
7E130C007EEB1F806C90387FC0183A1F81E7F0783A0FFF81FFF03A03FC003F8026237EA2
2C>38 D<1238127C12FE12FFA2127F123B1203A31206A2120C121C12181270122008117C
A210>I<13181330136013C01201EA0380EA0700A2120E121E121C123CA35AA412F85AAB
7E1278A47EA3121C121E120E7EA2EA0380EA01C012001360133013180D317BA416>I<12
C012607E7E121C7E7EA2EA038013C0120113E0A3EA00F0A413F81378AB13F813F0A4EA01
E0A313C012031380EA0700A2120E5A12185A5A5A0D317DA416>I<1238127C12FE12FFA2
127F123B1203A31206A2120C121C12181270122008117C8610>44
D<EAFFFCA40E047F8C13>I<1238127C12FEA3127C123807077C8610>I<14181438A21470
A214E0A3EB01C0A2EB0380A3EB0700A3130EA25BA35BA25BA35BA2485AA3485AA248C7FC
A3120EA35AA25AA35AA25AA25A15317DA41C>I<13FE3807FFC0380F83E0381F01F0383E
00F8A248137CA312FC147EAD007C137CA36C13F8A2381F01F0380F83E03807FFC03800FE
0017207E9F1C>I<13181378EA01F812FFA21201B3A7387FFFE0A213207C9F1C>I<EA03FC
EA0FFF383C1FC0387007E0007C13F0EAFE0314F8A21301127CEA3803120014F0A2EB07E0
14C0EB0F80EB1F00133E13385BEBE018EA01C0EA0380EA0700000E1338380FFFF05A5A5A
B5FCA215207D9F1C>I<13FE3807FFC0380F07E0381E03F0123FEB81F8A3EA1F0314F012
0014E0EB07C0EB1F803801FE007F380007C0EB01F014F8EB00FCA2003C13FE127EB4FCA3
14FCEA7E01007813F8381E07F0380FFFC03801FE0017207E9F1C>I<14E013011303A213
07130F131FA21337137713E7EA01C71387EA03071207120E120C12181238127012E0B6FC
A2380007E0A790B5FCA218207E9F1C>I<00301320383E01E0383FFFC0148014005B13F8
EA33C00030C7FCA4EA31FCEA37FF383E0FC0383807E0EA3003000013F0A214F8A2123812
7C12FEA200FC13F0A2387007E0003013C0383C1F80380FFF00EA03F815207D9F1C>I<EB
1F80EBFFE03803E0703807C0F0380F01F8121F123EA2387E00F0007C1300A2EAFC08EB7F
C0EBFFE038FD80F038FF00F848137CA248137EA4127CA3003C137C123E001E13F86C13F0
380783E03803FFC0C6130017207E9F1C>I<12601278387FFFFEA214FC14F8A214F038E0
006014C038C00180EB0300A2EA00065B131C131813381378A25BA31201A31203A76C5A17
227DA11C>I<13FE3803FFC0380703E0380E00F05A1478123C123E123F1380EBE0F0381F
F9E0EBFFC06C13806C13C06C13E04813F0381E7FF8383C1FFCEA7807EB01FEEAF000143E
141EA36C131C007813387E001F13F0380FFFC00001130017207E9F1C>I<EA01FE3807FF
80380F83E0381E01F0EA3E004813F8147800FC137CA3147EA4007C13FEA2EA3E01381E03
7EEA0FFEEA07FCEA0020EB007CA2121E003F13F8A214F0EB01E0381E03C0381C0F80380F
FE00EA03F817207E9F1C>I<1238127C12FEA3127C12381200A81238127C12FEA3127C12
3807167C9510>I<1470A214F8A3497EA2497EA3EB067FA2010C7F143FA2496C7EA20130
7F140F01707FEB6007A201C07F90B5FC4880EB8001A2D803007F14004880000680A23AFF
E007FFF8A225227EA12A>65 D<B67E15F03907F001F86E7E157EA2157FA5157E15FE5DEC
03F890B55AA29038F001FCEC007E811680151F16C0A6ED3F80A2ED7F00EC01FEB612F815
C022227EA128>I<D903FE138090381FFF819038FF01E33901F8003FD803E0131F484813
0F48481307121F48C71203A2481401127EA200FE91C7FCA8127EED0180127F7E15036C6C
1400120F6C6C1306D803F05B6C6C13386CB413F090381FFFC0D903FEC7FC21227DA128>
I<B67E15F03907F003FCEC007E81ED1F80ED0FC0ED07E0A216F01503A316F8A916F0A3ED
07E0A2ED0FC0ED1F80ED3F00157EEC03FCB612F0158025227EA12B>I<B612FCA23807F0
00153C151C150C150EA21506140CA31500141C143CEBFFFCA2EBF03C141C140CA21503A2
14001506A3150EA2151E153EEC01FCB6FCA220227EA125>I<B612F8A23807F001EC0078
15381518151CA2150CA21418A21500A214381478EBFFF8A2EBF07814381418A491C7FCA8
B512C0A21E227EA123>I<D903FE134090391FFFC0C090387F00F1D801F8133F4848130F
D807C01307000F1403485A48C71201A2481400127EA200FE1500A791380FFFFC127E007F
9038001FC0A27EA26C7E6C7E6C7E6C7ED801FC133F39007F80E790381FFFC30103130026
227DA12C>I<B53883FFFEA23A07F0001FC0AD90B6FCA29038F0001FAFB53883FFFEA227
227EA12C>I<B51280A23807F000B3ACB51280A211227EA115>I<B512C0A2D807F0C7FCB3
1518A41538A21570A215F014011407B6FCA21D227EA122>76 D<D8FFF0EC0FFF6D5C0007
16E0D806FC1437A3017E1467A26D14C7A290391F800187A290390FC00307A3903807E006
A2903803F00CA2903801F818A3903800FC30A2EC7E60A2EC3FC0A2EC1F80A3EC0F00D8FF
F091B5FC140630227EA135>I<D8FFF8EB1FFE7F0007EC00C07FEA06FF6D7E6D7E6D7E13
0F806D7E6D7E6D7E130080EC7F80EC3FC0EC1FE0EC0FF0140715F8EC03FCEC01FEEC00FF
157FA2153F151F150F15071503A2D8FFF01301150027227EA12C>I<EB07FC90383FFF80
9038FC07E03903F001F848486C7E4848137E48487FA248C7EA1F80A24815C0007E140FA2
00FE15E0A9007E15C0007F141FA26C15806D133F001F15006C6C137E6C6C5B6C6C485A39
00FC07E090383FFF80D907FCC7FC23227DA12A>I<B6FC15E03907F007F0EC01FC140015
7EA2157FA5157EA215FC1401EC07F090B512E0150001F0C7FCADB57EA220227EA126>I<
EB07FC90383FFF809038FC07E03903F001F848486C7E4848137E48487FA248C7EA1F80A2
4815C0007E140FA200FE15E0A9007E15C0007F141FA26C1580903881F03F261F83F81300
390FC70C7E3907E606FC3903F607F8D800FF13E090383FFF8001071420EB0003EC01C0ED
E0E015FF16C080A2ED7F801600151E232C7DA12A>I<B512FEECFFC03907F007F0EC01F8
6E7E157E157FA6157E5D4A5AEC07F090B512C05D9038F00FE06E7E6E7E6E7EA81606EC00
FEEDFF0CB538803FF8ED0FF027227EA12A>I<3801FE023807FF86381F01FE383C007E00
7C131E0078130EA200F81306A27E1400B4FC13E06CB4FC14C06C13F06C13F86C13FC0003
13FEEA003F1303EB007F143FA200C0131FA36C131EA26C133C12FCB413F838C7FFE00080
138018227DA11F>I<007FB61280A2397E03F80F00781407007014030060140100E015C0
A200C01400A400001500B3A248B512F0A222227EA127>I<B538803FFCA23A07F0000180
B3A60003EC03007F000114066C6C130E017E5B90383F80F890380FFFE0010190C7FC2622
7EA12B>I<B5EB0FFEA2D807F0EB00C0A26C6CEB0180A26D1303000115007F000014067F
6D5BA2EC801C013F1318ECC038011F133014E0010F5BA26D6C5AA214F901035B14FD6DB4
C7FCA26D5AA3147CA21438A227227FA12A>I<3A7FFFC1FFF8A23A03FC000C006C6C5B15
386C6C13306D6C5A15E090383FC1C090381FE18002E3C7FCEB0FF7EB07FE6D5AA26D7E13
008081497F14BF9038031FE0496C7E130E90380C07F8496C7E1338496C7E90386000FF5B
0001EC7F8049EB3FC03AFFFC03FFFEA227227FA12A>88 D<12021207EA0F80EA1FC0EA3D
E0EA7070EAE038EAC0180D0879A21C>94 D<EA0FFC383FFF80387E07C0EB03E0130114F0
123C1200A2133FEA03FDEA1FC1EA3F01127E12FCA4EA7E02EB0CF8381FF87F3807E03F18
167E951B>97 D<B4FCA2121FABEB0FE0EB3FF8EBE07CEB803E497EEC0F80A215C0A81580
141F01801300EBC03E381EE07C381C3FF838180FC01A237EA21F>I<EBFF80000713E038
0F83F0EA1F03123E127E387C01E090C7FC12FCA6127C127EA2003E13186C1330380FC060
3807FFC0C6130015167E9519>I<EB01FEA2EB003EABEA01FC3807FFBE380F81FE381F00
7E003E133E127E127C12FCA8127CA26C137E6C13FE380F83BE3907FF3FC0EA01FC1A237E
A21F>I<13FE3807FF80380F87C0381E01E0003E13F0EA7C0014F812FCA2B5FCA200FCC7
FCA3127CA2127E003E13186C1330380FC0703803FFC0C6130015167E951A>I<EB1FC0EB
7FE0EBF1F0EA01E31203EA07C3EBC1E0EBC000A6EAFFFEA2EA07C0B2EA3FFCA2142380A2
11>I<3801FE0F3907FFBF80380F87C7381F03E7391E01E000003E7FA5001E5BEA1F0338
0F87C0EBFF80D809FEC7FC0018C8FCA2121C381FFFE06C13F86C13FE001F7F383C003F48
EB0F80481307A40078EB0F006C131E001F137C6CB45A000113C019217F951C>I<B4FCA2
121FABEB07E0EB1FF8EB307CEB403CEB803EA21300AE39FFE1FFC0A21A237EA21F>I<12
1C123E127FA3123E121CC7FCA7B4FCA2121FB2EAFFE0A20B247EA310>I<1338137C13FE
A3137C13381300A7EA03FEA2EA003EB3A5127812FC133C137CEA78F8EA7FE0EA1F800F2E
83A311>I<B4FCA2121FABECFF80A2EC38001460495A495A49C7FC130E5B137E13FF13CF
EB0F806D7E6D7E1301806D7E147C143C39FFE0FFC0A21A237EA21E>I<B4FCA2121FB3AD
EAFFE0A20B237EA210>I<3AFF07F007F090391FFC1FFC3A1F303E303E01401340496C48
7EA201001300AE3BFFE0FFE0FFE0A22B167E9530>I<38FF07E0EB1FF8381F307CEB403C
EB803EA21300AE39FFE1FFC0A21A167E951F>I<13FE3807FFC0380F83E0381E00F0003E
13F848137CA300FC137EA7007C137CA26C13F8381F01F0380F83E03807FFC03800FE0017
167E951C>I<38FF0FE0EB3FF8381FE07CEB803E497E1580A2EC0FC0A8EC1F80A2903880
3F00EBC03EEBE0FCEB3FF8EB0FC090C8FCA8EAFFE0A21A207E951F>I<EBFE033807FF87
380FC1C7381F006F48133F127E80127C12FCA7127EA2003E5B6C5B380FC1DF3807FF9F38
01FC1FC7FCA8ECFFE0A21B207E951E>I<EAFE1FEB3FC0381E67E013C71387A2381F83C0
90C7FCADEAFFF0A213167E9517>I<EA0FF3EA3FFFEA781FEA6007EAE003A212F000FCC7
FCEA7FE013F8EA3FFEEA0FFF120138000F80EAC007130312E0A238F00700EAFC0EEAEFFC
EAC7F011167E9516>I<487EA41203A21207A2120F123FB5FCA2EA0F80ABEB8180A5EB83
00EA07C3EA03FEEA00F811207F9F16>I<38FF01FEA2381F003EAF147E14FE380F81BE39
07FF3FC0EA01FC1A167E951F>I<39FFE01FE0A2391F800700000F1306EBC00E0007130C
13E000035BA26C6C5AA26C6C5AA2EB7CC0A2137F6D5AA26DC7FCA2130EA21B167F951E>
I<3AFFE3FF07F8A23A1F007800C09038807C01000F1580A23A07C07E030014DE5D3903E1
DF06148FD801F1138CEBF307A2D800FF13D8EBFE0315F890387C01F0A2013C5BEB3800A2
25167F9528>I<39FFE07FC0A2390F801C006C6C5A6C6C5AEBF0606C6C5A3800F980137F
6DC7FC7F80497E1337EB63E0EBC1F03801C0F848487E3807007E000E133E39FF80FFE0A2
1B167F951E>I<39FFE01FE0A2391F800700000F1306EBC00E0007130C13E000035BA26C
6C5AA26C6C5AA2EB7CC0A2137F6D5AA26DC7FCA2130EA2130CA25B1278EAFC3813305BEA
69C0EA7F80001FC8FC1B207F951E>I E /Fv 68 128 df<903901FF81FE010FEBEFFF90
3A7F81FF8F80D9FE01EB1FC03901F803FE000314FCEA07F0EE0F80020190C7FCA7B712F0
A32707F001FCC7FCB3A33A7FFF1FFFE0A32A2A7FA927>11 D<49B4FC011F13C090387F81
E0EBFC013901F807F01203EA07F0A4EC01C091C8FCA3EC3FF8B6FCA33807F003B3A33A7F
FF3FFF80A3212A7FA925>I<1218127C127EB4FC1380EA7FC013E0121FEA07F0EA01F812
0013300D0C7AAA22>18 D<13C0EA01F01203EA07F8120FEA1FF0123F13C0EA7F0012FC5A
12600D0C72AA22>I<123C127FEAFF80A213C0A3127F123E1200A2EA0180A3EA0300A212
06120E5A5A12100A157BA913>39 D<1306130C13181338137013E01201EA03C0A2EA0780
A2120F13005AA2123EA3127EA3127CA212FCAE127CA2127EA3123EA37EA27E13801207A2
EA03C0A2EA01E01200137013381318130C13060F3C7AAC1A>I<12C012607E12387E7E12
0FEA0780A2EA03C0A213E0120113F0A2EA00F8A313FCA3137CA2137EAE137CA213FCA313
F8A3EA01F0A213E0120313C0A2EA0780A2EA0F00120E5A5A12305A5A0F3C7CAC1A>I<12
3C127FEAFF80A213C0A3127F123E1200A2EA0180A3EA0300A21206120E5A5A12100A157B
8813>44 D<B51280A611067F9016>I<121C127FA2EAFF80A3EA7F00A2121C09097B8813>
I<1403EC0780A2140F1500A25C141E143E143CA2147C1478A214F85C13015CA213035CA2
13075C130F91C7FCA25B131E133E133CA2137C1378A213F85B12015BA212035BA212075B
120F90C8FCA25A121EA2123E123C127C1278A212F85AA21260193C7CAC22>I<EB3F8038
01FFF03807E0FC380FC07E48487E497E481480003E130F007E14C0A400FE14E0AF007E14
C0A46CEB1F80A26C14006D5A380FC07E6C6C5A3801FFF038003F801B277DA622>I<130E
131E137EEA07FE12FFA212F81200B3ABB512FEA317277BA622>I<EBFF80000713F04813
FC381E03FE393800FF80007C133F00FE14C06C131F15E0140FA2127E003C131FC7FC15C0
A2EC3F801500147E5C5C495A495AEB078049C7FC131E4913E013705B3901C001C0EA0380
EA0600000FB5FC5A5A5AB61280A31B277DA622>I<EB7F803803FFF04813FC380F81FE38
1F007FEA3F80EC3F80A3121F1300C7EA7F00A2147E5C495AEB07F0EBFFC0A2EB01F8EB00
7E801580EC1FC0A215E0A2123C127EB4FCA215C0143F481480007CEB7F00383F01FE6CB4
5A000713F0C613801B277DA622>I<140FA25C5C5C5C5BA2EB03BFEB073F130E131C133C
1338137013E0EA01C0EA038012071300120E5A5A5A12F0B612F8A3C7EA7F00A890381FFF
F8A31D277EA622>I<00181303381F801FEBFFFE5C5C5C14C091C7FC001CC8FCA7EB7FC0
381DFFF8381F80FC381E003F1208C7EA1F8015C0A215E0A21218127C12FEA315C05A0078
EB3F80A26CEB7F00381F01FE6CB45A000313F0C613801B277DA622>I<EB07F8EB3FFE90
B5FC3901FC07803903F00FC03807C01FEA0F80121F130048EB0F8091C7FC127EA3EAFE02
EB1FF0EB3FFCEB603EEB801F00FF14809038000FC0A24814E0A4127EA4123E003F14C07E
EC1F80D80F8013003807E07E6CB45A6C5B38003FC01B277DA622>I<1238123E003FB512
F0A34814E015C0158015003870000EA25C485B5C5CC6485AA2495A130791C7FC5B5B131E
133EA2137E137CA213FCA41201A76C5A13701C297CA822>I<EB3FC03801FFF04813FC38
07C07E48C67E001E7FEC0F80123EA2123F138001C01300EBF01F381FFC1E6D5A380FFFF8
6C13E06C7F6C13FC8000077FD80F0F1380D81E0713C0EA3E01397C007FE0141F48130F14
071403A315C0127C007EEB07806CEB0F00381FC03F380FFFFC00035B38007FC01B277DA6
22>I<EB7F803801FFF000077F380FC0FC381F803E48487E007E1480A2140F00FE14C0A3
15E0A5007E131FA26C133F6C132F380F80CF3807FF8F0001130FEA0008010013C0A3EC1F
80123E127FEC3F00143E147E007E5B383E03F8381FFFE06C1380D801FEC7FC1B277DA622
>I<EC0780A24A7EA34A7EA24A7EA3EC77F8A2ECF7FC14E3A2903801C1FEA201037F1480
A249486C7EA24980010E133FA2496D7EA2013FB57EA39039700007F8A201F08049130300
0181491301A2000381D8FFFE013F13FCA32E297EA833>65 D<B612F815FF16C03A03F800
1FE0ED0FF0ED07F8150316FCA21501A3150316F8A2ED07F0150FED1FC0EDFF8090B5EAFE
00EDFFC09039F8000FF0ED03F8ED01FC16FE1500A216FFA616FE1501ED03FC1507ED1FF8
B712E016C0EDFE0028297DA830>I<91387FE003903907FFFC07011FEBFF0F90397FF00F
9F9039FF0001FFD801FC7F4848147F4848143F4848141F485A160F485A1607127FA290C9
FC5AA97E7F1607123FA26C7E160E6C7E6C6C141C6C6C143C6C6C14786CB4EB01F090397F
F007C0011FB512800107EBFE009038007FF028297CA831>I<B612FCEDFF8016E03A03FC
001FF8ED03FCED00FE167FEE3F80EE1FC0A2EE0FE0A2EE07F0A417F8AA17F0A3EE0FE0A2
17C0161FEE3F80EE7F005EED03FCED1FF8B75A168003FCC7FC2D297EA834>I<B712E0A3
3903FC001FED07F01501A215001670A3913801C0781638A302031300A2140F90B5FCA3EB
FC0F1403A20201130EA3161C91C7FCA3163C1638167816F815011503151FB712F0A32729
7EA82C>I<B712C0A33903FC003FED0FE015031501A21500A316F0913801C070A3160014
03A2140F90B5FCA3EBFC0F1403A21401A491C8FCA9B512FCA324297EA82A>I<91387FE0
03903907FFFC07011FEBFF0F90397FF00F9F9039FF0001FFD801FC7F4848804848804848
80485A82485A82127FA290CAFC5AA892B512F87E7F03001300123FA26C7EA26C7E6C7E6C
7E6C7E6CB45B90387FF007011FB5129F0107EBFE0F9039007FF0032D297CA835>I<B5D8
F00FB5FCA3D803FCC7EA3FC0AF90B7FCA301FCC7123FB1B5D8F00FB5FCA330297EA835>
I<B512F0A33803FC00B3B1B512F0A314297EA819>I<B512FCA3D803FCC8FCB3A3ED01C0
A415031680A21507A2150FA2151F157F913801FF00B7FCA322297EA828>76
D<D8FFFE92383FFF80A26D5D0003EFE000A2D9BF8014EFA2D99FC0EB01CFA2D98FE0EB03
8FA3D987F0EB070FA2D983F8130EA2D981FC131CA3D980FE1338A2027F1370A291383F80
E0A391381FC1C0A291380FE380A2913807F700A3EC03FEA26E5AA26E5AD8FFFE0203B512
80A2157039297DA840>I<ECFFC0010F13FC90383F807F9039FE001FC0D801F8EB07E048
486D7E48486D7E000F8148486D7EA24848147FA2007F168090C8123FA34816C0AA6C1680
6D147FA2003F1600A26C6C14FEA26C6C495A6C6C495A6C6C495A6C6C495A6C6C495A9026
3FC0FFC7FC90380FFFFC010013C02A297CA833>79 D<B612F815FF16C03A03FC003FE0ED
07F0ED03F816FC150116FEA716FC150316F8ED07F0ED3FE090B61280EDFE0001FCC8FCB0
B512F0A327297EA82E>I<ECFFC0010F13FC90383FC0FF9039FE001FC048486D7ED803F0
EB03F000078148486D7E48486D7EA24848147FA2007F1680A290C8123FA24816C0AA6C16
806D147FA2003F1600A26C6C14FE143E3A0FE07F81FC00079038C1C1F83A03F18063F0D8
01F9EB67E0D800FFEB3FC090263FC07FC7FC90380FFFFC01004913C0EC003C811601ED1F
8316FF6F1380A21700816F5A6F5A6F5A2A357CA833>I<B612E015FE6F7E3A03FC003FE0
ED0FF06F7E6F7E150182A65E4B5A1507ED0FE0ED3FC090B500FEC7FCA29039FC00FF80ED
3FC06F7E6F7E6F7EA9170EA21503923801FC1CB538F000FEEE7FF8EE0FE02F297EA832>
I<9038FF80600003EBF0E0000F13F8381F80FD383F001F003E1307481303A200FC1301A2
14007EA26C140013C0EA7FFCEBFFE06C13F86C13FE80000714806C14C0C6FC010F13E0EB
007FEC1FF0140F140700E01303A46C14E0A26C13076C14C0B4EB0F80EBE03F39E3FFFE00
00E15B38C01FF01C297CA825>I<007FB71280A39039807F807FD87C00140F00781507A2
0070150300F016C0A2481501A5C791C7FCB3A490B612C0A32A287EA72F>I<B500F0EBFF
FEA3D803FCC7EA0380B3AA0001ED07007F0000150E137F6D143CD91FC05B90390FF003F0
6DB55A01001480DA1FFCC7FC2F297EA834>I<B500F0EB7FFFA3D803FEC7EA01C00001ED
0380A26D14076C16006E5B017F140E80013F5CA26E133C011F14386E1378010F14708001
075CA26D6C485AA2ECFE0301015CECFF076D91C7FC1587EC7F8EA215DEEC3FDC15FC6E5A
A26E5AA36E5AA26E5AA230297FA833>I<3B7FFFF01FFFE0A3000190C7EAF0006C6D485A
02C05B017F13036D6C485AD91FF090C7FC5D90380FF81E6D6C5A1538903803FE786D6C5A
5D6D5B147F6E7EA26E7E81143F81EC7BFEECF3FFEB01E102C07F01036D7EEB078049486C
7E010E6D7E131E496D7E01386D7E498001F0130348486D7EB5013F13FCA32E297EA833>
88 D<134013E0EA03F8487E487EEA1F1F387E0FC038F803E0387001C0130979A922>94
D<3803FF80000F13F0381F01FC383F80FE147F801580EA1F00C7FCA4EB3FFF3801FC3FEA
0FE0EA1F80EA3F00127E5AA4145F007E13DF393F839FFC381FFE0F3803FC031E1B7E9A21
>97 D<EAFFE0A3120FACEBE1FE9038EFFF809038FE07E09038F803F09038F001F89038E0
00FCA2157EA2157FA8157EA315FCA29038F001F89038F803F090389C0FE090380FFF8039
0E01FC00202A7EA925>I<EB3FF03801FFFC3803F03E380FC07FEA1F80EA3F00A248133E
007E90C7FCA212FEA7127EA2127F6CEB03801380001FEB0700380FE00E3803F83C3801FF
F838003FC0191B7E9A1E>I<EC7FF0A31407ACEB3F873801FFF73807F03F380FC00F381F
8007EA3F00A2127EA312FEA8127EA27EA2381F800F380FC01F3907E07FFF3801FFE73800
7F87202A7EA925>I<EB3FC03801FFF03803E07C380F803E001F7F130048EB0F80127E15
C0A200FE1307A2B6FCA248C8FCA3127EA2127F6CEB01C07E390F8003803907C007003803
F01E3800FFFCEB3FE01A1B7E9A1F>I<EB07F8EB3FFCEB7E3E3801FC7FEA03F813F01207
143E1400A7B512C0A33807F000B3A3387FFF80A3182A7EA915>I<9038FF80F00003EBE3
F8390FC1FE1C391F007C7C48137E003EEB3E10007EEB3F00A6003E133E003F137E6C137C
380FC1F8380BFFE00018138090C8FC1238A2123C383FFFF814FF6C14C06C14E06C14F012
1F383C0007007CEB01F8481300A4007CEB01F0A2003FEB07E0390FC01F806CB512003800
7FF01E287E9A22>I<EAFFE0A3120FAC147E9038E1FF809038E30FC001E413E0EBE80701
F813F013F0A213E0B039FFFE3FFFA3202A7DA925>I<1207EA0F80EA1FC0EA3FE0A3EA1F
C0EA0F80EA0700C7FCA7EAFFE0A3120FB3A3EAFFFEA30F2B7EAA12>I<1307EB0F80EB1F
C0EB3FE0A3EB1FC0EB0F80EB070090C7FCA7EBFFE0A3130FB3AA127C12FE14C0EB1F8014
00EA7C3EEA3FFCEA0FF0133784AA15>I<EAFFE0A3120FACEC1FFCA3EC0780EC0F00141E
5C5C14E0EBE3C013E7EBEFE0EBFFF08013F3EBE1FCEBC0FE147FA2EC3F80EC1FC0EC0FE0
A2EC07F039FFFC1FFFA3202A7FA923>I<EAFFE0A3120FB3B2EAFFFEA30F2A7EA912>I<26
FFC07FEB1FC0903AC1FFC07FF0903AC307E0C1F8D80FC49038F101FC9039C803F20001D8
01FE7F01D05BA201E05BB03CFFFE3FFF8FFFE0A3331B7D9A38>I<38FFC07E9038C1FF80
9038C30FC0D80FC413E0EBC80701D813F013D0A213E0B039FFFE3FFFA3201B7D9A25>I<
EB3FE03801FFFC3803F07E390FC01F80391F800FC0393F0007E0A2007EEB03F0A300FE14
F8A8007E14F0A26CEB07E0A2391F800FC0390FC01F803907F07F003801FFFC38003FE01D
1B7E9A22>I<38FFE1FE9038EFFF809038FE0FE0390FF803F09038F001F801E013FC1400
15FEA2157FA8157E15FEA215FC140101F013F89038F807F09038FC0FE09038EFFF809038
E1FC0001E0C7FCA9EAFFFEA320277E9A25>I<90383F80703901FFE0F03803F079380FE0
1D381F800F123FEB00075AA2127E12FEA8127FA27E1380001F130F380FC01F3807F07738
01FFE738007F87EB0007A9EC7FFFA320277E9A23>I<38FFC1F0EBC7FCEBC63E380FCC7F
13D813D0A2EBF03EEBE000B0B5FCA3181B7F9A1B>I<3803FE30380FFFF0EA3E03EA7800
127000F01370A27E00FE1300EAFFE06CB4FC14C06C13E06C13F0000713F8C6FCEB07FC13
0000E0137C143C7E14387E6C137038FF01E038E7FFC000C11300161B7E9A1B>I<13E0A4
1201A31203A21207120F381FFFE0B5FCA2380FE000AD1470A73807F0E0000313C03801FF
8038007F0014267FA51A>I<39FFE07FF0A3000F1307B2140FA2000713173903F067FF38
01FFC738007F87201B7D9A25>I<39FFFC03FFA3390FF000F0000714E07F0003EB01C0A2
EBFC0300011480EBFE070000140013FFEB7F0EA2149EEB3F9C14FC6D5AA26D5AA36D5AA2
6D5AA2201B7F9A23>I<39FFFC1FFEA33907F003803803F8079038FC0F003801FE1E0000
5BEB7F3814F86D5A6D5A130F806D7E130F497EEB3CFEEB38FFEB787F9038F03F803901E0
1FC0D803C013E0EB800F39FFF03FFFA3201B7F9A23>120 D<39FFFC03FFA3390FF000F0
000714E07F0003EB01C0A2EBFC0300011480EBFE070000140013FFEB7F0EA2149EEB3F9C
14FC6D5AA26D5AA36D5AA26D5AA25CA21307003890C7FCEA7C0FEAFE0E131E131C5BEA74
F0EA3FE0EA0F8020277F9A23>I<003FB5FCA2EB00FEEA3C01383803FC007813F8EB07F0
EA700F14E0EB1FC0EA003F1480EB7F005B5B3801FC07120313F8EA07F0000F130F13E038
1FC00E003F131E387F803EEB00FEB5FCA2181B7E9A1E>I<383C01E0387E03F038FF07F8
A4387E03F0383C01E015087AAA22>127 D E /Fw 18 117 df<49B4FC010F13E0013F13
F89038FF83FE4848C67ED803F8EB3F80000715C04848EB1FE049130F001F15F0A2003F15
F8A2491307007F15FCA500FF15FEB3007F15FCA56C6CEB0FF8A3001F15F0A26C6CEB1FE0
A26C6CEB3FC06C6CEB7F806C6CEBFF003900FF83FE6DB45A011F13F0010190C7FC27397C
B730>48 D<143C147CEB01FC1307133FB5FCA313CFEA000FB3B3A7007FB61280A4213879
B730>I<EB07FC90387FFFC048B512F04814FC3907E01FFE390F8007FF261E0003138048
6D13C0007E6D13E0D87F80137F6D14F012FF6DEB3FF8A46C5A6C5A6CC7FCC8FC16F0157F
16E0A2EDFFC016805C16004A5A4A5A5DEC0FE04A5A4A5A4AC7FC14FC495A5C49481378EB
078049C7FC131E4914F05B5B4848130148B6FC5A5A5A5A4815E0B7FCA425387BB730>I<
EB03FF011F13F0017F13FC9038FC07FE3901F001FF2603C00013804848EB7FC0D80FE014
E07F486C14F07FA46C5A6C4814E06C5AD8008013FF90C713C016804A13005D4A5A4A5AEC
1FF090380FFFC05D15F090380007FEEC00FFED7FC016E0ED3FF016F8A2ED1FFCA216FEA2
EA1F80487E487E487EA216FCA349EB3FF86C5A49EB7FF0003EC713E0D81FC0EBFFC0260F
F80313806CB61200000114FC6C6C13F0010790C7FC27397CB730>I<ED0F80A2151F153F
157F15FFA25C5C5CA25C141E143E5C14785C495A13035C495A495A5B133E133C5B5B1201
5B485A485A120F48C7FC121E5A5A12F8B81280A4C70001EB8000AA0103B61280A429377D
B630>I<000C15C0D80F80130701F8137F90B6128016005D5D5D5D15C092C7FC14FCEB1F
8090C9FCA8EB03FE90381FFFE0017F13F89038FC07FC9038E001FE496C7E49EB7F8090C7
13C0000E15E0C8123F16F0A316F8A3121F487E487E12FF7FA216F05B5B6CC7EA7FE0127C
003C15C0003EECFF806C491300390FC003FE3907F00FFC6CB55A6C14E06C6C1380D90FF8
C7FC25397BB730>I<EC0FF8ECFFFE0103EBFF8090390FF80FC090391FE003E090397F80
01F09038FF0003484813074848EB0FF8151F485A120F5B001FEC0FF0ED07E0003FEC03C0
92C7FC5B127FA3EC7FF039FFE1FFFC01E37F9039E7007F8001EEEB3FC001ECEB1FE001F8
14F0A249EB0FF8A216FCA24914FEA4127FA5123FA216FC6C7E16F8120FED1FF06C7E6C6C
EB3FE06C6CEB7FC03A00FF81FF8090397FFFFE006D5B010F13F00101138027397CB730>
I<123C123EEA3FE090B71280A41700485D5E5E5EA2007CC7EA03E000784A5A4B5A93C7FC
48141E153E5D5DC7485A5D14034A5A5D140F4AC8FCA25C143E147E14FE5CA21301A21303
A2495AA4130FA5131FA86D5AA2EB03C0293B7BB930>I<49B47E010F13F0013F13FC9038
7E01FE3901F0003F4848EB1F8049EB0FC04848EB07E0120FED03F0A2121FA27F7F7F6DEB
07E013FE3A0FFF800FC014C09138F01F806C9038FC3F006CEBFFFC5D6C14E06C14F86D7F
011F13FF49148090B612C0D801F814E02607F03F13F048486C13F8381FC007D9800113FC
003FEB007F48C7123FED0FFE00FE1407150315011500A316FCA2127FED01F86C7EED03F0
D81FE0EB07E06C6CEB0FC0D807FEEBFF806CB61200C614FC013F13F00103138027397CB7
30>I<EB03FF011F13E0017F13F89038FF01FC3903FC00FF4848EB7F804848133F001FEC
1FC016E0485A007F15F0150F16F812FFA216FCA416FEA4127F151FA2123FA26C6C133F12
0F156F6C6C13EF3903FC01CFC6B5128F6D130FD91FFC13FC90C7FCA316F8151FEA078048
6C14F0487E486C14E0153F16C0157F4914806C48EBFF0049485A000FEB07FC9038E01FF8
6CB512E000015C6C91C7FCEB1FF027397CB730>I<DB1FFE14600203B500E013E0021FEC
F801027FECFE03903B01FFFC00FF07010701C0EB1FCF4990C7EA07FFD91FFC1401D93FF0
804948157F4948153F4849151F4890C9120F5A48481607A248481603A2485A1801A2127F
A24993C7FCA212FFAB127FA27FF001E0123FA36C7EF003C06C7EA26C6CEE07807E6C6DED
0F006C6D5D6D6C153E6D6C5DD91FFC5D6DB4EC03F06D01C0EB0FE0010101FCEB7F806D6C
B6C7FC021F14FC020314E09126001FFEC8FC3B3D7BBB46>67 D<EB3FFE48B512E0000714
F8390FE007FC9038F001FE486C6C7E6F7E82153F6C48806C5A6C5AC8FCA491B5FC131F90
387FF83F3803FF803807FC00EA0FF0485A123F485AA2485AA4157F6C7E15DF3A3FE0039F
F03B1FF80F0FFFE03807FFFE0001497E39003FE0002B267DA52F>97
D<49B47E010F13F0017F13FC9038FF81FE3A03FE007F80D807F8133F4848EB1FC0ED0FE0
485A003F15F01507485A16F8A212FFA290B6FCA301C0C8FCA4127FA36C7E1678121F7F00
0F15F06C6C13016C6CEB03E06C6CEB0FC03A00FFC07F8090393FFFFE00010F13F8010013
C025267DA52C>101 D<13FE12FFA412071203B0EDFF80020313F0020F7F91381E03FC91
383801FE02607F4A7E01FF15805C91C7FCA35BB3A4B5D8F83F13FEA42F3C7CBB36>104
D<EA01E0EA07F8487EA2487EA46C5AA26C5AEA01E0C8FCAB13FE127FA412071203B3AAB5
12F0A4143D7DBC1A>I<9038FE01FF00FF011F13F0027F13FC9138FC07FE9039FFF001FF
00079039C0007F806C90C7EA3FC04915E0EE1FF017F8160F17FCA2160717FEA917FC160F
A317F8EE1FF0A26DEC3FE06EEB7FC06EEBFF806E4813009039FEFC07FE91387FFFF8021F
13E0DA03FEC7FC91C9FCADB512F8A42F377DA536>112 D<3901FC03F000FFEB0FFC4AB4
FC91383C3F80EC707F00079038E0FFC000035BEBFD80A201FFEB7F809138003F00151E92
C7FC5BB3A3B512FCA422267DA528>114 D<130FA55BA45BA25BA25B5A5A5A001FEBFFF0
B6FCA3000190C7FCB3153CA86C14781480017F13F090383FC1E090381FFFC06D13809038
01FE001E377EB626>116 D E /Fx 53 123 df<903803F0F090380E19989038183B38EC
33309038380700A3EB700EA30007B512E03900700E0013E05CA4EA01C05CA4EA03805CA3
130048136014E0386630C038E67180D8CC63C7FCEA783E1D21819918>11
D<EB03FEEB0E03EB1C07EB1806EB3800A35BA33807FFFC3800701CEBE038A41470EA01C0
A314E4A2EA0380A21468143090C7FC5AA2126612E65A12781821819916>I<126012E012
F012701230121012080507759914>18 D<1206120E121C12381230126012800707739914
>I<1218123CA2121C1208A31210122012401280060B78990C>39
D<130413181330136013C013801201EA0300A21206120E120C121C1218A212381230A212
70A21260A312E0A35AA51260A31220123012107E0E267B9B10>I<134013601320133013
101318AB1338A21330A21370A2136013E013C0A212011380120313001206A25A5A12105A
5A5A0D267F9B10>I<121812381278123812081210A21220A212401280050B7D830C>44
D<EAFF80A2130009037D880E>I<1230127812F0126005047C830C>I<14081418A21430A2
1460A214C0A2EB0180EB0300A21306A25BA25B5BA25BA25BA2485A48C7FCA21206A25AA2
5AA25A5AA25A5A15257F9B14>I<137CEA0186EA03031206000C1380121CA21238A33870
0700A4EAE00EA35BA213185BEA60606C5A001FC7FC11187C9714>I<1420146014E0A213
0114F0EB0270A213041308A21310A213201340A2EB8038EBFFF8380100381202A25AA25A
121838FE01FF181A7E991D>65 D<3803FFF83800700E1406140713E0A43801C00E141C14
3814703803FFE0EB80781438141CEA0700A4000E1338A2147014E0381C03C0B51200181A
7D991B>I<3803FFF83800700E80809038E00180A315C0EA01C0A43903800380A3150048
485AA2140E140C000E131C5C5C5C381C0380D8FFFEC7FC1A1A7D991D>68
D<0003B5FC380070071403140113E0A43801C080A313C13803FF001381A3EA0702EB0004
A21408120E1418141014304813E0B5FC181A7D991A>I<3903FF1FF83900700380A39038
E00700A43801C00EA43803FFFCEB801CA348485AA4000E5BA4485B38FF87FC1D1A7D991D
>72 D<EA03FFEA0070A313E0A4EA01C0A4EA0380A4EA0700A4120EA45AEAFF80101A7D99
0F>I<EBFFC0EB0E00A35BA45BA45BA45BA4EA61C012E15B12830047C7FC123C121A7C99
14>I<EA03FFEA0070A35BA4485AA4485AA448C7FC1410A21420120E1460144014C0381C
0380B5FC141A7D9918>76 D<3903F007F839007800C01580A290389C0100A3138E38010E
0213061307A238020384A3EB01C4000413C8A2EB00E8A24813F01470A21218142012FE1D
1A7D991D>78 D<EB1F80EB70603801C030380300180006131C000E130C5A0018130E1238
12301270A248131CA31438A21430147014E014C03860018038700300EA3806EA1C1CEA07
E0171A7A991D>I<3803FFF83800701C1406140713E0A43801C00EA2141C143838038060
EBFF80EB8000A248C7FCA4120EA45AB47E181A7D991A>I<EB3F10EB6090380180701300
4813201206A31400120713C0EA03F8EA01FEEA007FEB0F8013031301A21220A238600300
A21306EA700CEAC818EA87E0141A7D9916>83 D<383FFFFC38381C0C0020130412401338
1280A338007000A45BA4485AA4485AA41207EAFFF8161A79991B>I<387FE0FF380E0018
1410A2481320A4481340A4481380A438E00100A31302A25BEA60085BEA3860EA0F80181A
78991D>I<3901FF07F839007801C00138138090383C0300EB1C025CEB1E08EB0E105C6D
5A5CA21303A2497E13091311EB20E01340497E380100705A00021378000C1338121CB448
B4FC1D1A7E991D>88 D<3803FFFEEBC00EEB001C0002133800061370000413E0A2EB01C0
38000380EB0700130E131E131C5B5B5B3801C020A2EA038038070040120E4813C0003C13
80EA380338700F00B5FC171A7D9918>90 D<EA03CCEA0E2EEA181C123812301270EAE038
A4EAC072A3EA60F2EA6134EA1E180F107C8F14>97 D<127E120EA35AA45AA2EA3BC0EA3C
301278EA7018A3EAE038A4EAC070136013E0EA60C0EA6380EA1E000D1A7C9912>I<EA01
E0EA0618120CEA1838EA3010EA7000126012E0A413081310EA6020EA30C0EA1F000D107C
8F12>I<EB1F801303A3EB0700A4130EA2EA03CEEA0E2EEA181C123812301270485AA4EA
C072A3EA60F2EA6134EA1E18111A7C9914>I<EA01E0EA0E18EA1C08123812701310EAFF
E0EAE000A41308EA60101320EA30C0EA1F000D107C8F12>I<1307EB0980131BEB3B0013
3813301370A4EA07FFEA00E0A5485AA5485AA490C7FC5AA21206126612E412CC12701121
81990C>I<13F338038B8038060700120E120C121CEA380EA4EA301CA3EA183C5BEA07B8
EA0038A25B1260EAE0E0EAC1C0007FC7FC11177E8F12>I<EA1F801203A348C7FCA4120E
A2137CEA0F86EA1E07A2121CA2EA380EA35B00701380A21338EB3900EAE019EA600E111A
7E9914>I<1203120712061200A61238124C124E128E129CA2121C1238A212701272A212
E212E41264123808197C980C>I<EA1F801203A3EA0700A4120EA2130E1313EA1C271343
1380EA1F00123CEA3F80EA39C0EA38E0EA70E2A313E4EAE064EA6038101A7E9912>107
D<121F1207A3120EA4121CA41238A41270A412E4A412E81230081A7D990A>I<38307C1E
38598663399E0783801403129CA239380E0700A3140ED8701C1340A2141C158038E0380C
39601807001A107C8F1F>I<EA307CEA5986EA9E07A2129CA2EA380EA35B00701380A213
38EB3900EAE019EA600E11107C8F16>I<EA01F0EA0618EA0C0CEA180E12301270126012
E0A2130C131C13181330EA6060EA30C0EA1F000F107C8F14>I<EA030F380590C0EA09E0
EBC060A3380380E0A4380701C0148013031400EA0E8E137890C7FCA25AA4B4FC1317808F
14>I<EA03C2EA0E2EEA181C123812301270EAE038A4EAC070A3EA60F0EA61E0121E1200
A2EA01C0A4EA1FF00F177C8F12>I<EA30F0EA5D18EA9E38EA9C181300A25AA45AA45A12
600D107C8F10>I<EA03E0EA04301208EA18701360EA1C00EA1F8013C0EA0FE012001360
12E0A2EA80C0EA4180EA3E000C107D8F10>I<1206120EA45AA2EAFFC0EA1C005AA45AA4
12E1A312E212E412380A177C960D>I<EA3806EA4C07EA4E0E128E129CA2EA1C1C1238A3
EA7039A3EA3079EA389AEA0F0C10107C8F15>I<EA3818EA4C1C124EEA8E0C129CA2EA1C
081238A213101270A21320EA3040EA18C0EA0F000E107C8F12>I<38380C10384C0E38EA
4E1C008E1318129CA2381C38101238A338707020A2144012303818B880380F0F0015107C
8F19>I<EA078F3808D180EA10F3EA20E1EBE000A2EA01C0A4EA0382A212C3EAE784EAC5
88EA78F011107E8F12>I<EA3806EA4C07EA4E0E128E129CA2EA1C1C1238A3EA7038A3EA
3078EA38F0EA0F7012001360EA60E0EAE1C0EAC180EA4700123C10177C8F13>I<EA0382
EA07C4EA0FFCEA10081310EA00201340EA0180EA03001204EA08081210EA2018EA7FF0EA
43E0EA81C00F107E8F10>I E /Fy 46 122 df<92261FFF80EBFFC00203B5D8F01F13F0
021FDAF87F13FC91267FF801B5EAC0FE902801FFC0003FEB01FF010790C738FFFC03D90F
FC4949481380495A013F4A13F05C017F16E04A70130001FF6E6E5A735A70153097C7FCAB
BA12FEA4C601E0C701E0C8FCB3B3A2007F9026FFC07FEBFFF0A449487EC744>11
D<92380FFF804AB512E0020F14F891393FFC01FC9139FFE0003E01030180133F4948C7B4
7E4948497F011F5C5C133F5C137FA3705B7090C7FC177E94C8FCA793387FFFE0B9FCA43A
007FF0000182B3B3003FB5D8E07FEBFFC0A43A487EC741>I<120FEA3F80487E7F487E7F
A27F6C7E7F121F6C1380000313C0C613E0137FEB1FF0EB07F81301EB00F01420151474C8
3A>18 D<EB0780EB0FE0EB1FF0133FEB7FF813FFA25A4813F05A14C0481380381FFE00EA
3FF85BEA7FC048C7FC12FC12781220151468C83A>I<153F913801FFC0020713F091381F
E0F891383FC0784A487E9138FF001C4948131EA249487FA21307A3130FA2161EA2161C16
3C5E805E4B5A0107495A14FF4B5A4BC8B512FC151E6D13BC15F84B923803FE006D49ED00
F84B5E6F4B5A6D17036F5E4F5A6F150F4995C7FC496D151E902607BFFE153ED90F1F163C
011E6D5DD93E0F6D14F8496C5E01F86E495A00016D6D130300036F495A000F6D6D5C4848
6C4BC8FC6F6C5B003F6F133E007F6E6C133C6F6D5A6FEBC0F800FFEEC1F06FEBE3E06FEB
F7C06FEBFF806D6D91C9FC7048153C007F6F7E040F7F6D6E6D1478003F7114F86C6C021F
01F814F06D91267F7FFC13036C90288003FC1FFFEB07E000039027C03FF8079038C03FC0
6C90B5D8E00190B512806C6C912680007FEBFE00010F01FCC7000F13F8010101C0020013
C04E4A7BC85A>38 D<EA07C0EA1FF0487E487E7F12FF7FA21480A27EA2EA3FFBEA1FF3EA
07C3EA0003A2EB0700A4130EA2131E131C5BA25B5B1201485A485A48C7FC121E12081123
78C720>I<15E01401EC03801407EC1F00143E5C5C13015C495A1307495A495AA249C7FC
5B137E13FEA2485AA212035B1207A2485AA3121F5BA2123FA35B127FA7485AB06C7EA712
3F7FA3121FA27F120FA36C7EA212037F1201A26C7EA2137E137F7F6D7EA26D7E6D7E1303
6D7E801300147C8080EC07801403EC01E014001B6675CC2D>I<12C07E12701278123E7E
6C7E6C7E7F12036C7E7F6C7E137EA27F80131F80A26D7EA280130780A26D7EA3801301A2
80A37F1580A7EC7FC0B0ECFF80A715005BA35CA213035CA3495AA25C130F5CA2495AA25C
133F91C7FC137EA25B485A5B485A12075B485A48C8FC123E127812705A5A1A6679CC2D>
I<B612FEA91F097F9B27>45 D<EA07C0EA1FF0EA3FF8EA7FFCA2EAFFFEA5EA7FFCA2EA3F
F8EA1FF0EA07C00F0F788E20>I<EE07C04C7EA24C7EA34C7EA24C7EA34C7EA24B7FA34B
80A24B8016DF16CF030F801687031F80160782033F80ED3E01037E80157C8203FC804B13
7F0201815D830203824B7F0207825D83020F824B7F021F8292C7FC834A82023E80027FB7
7EA391B87E02F8C8127F0101834A81A20103844A810107844A81A249488384011F8491C9
7EA2013E84D9FFC081B66C0107B612FEA44F487CC758>65 D<B912C018FCF0FF8019E0D8
001F90C7000313F805007FF03FFE727E1A807213C0841AE0A2841AF0A84E13E0A21AC060
1A804E13004E5A4E5A4E5A050313E0057F138092B600FCC7FCF0FF8019F092C8EA7FFCF0
1FFF060713807213C01AE07213F07213F81AFCA2F17FFEA31AFFA81AFEA219FF1AFC601A
F84E13F04E13E04E13C0063F13804DB51200BA12FC19F0198006F8C7FC48477CC653>I<
DC7FFE1406030FB500C0131E037F02F8133E0203B600FE137E020F903AF800FF80FE023F
0180EB1FC1DAFFFCC7EA07F34901F0EC01FF010701C0EC007F4990C9123F4948161F4948
160F49481607495A4818034A16015A48491600A2485B1A7E5A91CBFC48193EA35A491800
A312FFAD127FA37F6C191EA37E806C193E1A3C6C7FA26C6D17787E6E17F06C18016D6C17
E06D6CEE03C06D6CEE07806D6C6CED0F006D6D153E010101F05D6D01FC4A5A91263FFF80
EB0FF0020F01F8EB7FC0020390B6C7FCDA007F14FC030F14E09226007FFEC8FC47497AC7
54>I<B97E18FCF0FF8019E0D8001F902680000F13F8050013FEF01FFF060713C0727F72
7F726C7E86737E191F737E1B80851BC0A27313E0A21BF085A31BF8A41BFCAE1BF8A41BF0
A2611BE0A34F13C0A24F13801B0061624F5A4F5A4F5A06035B4E5B061F5BDE7FFEC7FC94
3807FFFCBA12F0198006FCC8FC18804E477CC659>I<BA12FCA4D8001F90268000017FEF
001F1807180318011800197E193E193F85A385A40578EB0780A496C7FCA217F8A3160116
03161F92B5FCA4ED801F160316011600A31778A21AF0A3F101E094C7FCA41903A21AC019
07A3190F191FA2F13F80197F19FF1803180F95B5FCBBFC1A00A344477CC64C>I<BA12F0
A4D8001F902680000713F8EF007F181F180718031801A2180019FC197CA3193CA4191E17
78A31900A317F8A316011603161F92B5FCA4ED801F160316011600A31778A694C8FCB2B7
12FEA43F477CC649>I<DC7FFC140C030FB500C0133C92B600F0137C020303FC13FC021F
9039F001FF014A90C7EA3FC3DAFFF8EC07E7010301E0EC03FF494914004990C9127F4948
163F4948161F4948160F495A48180748491603A248491601A2485B481800A291CBFC4819
7CA35A4995C7FCA312FFAD007F043FB612FCA37F6C93C7EBFC00A37E80A27E6C7FA26C7F
A26C7F7E6D7E6D7E6D7E6D6C5D6D13C06D01F05C010001FCEC0FCF91263FFF80EB1F876E
01F8EBFF03020390B5EAFE00020003F8133C030F02E0130C9226007FFEC9FC4E497AC75B
>I<B7D8F003B712C0A4D8001F0180C86C48C7FCB3AA92B8FCA40380C8127FB3ADB7D8F0
03B712C0A452477CC65B>I<B712F0A4D8001FEB8000B3B3B3A9B712F0A424477DC62B>I<
B712FEA4D8001F0180C9FCB3B3A419F0A4F001E0A41803A31807A219C0180F181FA2183F
187FEF01FF5F170F94B51280BAFCA43C477CC646>76 D<B66C051FB512F86F5FA26F5FD8
001FF3C000A2011E6D17F7A26E6CEE01E7A26E6CEE03C7A36E6CEE0787A26E6CEE0F07A2
6E6D151EA26E6D153CA36E6D1578A26E6D15F0A26F6CEC01E0A36F6CEC03C0A26F6CEC07
80A26F6CEC0F00A26F6D131EA36F6D5BA26F6D5BA26F6D5BA3706C485AA2706C485AA270
6C485AA3706C48C7FCA270139EA27013FCA2705BA3705BA2715AA2715AEB7F80B600C004
3FB612F8715AA271C7FC65477CC66E>I<B600C092B612C08181A2D8001F6D9239007F80
006F041EC7FC81011E7FA26E7F6E7F6E7F6E7F6E7FA26E7F6E7F6E7F6F7F83816F7F6F7F
6F7F6F7FA26F7F6F7F707F707F707FA2707F707F707F707F84827113807113C07113E071
13F0A27113F87113FC7113FE7113FF72139EA27213DE7213FE8484A2848484197F193FA2
191F190F190719031901A2D97F801600B600C0167E1A3E1A1EA252477CC65B>I<B9FC18
F818FEF0FFC0D8001F902680001F7F050113F8717FF03FFE727E1A80841AC0841AE0A21A
F0A81AE0A31AC0601A80601A004E5AF0FFFC050313F0051F5B92B7128006FCC7FC18E003
80CAFCB3ABB712F0A444477CC64F>80 D<DA7FF013030107B55B011FECE00F017F6E5A90
3AFFC00FFC3F4848C76C5AD803F8EC3FFF4848140F48488048488082003F814981127F83
A200FF82A27FA2837F7F7F01FE92C7FC6C6C7E14F8ECFF806C14FCEDFFC06C15F86C15FF
6C8217E06C826C826C6C816D81010F811303D9007F1580020315C0EC003F030114E0ED00
1F16077013F01600A20070167F00F0163FA3171FA27E18E0A27E18C06C163F7E188001C0
ED7F007F01F815FE01FEEC03FC26FE7FC0495A26FC3FFCEB3FF0D8F80FB612C0D8F00392
C7FC48C66C13FC48010313E034497AC741>83 D<003FBA12FCA49026FE00079038E0007F
01F0170FD87FC0EF03FE49170190C71600007E197EA2007C193EA30078191EA400F8191F
48190FA5C81700B3B3A60103B812C0A448467CC551>I<90380FFFF090B6FC000315C03A
07F8007FF0486CEB1FFCED07FE486C6D7E838183816C48816C5A6C5AC9FCA5157F023FB5
FC0103B6FC011F13F090387FFE003801FFE0481380D80FFEC7FC485A5B123F485AA2485A
A45DA26C6C5BED077F6C6C130F6C6C013E13F83C0FFF80F83FFFE000039038FFF01FC6EC
C00F90390FFE0003332E7CAD38>97 D<EB7FC0B5FCA412037EB3A2ED1FFC92B57E02C314
F09139CFE01FFC9139DF0003FE02FC6D7E4A6D13804AEC7FC04AEC3FE04A15F0EF1FF8A2
18FCA2EF0FFEA418FFAA18FEA318FC171FA218F8EF3FF0A26EEC7FE06E15C06EECFF8002
3C491300D9FE1FEB07FE903AFC0FC03FF8D9F803B512E049C6148049D91FF8C7FC38487C
C741>I<91381FFFC049B512FC010714FF903A1FF8007F80D97FE0EBFFC0EBFF80484948
13E0485A1207485AA248486D13C0003FED7F80EE3F00007F92C7FC5BA312FFAA127FA27F
A2123FA26C6C15F0120F6DEC01E012076C6CEC03C06C6DEB07806C6DEB0F00D97FF0133E
90391FFC01FC0107B512F0010114C09026001FFCC7FC2C2E7CAD34>I<EFFF804BB5FCA4
ED000782B3A2EC1FFC49B51283010714E390391FFC03F390397FE0007FD9FF807F4890C7
120F484880000781485AA2485A123FA25B127FA312FFAA127FA46C7EA2121FA26C7E0007
5D6C6C5C6C6C5C6C6D137F6D6C01FB13C090273FF807E313FF010FB512C3010114039038
003FF038487CC741>I<EC1FFC49B512C0010714F090391FF80FFC90397FC001FE49486C
7E4890C7EA7F804848EC3FC04848EC1FE0120F484815F0160F003F16F8A25B007F150717
FCA212FFA290B7FCA301F0C9FCA5127FA36C7EA2001F163CA26C7E17786C6C15F86C6CEC
01F06C6DEB03E06C6DEB07C0D93FE0EB1F80903A1FFC01FF000107B512FC010014E0020F
90C7FC2E2E7DAD35>I<171FDA7FF0EBFFC00107B5000313E0011FECC7E7903B7FE03FFF
0FF09039FF800FFC48EB00074848EB03FE00079238FF07E0496DEB03C0000FEE8000A200
1F82A8000F5EA2000793C7FC6D5B00035D6C6C495A6C6D485A9138E03FF0D801DFB512C0
D803C791C8FC9038C07FF04848CAFCA37FA27FA213F890B612F06C15FF17E06C8217FC6C
826D8148B812801207D80FF0C7001F13C0D81FC014014848EC007F007FEE3FE048C9FC17
1FA56C6CED3FC0A26C6CED7F806C6CEDFF00D80FF8EC03FED803FEEC0FF82601FFE0EBFF
F06C6CB612C0010F4AC7FCD9007F13C034447DAE3A>103 D<EB7FC0B5FCA412037EB3A2
ED07FE92383FFFC04B13F09139C1F81FF89139C3C00FFC9139C70007FE14CE02DC8002F8
7F18805CA25CA35CB3A9B60081B6FCA438487BC741>I<137C48B4FC4813804813C0A248
13E0A56C13C0A26C13806C1300EA007C90C7FCACEB7FC0B5FCA412037EB3B2B6FCA41849
7CC820>I<EB7FC0B5FCA412037EB3B3B3A8B61280A419487CC720>108
D<9027FF8003FFEC03FFB5011F01E0011F13E0037F01F8017F13F8913D81F80FFC01F80F
FC913D83C007FE03C007FE0003903D878003FF078003FF6CD98E00EC0E00029C039C8102
B86D01B87F06F88102F05DA24A5DA34A5DB3A9B66CB66CB61280A4592E7BAD62>I<9039
FF8007FEB590383FFFC04B13F0913981F81FF8913983C00FFC00039039870007FE6C138E
029C8002B87F188014F0A25CA35CB3A9B60081B6FCA4382E7BAD41>I<EC0FFE49B512F0
010714FC90391FF803FF90267FE00013C0D9FF80EB3FE04890C76C7E48486E7E48486E7E
000F82491403001F82003F17804980A2007F17C0A300FF17E0AA007F17C0A46C6C4A1380
A2001F17006D5C000F5E6C6C4A5A00035E6C6C4A5A6C6D495AD97FE0EBFFC090261FFC07
90C7FC0107B512FC010114F0D9001F90C8FC332E7DAD3A>I<90397FC01FFCB590B57E02
C314F09139CFE03FFC9139DF0007FE000301FC6D7E6C496D13804A6D13C04AEC7FE04A15
F0EF3FF8A2EF1FFCA218FEA2170FA218FFAA18FE171FA218FCA2173F18F818F0177F6EEC
FFE06E15C06E4913806E49130002DFEB0FFE9139CFC03FF802C3B512E002C01480DB1FF8
C7FC92C9FCB0B67EA438427CAD41>I<DA1FF8EB078049B5130F0107EC801F90391FFC07
E0903A7FF000F03FD9FFC0EB787F4849133C4890C7EA1EFF484880120F4980121F003F81
5BA2127FA25B12FFAA127FA27FA2123FA26C7E5E6C7E00075D6C6C5C6C6D5B6C6D137B90
397FE001F390393FF80FE3010FB512830103EBFE039038003FF091C7FCB04BB6FCA43842
7CAD3D>I<90397F803F80B5EBFFE0028113F8913883C3FC91388707FE0003138E6C9038
9C0FFF14B8A214F0A2ED07FE9138E003FCED01F892C7FCA25CB3A8B612E0A4282E7DAD2F
>I<90390FFE01C090B512C7000314FF3807F801390FC0007F48C7121F48140F007E1407
A2150312FEA27E7F01E090C7FC13F8387FFFC014FF6C14E015F86C806C14FF6C15800001
15C06C6C14E0131F010014F014039138007FF80070141F00F0140F15077E1503A26C15F0
A27E6CEC07E07F6DEB0FC001F0EB1F80D8FEFCEBFF0039F87FFFFCD8F01F13F0D8E00313
80252E7CAD2E>I<EB01E0A61303A31307A3130FA2131F133FA2137FEA01FF5A000F90B5
12C0B7FCA3C601E0C7FCB3A616F0A9017F14E0ECF001133FED03C0D91FF8138090390FFE
0F00903807FFFE01015B9038001FF024427EC12D>I<D97FC0ECFF80B549B5FCA40003EC
00076C81B3AA5EA36C5D5EA26D6C133B013F02F313C090271FF803E313FF6DB512830103
14039038003FF8382E7BAD41>I<B649B5FCA4000101C09038001FC06EEC0F806C17006E
5C017F151E6E143E013F153C80011F5D8017F8010F5D6E13016D5DED80036D5DEDC0076D
5D15E06D4AC7FC15F05E027F131EEDF83E023F133CEDFC7C021F1378EDFEF8020F5B15FF
6E5BA36E5BA26E5BA26E90C8FCA2157EA2153C382E7EAD3D>I<B500FE90381FFFFCA4C6
01E0903803FE006EEB01F86D6C5C6D6C495A011F4A5A6D6C495A6E49C7FC6D6D5A6DEBC0
7E6D147C6D6D5AEDF1F091387FFBE06EB45A806E5B93C8FC6E7F6E7F6E7FA24A7F4A7F82
91380F9FFEEC1F0F91383E07FF027C804A6C7F01016D7F49487E4A6D7E49488049486D7E
49C76C7E013E140F017E6E7E48B41680B500E0017F13FFA4382E7EAD3D>120
D<B649B5FCA4000101C09038001FC06EEC0F806C17006E5C017F151E6E143E013F153C80
011F5D8017F8010F5D6E13016D5DED80036D5DEDC0076D5D15E06D4AC7FC15F05E027F13
1EEDF83E023F133CEDFC7C021F1378EDFEF8020F5B15FF6E5BA36E5BA26E5BA26E90C8FC
A2157EA2153CA2157C157815F85D1401001F5C383F8003D87FC05B38FFE0075D140F4AC9
FC141E387FC07C495A383F03F06CB45A00071380D801FCCAFC38427EAD3D>I
E /Fz 45 128 df<126012F012781238121C120E120612020708789C15>18
D<EA03801207EA0F00121E12385A12C05A0908749C15>I<131E1331136113C1A21201A2
13C21382138413C813D0EC0FF89038E003C09038C0018015003803E00200045B00085BEA
187000305B3870782038603840EAE03CEB1C8090380F00201540A23960138080393061C3
00381F807C1D1F7D9D20>38 D<1218123C127C12341204A21208A21210A212601280060C
799C0C>I<130813101320134013801201EA0300A21206120E120C121C1218A212381230
A21270A21260A312E0A55AA37EA21260A47EA212107E120C12040D2A7B9E10>I<5AEA00
8013C01340136013201330A31318AA1338A31330A21370A21360A213E013C0A2EA0180A2
EA0300A2120612045A12185A5A12800D2A809E10>I<EA7FF0EAFFE00C027F890E>45
D<1270A212F0126004047C830C>I<13F8EA038EEA0606487EA2001813801238A2123012
70A438E00700A51306130E12C0A2130C131C1318EA60305B6C5A001FC7FC111D7C9B15>
48 D<13181330EA03F0EA0C701200A313E0A6EA01C0A6EA0380A6EA07001380EAFFF80D
1C7C9B15>I<137E38018380380201C0380400E0A2120FA25AA2120EEA000114C0EB0380
A2EB0700130E5B5B13605B485A380300801206380801001210EA3FFF485A12FF131C7E9B
15>I<137CEA0187380203801204000F13C0A3000E13801200EB070013065B1338EA03F0
EA001C7FA2130FA3127012F8A2EAF00EEAE01EEA801CEA4038EA3070EA0F80121D7D9B15
>I<14C0EB01801303A21307130B1313EB2700136713C71387EA01071202EA040E120812
18121012201240B512C038001C00A55B133C3803FF80121C7E9B15>I<380301C0EBFF80
3807FE0013F80004C7FCA45AA213F8EA0B0CEA0C0EEA0807121012001480A338700F0012
F0A2130EEA801E131CEA40381330EA30E0EA0F80121D7D9B15>I<133E13C138018080EA
0303EA0607120C001C13000018C7FC12381230EA71F0EA7618EA780CEAE80EEAF006A2EA
E007A3130E12C0A35BEAE018EA60381330EA30C0EA0F80111D7C9B15>I<1210383FFFC0
A2148038600100EA40025B485A12005B5B5B13C05B1201A248C7FC5AA25A120EA2121EA3
5AA31218121D7B9B15>I<137CEA0183380201801206380C00C0A3381C0180A2381F0300
EA0F8613CCEA07F06C7E7FEA0C7E487E487EEA6007A2487EA313021306EA60045BEA3830
EA0FC0121D7D9B15>I<13F8EA0304EA0606487E121C1238148012301270A4130714005B
1230EA1817EA0827EA07CEEA000E130C131CEA6018EAF0381330485AEA80C0EA4380003E
C7FC111D7C9B15>I<14201430147014F0A2130180EB0278A21304A21308801310A21320
A2EB403E141EEBFFFEEB801EEA0100141F00027FA25A120C001E148039FF807FF01C1D7F
9C1F>65 D<3807FFFE3900F807809038F001C015E0140015F0A2484813E0140115C01403
EC0780EC1E003803FFFCEBC00FEC0780EC03C0A3EA0780A4EC0780EC0F00380F001E5CB5
12E01C1C7F9B1D>I<903807F01090381C0C3090387002609038C001E03803800048C7FC
000E1460A2481440123C123800781400A35AA51580EC01001270A26C13025C7E000C1318
6C1320380380C0D8007FC7FC1C1E7C9C1E>I<380FFFFC3900F807809038F001C0EC00E0
1570A2157848481338A4153C1538485A1578A3157015F0484813E0A2EC01C0EC03801407
EC0E0048485A1470B512C01E1C7E9B20>I<0007B512E03800F801EBF0001540A4485A14
201500A2146014E048B45A13C01440A3158038078000A2EC0100A25C1406380F000E143E
B512FC1B1C7E9B1C>I<0007B512C03800F803EBF001EC0080A4485A14201500A2146014
E048B45A13C01440A44848C7FCA648C8FC7FEAFFF81A1C7E9B1B>I<903807F01090381C
0C3090387002609038C001E03803800048C7FC000E1460A2481440123C123800781400A3
5AA3ECFFF0EC0F801407EC0F001270A27EA26C5B000C131E6C136638038182D8007EC7FC
1C1E7C9C21>I<3A07FF87FF803A00F800F800495BA54848485AA648B55AEBC003A54848
485AA6484848C7FC01807F39FFF0FFF0211C7F9B1F>I<EA07FFEA00F813F0A5EA01E0A6
EA03C0A6EA0780A6EA0F001380EAFFF0101C7F9B0F>I<EB7FF8EB07C01480A5EB0F00A6
131EA65BA2127012F8A2485AEAE070EA80E0EA61C0001FC7FC151D7E9B15>I<3907FF80
FF3900F8007849136015401580EC0100140448485A5C5C5C14C0EBE3E0EA03C5EBC9F013
D0EBE0F8EBC078147C3807803C143E141E141F801580380F00079038800FC039FFF03FF0
201C7F9B20>I<3807FFC03800F8005BA5485AA6485AA51404EA0780A31408A21418380F
003814F0B5FC161C7E9B1A>I<D807F8EB07FC0000EC0FC001BC14801517A21527A2D801
1EEB4F00A2158FA2EC010F130F0002EB021EA21404A2EB0788149000045C14A0A214C013
031480000C5C001EEB007C3AFF8307FF80261C7E9B26>I<D807F8EBFF800000EC3C0001
BC13181510139E139F138F39010F8020130714C0130314E01301390200F040A21478A214
3CA2486D5A141F140FA21407A2000C6DC7FC001E7FEAFF80211C7F9B1F>I<EB07F0EB38
1CEBE00E3801C003D80380138039070001C0120E001E14E0001C1300123C1238007814F0
A348EB01E0A4EC03C0A30070EB0780150000785B0038131E003C131C001C5B6C13E03803
8380D800FEC7FC1C1E7C9C20>I<3807FFFC3800F80F9038F0038015C01401A33801E003
A31580EC0700140E3803C03CEBFFE001C0C7FCA4485AA648C8FC7FEAFFF01A1C7E9B1C>
I<EB07F0EB381CEBE00E48487E390380038039070001C0120E001E14E0001C1300123C12
38007814F0A348EB01E0A415C01403A20070EB0780150038781C0F3838220EEB411C381C
8138000E13E03903C38080EA00FF1301EC810014C314FF6D5A5C14781C257C9C20>I<38
0FFFF83800F80E9038F00780EC03C0140115E0A23901E003C0A21580EC0700140E143C38
03FFE0EBC078141C141E140E140F3807801EA51508D80F001310138039FFF00E20C7EA03
C01D1D7E9B1F>I<EB3F04EBC0CC38018038EA030000061318120EA3001E13101400121F
6C7E13F86CB4FC6C13806C13C038003FE0130313011300A21240A314C0EA600100E01380
38F00300EACC0EEA83F8161E7E9C17>I<001FB512F0383C07C00030EB80300020142012
601240A2EB0F00128000001400A4131EA65BA65B137C381FFFE01C1C7C9B1E>I<39FFF0
1FF0391F000780001EEB03001402A4485BA6485BA6485BA212705CA26C5B5C6C48C7FCEA
0E0EEA01F01C1D7A9B1F>I<39FFE007F8391F0001C06C14801500A2EB800212075C140C
14086D5A12035CA25C13E000015BA201E1C7FC13E3EA00F213F4A213F8A21370A21360A2
1D1D7B9B1F>I<3907FF03FE3900FC01F090387800C0017C138090383C0100EB3E02EB1E
04EB1F0CEB0F081490EB07A014C01303801301497E13041308497EEB3078EB607CEB403C
EB803E3801001E0002131F00067F001FEB1F8039FF807FF01F1C7F9B1F>88
D<39FFE007F8391F8001C0D80F00138001801300000713026D5A0003130C14086D5A0001
5BEBF060000013406D5A01F9C7FC137B137E133CA213381378A5137013F07FEA0FFF1D1C
7B9B1F>I<0003B512803907C00F00EB001E00065B147C000413785C48485A130300005B
495A49C7FC5B131E5B5B13F8EBF00448485AEA03C0EA07801418380F0010001E13305A14
F0387803E0B5FC191C7E9B19>I<1204120E121BEA31801240EA80400A06779C15>94
D<EA60E012F012E1EAE0C00B04779C15>127 D E /FA 94 127 df<126012F8127E123F
120708057C9614>18 D<1206121F127E12FC12E00805799614>I<126012F0AD12601200
A4126012F0A212600417789614>33 D<EAC060EAE0E0A4EAC060A5EA40400B0B7C9614>
I<EA071CA5EA7FFFB51280A2380E3800A7B51280A26C1300EA1C70A511177F9614>I<13
801201A2EA07E0EA1FF0EA39BCEA619CEAC18EA3EAE184EA7180127FEA1FE0EA0FF0EA01
F8139C138EEA418612E1A3EA718CEA39B8EA1FF0EA0FC0EA0180A212000F1D7E9914>I<
EA3806EA7C0E126CEAEE1CA25BA2126CEA7C70123812005BA2485AA3485AA248C7FC130E
131FEA0E1BEB3B80A2121CA238381B00131FEA180E111D7F9914>I<1207487EEA18C0EA
38E0A35B3839CF80138F381F1C00121EA2EA0E38121EEA37701267EAE3F05B38E1C38013
E3EA63F3383F3F00EA1E1E11177F9614>I<126012F012F812781218A31230A2126012C0
1280050C789614>I<EA01801203EA06005A121C121812385AA35AA91270A37E1218121C
120C7EEA03801201091D799914>I<128012C01260123012381218121C120EA31207A912
0EA3121C121812381230126012C01280081D7C9914>I<EA0380A3EA638CEAF39EEA7FFC
EA3FF8EA0FE0A2EA3FF8EA7FFCEAF39EEA638CEA0380A30F107E9214>I<EA01C0A7B512
80A33801C000A711117F9314>I<127012F812FCA2127C120C1218123012E012C0060A79
8414>I<EAFFFEA30F037E8C14>I<127012F8A312700505798414>I<1306130EA2131CA2
1338A21370A213E0A2EA01C0A2EA0380A3EA0700A2120EA25AA25AA25AA25AA25A0F1D7E
9914>I<EA07C0EA0FE0EA1C70EA3838EA3018EA701CA2EAE00EA9EA701CA2EA3838A2EA
1C70EA0FE0EA07C00F177E9614>I<1203A25A5A123F12F712471207AEEA7FF0A20C177C
9614>I<EA0FC0EA1FF0EA3838EA701CEAE00EA312401200131CA213381330137013E0EA
01C0EA030012065AEA180E1230EA7FFEA20F177E9614>I<EA0FC0EA1FF0EA3838EA701C
A212201200131813381370EA0FE013F0EA0038131C130EA2124012E0A2EA701CEA7838EA
3FF0EA0FC00F177E9614>I<137813F8EA01B8A2EA0338A21206120E120C121C12381230
127012E0B51280A238003800A548B4FCA211177F9614>I<EA7FFCA2EA7000A7EA77C0EA
7FF0EA7838EA601CEA000C130EA2124012E0131C1260EA7878EA3FF0EA0FC00F177E9614
>I<EA01F0EA07F8EA0E1C121C1238EA30001270A25AEAE7C0EAEFF0EAF838EAF01C130C
EAE00EA212601270130CEA381CEA1C38EA0FF0EA07C00F177E9614>I<12E0EAFFFEA2EA
E01C1338EA0030137013E013C0120113801203A2EA0700A4120EA612040F187E9714>I<
EA0FE0EA3FF8EA783CEA701CEAE00EA4EA701CEA1EF0EA0380EA1FF0EA3838EA701CEAE0
0EA4EAF01EEA701CEA3838EA1FF0EA07C00F177E9614>I<EA07C0EA1FE0EA3830EA7038
EA601C12E0130C130EA2EA601E1270EA383EEA1FEEEA07CEEA000E131CA3EA7038133013
E0EA3FC0EA1F000F177E9614>I<127012F8A312701200A6127012F8A312700510798F14>
I<127012F8A312701200A6126012F012F8A2127812181230127012E012800515798F14>
I<130E133E137C13F0EA03E0EA07C0EA1F00123E12F85A7E123E7EEA07C0EA03E0EA00F0
137C133E130E0F137E9414>I<B51280A27EC8FCA3387FFF80B5FCA211097F8F14>I<1240
12E012F8127C121EEA0F80EA07C0EA01F0EA00F8133E131E133E13F8EA01F0EA07C0EA0F
80EA1E00127C5A12E012400F157E9514>I<EA1FE0EA3FF8EA701CEAE00EA21240EA003C
137013E0EA01C0EA0380A41300C7FCA41203EA0780A2EA03000F177E9614>I<EA01E0EA
07F0EA0E38EA181CEA38FC1271EA731E1277EAEE0EA7EA771CEA7318EA71F0EA38E0EA18
06EA0E1EEA07F8EA01F00F177E9614>I<EA01C0487EA21360A2EA0770A4EA0630EA0E38
A4487EEA1FFCA2EA1C1CA2487EA238FE3F80A211177F9614>I<EAFFF013FCEA381E130E
1307A4130E131EEA3FFCA2EA381E130E1307A5130E131EEAFFFC13F810177F9614>I<38
01F180EA07FFEA0E1FEA1C071238EA7003A348C7FCA738700380A338380700121CEA0E0E
EA07FCEA01F011177F9614>I<EAFFE013F8EA383C7F130E7FA3EB0380A8EB0700A2130E
131E5BEAFFF813E011177F9614>I<B5FCA2EA3807A490C7FCA21338A2EA3FF8A2EA3838
A290C7FCA3EB0380A4B5FCA211177F9614>I<B51280A2EA3803A490C7FCA21338A2EA3F
F8A2EA3838A290C7FCA7B4FCA211177F9614>I<EA03C6EA0FFEEA1C3EEA181E1238EA70
0EA21260EAE000A4137FA2130E12601270A2EA381E1218EA1C3EEA0FFEEA03CE10177F96
14>I<38FE3F80A238380E00A8EA3FFEA2EA380EA938FE3F80A211177F9614>I<EAFFF8A2
EA0700B3EAFFF8A20D177D9614>I<EA07FCA2EA0070B012E0A2EAF0E0EA7FC0EA1F000E
177D9614>I<EAFE3FA2EA381C5B137813705B12395BEA3B80EA3FC07F123EEA3CF01370
EA387813387FA27FA238FE1F80A211177F9614>I<B4FCA21238AF1307A4B5FCA210177E
9614>I<38FC1F80A2007C1300EA7637A4EA7777A2EA7367A313E7EA71C7A2EA7007A638
F80F80A211177F9614>I<38FE3F80A2383E0E00123BA4138E1239A213CEA31238A213EE
136EA4133E12FEA211177F9614>I<EA1FF0EA7FFCEA783CEA701CEAE00EAFEA701CEA78
3CEA7FFCEA1FF00F177E9614>I<EAFFF013FCEA381E130E1307A5130E131EEA3FFC13F0
EA3800A812FEA210177F9614>I<EA1FF0EA7FFCEA783CEA701CEAE00EADEAE38EEAE1CE
EA71DCEA78FC127FEA1FF0EA00781338133C131C131E0F1C7E9614>I<EAFFE013F8EA38
3C131C7FA45B133CEA3FF85BEA38387FA51480EB1DC0A238FE0F80EB070012177F9614>
I<EA0FCCEA1FFCEA307CEA603CEAE01CA313001270127EEA3FE0EA0FF0EA01F8EA001C13
1E130E126012E0A2EAF01CEAF838EAFFF0EAC7E00F177E9614>I<387FFF80B5FCEAE1C3
A43801C000AFEA0FF8A211177F9614>I<38FE0FE0A238380380B0381C0700A2EA0E0EEA
07FCEA01F01317809614>I<38FC1F80A238380E00A3EA3C1EEA1C1CA46C5AA4EA0630EA
0770A3EA0360A213E0A26C5A11177F9614>I<38FC1F80A238700700A7EA31C6EA33E6EA
3BEE136EA5EA1B6CA2EA1A2CEA1E3CA311177F9614>I<EA7E3EA2EA1C3CEA1E38EA0E78
EA0F7012075B12035B120112037FA2EA0770A2EA0E781338EA1C3C131CEA3C1E38FE3F80
A211177F9614>I<38FC1F80A238380E00EA3C1EEA1C1CEA1E3CEA0E38A26C5AA2EA0360
13E0A26C5AA8EA07F0A211177F9614>I<EA7FFE12FFEAE01CA21338A2EA007013E0A2EA
01C0A2EA0380EA0700A2120EA25AEA380EA21270A2EAFFFEA20F177E9614>I<EAFFE0A2
EAE000B3A7EAFFE0A20B1D799914>I<12C07EA21270A27EA27EA27EA27EA2EA0380A3EA
01C0A2EA00E0A21370A21338A2131CA2130EA213060F1D7E9914>I<EAFFE0A21200B3A7
12FFA20B1D7F9914>I<EAFFFEA30F037E7E14>95 D<EA1FC0EA7FF0EA7078EA2018EA00
1CA2EA07FC121FEA3C1C127012E0A3EA707C383FFF80EA0F8F11107E8F14>97
D<12FCA2121CA513F8EA1DFEEA1F07EA1E03001C1380EB01C0A6EB0380001E1300EA1F0E
EA1DFCEA0CF81217809614>I<EA03F8EA0FFEEA1C0EEA3804EA7000126012E0A4126012
70EA380EEA1C1EEA0FFCEA03F00F107E8F14>I<137EA2130EA5EA07CEEA0FFEEA1C3EEA
301EEA700E12E0A61270EA301EEA383E381FEFC0EA07CF12177F9614>I<EA07E0EA0FF0
EA1C38EA301CEA700CEAE00EA2EAFFFEA2EAE00012601270EA380EEA1C1EEA0FFCEA03F0
0F107E8F14>I<13FCEA01FEEA038EEA07041300A3EA7FFE12FFEA0700ACEAFFF8A20F17
7F9614>I<EA07CF381FFF80EA383B38301800EA701CA3EA3018EA3838EA3FF0EA37C000
70C7FCA2EA3FF86C7E487EEA700F38E00380A438700700EA3C1EEA1FFCEA07F011197F8F
14>I<12FCA2121CA51378EA1DFEEA1F86EA1E07121CAA38FF8FE0A21317809614>I<1206
120FA21206C7FCA4B4FCA21207ACEAFFF8A20D187C9714>I<136013F0A213601300A4EA
1FF0A2EA0070B2EA40E0EAE0C0EA7F80EA3F000C207E9714>I<12FCA2121CA5EBFF80A2
EB1C005B5B5BEA1DC0EA1FE0A2EA1E70EA1C38133C131C7F38FF1F80A21117809614>I<
EAFF80A21203B3EAFFFEA20F177E9614>I<EAFB8EEAFFDF383CF380A2EA38E3AA38FEFB
E013791310808F14>I<EAFC78EAFDFEEA1F86EA1E07121CAA38FF8FE0A21310808F14>I<
EA07C0EA1FF0EA3C78EA701CA2EAE00EA6EA701CEA783CEA3C78EA1FF0EA07C00F107E8F
14>I<EAFCF8EAFDFEEA1F07EA1E03001C1380EB01C0A6EB0380001E1300EA1F0EEA1DFC
EA1CF890C7FCA6B47EA21218808F14>I<EA03E7EA0FF7EA1C1FEA300F1270487EA6EA70
0F1230EA1C3FEA0FF7EA07C7EA0007A6EB3FE0A213187F8F14>I<EAFE1FEB7F80EA0EE3
380F810090C7FCA2120EA8EAFFF0A211107F8F14>I<EA0FD8EA3FF8EA603812C0A2EAF0
00EA7F80EA3FF0EA07F8EA001CEA600612E012F0EAF81CEAFFF8EACFE00F107E8F14>I<
1206120EA4EA7FFC12FFEA0E00A8130EA3131CEA07F8EA01F00F157F9414>I<EAFC3FA2
EA1C07AB131F380FFFE0EA03E71310808F14>I<38FE3F80A2383C1E00EA1C1CA36C5AA3
EA0630EA0770A36C5AA311107F8F14>I<38FE3F80A238700700EA380EA3EA39CEA3EA1B
6C121AA3EA1E7CA2EA0E3811107F8F14>I<EA7E3FA2EA1E3CEA0E78EA07705B12036C5A
12037FEA0770EA0E781338487E38FE3F80A211107F8F14>I<38FE3F80A2381C0E005BA2
120E5BA212071330A2EA0370A25B1201A25BA3485A12730077C7FC127E123C11187F8F14
>I<EA3FFF5AEA700E131C1338EA007013E0EA01C0EA0380EA0700120EEA1C0712381270
B5FCA210107F8F14>I<133E13FEEA01E0EA0380AAEA7F0012FE127FEA0380AAEA01E0EA
00FE133E0F1D7E9914>I<12E0B3AB031D789914>I<127812FE120FEA0380AAEA01FCEA00
FEEA01FCEA0380AAEA0F0012FE12780F1D7E9914>I<EA1C10EA3F38EAE7E0EA41C00D04
7D9614>I E /FB 100 128 df<B512FC3870003C0078130C003813046C1306001E130212
0E7EEB800012036C7E7F120013601340A25B3801000212025A481306481304140C48133C
387FFFFCB5FC171A7E991C>6 D<EBFE7C380381C6380603CE000E1384001C1380A6B512
F0381C0380AE38FF8FF0171A809916>11 D<13FEEA038138060180EA0E03381C010090C7
FCA5B51280EA1C03AE38FF8FF0141A809915>I<EBFF80EA0383EA0603120E121CA6B5FC
EA1C03AE38FF9FF0141A809915>I<90387E1F803901C17040390703C0600006EB80E000
0E14401500A5B612E0380E0380AE397F8FE3FC1E1A809920>I<90387E1FE03801C17038
0703C000061380120EA6B6FC380E0380AE397F8FE3FC1E1A809920>I<12FC121CAE12FF
0810808F0A>I<12E0A212F012381218120C120406077C9913>18
D<121CA2123C1270126012C012800607789913>I<121C121E1207A312FE08067B7F11>
24 D<13021304A21308EA07F8EA1C38EA303CEA702EEA6046EAE0471387A2EAE107A212
E2EA6206EA740EEA3C0CEA1C38EA1FE0EA10005AA25A10187F9313>28
D<126012F0A61260AA12201200A4126012F0A21260041A7D990B>33
D<EA60C0EAF1E0EAF9F0EA68D0EA0810A3EA1020A2EA2040EA40800C0B7F9913>I<EB0C
06A3495AA4495AA4495AB612E0A23900C06000A348485AA3B612E0A23903018000A2D806
03C7FCA5EA0C06A41B217E9920>I<5AA2EA0FC0EA1930EA21081261EAC104130C131C13
08EAE10012611279EA3F80EA1FE0EA07F0EA01781338131CEA410C12E1A212811308EA41
18EA2110EA1160EA0F80EA0100A20E1E7E9B13>I<000E130300315B3830800E3860E01C
38E05FECEB40185CA25C5CA238608180D83083C7FCEA3103EA0E0638000C079038181880
1540EB30309038607020A213C0EA0180A2EA03001206EC30404813184814800008EB0700
1B1E7E9B20>I<EA01C0EA0320EA0610120EA45B5BA23907807F809038001E0014086D5A
120B3811C020EA31E000605BEB7080EAE078013DC7FC6D1380130E39701F0100383861C3
380F807C191A7E991E>I<126012F012F812681208A31210A212201240050B7D990B>I<13
80EA010012025A120C120812185AA35AA412E0AA1260A47EA37E1208120C12047E7EEA00
8009267D9B0F>I<7E12407E7E12181208120C7EA37EA41380AA1300A41206A35A120812
1812105A5A5A09267E9B0F>I<1203A4EAE31CEA7338EA1FE0EA0780A2EA1FE0EA7338EA
E31CEA0300A40E107E9B13>I<130CACB61280A2D8000CC7FCAC191A7E951E>I<126012F0
A212701210A31220A21240A2040B7D830B>I<EAFFC0A20A0280880D>I<126012F0A21260
04047D830B>I<1304130C1318A31330A31360A313C0A3EA0180A3EA0300A31206A35AA3
5AA35AA35AA35AA20E257E9B13>I<EA07E0EA1C38EA381CEA300CEA700EEA6006A2EAE0
07AAEA6006A2EA700EEA300CEA381CEA1C38EA07E010187F9713>I<12035AB4FC1207B3
A2EA7FF80D187D9713>I<EA0F80EA1060EA2030EA4038EA803CEAC01C12E01240EA003C
1338A21370136013C0EA018013001202EA040412081210EA3008EA3FF8127F12FF0E187E
9713>I<EA07E0EA1838EA201CEA601EEA700EEA201E1200131CA213381370EA07E0EA00
38131C130E130FA212E0A212C0EA400EEA601CEA1838EA07E010187F9713>I<1318A213
38137813F813B8EA01381202A212041208121812101220124012C0B5FCEA0038A6EA03FF
10187F9713>I<EA3018EA3FF013E01380EA2000A5EA2FC0EA3060EA2030EA0038131813
1CA2124012E0A2EA8018EA40381330EA30E0EA0F800E187E9713>I<EA01F8EA0704EA0C
06EA180E123013001270126012E0EAE3E0EAE418EAE80CEAF00EEAE0061307A31260A2EA
7006EA300EEA180CEA0C38EA07E010187F9713>I<1240EA7FFF13FEA2EA4004EA800813
10A2EA00201340A21380120113005AA25A1206A2120EA5120410197E9813>I<EA07E0EA
1818EA300CEA20061260A21270EA780CEA3E18EA1F30EA07C0EA03E0EA0CF8EA307CEA60
1E130FEAC0071303A3EA6002EA2004EA1818EA07E010187F9713>I<EA07E0EA1C30EA30
18EA700CEA600EEAE006A21307A31260EA700FEA3017EA1827EA07C7EA00071306130E13
0C12701318EA6030EA3060EA0F8010187F9713>I<126012F0A212601200A8126012F0A2
126004107D8F0B>I<126012F0A212601200A8126012F0A212701210A31220A21240A204
177D8F0B>I<B61280A2C9FCA6B61280A2190A7E8D1E>61 D<EA1FC0EA2060EA4030EAC0
3812E0A21200137013E0EA018013005A1202A6C7FCA41206120FA212060D1A7E9912>63
D<137F380180C03806003000081308487F38203E0213E13841C081384380710083EB7080
EA8700A6EA838012433941C0F1003820E131EB3E1E6CC8FC7E0006EB03803901803E0038
007FE0191A7E991E>I<130CA3131EA2132F1327A2EB4380A3EB81C0A200017F1300A248
B47E38020070A2487FA3487FA2003C131EB4EBFFC01A1A7F991D>I<B51280380E00E014
701438143CA514781470EB01E0380FFFC0380E00F01478143C141C141EA4141C143C1478
14F0B512C0171A7F991B>I<EB3F023801C0C63803002E000E131E48130E14065A007813
021270A200F01300A600701302A21278003813047E14087E000313303801C0C038003F00
171A7E991C>I<B57E380E00E01470808080A280A21580A81500A25C140E5CA2147814E0
B51280191A7F991D>I<B512F8380E003814181408140C1404A3EB0100A35BEA0FFFEA0E
037FA3EB0002A314061404A2140C143CB512FC171A7F991A>I<B512F8380E0038141814
08140C1404A3EB0100A35BEA0FFFEA0E037FA390C7FCA8EAFFE0161A7F9919>I<EB3F02
3801C0C63803002E000E131E48130E14065A007813021270A200F090C7FCA5903801FFC0
3970000E00A2127812387EA27E000313163801C06638003F821A1A7E991E>I<39FFE1FF
C0390E001C00AB380FFFFC380E001CAC39FFE1FFC01A1A7F991D>I<EAFF80EA1C00B3A6
EAFF80091A7E990E>I<EA0FFEEA0070B3124012E0A2EA40E0EA61C0EA1F000F1A7E9914>
I<39FFE01FC0390E000F00140C14085C5C5C495A0102C7FC5B130C131C132E1347EB8380
EA0F03380E01C06D7EA2147080A280141E141F39FFE07FC01A1A7F991E>I<EAFFE0000E
C7FCB01408A3141814101430147014F0B5FC151A7F9918>I<B414FF000F14F0A2390B80
0170A23809C002A33808E004A2EB7008A3EB3810A3EB1C20A2EB0E40A3EB0780A2EB0300
121C39FF8307FF201A7F9923>I<00FEEB7FC0000FEB0E001404EA0B80EA09C0A2EA08E0
1370A21338131CA2130E1307EB0384A2EB01C4EB00E4A21474143CA2141C140C121C38FF
80041A1A7F991D>I<137F3801C1C038070070000E7F487F003C131E0038130E0078130F
00707F00F01480A80078EB0F00A20038130E003C131E001C131C6C5B6C5B3801C1C0D800
7FC7FC191A7E991E>I<B51280380E01E0EB007014781438143CA4143814781470EB01E0
380FFF80000EC7FCABEAFFE0161A7F991A>I<137F3801C1C038070070000E7F487F003C
131E0038130E0078130F00707F00F01480A80070140000785B0038130E383C1C1E381C22
1C380E4138000713F03801E1C039007F8080EB00C0A214E1EC7F00A2143E141C19217E99
1E>I<B5FC380E01C0EB0070147880A55C1470EB01C0D80FFFC7FC380E0380EB00C08014
70A31478A31540143CEC1C8039FFE00F001A1A7F991C>I<EA0FC2EA1836EA200EEA6006
12C01302A3EAE0001270127EEA3FE0EA1FF8EA03FCEA007E130E130713031280A3EAC002
1306EAE004EAD818EA87E0101A7E9915>I<007FB5FC38701C0700401301A200C0148000
801300A300001400B13803FFE0191A7F991C>I<39FFE07FC0390E000E001404B200065B
12076C5B6C6C5A3800E0C0013FC7FC1A1A7F991D>I<39FF801FC0391C00070014066C13
04A36C5BA26C6C5AA36C6C5AA26C6C5AA3EB7080A213790139C7FCA2131EA3130CA21A1A
7F991D>I<3AFF81FF07F03A3C007801C0001CEC0080A36C90389C0100A33907010E02A3
3903830F04EB8207A2150C3901C40388A33900E801D0A390387000E0A301305B01201340
241A7F9927>I<39FFC0FF80390F003C0014106C5BEA03806D5A00015BEA00E101F1C7FC
137A133E131C131EA21317EB27801343EB41C0EB81E0EA01004813700002137848133800
0C7F001E133EB4EB7FC01A1A7F991D>I<39FF801FE0391E00070014066C13046C130CEB
800800035BEA01C06D5A00001360EB7040EB78801338011DC7FC131F130EAAEBFFC01B1A
7F991D>I<B512C038F8038012E038C00700A2EA800E5BA2485AA25B5BA2485AA2485A38
070040A2120EA24813C04813801301EA70031307B5FC121A7E9917>I<12FEA212C0B3AF
12FEA207257D9B0B>I<EA2040A2EA4080A2EA8100A3EAE1C0EAF1E0A2EA60C00B0B7A99
13>I<12FEA21206B3AF12FEA20725809B0B>I<120C121E1233EA6180EAC0C0EA80400A06
7C9913>I<EA1FC0EA38707FEA101C1200A2EA03FCEA1E1C1238127012E01480A2133CEA
705F381F8F0011107F8F13>97 D<12FC121CA913FCEA1D07381E0380381C01C0130014E0
A6EB01C01480381E0300EA1906EA10F8131A809915>I<EA07F8EA1C1C1238EA70081300
5AA612701304EA3808EA1C18EA07E00E107F8F11>I<133F1307A9EA03E7EA0C17EA180F
487E127012E0A6126012706C5AEA1C373807C7E0131A7F9915>I<EA07C0EA1C30EA3018
1270EA600C12E0EAFFFCEAE000A41260EA7004EA3808EA1C18EA07E00E107F8F11>I<EA
01F0EA0718EA0E38EA1C101300A6EAFFC0EA1C00AEEAFF800D1A80990C>I<EA0FCF3818
718038303000EA7038A4EA30306C5AEA2FC00060C7FCA21270EA3FF013FC6C7EEA600FEA
C003A4EA6006EA381CEA07E011187F8F13>I<12FC121CA9137CEA1D87381E0380A2121C
AB38FF9FF0141A809915>I<1218123CA212181200A612FC121CAE12FF081A80990A>I<EA
0180EA03C0A2EA0180C7FCA6EA0FC01201B21241EAE180EAE300127E0A2182990C>I<12
FC121CA9EB1FC0EB0F00130C5B13205B13E0121DEA1E70EA1C7813387F131E7F148038FF
9FE0131A809914>I<12FC121CB3A6EAFF80091A80990A>I<38FC7C1F391D8E6380391E07
81C0A2001C1301AB39FF9FE7F81D107F8F20>I<EAFC7CEA1D87381E0380A2121CAB38FF
9FF01410808F15>I<EA07E0EA1C38EA300CEA700EEA6006EAE007A6EA6006EA700EEA38
1CEA1C38EA07E010107F8F13>I<EAFCFCEA1D07381E0380381C01C0A2EB00E0A6EB01C0
1480381E0300EA1D06EA1CF890C7FCA6B47E1317808F15>I<EA03E1EA0C13EA180BEA30
0FEA700712E0A61270A26C5AEA1C37EA07C7EA0007A6EB3FE013177F8F14>I<EAFC78EA
1D9CEA1E1C1308EA1C00ABEAFF800E10808F0F>I<EA1F20EA60E0EA402012C0A2EAF000
127FEA3FC0EA1FE0EA00F0EA8070133012C01320EAF040EA8F800C107F8F0F>I<1208A4
1218A21238EAFFC0EA3800A81320A41218EA1C40EA07800B177F960F>I<38FC1F80EA1C
03AB1307120CEA0E0B3803F3F01410808F15>I<38FF0F80383C0700EA1C061304A26C5A
A26C5AA3EA03A0A2EA01C0A36C5A11107F8F14>I<39FE7F1F8039381C0700003C130638
1C0C04130E380E16081317A238072310149013A33803C1A014E0380180C0A319107F8F1C
>I<38FE3F80383C1E00EA1C086C5AEA0F306C5A6C5A12017F1203EA0270487E1208EA18
1CEA381E38FC3FC012107F8F14>I<38FF0F80383C0700EA1C061304A26C5AA26C5AA3EA
03A0A2EA01C0A36C5AA248C7FCA212E112E212E4127811177F8F14>I<EAFFF8EAE07012
C0EA80E0EA81C0A2EA0380EA0700A2EA0E04121CA2EA380812701338EAFFF80E107F8F11
>I<B512C01201808913>I<B712F82501808926>I<EAE1C0A40A047C9913>127
D E /FC 81 123 df<90387F8FE03901E0FC70390781F8F8380F01F0A2010013701500A3
B6FCA2380F00F0AD383FC3FEA21D1A80991A>11 D<EB7F803801E0C0380780E0380F01F0
A3EB00E01400A2B512F0A2EA0F00AD383FC3FCA2161A809919>I<EB7FF0EA01E0EA0781
EA0F01A21300A4B5FCA2EA0F00AD383FC3FCA2161A809919>I<12E012F012F8127C123E
120E07067B9916>18 D<120E121E123E127C12F812E00706779916>I<3903F80FE0390E
0E1870391C037038003CEBF03C397801E01C151E12F8A2ECFFFEECE000A21278A2393C03
F006001CEB300C390F0E1C183903F807F01F117F9022>27 D<127812FCA51278A71230A3
1200A4127812FCA41278061A7D990D>33 D<EA781EEAFC3F00FE1380A3EA7A1EEA020038
040100A3EA0802485AEA6018110D7F9917>I<13F0EA038CEA07041306120FA21304130C
5B90381007F8EA07A09038C00180A20003EB03003807E006EA0DF000185B3838F8183878
7C3038F83E606D5A6D5A39FC07C018397E1FF030393FF8FFF0390FE01FC01D1A7E9922>
38 D<127812FC12FEA3127A1202A21204A2120812101260070D7D990C>I<13401380EA03
00120212065A121C12181238A25AA412F0A91270A47EA21218121C120C7E12021203EA00
8013400A257C9B11>I<7E12401230121012187E120E12061207A2EA0380A413C0A91380
A4EA0700A21206120E120C5A1210123012405A0A257E9B11>I<1307ADB612F8A3D80007
C7FCAD1D1D7E9722>43 D<127012F812FCA3127C1204A21208A2121012201240060D7D85
0C>I<EAFFF0A30C0380890F>I<127812FCA4127806067D850C>I<EB01801303A2EB0700
A2130EA35BA25BA25BA35BA2485AA3485AA248C7FCA3120EA25AA25AA35AA25AA25A1125
7E9B16>I<EA07F0EA1E3C487EEA380EEA780FA300F81380AB00781300A2EA380EEA3C1E
6C5AEA07F011187E9716>I<EA0180120712FFA21207B2EAFFFCA20E187C9716>I<EA0FF0
EA3FFCEA787EEAFC1F1480130FA21278EA001F1400131E5B5B13705BEA01803803018012
06120CEA1003383FFF005AB5FCA211187E9716>I<EA07F0EA1FFCEA383E127C7FA3EA38
3FEA003E133C5BEA07F0EA003C133E7F1480127812FCA2140012F8EA703EEA3FFCEA0FF0
11187E9716>I<1306130E131E133E137E13DEEA019E131E12031206120C121812301260
12C0B512E0A238001E00A53801FFE0A213187F9716>I<EA3006EA3FFC5B5B5B13800030
C7FCA3EA37F0EA381CEA201EC67EA21480127012F8A31400EA601FEA383EEA1FF8EA07E0
11187E9716>I<EA01F8EA07FEEA0F06EA1E0F485AA2EA780E90C7FC12F8EAF9F0EAFA1C
EAFC0E130F00F81380A41278A21400123CEA1E1EEA0FFCEA03F011187E9716>I<126038
7FFFC0A214801400EAE00612C05B5BC65A5B13E0A212015B1203A31207A66C5A12197E98
16>I<EA07F0EA1FFCEA381EEA30071270A21278EA7E06EA3F8C13F86C5AEA0FFC487EEA
38FFEA703F38E01F8013071303A21400EA7007EA3C0EEA1FFCEA07F011187E9716>I<EA
07E0EA1FF8EA3C1CEA781E7F12F8A21480A4EA781F1238EA1C2FEA07CFEA000F14001238
EA7C1F131EEA783CEA3078EA1FF0EA0FC011187E9716>I<127812FCA412781200A51278
12FCA4127806117D900C>I<007FB512F0B612F8A2C9FCA7B612F8A26C14F01D0D7E8F22>
61 D<1303497EA2497EA3EB1BE0A2EB3BF01331A2EB60F8A2EBE0FCEBC07CA248487EEB
FFFE487FEB001F4814800006130FA248EB07C039FF803FFCA21E1A7F9921>65
D<B512F014FC380F807E141F1580A51500143E5CEBFFF8EB803E80EC0F8015C0A5158014
1FEC3F00B512FE14F01A1A7E991F>I<90381FE0209038FFFCE03803F80F3807C003381F
800190C7FC123E007E1460127C00FC1400A8007C1460127E123E6C14C07F3907C0038039
03F80F003800FFFCEB1FF01B1A7E9920>I<B512F014FC380F803FEC0F80EC07C0EC03E0
A2EC01F0A215F8A815F0A2140315E0EC07C0EC0F80EC3F00B512FC14F01D1A7E9922>I<
B512FEA2380F803E140E1406140780EB8183A21480138313FFA213831381A2EC8180EB80
01EC0300A35C5C143EB512FEA2191A7E991D>I<B512FCA2380F803C141C140C140E1406
A2EB81861480A2138313FFA213831381A3EB8000A6EAFFFCA2171A7E991C>I<90381FE0
209038FFFCE03803F80F3807C003381F800190C7FC123E007E1460127C00FC1400A6EC7F
FCA2007CEB03E0127E123E7E1380EA07C03803F8073800FFFC90381FF0601E1A7E9923>
I<39FFF87FFCA2390F8007C0A990B5FCA2EB8007AB39FFF87FFCA21E1A7E9923>I<EAFF
F8A2EA0F80B3A4EAFFF8A20D1A7E9911>I<39FFF80FF8A2390F800380EC0700140C5C5C
14E0EB81C0EB83801387138FEB9FC0EBB3E0EBE3F013C1EB80F8147C80A280EC0F80EC07
C0A239FFF81FFCA21E1A7E9923>75 D<EAFFFCA2EA0F80AE140CA3141CA21438147814F8
B5FCA2161A7E991B>I<B46CEB0FF86D131F000F1580D80DE01337A3D80CF01367A20178
13C7A290383C0187A290381E0307A3EB0F06A2EB078CA2EB03D8A2EB01F0A33AFFC0E07F
F8A2251A7E992A>I<39FF800FFC13C0390FE000C07F120DEA0CF8137C7F133F7FEB0F80
EB07C0EB03E014F01301EB00F8147C143E143F141F140F14071403A238FFC00114001E1A
7E9923>I<EB3FC03801E0783807801E48487E481480003EEB07C0A248EB03E0A200FC14
F0A8007C14E0007E1307003E14C0A26CEB0F80390F801F003807C03E3801E07838003FC0
1C1A7E9921>I<B512E014F8380F807E80801580A51500143E5CEBFFF80180C7FCAAEAFF
F8A2191A7E991E>I<EB3FC03801E0783807C03E380F000F481480003EEB07C0A2007E14
E0007C130300FC14F0A8007C14E0A26CEB07C0130F391F188F80390F104F003807D07E38
01F07839003FF010EB003CEC3FF0A2EC1FE0A2EC0FC0EC07801C217E9921>I<B512C014
F8380F807E80801580A41500143E14FCEBFFE01381EB80F01478147CA3147EA3150C143F
39FFF81F18EC07F01E1A7E9921>I<3807F040381FFDC0EA3C0FEA7803EA700112F01300
A26C1300B4FCEA7FF86CB4FC6C13806C13C0000113E0EA000FEB03F01301EAC000A36C13
E0EAF00138FC03C038EFFF803883FE00141A7E9919>I<007FB51280A238781F07007013
030060130100E014C000C01300A300001400AF3807FFFCA21A1A7E991F>I<39FFF81FF8
A2390F800180B20007EB030013C0000313063801F01C38007FF8EB1FE01D1A7E9922>I<
39FFF007FCA2390F8000C0A2EBC0010007148013E00003EB0300A23801F006A26C6C5AA2
EBFC1CEB7C18A26D5AA26D5AA214E06D5AA26D5AA26DC7FC1E1A7F9921>I<3BFFF07FF8
3FE0A23B1F000FC00300D80F801406A2EC1BE0D807C05CA29039E031F01C00031518A23A
01F060F830A2ECE0FC3A00F8C07C60A29039F9803EE0017D5CA290387F001F6D5CA2011E
6DC7FCA3010C13062B1A7F992E>I<397FF83FF0A23907C006003803E00E6D5A3801F818
00005BEBFC70EB7EE06D5A6D5AA26D7E1307497EEB1BF0EB39F81370EB60FCEBC07E0001
7F48487E010013800006EB0FC039FFC03FFCA21E1A7F9921>I<39FFF003FCA2390FC000
C01401D807E013803903F0030000015BEBF8066C6C5AEB7E1C14186D5AEB1FF06D5AA26D
5AA9EB7FFCA21E1A7F9921>I<387FFFFCA2387E00F8387801F0EA700314E0386007C013
0FEB1F8000001300133E137E137C5B1201EBF00CEA03E01207380FC01C1380381F001848
1338003E1378387C01F8B5FCA2161A7E991B>I<1202EA0F80EA1FC0EA3DE0EAF078EA40
100D067C9916>94 D<EA1FF0EA383CEA7C1E7FA21238120013FFEA0FCFEA3E0F127C12F8
A31317387C27E0EA1FC313117F9015>97 D<12FCA2123CA713FE383F8780383E01C0003C
13E0EB00F0A214F8A514F0A2EB01E0003E13C0383B07803830FE00151A7E9919>I<EA03
FCEA0F0EEA1C1F123C1278130E00F8C7FCA51278A2383C0180381C0300EA0F06EA03FC11
117F9014>I<EB07E0A21301A7EA03F9EA0F07EA1C03EA3C011278A212F8A51278A2123C
EA1C03380F0DF8EA03F9151A7F9919>I<EA03F0EA0E1C487EEA3C071278148012F8A2B5
FC00F8C7FCA21278A2383C0180381C0300EA0E06EA03FC11117F9014>I<13FEEA03C738
078F80EA0F0FA2EB070090C7FCA3EAFFF0A2000FC7FCADEA3FE0A2111A80990E>I<3807
F1C0381C1EE0EA380E38780FC01400A4EA380E6C5AEA37F00020C7FC1230A2EA3FFE381F
FF8014C0EA700338E000E0A4387001C0383C07803807FC0013197F9016>I<12FCA2123C
A7133EEBC780EA3D03003E13C0A2123CAA38FF0FF0A2141A7E9919>I<123C127EA4123C
1200A412FCA2123CAD12FFA2081B7E9A0D>I<13F0EA01F8A4EA00F01300A4EA03F8A2EA
0078B0127012F8A213F0EA71E0EA3F800D22839A0E>I<12FCA2123CA7EB1FC0A2EB0E00
5B5B13605BEA3FE07FEA3E78EA3C387F131E7F7F38FF0FE0A2131A7E9917>I<12FCA212
3CB3A412FFA2081A7E990D>I<39FC3E03E09038C78C78393D039038003EEBE03CA2003C
13C0AA39FF0FF0FFA220117E9025>I<EAFC3EEBC780EA3D03003E13C0A2123CAA38FF0F
F0A214117E9019>I<EA03F8EA0E0E383C0780EA3803007813C0A200F813E0A6007813C0
EA7C07003C1380380E0E00EA03F813117F9016>I<EAFCFE38FF8780383E03C0383C01E0
14F0130014F8A514F0130114E0383E03C0383F0780383CFE0090C7FCA5B4FCA215187E90
19>I<3803F0C0EA0F0DEA1E07EA3C03127C127812F8A51278127C123CEA1C07EA0F0BEA
03F3EA0003A5EB0FF0A214187F9017>I<EAF8F0EAF938EA3A7CA2123C13381300A9EAFF
80A20E117E9012>I<EA1FD8EA2078EA401812C0A2EAF000EAFF80EA7FE0EA3FF0EA07F8
EA003CEAC00CA212E01308EAF830EACFE00E117F9011>I<1206A4120EA2121EEA3FF012
FFEA1E00A81318A5EA0F30EA03E00D187F9711>I<38FC0FC0A2EA3C03AB1307A2381E0B
F0EA07F314117E9019>I<38FF03F0A2383E01C0001E1380EA1F03000F1300A2EA0786A2
EA03CCA213FC6C5AA26C5AA2136014117F9017>I<39FF1FE1F8A2393C078060001E14C0
14C0EB0DC1000F1480EB1DE1390798E30014F3EBB0733803F076147EEBE03E0001133CA2
3800C0181D117F9020>I<38FF07F0A2001E1300EA0F06EA078CEA03DC13F86C5A120048
7E13BCEA031E1207EA0E0F381C078038FE0FF0A214117F9017>I<38FF03F0A2383E01C0
001E1380EA1F03000F1300A2EA0786A2EA03CCA213FC6C5AA26C5AA21360A2EA70C012F8
12F95B0077C7FC123C14187F9017>I<EA7FFFEA781EEA703EEA603C137813F0120113E0
EA03C0EA0780EA0F831303121EEA3C06127CEA781EEAFFFE10117F9014>I
E /FD 14 124 df<126012F0A2126004047C830C>46 D<EA03C0EA0C30EA1818EA300CA2
EA700EEA6006A2EAE007ADEA6006A2EA700EEA300CA2EA1818EA0C30EA07E0101D7E9B15
>48 D<5A1207123F12C71207B3A5EAFFF80D1C7C9B15>I<EA07C0EA1830EA201CEA400C
130EEAF00F12F81307A21270EA000F130EA2131CA213381370136013C0EA0180EA0300EA
0601120C1218EA1002EA3FFE127F12FF101C7E9B15>I<EA07E0EA1830EA201CA2EA781E
130E131E1238EA001CA2131813301360EA07C0EA0030131CA2130E130FA2127012F8A3EA
F00EEA401C1220EA1830EA07C0101D7E9B15>I<130CA2131C133CA2135C13DC139CEA01
1C120312021204120C1208121012301220124012C0B512C038001C00A73801FFC0121C7F
9B15>I<EA300CEA3FF813F013C0EA2000A6EA23E0EA2C30EA3018131CEA200E1200130F
A3126012F0A3EA800EEA401E131CEA2038EA1870EA07C0101D7E9B15>I<13F0EA030CEA
0404EA0C0EEA181E1230130CEA7000A21260EAE3E0EAE430EAE818EAF00C130EEAE00613
07A51260A2EA7006EA300E130CEA1818EA0C30EA03E0101D7E9B15>I<1240387FFF8014
00A2EA4002485AA25B485AA25B1360134013C0A212015BA21203A41207A66CC7FC111D7E
9B15>I<EA03E0EA0C30EA1008EA200C13061260A21270A2EA7C0CEA3E18EA3FB0EA1FE0
EA07F013F8EA18FCEA307EEA601E130FEAC0071303A4EA60021304EA300CEA1C10EA07E0
101D7E9B15>I<EA03C0EA0C30EA1818EA300C1270EA600EEAE006A21307A51260EA700F
1230EA1817EA0C27EA07C7EA0006A2130EEA300C127813181270EA2030EA10C0EA0F8010
1D7E9B15>I<1218123CA21218C7FCA712FC121CB0EAFF80091D7F9C0C>105
D<38FF07E0383C0380381C0100A2EA0E02A2EA0F06EA0704A2EA0388A213C8EA01D0A2EA
00E0A3134013127F9116>118 D<B512F01401808B15>123 D E /FE
17 123 df<127012F8A3127005057C840E>46 D<EA01F0EA071CEA0C06487E00381380A2
387001C0A400F013E0AE007013C0A3EA780300381380A2381C0700EA0C06EA071CEA01F0
13227EA018>48 D<13801203120F12F31203B3A9EA07C0EAFFFE0F217CA018>I<EA03F8
EA0C1EEA100F38200780004013C0127813031307123800001380A214005B130C1338EA03
F0EA001C130FEB0780A2EB03C0A214E01220127012F8A200F013C01240EB078012203810
0F00EA0C1CEA03F013227EA018>51 D<EA01F8EA060EEA0803381001801220386000C0A3
1270A238780180003E1300EA3F02EA1FC4EA0FF812036C7EEA067EEA083F38100F803830
07C0EA6003EB00E05A1460A40060134014C06C138038180300EA0E0EEA03F013227EA018
>56 D<EA01F0EA060C487EEA1807383803801270A238F001C0A314E0A5127013031238EA
1805120CEA0619EA03E1380001C0A3EB0380A21230387807001306EA700CEA20186C5AEA
0FC013227EA018>I<B512F0380F801E00071307EC0380EC01C0EC00E015F01578A2157C
153CA3153EA9153CA2157C1578A215F015E01401EC03C0EC0700000F131EB512F01F227E
A125>68 D<B512E0380F803C0007130E6E7E81140381A55D14075D020EC7FC143CEBFFE0
EB80708080141E140E140FA481A3168015C014073A0FC003C10039FFFC01E2C8127C2123
7EA124>82 D<120E12FE121E120EAB131FEB61C0EB8060380F0030000E1338143C141C14
1EA7141C143C1438000F1370380C8060EB41C038083F0017237FA21B>98
D<EA01FCEA0707380C0380381C01C01238007813E0EA700012F0B5FC00F0C7FCA5127000
78132012386C13406C138038070300EA00FC13157F9416>101 D<390E1FC07F3AFE60E1
83803A1E807201C03A0F003C00E0A2000E1338AF3AFFE3FF8FFE27157F942A>109
D<380E1F8038FE60C0381E80E0380F0070A2120EAF38FFE7FF18157F941B>I<EA01FCEA
0707380C0180381800C0003813E0481370A200F01378A700701370007813F0003813E038
1C01C0380E038038070700EA01FC15157F9418>I<EA0E3CEAFE46EA1E8FEA0F0F130613
00120EAD120FEAFFF010157F9413>114 D<000E137038FE07F0EA1E00000E1370AD14F0
A238060170380382783800FC7F18157F941B>117 D<38FF80FE381E00781430000E1320
A26C1340A2EB80C000031380A23801C100A2EA00E2A31374A21338A3131017157F941A>
I<383FFFC038380380EA300700201300EA600EEA401C133C1338C65A5B12015B38038040
EA07005A000E13C04813805AEA7801EA7007B5FC12157F9416>122
D E /FF 11 122 df<12E07E7E127C123C7E7EEA07801203EA00C01360133013100C0D79
B121>18 D<91383FE001903901FFF803903807F01E90391F800307013EC712870178144F
49142F4848141F4848140F485A000F150790C8FC481503121E123E003C1501127CA30078
150012F8AB1278127C1601A2123C123E121E001F15027E6D1406000715046C6C14086C7E
6C6C141001781420013E14C090391F800380903907F00F00903801FFFC9038003FE02833
7CB130>67 D<90387F80203801FFE03907C07860380F001C001EEB06E048130300381301
007813001270156012F0A21520A37E1500127C127E7E13C0EA1FF86CB47E6C13F06C13FC
C613FF010F1380010013C0EC1FE01407EC03F01401140015F8A26C1478A57E15706C14F0
15E07E6CEB01C000ECEB038000C7EB070038C1F01E38807FFCEB0FF01D337CB125>83
D<EB3F80EBE0E0380380383807003C000E7F121E001C7F123C127C00781480140712F8A2
B6FC00F8C8FCA61278127C123C15807E000EEB0100000F13027E3801C00C3800F030EB1F
C0191F7E9E1D>101 D<260780FEEB1FC03BFF83078060F0903A8C03C180783B0F9001E2
003CD807A013E4DA00F47F01C013F8A2495BB3A2486C486C133F3CFFFC1FFF83FFF0A234
1F7E9E38>109 D<EB1FC0EBF0783801C01C38070007481480001EEB03C0001C1301003C
14E0A248EB00F0A300F814F8A8007814F0007C1301003C14E0A26CEB03C0A26CEB078039
07800F003801C01C3800F078EB1FC01D1F7E9E21>111 D<380783E038FF8418EB887CEA
0F90EA07A01438EBC000A35BB3487EEAFFFEA2161F7E9E19>114
D<3801FC10380E0330381800F048137048133012E01410A37E6C1300127EEA3FF06CB4FC
6C13C0000313E038003FF0EB01F813006C133CA2141C7EA27E14186C1338143000CC1360
38C301C03880FE00161F7E9E1A>I<1340A513C0A31201A212031207120F381FFFE0B5FC
3803C000B01410A80001132013E000001340EB78C0EB1F00142C7FAB19>I<D8078013F0
00FF131FA2000F130100071300B31401A300031302EBC0040001497E3A007030FF80EB1F
C0211F7E9E25>I<D8FFF8EBFF80A2D80FC0EB7C006C48133815306C6C1320A26C6C5BA2
7F00005CA2D97801C7FCA2137CEB3C02A26D5AA2131F6D5AA2EB0790A214D0EB03E0A26D
5AA36D5AA249C8FCA31302A25B1270EAF80C13085BEA7020EA3040EA1F80212D7F9E23>
121 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 743 1142 a FF(Cours)21 b(Syst)n(\022)-31 b(eme)865
1324 y FE(D.Revuz)765 1445 y(30)17 b(no)o(v)o(em)o(bre)d(1998)p
eop
%%Page: 2 2
2 1 bop 75 50 a FD(ii)880 166 y FC(R)o(\023)-21 b(esum)o(\023)g(e)236
231 y FB(Cours)14 b(de)f(conception)i(de)e(syst)o(\022)-18
b(emes)14 b(et)e(d'utilistio)q(n)k(d'UNIX)179 277 y(Ce)f(p)q(oly)h(est)
f(a)h(l'usage)g(des)g(etudian)o(ts)g(de)g(l'ESITCOM)f(et)g(du)h(deuxi)o
(\022)-18 b(eme)17 b(cycle)f(d'informatique)h(de)179
323 y(Marne)c(la)h(V)m(all)o(\023)-18 b(ee)14 b(comme)f(supp)q(ort)h
(du)g(cours)f(SYST)985 313 y(\022)982 323 y(EMES)h(d'EXPLOIT)m(A)m
(TION.)236 368 y(Cette)c(v)o(ersion)i(2,)d(app)q(ortte)i(de)f(nom)o
(breuse)i(correction)f(de)g(t)o(yp)q(o)f(et)g(autre,)g(je)g(remercie)h
(D.)e(Lecorfec)179 414 y(P)o(our)g(sa)h(lecture)g(atten)o(tiv)o(e,)g
(et)f(les)g(remarques)h(sur)g(le)f(fond)h(seron)o(t)g(prises)g(en)f
(compte)h(dans)g(la)f(pro)q(c)o(haine)179 460 y(v)o(ersion.)236
505 y(Ce)k(p)q(oly)h(a)f(une)h(v)o(ersion)g(HTML)f(disp)q(onibl)q(e)i
(sur)f(le)f(W)m(eb)h(a)f(l'adresse)h(suiv)n(an)o(te)8
b(:)179 551 y FA(http://ma)o(sse)o(na)o(.un)o(iv)o(-ml)o(v.f)o(r/)16
b(dr/NCS/)p FB(.)236 597 y(Ce)i(do)q(cumen)o(t)i(a)f(de)f(nom)o(breux)i
(d)o(\023)-18 b(efauts)19 b(en)g(particulier)i(son)o(t)e(manque)h
(d'homog)o(\023)-18 b(en)o(\023)g(eit)o(\023)g(e,)20
b(et)e(le)179 642 y(manque)i(d'explications)j(sur)c(certaines)i
(parties)f(\(explication)i(donn)o(\023)-18 b(ees)21 b(en)e(g)o(\023)-18
b(en)o(\023)g(eral)21 b(oralemen)o(t)f(en)179 688 y(cours\).)236
734 y(Au)15 b(men)o(u)g(l'essen)o(tiel)i(d'UNIX)6 b(:)14
b(SGF,)h(pro)q(cessus,)h(signaux,)g(m)o(\023)-18 b(emoire,)15
b(m)o(\023)-18 b(emoire)16 b(virtuelle,)h(ma-)179 779
y(nipulation)22 b(terminaux,)e(tub)q(es,)f(IPC.)f(Quelques)i(d)o(\023)
-18 b(etours)8 b(:)18 b(micro-no)o(y)o(aux,)i(s)o(\023)-18
b(ecurit)o(\023)g(e.)20 b(Un)e(c)o(hapitre)179 825 y(imp)q(ortan)o(t)c
(mais)g(un)g(p)q(eut)g(court)7 b(:)13 b(les)h(probl)o(\022)-18
b(emes)14 b(de)g(programation)h(distribu)o(\023)-18 b(e.)15
b(P)o(eut)e(^)-18 b(etre)13 b(une)h(p)q(etit)179 871
y(incursion)h(sur)f(les)g(pages)f(de)h(G.)e(Roussel)j(v)o(ous)f(en)f
(apprendrons)i(plus,)f(sur)g(les)g(threads,)f(les)h(serv)o(eurs,)179
916 y(JA)l(V)l(A)d(etc)i(.)179 962 y FA(http://ma)o(sse)o(na)o(.un)o
(iv)o(-ml)o(v.f)o(r/)j(roussel)236 1008 y FB(Pr)o(\023)-18
b(erequis)9 b(:)18 b(p)q(our)i(la)g(partie)g(conceptuelle)i(pas)e(de)f
(pr)o(\023)-18 b(erequis.)21 b(p)q(our)f(la)g(partie)g(tec)o(hnique)h
(une)179 1053 y(comp)o(\023)-18 b(etance)14 b(raisonable)h(en)f(C/C++)e
(est)h(n)o(\023)-18 b(ecessaire.)239 1090 y(\023)236
1099 y(Ev)o(olutions)15 b(futures)7 b(:)k(dr@univ-mlv.fr)j(\(j'attend)e
(v)o(os)g(remarques\),)g(uniformisation)j(de)d(la)h(pr)o(\023)-18
b(esen-)179 1145 y(tation,)13 b(n)o(\023)-18 b(eto)o(y)o(age)13
b(des)g(p)q(oin)o(ts)h(obscurs,)f(corrections)h(orthographiques,)h
(complemen)o(t)e(sur)g(fcn)o(tl,)f(io)q(ctl,)179 1190
y(plus)i(d'exemples,)g(des)g(sujets)f(de)g(pro)r(jets)g(.)p
eop
%%Page: 3 3
3 2 bop 75 50 a Fz(T)m(ABLE)14 b(DES)g(MA)m(TI)443 39
y(\022)438 50 y(ERES)1255 b FD(iii)179 499 y Fy(T)-10
b(able)39 b(des)f(mati)m(\022)-56 b(eres)179 750 y FC(1)35
b(In)o(tro)q(duction)13 b(et)i(Historique)962 b(1)236
796 y FB(1.1)40 b(Historique)21 b(.)e(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g
(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)
h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)52 b(1)325
842 y(1.1.1)44 b(les)13 b(d)o(\023)-18 b(ebuts)14 b(\(1945-55\))32
b(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)
h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)52 b(1)325
888 y(1.1.2)44 b(T)m(ransistors)14 b(et)f(traitemen)o(t)g(par)h(lots)f
(1955-65)27 b(.)19 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)52 b(1)325 935 y(1.1.3)44 b(VLSI)12 b(et)h
(Multiprogrammati)q(on)j(1965-80)30 b(.)19 b(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)52 b(2)325
981 y(1.1.4)44 b(UNIX)28 b(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)52 b(2)325 1027 y(1.1.5)44
b(Des)13 b(p)q(oin)o(ts)h(forts)43 b(.)19 b(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)
h(.)g(.)g(.)g(.)g(.)52 b(2)325 1073 y(1.1.6)44 b(Des)13
b(p)q(oin)o(ts)h(faibles)h(.)k(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)52 b(3)236 1119 y(1.2)40 b(Structure)14 b(g)o(\023)-18
b(en)o(\023)g(erale)14 b(des)f(syst)o(\022)-18 b(emes)14
b(d'exploitation)h(.)k(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)52 b(3)325 1166 y(1.2.1)44 b(Les)13
b(couc)o(hes)h(fonctionnelles)24 b(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
52 b(4)325 1212 y(1.2.2)44 b(L'arc)o(hitecture)14 b(du)f(syst)o(\022)
-18 b(eme)24 b(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)52
b(5)325 1258 y(1.2.3)44 b(L'arc)o(hitecture)14 b(du)f(no)o(y)o(au)27
b(.)19 b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)52 b(5)179 1343
y FC(2)35 b(Syst)o(\022)-21 b(eme)16 b(de)f(Gestion)f(de)h(Fic)o(hiers)
865 b(7)236 1389 y FB(2.1)40 b(Le)13 b(concept)g(de)h(\014c)o(hier)25
b(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)52
b(7)236 1435 y(2.2)g(Fic)o(hiers)15 b(ordinaires)h(/)d(Fic)o(hiers)h
(sp)o(\023)-18 b(eciaux.)40 b(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)
h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)52 b(8)325
1482 y(2.2.1)44 b(Les)13 b(catalogues)h(\(historique\))40
b(.)19 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)52 b(8)236 1528 y(2.3)40
b(Les)13 b(ino)q(des)19 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)52 b(9)236 1574
y(2.4)40 b(Organisation)15 b(des)f(disques)g(System)g(V)19
b(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(10)236 1620 y(2.5)40
b(Adressage)13 b(des)h(blo)q(cs)g(dans)g(les)g(ino)q(des)i(.)j(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)32 b(10)236 1666 y(2.6)40 b(Allo)q(cation)15
b(des)f(ino)q(des)g(d'un)g(disque)k(.)h(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(11)236 1713 y(2.7)40 b(Allo)q(cation)15 b(des)f(blo)q(cs-disque)39
b(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)
h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(11)236
1759 y(2.8)40 b(Les)13 b(syst)o(\022)-18 b(emes)13 b(de)h(\014c)o
(hiers)g(\013s/ufs)g(de)f(BSD)i(.)k(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(16)179 1844 y FC(3)j(Le)15 b(Bu\013er)g(Cac)o(he)1140
b(17)236 1890 y FB(3.1)40 b(In)o(tro)q(duction)15 b(au)e(bu\013er)h
(cac)o(he)h(.)j(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(17)325 1936 y(3.1.1)44 b(Av)n(an)o(tages)13 b(et)g(d)o(\023)-18
b(esa)o(v)n(an)o(tages)15 b(du)e(bu\013er)h(cac)o(he)g(.)19
b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(17)236 1982 y(3.2)40 b(Le)13 b(bu\013er)h(cac)o(he,)f(structures)g
(de)h(donn)o(\023)-18 b(ees.)19 b(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(17)325 2029 y(3.2.1)44 b(La)13 b(liste)h(doublemen)o(t)h(c)o(ha)l(^)
-15 b(\020n)o(\023)d(ee)14 b(des)g(blo)q(cs)g(libres)24
b(.)19 b(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(18)236 2075 y(3.3)40 b(L'algorithme)14 b(de)g(la)f(primitiv)o(e)j
FA(getblk)35 b FB(.)19 b(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(18)179
2160 y FC(4)j(La)15 b(biblioth)o(\022)-21 b(eque)12 b(standard)969
b(23)236 2206 y FB(4.1)40 b(Les)13 b(descripteurs)i(de)e(\014c)o
(hiers.)31 b(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g
(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(23)325 2252 y(4.1.1)44 b(Ouv)o(erture)13 b(d'un)h(\014c)o(hier)26
b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(24)325
2298 y(4.1.2)44 b(Redirection)15 b(d'un)e(descripteur)c(:)j
FA(freopen)48 b FB(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)32 b(24)325 2344 y(4.1.3)44 b(Cr)o(\023)-18
b(eation)14 b(de)f(\014c)o(hiers)h(temp)q(oraires)f(.)19
b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)32 b(25)325 2391 y(4.1.4)44 b(Ecriture)14
b(non)f(format)o(\023)-18 b(ee)27 b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)32 b(25)325 2437 y(4.1.5)44 b(Acc)o(\022)-18
b(es)13 b(s)o(\023)-18 b(equen)o(tiel)38 b(.)19 b(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(25)325 2483 y(4.1.6)44
b(Manipulation)16 b(du)e(p)q(oin)o(teur)h(de)e(\014c)o(hier)38
b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)32 b(26)325 2529 y(4.1.7)44 b(Un)12 b(exemple)j(d'acc)o
(\022)-18 b(es)13 b(direct)h(sur)f(un)h(\014c)o(hier)g(d'en)o(tiers.)39
b(.)19 b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(26)325 2575 y(4.1.8)44 b(Les)13 b(autres)g(fonctions)h(de)g(d)o(\023)
-18 b(eplacemen)o(t)15 b(du)e(p)q(oin)o(teur)i(de)e(\014c)o(hier.)34
b(.)18 b(.)h(.)g(.)g(.)g(.)g(.)32 b(26)236 2622 y(4.2)40
b(Les)13 b(tamp)q(ons)h(de)f(\014c)o(hiers)h(de)g(stdlib.)19
b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(26)325 2668 y(4.2.1)44
b(Les)13 b(mo)q(des)g(de)g(bu\013erisation)k(par)c(d)o(\023)-18
b(efaut.)22 b(.)d(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)32 b(27)325 2714 y(4.2.2)44 b(Manipulation)16
b(des)e(tamp)q(ons)g(de)f(la)h(biblioth)o(\022)-18 b(eque)16
b(standard.)35 b(.)19 b(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(27)236 2760 y(4.3)40 b(Manipulation)17 b(des)c(liens)i(d'un)e(\014c)o
(hier)31 b(.)19 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(29)236
2806 y(4.4)40 b(Lancemen)o(t)13 b(d'une)h(commande)g(shell)h(.)k(.)g(.)
g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)32 b(29)p eop
%%Page: 4 4
4 3 bop 75 50 a FD(iv)1256 b Fz(T)m(ABLE)14 b(DES)g(MA)m(TI)1733
39 y(\022)1728 50 y(ERES)236 166 y FB(4.5)40 b(T)m(erminaison)15
b(d'un)e(pro)q(cessus)29 b(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)32 b(29)236 215 y(4.6)40 b(Gestion)14 b(des)f(erreurs)19
b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(30)236 263 y(4.7)40 b(Cr)o(\023)-18 b(eation)14 b(et)e(destruction)j
(de)f(r)o(\023)-18 b(ep)q(ertoires)38 b(.)19 b(.)f(.)h(.)g(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(30)179 352 y FC(5)j(App)q(els)15 b(syst)o(\022)-21
b(eme)16 b(du)e(Syst)o(\022)-21 b(eme)16 b(de)e(Gestion)h(de)f(Fic)o
(hier)481 b(31)236 400 y FB(5.1)40 b FA(open)22 b FB(.)d(.)g(.)g(.)g(.)
g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)32 b(31)325 449 y(5.1.1)44 b(D)o(\023)-18 b(eroulemen)o(t)14
b(in)o(terne)h(d'un)e(app)q(el)h(de)g FA(open)k FB(.)h(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(33)236 497 y(5.2)40 b FA(creat)32 b FB(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(34)236 546 y(5.3)40 b FA(read)22 b FB(.)d(.)g(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(34)236 594 y(5.4)40 b FA(write)32 b FB(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(34)236 643 y(5.5)40 b FA(lseek)32 b FB(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(35)236 691 y(5.6)40 b FA(dup)11 b FB(et)i FA(dup2)26
b FB(.)19 b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)32 b(35)236 740 y(5.7)40 b FA(close)32
b FB(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(36)179 828 y FC(6)j(Les)15
b(pro)q(cessus)1193 b(37)236 877 y FB(6.1)40 b(In)o(tro)q(duction)15
b(aux)e(pro)q(cessus)39 b(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)32 b(37)325 925 y(6.1.1)44 b(Cr)o(\023)-18 b(eation)14
b(d'un)f(pro)q(cessus)h(-)f FA(fork\(\))45 b FB(.)19
b(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)32 b(38)236 974 y(6.2)40 b(F)m(ormat)13 b(d'un)g(\014c)o
(hier)h(ex)o(\023)-18 b(ecutable)40 b(.)19 b(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)32 b(38)236 1022 y(6.3)40 b(Chargemen)o(t/c)o(hangemen)o(t)15
b(d'un)e(ex)o(\023)-18 b(ecutable)34 b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(38)236 1070 y(6.4)40 b(zone)13 b(u)g(et)g(table)h(des)f(pro)q(cessus)
36 b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(39)236
1119 y(6.5)40 b FA(fork)11 b FB(et)i FA(exec)e FB(\(revisit)o(\023)-18
b(es\))40 b(.)19 b(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(39)236 1167 y(6.6)40 b(Le)13 b(con)o(texte)g(d'un)h(pro)q(cessus)40
b(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)
h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(41)236
1216 y(6.7)40 b(Comm)o(utation)14 b(de)f(mot)g(d')o(\023)-18
b(etat)13 b(et)g(in)o(terruptions.)34 b(.)19 b(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(41)236
1264 y(6.8)40 b(Les)13 b(in)o(terruptions)28 b(.)19 b(.)g(.)g(.)g(.)g
(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)
h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(42)236
1313 y(6.9)40 b(Le)13 b(probl)o(\022)-18 b(eme)14 b(des)f(cascades)h
(d'in)o(terruptions)g(.)k(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(42)325 1361
y(6.9.1)56 b(Etats)13 b(et)g(transitions)j(d'un)d(pro)q(cessus)f(.)19
b(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)32 b(43)325 1410 y(6.9.2)44 b(Listes)13 b(des)g(\023)-18
b(etats)13 b(d'un)g(pro)q(cessus)34 b(.)19 b(.)f(.)h(.)g(.)g(.)g(.)g(.)
g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(43)236 1458 y(6.10)21 b(Lecture)13 b(du)g(diagramme)i(d')o(\023)-18
b(etat.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)
f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(44)236 1507 y(6.11)21 b(Un)13 b(exemple)h(d'ex)o(\023)-18
b(ecution)31 b(.)19 b(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
32 b(45)236 1555 y(6.12)21 b(La)13 b(table)h(des)f(pro)q(cessus)27
b(.)19 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(45)236 1603 y(6.13)21 b(La)13 b(zone)g(u)28 b(.)19
b(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)32 b(46)236 1652 y(6.14)21 b(Acc)o(\022)-18
b(es)13 b(aux)g(structures)h FA(proc)d FB(et)i FA(user)e
FB(du)j(pro)q(cessus)g(couran)o(t)28 b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)32 b(46)325 1700 y(6.14.1)25 b(Les)13
b(informations)i(temp)q(orelles.)25 b(.)19 b(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(46)325 1749 y(6.14.2)25 b(Changemen)o(t)14 b(du)f(r)o(\023)-18
b(ep)q(ertoire)14 b(racine)g(p)q(our)g(un)g(pro)q(cessus.)24
b(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(47)325
1797 y(6.14.3)25 b(R)o(\023)-18 b(ecup)o(\023)g(eration)15
b(du)e(PID)g(d'un)h(pro)q(cessus)20 b(.)f(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(47)325
1846 y(6.14.4)25 b(P)o(ositionemen)o(t)15 b(de)e(l'euid,)h(ruid)g(et)f
(suid)27 b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)32 b(47)236 1894 y(6.15)21 b(T)m(ailles)14
b(limites)h(d'un)f(pro)q(cessus)32 b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)32 b(47)325 1943 y(6.15.1)25 b(Manipulation)16
b(de)e(la)f(taille)i(d'un)f(pro)q(cessus.)g(.)19 b(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(48)325
1991 y(6.15.2)25 b(Manipulation)16 b(de)e(la)f(v)n(aleur)i(nice)36
b(.)19 b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)
f(.)h(.)g(.)g(.)g(.)g(.)32 b(48)325 2039 y(6.15.3)25
b(Manipulation)16 b(de)e(la)f(v)n(aleur)i(umask)24 b(.)18
b(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)32 b(48)236 2088 y(6.16)21 b(L'app)q(el)14
b(syst)o(\022)-18 b(eme)13 b FA(fork)c FB(.)19 b(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(48)236 2136 y(6.17)21
b(L'app)q(el)14 b(syst)o(\022)-18 b(eme)13 b FA(exec)c
FB(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(48)179 2225 y FC(7)j(L'ordonnancemen)o(t)14 b(des)h(pro)q(cessus)821
b(51)236 2273 y FB(7.1)40 b(Le)13 b(partage)g(de)h(l'unit)o(\023)-18
b(e)14 b(cen)o(trale)27 b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(51)325 2322 y(7.1.1)44 b(F)m(amine)37 b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)
g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(52)325
2370 y(7.1.2)44 b(Strat)o(\023)-18 b(egie)14 b(globale)31
b(.)19 b(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)
g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(52)325 2419 y(7.1.3)44 b(Crit)o(\022)-18 b(eres)13
b(de)g(p)q(erformance)25 b(.)19 b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(53)236 2467 y(7.2)40 b(Ordonnancemen)o(t)15 b(sans)e(pr)o(\023)-18
b(eemption.)28 b(.)19 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(53)236
2516 y(7.3)40 b(Les)13 b(algorithmes)i(pr)o(\023)-18
b(eemptifs)40 b(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(53)325 2564 y(7.3.1)44 b(Round)14 b(Robin)g(\(tourniquet\))i(.)j(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)
f(.)h(.)g(.)g(.)g(.)g(.)32 b(54)325 2613 y(7.3.2)44 b(Les)13
b(algorithmes)i(\022)-19 b(a)13 b(queues)h(m)o(ultiples)23
b(.)c(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)32 b(54)236 2661 y(7.4)40 b(Multi-lev)o(el-feedba)q(c)o
(k)16 b(round)e(robin)g(Queues)k(.)g(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)
h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(54)325
2710 y(7.4.1)44 b(Les)13 b(niv)o(eaux)h(de)g(priorit)o(\023)-18
b(e)13 b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(54)325 2758 y(7.4.2)44 b(Ev)o(olution)15 b(de)e(la)h(priorit)o(\023)
-18 b(e)36 b(.)19 b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(55)325 2806 y(7.4.3)44 b(Les)13 b(classes)h(de)f(priorit)o(\023)-18
b(e)33 b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(56)p eop
%%Page: 5 5
5 4 bop 75 50 a Fz(T)m(ABLE)14 b(DES)g(MA)m(TI)443 39
y(\022)438 50 y(ERES)1268 b FD(v)179 166 y FC(8)35 b(La)15
b(m)o(\023)-21 b(emoire)1224 b(57)325 212 y FB(8.0.4)44
b(les)13 b(m)o(\023)-18 b(emoires)36 b(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(57)325 258 y(8.0.5)44
b(La)13 b(m)o(\023)-18 b(emoire)13 b(cen)o(trale)27 b(.)18
b(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(57)236
304 y(8.1)40 b(Allo)q(cation)15 b(con)o(tigu)o(\177)-18
b(e)18 b(.)h(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)32 b(57)325 350 y(8.1.1)44 b(P)o(as)13 b(de)g(gestion)h(de)g(la)f(m)
o(\023)-18 b(emoire)28 b(.)19 b(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(57)325 396 y(8.1.2)44 b(Le)12 b(moniteur)j(r)o(\023)-18
b(esidan)o(t)18 b(.)g(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(59)325 442 y(8.1.3)44 b(Le)12 b(registre)i(barri)o(\022)-18
b(ere)19 b(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g
(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(59)325 488 y(8.1.4)44 b(Le)12 b(registre)i(base)i(.)j(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(60)325 534 y(8.1.5)44
b(Le)12 b(sw)o(ap)23 b(.)c(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)
f(.)h(.)g(.)g(.)g(.)g(.)32 b(60)325 579 y(8.1.6)44 b(Le)12
b(co)q(^)-20 b(ut)14 b(du)f(sw)o(ap)32 b(.)19 b(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)
f(.)h(.)g(.)g(.)g(.)g(.)32 b(61)325 625 y(8.1.7)44 b(Utilisation)16
b(de)d(la)g(taille)i(des)f(pro)q(cessus)35 b(.)19 b(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(61)325 671 y(8.1.8)44 b(Sw)o(ap)13 b(et)g(ex)o(\023)-18
b(ecutions)15 b(concurren)o(tes)35 b(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(61)325 717 y(8.1.9)44 b(Con)o(train)o(tes)25 b(.)19
b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(61)325 763 y(8.1.10)25 b(Deux)13 b(solutions)j(existen)o(t)37
b(.)19 b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(62)325 809
y(8.1.11)25 b(Les)13 b(probl)o(\022)-18 b(emes)14 b(de)f(protection)k
(.)i(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(62)325 855 y(8.1.12)25
b(Les)13 b(registres)h(doubles)23 b(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)32 b(62)236 901 y(8.2)40 b(Ordonnancemen)o(t)15
b(en)e(m)o(\023)-18 b(emoire)14 b(des)f(pro)q(cessus)30
b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)32 b(62)236 947 y(8.3)40 b(Allo)q(cation)15
b(non-con)o(tigu)o(\177)-18 b(e)34 b(.)19 b(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)
h(.)g(.)g(.)g(.)g(.)32 b(63)325 993 y(8.3.1)44 b(Les)13
b(pages)g(et)g(la)h(pagination)22 b(.)d(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(63)325 1038 y(8.3.2)44 b(Ordonnancemen)o(t)14 b(des)g(pro)q(cessus)g
(dans)g(une)f(m)o(\023)-18 b(emoire)14 b(pagin)o(\023)-18
b(ee)47 b(.)18 b(.)h(.)g(.)g(.)g(.)g(.)32 b(64)325 1084
y(8.3.3)44 b(Commen)o(t)13 b(prot)o(\023)-18 b(eger)13
b(la)h(m)o(\023)-18 b(emoire)14 b(pagin)o(\023)-18 b(ee)16
b(.)j(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)32 b(65)325 1130 y(8.3.4)44 b(La)13 b(m)o(\023)-18
b(emoire)13 b(segmen)o(t)o(\023)-18 b(ee)17 b(.)i(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)32 b(65)179 1215 y FC(9)j(La)15 b(m)o(\023)-21
b(emoire)15 b(virtuelle)1047 b(67)325 1261 y FB(9.0.5)44
b(Les)13 b(o)o(v)o(erla)o(ys)k(.)i(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)
f(.)h(.)g(.)g(.)g(.)g(.)32 b(67)325 1306 y(9.0.6)44 b(Le)12
b(c)o(hargemen)o(t)i(dynamique)k(.)h(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(68)236 1352 y(9.1)40 b(Demand)14 b(P)o(aging)h(.)k(.)g(.)g(.)g(.)g(.)
g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(68)325 1398 y(9.1.1)44 b(E\016cacit)o(\023)-18 b(e)35
b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)32 b(69)236 1444 y(9.2)40 b(Les)13 b(algorithmes)i(de)e(remplacemen)
o(t)i(de)e(page)28 b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(71)325 1490 y(9.2.1)44
b(Le)12 b(remplacemen)o(t)j(optimal)31 b(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)32 b(71)325 1536 y(9.2.2)44 b(Le)12 b(remplacemen)o(t)j(p)q(eps)f
(\(FIF)o(O\))35 b(.)19 b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(71)325 1582
y(9.2.3)44 b(Moins)14 b(r)o(\023)-18 b(ecemmen)o(t)13
b(utilis)o(\023)-18 b(ee)16 b(LR)o(U.)g(.)j(.)f(.)h(.)g(.)g(.)g(.)g(.)g
(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(71)325 1628 y(9.2.4)44 b(L'algorithme)14 b(de)g(la)f(deuxi)o(\022)-18
b(eme)15 b(c)o(hance)35 b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(72)325 1674
y(9.2.5)44 b(Plus)14 b(fr)o(\023)-18 b(equemmen)o(t)13
b(utilis)o(\023)-18 b(e)15 b(MFU)28 b(.)19 b(.)f(.)h(.)g(.)g(.)g(.)g(.)
g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(72)325 1720 y(9.2.6)44 b(Le)12 b(bit)i(de)f(salet)o(\023)-18
b(e)14 b(\(Dirt)o(y)g(Bit\))32 b(.)19 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(72)236 1765 y(9.3)40 b(Allo)q(cation)15 b(de)e(pages)h(aux)g(pro)q
(cessus)39 b(.)19 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(72)236
1811 y(9.4)40 b(L'app)q(el)14 b(fork)f(et)g(la)g(m)o(\023)-18
b(emoire)14 b(virtuelle)h(.)k(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(73)236 1857 y(9.5)40 b(Pro)r(jection)14 b(de)f(\014c)o(hiers)i(en)e
(m)o(\023)-18 b(emoire)19 b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g
(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(74)179 1942 y FC(10)13 b(T)l(ub)q(es)i(et)g(T)l(ub)q(es)g(Nomm)o
(\023)-21 b(es)974 b(77)236 1988 y FB(10.1)21 b(Les)13
b(tub)q(es)g(ordinaires)j(\()p Fx(pip)n(e)p FB(\))d(.)19
b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(77)236
2033 y(10.2)21 b(Cr)o(\023)-18 b(eation)14 b(de)f(tub)q(es)h
(ordinaires)i(.)i(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g
(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(77)236 2079 y(10.3)21 b(Lecture)13 b(dans)h(un)f(tub)q(e)f(.)19
b(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g
(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(79)236 2125 y(10.4)21 b(Ecriture)14 b(dans)g(un)f(tub)q(e)31
b(.)19 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(80)236 2171 y(10.5)21 b(In)o(terblo)q(cage)14 b(a)o(v)o(ec)g(des)f
(tub)q(es)32 b(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(80)236 2217 y(10.6)21 b(Les)13 b(tub)q(es)g(nomm)o(\023)-18
b(es)33 b(.)19 b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)32 b(80)325 2263 y(10.6.1)25 b(Ouv)o(erture)13
b(et)g(sync)o(hronisation)k(des)c(ouv)o(ertures)h(de)f(tub)q(es)h(nomm)
o(\023)-18 b(es)37 b(.)19 b(.)g(.)g(.)g(.)32 b(80)325
2309 y(10.6.2)25 b(Suppression)15 b(d'un)f(tub)q(e)f(nomm)o(\023)-18
b(e)39 b(.)19 b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(81)179 2393 y FC(11)13
b(La)i(gestion)g(des)g(terminaux)964 b(83)236 2439 y
FB(11.1)21 b(Acquisition)16 b(d'un)d(descripteur)i(asso)q(ci)o(\023)-18
b(e)14 b(\022)-19 b(a)13 b(un)h(terminal)36 b(.)19 b(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(83)236 2485
y(11.2)21 b(T)m(erminal)14 b(de)f(con)o(tr^)-19 b(ole)14
b(-)f(Sessions)i(-)d(Group)q(es)j(de)e(pro)q(cessus)19
b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(84)325 2531 y(11.2.1)25 b(Acquisition)15 b(d'un)f(terminal)h(de)e
(con)o(tr^)-19 b(ole)14 b(par)f(une)h(session)41 b(.)19
b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(84)325 2577
y(11.2.2)25 b(Group)q(es)14 b(de)f(pro)q(cessus)37 b(.)19
b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(85)325 2623
y(11.2.3)25 b(Premier)13 b(Plan)h(et)f(Arri)o(\022)-18
b(ere)14 b(Plan)29 b(.)19 b(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(85)325
2669 y(11.2.4)25 b(Quelques)14 b(fonctions)24 b(.)19
b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(85)236
2715 y(11.3)21 b(Les)13 b(driv)o(ers)h(logiciels)i(de)d(terminaux)21
b(.)e(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(86)325 2761 y(11.3.1)25
b(La)13 b(structure)g FA(termios)8 b FB(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)32 b(86)325 2806 y(11.3.2)25 b(Mo)q(des)13
b(d'en)o(tr)o(\023)-18 b(ee)24 b(.)19 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)
h(.)g(.)g(.)g(.)g(.)32 b(87)p eop
%%Page: 6 6
6 5 bop 75 50 a FD(vi)1256 b Fz(T)m(ABLE)14 b(DES)g(MA)m(TI)1733
39 y(\022)1728 50 y(ERES)325 166 y FB(11.3.3)25 b(Mo)q(des)13
b(de)h(sortie)g(.)19 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)32 b(87)325 216 y(11.3.4)25 b(Mo)q(des)13 b(de)h(con)o(tr^)-19
b(ole)33 b(.)19 b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(87)325 265 y(11.3.5)25 b(Mo)q(des)13 b(lo)q(caux)20
b(.)f(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(87)325 315 y(11.3.6)25 b(Les)13 b(caract)o(\022)-18
b(eres)13 b(sp)o(\023)-18 b(eciaux)39 b(.)19 b(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)32 b(89)325 364 y(11.3.7)25 b(Manipulation)16
b(du)e(driv)o(er)g(logiciel)i(de)d(terminaux)i(et)e(de)g(la)h
(structure)f(termios)53 b(89)325 414 y(11.3.8)25 b(Manipulation)16
b(de)e(la)f(vitesse)h(de)g(transmission)f(.)19 b(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(90)236 463
y(11.4)21 b(Pseudo-terminaux)39 b(.)19 b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(90)236 513 y(11.5)21
b(La)13 b(primitiv)o(e)i FA(ioctl)51 b FB(.)19 b(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(90)179 603 y
FC(12)13 b(Les)i(signaux)1229 b(91)325 653 y FB(12.0.1)25
b(Pro)o(v)o(enance)14 b(des)f(signaux)32 b(.)19 b(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)32 b(91)325 703 y(12.0.2)25 b(Gestion)14
b(in)o(terne)g(des)f(signaux)26 b(.)19 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(91)325 752 y(12.0.3)25 b(L'en)o(v)o(oi)13 b(de)h(signaux)21
b(:)12 b(la)i(primitiv)o(e)h(kill)25 b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(92)236 802 y(12.1)21 b(La)13 b(gestion)h(simpli\014)o(\023)-18
b(ee)16 b(a)o(v)o(ec)d(la)h(fonction)g FA(signal)9 b
FB(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)32 b(92)325 851 y(12.1.1)25 b(Un)12 b(exemple)22
b(.)d(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(93)236 901 y(12.2)21 b(Probl)o(\022)-18 b(emes)14 b(de)f(la)h
(gestion)g(de)g(signaux)h(A)m(TT)h(.)i(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32
b(93)325 950 y(12.2.1)25 b(Le)12 b(signal)j(SIGCHLD)31
b(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)
h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(94)236
1000 y(12.3)21 b(Manipulation)c(de)c(la)g(pile)i(d'ex)o(\023)-18
b(ecution)17 b(.)i(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(96)236
1049 y(12.4)21 b(Quelques)14 b(exemples)h(d'utilisation)24
b(.)19 b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(96)325 1099
y(12.4.1)25 b(L'app)q(el)14 b(pause)j(.)i(.)g(.)g(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(97)236 1148 y(12.5)21
b(La)13 b(norme)g(POSIX)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(97)325 1198 y(12.5.1)25
b(Le)12 b(blo)q(cage)j(des)e(signaux)i(.)k(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)32 b(98)325 1247 y(12.5.2)25 b(sigaction)13 b(.)19
b(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
32 b(98)325 1297 y(12.5.3)25 b(L'atten)o(te)12 b(d'un)i(signal)21
b(.)d(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)32 b(99)179
1387 y FC(13)13 b(Les)i(v)o(errous)h(de)f(\014c)o(hiers)997
b(101)236 1437 y FB(13.1)21 b(Caract)o(\023)-18 b(eristiques)15
b(d'un)e(v)o(errou)i(.)j(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(101)236 1486 y(13.2)21 b(Le)13 b(mo)q(de)g(op)o(\023)-18
b(eratoire)15 b(des)e(v)o(errous)24 b(.)19 b(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)13 b(101)236 1536 y(13.3)21 b(Manipulation)c(des)c(v)o(errous)36
b(.)19 b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)
f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(102)236 1585 y(13.4)21 b(Utilisation)16 b(de)d FA(fcntl)e
FB(p)q(our)j(manipuler)h(les)f(v)o(errous)19 b(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(102)179
1676 y FC(14)g(Algorithmes)i(Distribu)o(\023)-21 b(es)14
b(&)h(In)o(terblo)q(cages)660 b(105)325 1725 y FB(14.0.1)25
b(Mo)q(de)13 b(d'utilisatio)q(n)j(des)d(ressources)h(par)f(un)h(pro)q
(cessus.)k(.)h(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(105)325 1775 y(14.0.2)25 b(D)o(\023)-18 b(e\014nition)15
b(de)e(l'in)o(terblo)q(cage)j(\(deadlo)q(c)o(k\))26 b(.)19
b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)13 b(105)325 1824 y(14.0.3)25 b(Quatre)13 b(conditions)i(n)o(\023)
-18 b(ecessaires)15 b(\022)-19 b(a)13 b(l'in)o(terblo)q(cage.)j(.)j(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(106)325 1874 y(14.0.4)25 b(Les)13 b(graphes)h(d'allo)q(cation)i(de)d
(ressources)31 b(.)19 b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)13 b(106)179 1965 y FC(15)28 b(In)o(ter)15
b(Pro)q(cessus)h(Comm)o(unications)c(\(I.P)l(.C.\))620
b(107)236 2014 y FB(15.1)21 b(R)o(\023)-18 b(ef)o(\023)g(erences)13
b(d'IPC)22 b(.)d(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)
h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)13 b(107)325 2064 y(15.1.1)25 b(Cr)o(\023)-18
b(eation)14 b(de)f(cl)o(\023)-18 b(es)40 b(.)19 b(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(107)325 2113 y(15.1.2)25
b(La)13 b(structure)g(ip)q(c)p 719 2113 12 2 v 15 w(p)q(erm)27
b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(108)325
2163 y(15.1.3)25 b(Les)13 b(options)h(de)f(la)h(structure)g(ip)q(c)p
961 2163 V 15 w(p)q(erm)24 b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(108)325 2212
y(15.1.4)25 b(L'acc)o(\022)-18 b(es)13 b(aux)g(tables)h(d'IPC)f(par)g
(le)h(shell)24 b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(108)236 2262 y(15.2)21
b(Les)13 b(\014les)h(de)f(messages)25 b(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(109)325 2311 y(15.2.1)25
b(la)13 b(structure)h(ms)p FC(q)p FB(id)p 758 2311 V
15 w(ds)38 b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(110)325 2361 y(15.2.2)25 b(La)13 b(structure)g(g)o(\023)-18
b(en)o(\023)g(erique)15 b(d'un)f(message)52 b(.)19 b(.)g(.)g(.)g(.)g(.)
f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(110)325 2410 y(15.2.3)25 b(Utilisation)16 b(des)d(\014les)h(de)f
(messages)i(.)k(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(111)325 2460 y(15.2.4)25
b(L'en)o(v)o(oi)13 b(de)h(message)19 b(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)13 b(111)325 2509 y(15.2.5)25 b(La)13
b(primitiv)o(e)i(d'extraction)37 b(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
13 b(111)325 2559 y(15.2.6)25 b(La)13 b(primitiv)o(e)i(de)e(con)o(tr^)
-19 b(ole)24 b(.)19 b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(112)236 2608 y(15.3)21 b(Les)13 b(s)o(\023)-18 b(emaphores)21
b(.)e(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)13 b(112)325 2658 y(15.3.1)25 b(La)13 b(primitiv)o(e)i(de)e
(manipulatio)q(n)j FA(semop\(\))k FB(.)f(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(113)325
2707 y(15.3.2)25 b(La)13 b(primitiv)o(e)i(de)e(con)o(tr^)-19
b(ole)14 b(des)g(s)o(\023)-18 b(emaphores)21 b(.)e(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(114)236
2757 y(15.4)21 b(Les)13 b(segmen)o(ts)g(de)h(m)o(\023)-18
b(emoire)13 b(partag)o(\023)-18 b(ee)29 b(.)19 b(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)13 b(114)325 2806 y(15.4.1)25 b(Utilisation)16 b(des)d(segmen)o(ts)h
(de)f(m)o(\023)-18 b(emoire)14 b(partag)o(\023)-18 b(ee)18
b(.)h(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(115)p eop
%%Page: 7 7
7 6 bop 75 50 a Fz(T)m(ABLE)14 b(DES)g(MA)m(TI)443 39
y(\022)438 50 y(ERES)1245 b FD(vii)179 166 y FC(16)13
b(La)i(S)o(\023)-21 b(ecurit)o(\023)g(e)1210 b(117)236
212 y FB(16.1)21 b(Protection)14 b(des)f(syst)o(\022)-18
b(emes)14 b(d'exploitation)28 b(.)19 b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(117)236 258 y(16.2)21 b(G)o(\023)-18 b(en)o(\023)g(eralit)o(\023)g
(es)15 b(sur)e(le)h(con)o(tr^)-19 b(ole)14 b(d'acc)o(\022)-18
b(es)11 b(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(118)325
304 y(16.2.1)25 b(Domaines)14 b(de)g(protection)g(et)f(matrices)h
(d'acc)o(\022)-18 b(es)29 b(.)19 b(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)13 b(118)325 350 y(16.2.2)25 b(Domaines)14
b(de)g(protection)g(restrein)o(ts)e(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(119)325 396 y(16.2.3)25 b(Av)n(an)o(tages)13 b(des)h(domaines)g(de)g
(protections)g(restrein)o(ts)22 b(.)d(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)13 b(119)236 442 y(16.3)21 b(Le)13 b(c)o(hev)n(al)h(de)f
(T)m(roie)35 b(.)19 b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)13 b(119)236 488 y(16.4)21 b(Le)13 b(con\014nemen)o(t)27
b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)13 b(121)236 534 y(16.5)21 b(les)13 b(m)o(\023)-18
b(ecanismes)15 b(de)e(con)o(tr^)-19 b(ole)13 b(.)19 b(.)f(.)h(.)g(.)g
(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(121)325 579 y(16.5.1)25
b(Application)16 b(des)d(capacit)o(\023)-18 b(es)14 b(au)g(domaines)g
(de)g(protection)g(restrein)o(ts)35 b(.)19 b(.)g(.)g(.)g(.)13
b(121)236 625 y(16.6)21 b(Les)13 b(A)o(CL)g(.)19 b(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(124)325 671 y(16.6.1)25 b(App)q(els)14 b(systemes)f
FA(setacl)e FB(et)i FA(getacl)23 b FB(.)c(.)g(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(124)179 756 y FC(17)g(Multiplexer)g(des)i(en)o(tr)o(\023)-21
b(ees-sorties)837 b(127)325 802 y FB(17.0.2)25 b(R)o(\023)-18
b(esolution)15 b(a)o(v)o(ec)e(deux)h(pro)q(cessus)24
b(.)19 b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)
f(.)h(.)g(.)g(.)g(.)g(.)13 b(127)325 847 y(17.0.3)25
b(Solution)15 b(a)o(v)o(ec)e(le)h(mo)q(de)f(non)h(blo)q(quan)o(t)36
b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)13 b(127)325 893 y(17.0.4)25 b(Utiliser)14
b(les)g(m)o(\023)-18 b(ecanismes)15 b(async)o(hrones)36
b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)13 b(127)236 939 y(17.1)21 b(Les)13 b(outils)h(de)g(s)o
(\023)-18 b(election)35 b(.)19 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)
f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)13 b(128)325 985 y(17.1.1)25 b(La)13 b(primitiv)o(e)i
FA(select)28 b FB(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(128)325 1031 y(17.1.2)25 b(La)13 b(primitiv)o(e)i FA(poll)38
b FB(.)19 b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(129)325 1077 y(17.1.3)25 b(Les)13 b(extensions)i(de)e
FA(read)e FB(et)i FA(write)36 b FB(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(130)236 1123 y(17.2)21 b(une)13 b(solution)j(m)o(ulti-activit)o(\023)
-18 b(es)35 b(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(130)179 1207 y FC(18)g(Les)i(micro-no)o(y)o(aux)1090
b(131)325 1253 y FB(18.0.1)25 b(Les)13 b(atouts)g(des)g(micro-no)o(y)o
(aux)41 b(.)19 b(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(131)325 1299
y(18.0.2)25 b(Quelques)14 b(probl)o(\022)-18 b(emes)36
b(.)18 b(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)
h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(131)236
1345 y(18.1)21 b(Le)13 b(syst)o(\022)-18 b(eme)13 b(MA)o(CH)f
(\(Carnegie)i(Mellon)h(Univ)o(ersit)o(y)g(CMU\))g(.)j(.)h(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(131)236 1391
y(18.2)21 b(Le)13 b(no)o(y)o(au)h(MA)o(CH)25 b(.)19 b(.)g(.)g(.)g(.)g
(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)
h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(132)325
1437 y(18.2.1)25 b(Les)13 b(T^)-19 b(ac)o(hes)13 b(et)g(les)g(Threads)
53 b(.)19 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(133)325 1483
y(18.2.2)25 b(P)o(orts)13 b(&)f(Messages)g(.)19 b(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(133)325 1529 y(18.2.3)25
b(T)m(ask)12 b(Threads)i(&)f(P)o(orts)24 b(.)19 b(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)13 b(134)236 1574 y(18.3)21 b(Les)13
b(threads)h(POSIX)45 b(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)13 b(134)325 1620 y(18.3.1)25 b FA(fork)11
b FB(et)i FA(exec)32 b FB(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)13 b(134)325 1666 y(18.3.2)25 b(Les)13
b(noms)g(de)g(fonctions)28 b(.)19 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
13 b(134)325 1712 y(18.3.3)25 b(les)13 b(noms)h(de)f(t)o(yp)q(es)g(.)19
b(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(136)325 1758 y(18.3.4)25 b(A)o(ttributs)13 b(d'une)h(activit)o(\023)
-18 b(e)31 b(.)19 b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(136)325 1804 y(18.3.5)25 b(Cr)o(\023)-18 b(eation)14
b(et)e(terminaison)k(des)d(activit)o(\023)-18 b(es)20
b(.)f(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)13 b(136)236 1850 y(18.4)21 b(Sync)o(hronisation)d(.)h(.)g
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(137)325 1896 y(18.4.1)25 b(Le)12 b(mo)q(d)o(\022)-18
b(ele)15 b(fork/join)f(\(P)o(aterson\))25 b(.)19 b(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(137)325 1942 y(18.4.2)25 b(Le)12 b(probl)o(\022)-18
b(eme)15 b(de)e(l'exclusion)j(m)o(utuelle)f(sur)e(les)h(v)n(ariables)h
(g)o(\023)-18 b(er)o(\023)g(ees)13 b(par)h(le)f(no)o(y)o(au)h(137)325
1988 y(18.4.3)25 b(Les)13 b(s)o(\023)-18 b(emaphores)14
b(d'exclusion)h(m)o(utuelle)23 b(.)c(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(137)325
2033 y(18.4.4)25 b(Utilisation)16 b(des)d(s)o(\023)-18
b(emaphores)11 b(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(138)325 2079 y(18.4.5)25 b(Les)13 b(conditions)i(\()o(\023)-18
b(ev)o(\022)g(enemen)o(ts\))14 b(.)19 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(138)236 2125 y(18.5)21 b(Ordonnancemen)o(t)15 b(des)e(activit)o(\023)
-18 b(es)16 b(.)j(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(140)325 2171 y(18.5.1)25 b(L'ordonnancemen)o(t)14 b(POSIX)f(des)h
(activit)o(\023)-18 b(es)35 b(.)19 b(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(140)236 2217 y(18.6)21
b(Les)13 b(v)n(ariables)i(sp)o(\023)-18 b(eci\014ques)15
b(\022)-19 b(a)13 b(une)h(thread)40 b(.)19 b(.)f(.)h(.)g(.)g(.)g(.)g(.)
g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(141)325 2263 y(18.6.1)25 b(Princip)q(e)15 b(g)o(\023)-18
b(en)o(\023)g(eral)14 b(des)f(donn)o(\023)-18 b(ees)15
b(sp)o(\023)-18 b(eci\014ques,)15 b(POSIX)28 b(.)19 b(.)g(.)g(.)g(.)g
(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(141)325 2309 y(18.6.2)25
b(Cr)o(\023)-18 b(eation)14 b(de)f(cl)o(\023)-18 b(es)40
b(.)19 b(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)
g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(141)325 2355 y(18.6.3)25 b(Lecture/)o(\023)-18 b(ecriture)14
b(d'une)g(v)n(ariable)h(sp)o(\023)-18 b(eci\014que)32
b(.)19 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
13 b(142)236 2401 y(18.7)21 b(Les)13 b(fonctions)h(standardes)h
(utilisan)o(t)g(des)f(zones)f(statiques)18 b(.)h(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(142)179 2485 y FC(19)g(En)o(tr)o
(\023)-21 b(ees-sorties)17 b(a)o(v)n(anc)o(\023)-21 b(ees)966
b(143)236 2531 y FB(19.1)21 b(Les)13 b(streams)25 b(.)19
b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)13 b(143)236 2577 y(19.2)21 b(Les)13 b(so)q(c)o(k)o(ets)36
b(.)19 b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)
f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)13 b(143)236 2623 y(19.3)21 b(Cr)o(\023)-18
b(eation)14 b(d'un)f(so)q(c)o(k)o(et)24 b(.)19 b(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(145)236 2669
y(19.4)21 b(Les)13 b(di\013)o(\023)-18 b(eren)o(tes)15
b(formes)d(de)i(comm)o(unication)h(par)f(so)q(c)o(k)o(et)g(.)19
b(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(145)236 2715 y(19.5)21 b(D)o(\023)-18 b(e\014nition)15
b(de)f(l'adresse)g(d'un)f(so)q(c)o(k)o(et)37 b(.)19 b(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)13 b(146)236 2761 y(19.6)21 b(Utilisation)16
b(des)d(so)q(c)o(k)o(ets)29 b(.)19 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)13 b(146)325 2806 y(19.6.1)25 b(Utilisation)16
b(lo)q(cal)e(AF)p 783 2806 12 2 v 14 w(UNIX)9 b(.)19
b(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g
(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(146)p eop
%%Page: 8 8
8 7 bop 75 50 a FD(viii)1232 b Fz(T)m(ABLE)14 b(DES)g(MA)m(TI)1733
39 y(\022)1728 50 y(ERES)325 166 y FB(19.6.2)25 b(Utilisation)16
b(a)o(v)o(ec)d(le)g(concept)h(INTERNET)34 b(.)19 b(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13 b(147)236
212 y(19.7)21 b(Le)13 b(mo)q(de)g(connect)o(\023)-18
b(e)40 b(.)19 b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)13 b(147)236 258 y(19.8)21 b(La)13 b(comm)o(unication)i(par)f
(messages)g(a)o(v)o(ec)f(les)h(so)q(c)o(k)o(ets)37 b(.)19
b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)13
b(148)236 303 y(19.9)21 b(Acc)o(\022)-18 b(es)13 b(r)o(\023)-18
b(eseau)13 b(sous)h(Unix)e(.)19 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)13 b(149)179 387 y FC(20)g(Bibliographie)1170
b(151)179 471 y(Index)1378 b(152)p eop
%%Page: 1 9
1 8 bop 1817 50 a FD(1)179 479 y Fw(Chapitre)32 b(1)179
688 y Fy(In)m(tro)s(duction)38 b(et)h(Historique)179
930 y Fv(1.1)66 b(Historique)179 1027 y Fu(1.1.1)55 b(les)18
b(d)o(\023)-27 b(ebuts)18 b(\(1945-55\))236 1099 y FB(L'ENIA)o(C)12
b(soit)i(20000)g(tub)q(es)f(\022)-19 b(a)13 b(vide,)h(fait)f(20)h
(tonnes)f(et)g(o)q(ccup)q(e)h(160)g Ft(m)1338 1084 y
Fs(2)1355 1099 y FB(.)236 1192 y(Chaque)j(Calculateur)h(est)e(unique)i
(et)e(une)g(\023)-18 b(equip)q(e)17 b(tra)o(v)n(aille)i(\022)-19
b(a)16 b(la)g(fois)h(\022)-19 b(a)16 b(la)h(fabrication,)h(la)e(pro-)
179 1238 y(grammation,)e(la)g(main)o(tenance)h(et)d(l'utilisati)q(on.)
179 1283 y(Ce)i(son)o(t)h(des)g(mac)o(hines)h(sans)f(m)o(\023)-18
b(emoire,)15 b(ex)o(\023)-18 b(ecutan)o(t)16 b(un)f(seul)g(programme)h
(\022)-19 b(a)14 b(la)h(fois.)g(Le)g(c)o(hargemen)o(t)179
1329 y(des)e(programmes)h(et)f(des)g(donn)o(\023)-18
b(ees)15 b(se)e(fait)g(au)g(mieux)h(a)o(v)o(ec)g(des)f(cartes)g(ou)h
(des)f(bandes)h(p)q(erfor)o(\023)-18 b(ees.)179 1375
y(Duran)o(t)15 b(cette)f(p)o(\023)-18 b(erio)q(de)15
b(de)g(nom)o(breuses)g(t^)-19 b(ac)o(hes)15 b(son)o(t)f(automatis)o
(\023)-18 b(ees,)16 b(c)o(hargemen)o(t,)e(assem)o(blage,)h(\023)-18
b(edi-)179 1420 y(tion)14 b(de)f(liens)i(\(a)o(v)o(ec)e(des)g(biblioth)
o(\022)-18 b(eq)q(ues\).)179 1466 y(Plus)17 b(tard)g(son)o(t)f(d)o
(\023)-18 b(ev)o(elopp)o(\023)g(es)19 b(les)d(compilateurs)j(p)q
(ermettan)o(t)e(d'utiliser)h(des)f(langages)h(de)e(plus)i(haut)179
1512 y(niv)o(eau.)179 1628 y Fu(1.1.2)55 b(T)-5 b(ransistors)19
b(et)f(traitemen)n(t)e(par)j(lots)f(1955-65)236 1701
y FB(In)o(v)o(en)o(tion)d(de)e(la)h(m)o(\023)-18 b(emoire)14
b Fr(\000)-7 b(!)13 b FB(F)m(abrication)j(industrielle)q(,)f
(commercialisati)q(on)h(de)d(mac)o(hines.)236 1747 y(Une)g(s)o(\023)-18
b(eance-t)o(yp)q(e)14 b(de)g(programmation)8 b(:)230
1823 y({)20 b(\023)-18 b(ecriture)14 b(sur)f(cartes)h([programmeur])230
1888 y({)21 b(c)o(hargemen)o(t)14 b(des)f(cartes)h(compilateur)h([op)o
(\023)-18 b(erateur])230 1953 y({)21 b(c)o(hargemen)o(t)14
b(des)f(cartes)h(du)f(programme)230 2018 y({)21 b(cr)o(\023)-18
b(eation)14 b(du)g(co)q(de)f(in)o(term)o(\023)-18 b(ediaire)16
b(\(assem)o(blage\))230 2083 y({)21 b(c)o(hargemen)o(t)14
b(des)f(cartes)h(de)f(l'assem)o(bleur)230 2148 y({)21
b(cr)o(\023)-18 b(eation)14 b(du)g(co)q(de)f(en)h(langage)g(mac)o(hine)
230 2212 y({)21 b(ex)o(\023)-18 b(ecution)15 b(du)e(programme)179
2288 y(un)f(probl)o(\022)-18 b(eme)8 b(:)i(\022)-19 b(a)12
b(c)o(haque)g(erreur)g(r)o(\023)-18 b(ealisation)14 b(d'un)e(dump)g
(\(listing)h(de)f(l'image)g(m)o(\023)-18 b(emoire\))12
b(p)q(our)h(le)e(pro-)179 2334 y(grammeur,)i(qui)g(n'est)g(pas)g(sur)g
(place)h(p)q(our)f(r)o(\023)-18 b(ealiser)15 b(une)e(correction)h(\022)
-19 b(a)13 b(c)o(haud)g(\(pas)g(de)g(p)o(\023)-18 b(eriph)o(\023)g
(erique)q(s)179 2380 y(in)o(teractifs)14 b(trop)g(co)q(^)-20
b(uteux\).)236 2427 y FC(Solutions)6 b(:)230 2493 y FB({)21
b(le)d Fx(tr)n(aitement)d(p)n(ar)i(lots)e FB(\(batc)o(h)j(pro)q
(ccessing\))h(p)q(our)e(regroup)q(er)h(et)f(ex)o(\023)-18
b(ecuter)17 b(par)h(group)q(es)g(les)270 2538 y(tra)o(v)n(aux)c
(similaires)230 2603 y({)21 b(le)d Fx(moniteur)e(r)o(\023)-19
b(esident)15 b FB(qui)j(enc)o(ha)l(^)-15 b(\020ne)19
b(automatiquemen)o(t)g(les)f(tra)o(v)n(aux,)g(un)f(nouv)o(eau)i(t)o(yp)
q(e)e(de)270 2649 y(cartes)i(est)g(in)o(tro)q(duit,)h(qui)g(donne)g
(des)f(instructions)i(\022)-19 b(a)19 b(r)o(\023)-18
b(ealiser)20 b(par)f(le)h(moniteur,)f(\(c)o(harger,)270
2695 y(ex)o(\023)-18 b(ecuter,)13 b(etc.\).)236 2761
y(Ce)d(moniteur)h(r)o(\023)-18 b(esidan)o(t)11 b(est)e(l'anc)o(^)-18
b(etre)11 b(des)f(syst)o(\022)-18 b(emes)10 b(d'exploitation,)i(\(la)f
(m)o(\023)-18 b(emoire)10 b(qui)h(est)e(apparue)179 2806
y(a)o(v)o(ec)k(les)h(transistors)g(est)f(d)o(\023)-18
b(ecoup)o(\023)g(ee)15 b(en)e(deux)h(zones)7 b(:)12 b(moniteur,)i
(utilisateur\).)p eop
%%Page: 2 10
2 9 bop 75 50 a FD(2)750 b Fz(CHAPITRE)14 b(1.)27 b(INTR)o(ODUCTION)14
b(ET)g(HISTORIQUE)236 166 y FB(La)g(di\013)o(\023)-18
b(erence)16 b(de)e(vitesse)h(en)o(tre)f(les)h(E/S)f(et)g(l'unit)o(\023)
-18 b(e)15 b(cen)o(trale)g(\(UC\))e(devien)o(t)i(\015agran)o(te)8
b(:)13 b(les)i(p)o(\023)-18 b(eri-)179 212 y(ph)o(\023)g(eriques)13
b(son)o(t)f(alors)g(dot)o(\023)-18 b(es)12 b(de)g(circuits)h(autonomes)
f(leur)g(p)q(ermettan)o(t)g(de)g(faire)g(certains)g(traitemen)o(ts)179
258 y(sans)h(le)h(secours)g(de)f(l'UC.)f(Ces)h(circuits)i(son)o(t)e
(parfois)h(des)f(ordinateurs)j(plus)e(p)q(etits)g(\(don)o(t)f(le)h(co)q
(^)-20 b(ut)13 b(du)179 303 y(temps)g(de)g(calcul)i(est)e(plus)h
(faible\).)179 418 y Fu(1.1.3)55 b(VLSI)19 b(et)f(Multiprogrammati)o
(on)e(1965-80)236 490 y FB(Circuits)f(in)o(t)o(\023)-18
b(egr)o(\023)g(es)14 b Fr(\000)-7 b(!)14 b FB(moindre)g(co)q(^)-20
b(ut)13 b(de)h(fabrication)409 535 y Fr(\000)-6 b(!)12
b FB(\023)-18 b(ev)o(olution)15 b(rapide)g(des)e(mo)q(d)o(\022)-18
b(eles)409 581 y Fr(\000)-6 b(!)13 b FB(v)o(en)o(te)g(aux)h(en)o
(treprises)179 673 y(IBM)f(lance)h(l'id)o(\023)-18 b(ee)14
b(d'un)g(syst)o(\022)-18 b(eme)13 b(unique)i(adapt)o(\023)-18
b(e)14 b(\022)-19 b(a)13 b(plusieurs)i(mac)o(hines)9
b(:)j(OS/360.)179 838 y Fx(A)o(rriv)o(\023)-19 b(e)n(e)15
b(des)h(disques)e(magn)o(\023)-19 b(etiques.)13 b FB(Apparait)18
b(le)e(princip)q(e)j(de)e(m)o(ultiprogrammation)q(,)h(les)f(en)o(tr)o
(\023)-18 b(ees-)179 884 y(sorties)17 b(sur)f(disque)h(\023)-18
b(etan)o(t)16 b(e\013ectu)o(\023)-18 b(ees)17 b(de)g(fa\030)-17
b(con)16 b(async)o(hrone)i(a)o(v)o(ec)e(des)g(calculs)i(sur)f(l'unit)o
(\023)-18 b(e)17 b(cen)o(trale)179 929 y(\(parall)o(\022)-18
b(elisa)q(tion)q(\).)179 1094 y FC(Multiprogrammation)t
FB(:)16 b(plusieurs)j(programmes)f(son)o(t)f(en)g(m)o(^)-18
b(eme)16 b(temps)h(en)f(m)o(\023)-18 b(emoire)18 b(et)e(sur)h(le)179
1140 y(disque,)d(si)f(le)g(programme)h(en)f(cours)g(d'ex)o(\023)-18
b(ecution)15 b(demande)f(une)f(op)o(\023)-18 b(eration)14
b(d'en)o(tr)o(\023)-18 b(ee-sortie)14 b(alors)g(un)179
1185 y(autre)f(programme)h(est)f(ex)o(\023)-18 b(ecut)o(\023)g(e)14
b(p)q(endan)o(t)g(que)f(se)g(d)o(\023)-18 b(eroule)15
b(l'op)o(\023)-18 b(eration.)179 1300 y Fu(1.1.4)55 b(UNIX)173
1372 y FB(1969)21 b(Ken)13 b(Thompson,)h(Dennis)h(Ritc)o(hie)173
1436 y(1971)21 b(+)13 b(Brian)h(Kernighan)173 1500 y(1973)21
b(C)173 1564 y(1984)g(100000)14 b(cpu)g(/UNIX)173 1628
y(1993)21 b(UNIX)12 b(est)h(le)h(syst)o(\022)-18 b(eme)13
b(de)g(r)o(\023)-18 b(ef)o(\023)g(erence)179 1703 y(Av)o(ec)13
b(de)g(nom)o(breux)h(standards)h(AES,)d(SVID2,)h(XPG2,)g(XPG3,)g(XPG4,)
f(POSIX.1)h(OSF)504 1748 y(et)g(des)g(inno)o(v)n(ations)j(comme)7
b(:)680 1794 y(les)13 b(micro-no)o(y)o(aux,)i(MA)o(CH,)d(CHOR)o(US,)g
(MASIX)680 1840 y(Des)h(copies)21 b(:)12 b(Windo)o(ws)j(NT)d(par)h
(exemple)i(...)179 1960 y(Le)e(succ)o(\022)-18 b(es)13
b(d'UNIX)f(sans)i(doute)g(parce)f(que)7 b(:)230 2025
y({)21 b(Ecrit)14 b(dans)g(un)f(langage)i(de)e(haut)g(niv)o(eau)c(:)j
(C)h(\(C++,)f(Ob)r(jectiv)o(e)h(C\))6 b(;)230 2089 y({)21
b(une)12 b(in)o(terface)f(simple)i(et)e(puissan)o(te)19
b(:)10 b(les)i(shells,)g(qui)g(fournissen)o(t)h(des)e(services)h(de)f
(haut)h(niv)o(eau)c(;)230 2153 y({)21 b(Des)13 b(primitiv)o(es)j
(puissan)o(tes)f(qui)f(p)q(ermetten)o(t)g(de)f(simpli\014er)i(l')o
(\023)-18 b(ecriture)15 b(des)e(programmes)8 b(;)230
2217 y({)21 b(Un)16 b(syst)o(\022)-18 b(eme)17 b(de)g(\014c)o(hier)g
(hi)o(\023)-18 b(erarc)o(hique)19 b(qui)f(p)q(ermet)e(une)h(main)o
(tenance)h(simple)g(et)e(une)h(impl)o(\023)-18 b(e-)270
2263 y(men)o(tation)15 b(e\016cace)6 b(;)230 2327 y({)21
b(Un)c(format)g(g)o(\023)-18 b(en)o(\023)g(erique)18
b(p)q(our)g(les)g(\014c)o(hiers,)g(le)f(\015ot)g(d'o)q(ctets)g(qui)h
(simpli\014e)i(l')o(\023)-18 b(ecriture)18 b(des)f(pro-)270
2373 y(grammes)7 b(;)230 2437 y({)21 b(Il)13 b(fournit)h(une)g(in)o
(terface)g(simple)h(aux)e(p)o(\023)-18 b(eriph)o(\023)g(eriques)10
b(;)230 2501 y({)21 b(Il)13 b(est)g(m)o(ulti-utili)q(sateu)q(rs)j(et)c
(m)o(ulti-t^)-19 b(ac)o(hes)9 b(;)230 2565 y({)21 b(Il)13
b(cac)o(he)h(compl)o(\022)-18 b(etemen)o(t)14 b(l'arc)o(hitecture)h(de)
e(la)h(mac)o(hine)g(\022)-19 b(a)13 b(l'utilisateu)q(r.)179
2680 y Fu(1.1.5)55 b(Des)18 b(p)r(oin)n(ts)h(forts)230
2752 y FB({)i(Syst)o(\022)-18 b(eme)14 b(n)o(\023)-18
b(e)13 b(dans)h(le)f(monde)h(de)f(la)h(rec)o(herc)o(he)353
2806 y(in)o(t)o(\023)-18 b(egration)15 b(de)f(concepts)g(a)o(v)n(anc)o
(\023)-18 b(es)p eop
%%Page: 3 11
3 10 bop 75 50 a Fz(1.2.)26 b(STR)o(UCTURE)14 b(G)483
39 y(\023)478 50 y(EN)542 39 y(\023)537 50 y(ERALE)f(DES)h(SYST)903
39 y(\022)898 50 y(EMES)h(D'EXPLOIT)m(A)m(TION)420 b
FD(3)230 166 y FB({)21 b(Di\013usion)16 b(ouv)o(erte)353
222 y(acc)o(\022)-18 b(es)13 b(aux)h(sources)230 287
y({)21 b(Langage)14 b(\(de)f(haut)h(niv)o(eau)g(\))353
342 y(compilation)i(s)o(\023)-18 b(epar)o(\023)g(ee,)14
b(conditionnell)q(e,)i(param)o(\023)-18 b(etrage,)13
b(pr)o(\023)-18 b(ecompilatio)q(n)230 408 y({)21 b(Enric)o(hissemen)o
(t)16 b(constan)o(t)230 473 y({)21 b(Ouv)o(erture)14
b(\(param)o(\023)-18 b(etrabilit)o(\023)g(e)16 b(du)d(p)q(oste)h(de)f
(tra)o(v)n(ail\))230 538 y({)21 b(Souplesse)15 b(des)f(en)o(tr)o(\023)
-18 b(ees/sorties)353 594 y(uniformit)o(\023)g(e)230
659 y({)21 b(F)m(acilit)o(\023)-18 b(es)15 b(de)e(comm)o(unication)j
(in)o(ter-syst)o(\022)-18 b(emes)230 724 y({)21 b(Comm)o(unaut)o(\023)
-18 b(es)14 b(d'utilisateurs)i(\(/etc/groups\))230 789
y({)21 b(Langages)14 b(de)f(commandes)i(\(\015exibles)g(et)e(puissan)o
(ts\))230 855 y({)21 b(Asp)q(ect)13 b(m)o(ulti-utili)q(sateu)q(rs)353
910 y(connections)i(de)e(tout)h(t)o(yp)q(e)f(de)g(terminal,)i(biblioth)
o(\022)-18 b(eque)q(s,)15 b(etc)230 975 y({)21 b(P)o(arall)o(\023)-18
b(elisme)353 1031 y(m)o(ulti-t^)f(ac)o(hes)21 b(:)13
b("sc)o(heduling")j(par)d(t^)-19 b(ac)o(he)353 1086 y(comm)o(unication)
16 b(en)o(tre)d(t^)-19 b(ac)o(hes)353 1142 y(m)o(ultipro)q(cesseurs)230
1207 y({)21 b(In)o(terface)13 b(syst)o(\022)-18 b(eme/applicati)q(on)q
(s)353 1262 y(app)q(els)15 b(syst)o(\022)-18 b(eme,)13
b(biblioth)o(\022)-18 b(equ)q(e)230 1327 y({)21 b(le)14
b(syst)o(\022)-18 b(eme)13 b(de)g(gestion)i(de)e(\014c)o(hiers)353
1383 y(hi)o(\023)-18 b(erarc)o(hie)230 1448 y({)21 b(In)o(terfaces)13
b(graphiques)j(norm)o(\023)-18 b(ees)7 b(:)12 b(X11.)179
1566 y Fu(1.1.6)55 b(Des)18 b(p)r(oin)n(ts)h(faibles)230
1638 y FB({)i(S)o(\023)-18 b(ecurit)o(\023)g(e)14 b(\(pire)g(encore)g
(en)f(r)o(\023)-18 b(eseau)14 b(\))353 1694 y(Am)o(\023)-18
b(elioration)16 b(a)o(v)o(ec)d(les)h(A.C.L.)230 1759
y({)21 b(F)m(ragilit)o(\023)-18 b(e)15 b(du)f(S.G.F.)353
1814 y(p)q(ertes)g(de)f(\014c)o(hiers)h(p)q(ossible)i(en)d(cas)g(de)g
(crash)230 1879 y({)21 b(Gestion)14 b(et)f(rattrapage)h(des)f(in)o
(terruptions)353 1935 y(pas)h(de)f(temps)g(r)o(\023)-18
b(eel)14 b(\(Q.N.X.\).)230 2000 y({)21 b(M)o(\023)-18
b(ecanisme)15 b(de)e(cr)o(\023)-18 b(eation)14 b(de)f(pro)q(cessus)i
(lourd)353 2056 y(Am)o(\023)-18 b(elioration)16 b(a)o(v)o(ec)d(les)h
(threads.)230 2121 y({)21 b(Une)12 b(\023)-18 b(edition)15
b(de)e(liens)i(statique)353 2176 y(Am)o(\023)-18 b(elioration)16
b(a)o(v)o(ec)d(les)h(librairies)i(partag)o(\023)-18 b(ees.)230
2242 y({)21 b(Rattrapage)14 b(d'erreur)g(du)f(compilateur)i(C)e
(standard)h(p)q(eu)g(ais)o(\023)-18 b(e)7 b(!)230 2307
y({)21 b(Co)q(^)-20 b(ut)13 b(en)g(ressources)230 2372
y({)21 b(Gestion)14 b Fr(\000)-6 b(!)13 b FB(v)o(errous)h(sur)f(\014c)o
(hiers)179 2510 y Fv(1.2)66 b(Structure)24 b(g)o(\023)-32
b(en)o(\023)g(erale)21 b(des)h(syst)o(\022)-32 b(emes)20
b(d'exploitation)179 2596 y FB(Un)15 b(syst)o(\022)-18
b(eme)16 b(d'exploitation)j(est)d(un)g(programme)g(qui)h(sert)e(d'in)o
(terface)i(en)o(tre)e(un)h(utilisateur)j(et)c(un)179
2641 y(ordinateur.)179 2806 y(Un)k(syst)o(\022)-18 b(eme)20
b(d'exploitation)i(est)d(un)h(ensem)o(ble)h(de)e(pro)q(c)o(\023)-18
b(edures)21 b(man)o(uelles)g(et)e(automatiques)i(qui)p
eop
%%Page: 4 12
4 11 bop 75 50 a FD(4)750 b Fz(CHAPITRE)14 b(1.)27 b(INTR)o(ODUCTION)14
b(ET)g(HISTORIQUE)484 1107 y
 currentpoint currentpoint translate 0.5047 0.5047 scale neg exch neg
exch translate
 484 1107 a 14 w @beginspecial
0 @llx 0 @lly 446 @urx 467 @ury 4460 @rwi @setspecial
%%BeginDocument: eps/vue.general.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
0 0 445.259857 466.440002 rectclip
-57.074677 -247 translate
57.074677 247 445.259857 466.440002 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
1.595267 0 0 1.595267 -162.507843 -279.775391 sc5mt astore 147 391 252 158 0.321443 0 0 0.417887 10.744263 426.606079 sc6mt astore rfill
1.595267 0 0 1.595267 -162.507843 -279.775391 sc4mt astore 1.595267 0 0 1.595267 -162.507843 -279.775391 sc5mt astore 147 391 252 158 0.321443 0 0 0.417887 10.744263 426.606079 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 196 239 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -50 328] dotx
1.595267 0 0 1.595267 -162.507843 -279.775391 sc5mt astore 152 396 241 115 1.738702 0 0 1.264399 -200.310059 -127.702133 sc6mt astore rfill
1.595267 0 0 1.595267 -162.507843 -279.775391 sc4mt astore 1.595267 0 0 1.595267 -162.507843 -279.775391 sc5mt astore 152 396 241 115 1.738702 0 0 1.264399 -200.310059 -127.702133 sc6mt astore rstroke
1.595267 0 0 1.595267 -162.507843 -279.775391 sc5mt astore 389 475 -231 -74 1.595267 0 0 1.595267 -157.507843 -302.775391 sc6mt astore rfill
1.595267 0 0 1.595267 -162.507843 -279.775391 sc4mt astore 1.595267 0 0 1.595267 -162.507843 -279.775391 sc5mt astore 389 475 -231 -74 1.595267 0 0 1.595267 -157.507843 -302.775391 sc6mt astore rstroke
1.595267 0 0 1.595267 -162.507843 -279.775391 sc5mt astore 162 439 222 -33 1.14448 0 0 4.016568 -29.480415 -1382.726318 sc6mt astore rfill
1.595267 0 0 1.595267 -162.507843 -279.775391 sc4mt astore 1.595267 0 0 1.595267 -162.507843 -279.775391 sc5mt astore 162 439 222 -33 1.14448 0 0 4.016568 -29.480415 -1382.726318 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Mat\335riel  ) [22.656006 0 12 0 7.992004 0 10.656006 0 10.656006 0 6.671997 0 10.656006 0 6.671997 0 6 0 0 0] 160 295 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 73.85199 11] dotx
(Syst\334me d'exploitation ) [13.344002 0 12 0 9.336006 0 7.992004 0 10.656006 0 19.992004 0 10.656006 0 6 0 13.343994 0 7.992004 0 10.656006 0 12 0 13.343994 0 6.671997 0 11.999985 0 6.671997 0 7.992004 0 12 0 7.992004 0 6.671997 0 12 0 13.343994 0 0 0] 102 668 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 59.455994 -248] dotx
(Applications ) [16.727997 0 13.343994 0 13.343994 0 6.671997 0 6.671997 0 10.656006 0 12 0 7.992004 0 6.671997 0 12 0 13.343994 0 9.335999 0 0 0] 201 680 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 12.848015 -200] dotx
(Utilisateurs ) [17.328003 0 7.992004 0 6.671997 0 6.671997 0 6.671997 0 9.335999 0 12 0 7.992004 0 10.656006 0 13.343994 0 10.656006 0 9.335999 0 0 0] 196 705 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 17.816002 -16] dotx
/crlinw 1.7 def
/crendarw true def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -51.599976 146 237.799988 1 0 0 1 -51 343 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(user 1 ) [13.344002 0 9.335999 0 10.655998 0 10.655998 0 6 0 12 0 0 0] 56 672 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 11 -53] dotx
/crlinw 1 def
/crendarw false def
/crfrtarw false def
1.595267 0 0 1.595267 -74.504211 -279.775391 sc5mt astore 147 391 252 158 0.321443 0 0 0.417887 98.747894 426.606079 sc6mt astore rfill
1.595267 0 0 1.595267 -74.504211 -279.775391 sc4mt astore 1.595267 0 0 1.595267 -162.507843 -279.775391 sc5mt astore 147 391 252 158 0.321443 0 0 0.417887 98.747894 426.606079 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 196 239 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 38.003632 328] dotx
/crlinw 1.7 def
/crendarw true def
/crfrtarw true def
1 0 0 1 88.003632 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -51.599976 146 237.799988 1 0 0 1 37.003632 343 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(user 2 ) [13.344002 0 9.335999 0 10.655998 0 10.655998 0 6 0 12 0 0 0] 56 672 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 99.003632 -53] dotx
/crlinw 1 def
/crendarw false def
/crfrtarw false def
1.595267 0 0 1.595267 13.49942 -279.775391 sc5mt astore 147 391 252 158 0.321443 0 0 0.417887 185.751526 426.606079 sc6mt astore rfill
1.595267 0 0 1.595267 13.49942 -279.775391 sc4mt astore 1.595267 0 0 1.595267 -162.507843 -279.775391 sc5mt astore 147 391 252 158 0.321443 0 0 0.417887 185.751526 426.606079 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 196 239 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 125.007263 328] dotx
/crlinw 1.7 def
/crendarw true def
/crfrtarw true def
1 0 0 1 176.007263 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -51.599976 146 237.799988 1 0 0 1 124.007263 343 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(user 3 ) [13.344002 0 9.335999 0 10.655998 0 10.655998 0 6 0 12 0 0 0] 56 672 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 186.007263 -53] dotx
/crlinw 1 def
/crendarw false def
/crfrtarw false def
1.595267 0 0 1.595267 101.503052 -279.775391 sc5mt astore 147 391 252 158 0.321443 0 0 0.417887 272.755157 426.606079 sc6mt astore rfill
1.595267 0 0 1.595267 101.503052 -279.775391 sc4mt astore 1.595267 0 0 1.595267 -162.507843 -279.775391 sc5mt astore 147 391 252 158 0.321443 0 0 0.417887 272.755157 426.606079 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 196 239 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 212.010895 328] dotx
/crlinw 1.7 def
/crendarw true def
/crfrtarw true def
1 0 0 1 264.010895 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -51.599976 146 237.799988 1 0 0 1 211.010895 343 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(   \274 ) [6 0 6 0 6 0 24 0 0 0] 56 672 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 273.010895 -53] dotx
/crlinw 1 def
/crendarw false def
/crfrtarw false def
1.595267 0 0 1.595267 189.506683 -279.775391 sc5mt astore 147 391 252 158 0.321443 0 0 0.417887 364.758789 426.606079 sc6mt astore rfill
1.595267 0 0 1.595267 189.506683 -279.775391 sc4mt astore 1.595267 0 0 1.595267 -162.507843 -279.775391 sc5mt astore 147 391 252 158 0.321443 0 0 0.417887 364.758789 426.606079 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 196 239 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 304.014526 328] dotx
/crlinw 1.7 def
/crendarw true def
/crfrtarw true def
1 0 0 1 352.014526 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -51.599976 146 237.799988 1 0 0 1 303.014526 343 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(user N ) [13.344002 0 9.335999 0 10.655998 0 10.655998 0 6 0 17.328003 0 0 0] 56 672 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 365.014526 -53] dotx
/txtdraw true def
/txlndraw true def
(compilateur ) [6.216003 0 7 0 10.891998 0 7 0 3.891998 0 3.891998 0 6.216003 0 3.891998 0 6.216003 0 7 0 4.662003 0 0 0] 153 197 /Times-Roman [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 -85 305] dotx
(editeur ) [6.216003 0 7 0 3.891998 0 3.891998 0 6.216003 0 7 0 4.662003 0 0 0] 127 123 /Times-Roman [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 36 379] dotx
(jeux ) [3.891998 0 6.216 0 7.000004 0 7 0 0 0] 48 710 /Times-Roman [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 209 -205] dotx
(Base de ... ) [9.338001 0 6.216 0 5.445999 0 6.216 0 3.5 0 7.000004 0 6.216003 0 3.5 0 3.5 0 3.5 0 3.5 0 0 0] 27 694 /Times-Roman [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 390 -192] dotx
end
grestore
%%EndDocument
 @endspecial 484 1107 a
 currentpoint currentpoint translate 1 0.5047 div 1 0.5047 div scale
neg exch neg exch translate
 484 1107 a 636 1198 a Fq(Fig.)e
FD(1.1)h({)h Fp(V)m(ue)h(g)o(\023)-20 b(en)o(\023)g(er)n(ale)15
b(du)g(syst)o(\022)-20 b(eme)179 1331 y FB(p)q(ermet)13
b(\022)-19 b(a)13 b(un)h(group)q(e)g(d'utilisateurs)h(de)f(partager)f
(e\016cacemen)o(t)h(un)f(ordinateur.)i Fx(Brinch)e(Hansen.)179
1495 y FB(Il)f(est)g(plus)h(facile)g(de)f(d)o(\023)-18
b(e\014nir)14 b(un)e(syst)o(\022)-18 b(eme)12 b(d'exploitation)j(par)e
(ce)e(qu'il)j(fait)e(que)g(par)g(ce)g(qu'il)i(est.)d
Fx(J.L.)179 1541 y(Peterson.)179 1705 y FB(Un)i(syst)o(\022)-18
b(eme)13 b(d'exploitation)j(est)d(un)h(ensem)o(ble)g(de)f(pro)q(c)o
(\023)-18 b(edures)15 b(coh)o(\023)-18 b(eren)o(tes)14
b(qui)g(a)f(p)q(our)h(but)f(de)g(g)o(\023)-18 b(erer)179
1750 y(la)13 b(p)o(\023)-18 b(en)o(urie)15 b(de)e(ressources.)h
Fx(J-l.)f(Stehl)o(\023)-19 b(e)12 b(P.)h(Ho)n(char)n(d.)236
2032 y FC(Quelques)i(syst)o(\022)-21 b(emes)9 b FB(:)179
2095 y FC(le)14 b(batc)o(h)20 b FB(Le)13 b(traitemen)o(t)h(par)f(lot)h
(\(disparus\).)179 2158 y FC(in)o(teractifs)19 b FB(P)o(our)14
b(les)g(utilisateurs)h(\(ce)e(c)o(her)h(UNIX\).)179 2220
y FC(temps)h(r)o(\023)-21 b(eels)21 b FB(P)o(our)15 b(manipuler)j(des)d
(situations)i(ph)o(ysiques)h(par)d(des)g(p)o(\023)-18
b(eriph)o(\023)g(eriques)18 b(\(OS9)d(un)h(p)q(etit)270
2266 y(fr)o(\022)-18 b(ere)13 b(fut)o(\023)-18 b(e)13
b(d'UNIX\).)179 2329 y FC(distribu)o(\023)-21 b(es)19
b FB(UNIX?,)12 b(les)i(micros)g(no)o(y)o(aux?)g(l'a)o(v)o(enir?)179
2391 y FC(moniteurs)g(transactionnels)21 b FB(Ce)16 b(son)o(t)h(des)g
(applications)j(qui)d(manipulen)o(t)j(des)d(ob)r(jets)f(\022)-19
b(a)17 b(t^)-19 b(ac)o(hes)270 2437 y(m)o(ultiples)16
b(comme)d(les)g(comptes)h(dans)g(une)f(banque,)h(des)g(r)o(\023)-18
b(eserv)n(ations,)14 b(etc)179 2500 y FC(SE)g(orien)o(t)o(\023)-21
b(es)15 b(ob)r(jets)21 b FB(Micro)14 b(No)o(y)o(aux.)179
2611 y Fu(1.2.1)55 b(Les)18 b(couc)n(hes)h(fonctionnelles)236
2681 y FB(Couc)o(hes)14 b(fonctionnelles)c(:)230 2744
y({)21 b(Programmes)14 b(utilisateurs)230 2806 y({)21
b(Programmes)14 b(d'application)h(\023)-18 b(editeurs/tableu)q(rs/BD/)q
(CA)o(O)p eop
%%Page: 5 13
5 12 bop 75 50 a Fz(1.2.)26 b(STR)o(UCTURE)14 b(G)483
39 y(\023)478 50 y(EN)542 39 y(\023)537 50 y(ERALE)f(DES)h(SYST)903
39 y(\022)898 50 y(EMES)h(D'EXPLOIT)m(A)m(TION)420 b
FD(5)484 975 y
 currentpoint currentpoint translate 0.46823 0.46823 scale neg exch
neg exch translate
 484 975 a 14 w @beginspecial 0 @llx 0
@lly 481 @urx 436 @ury 4810 @rwi @setspecial
%%BeginDocument: eps/vue.utilisateur.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /estroke {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /efill {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath unpagectm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /apstroke {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc pie chord or {
        closepath
    } if crlinalph setalpha pie not chord not and {
        crfrtarw {
            2 copy crlinw exch gsave newpath angle1 1 add cos radius mul radius add angle1 1 add sin radius mul radius add moveto angle1 cos radius mul radius add angle1 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if crendarw {
            2 copy crlinw exch gsave newpath angle2 1 sub cos radius mul radius add angle2 1 sub sin radius mul radius add moveto angle2 cos radius mul radius add angle2 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if
    } if crlincp setlinecap crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /apfill {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup 5 -2 roll arc pie chord or {
        closepath
    } if 1 xscale div 1 yscale div scale crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /mkepath {
    dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def /closed exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc closed pie or chord or {
        closepath
    } if unpagectm
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
0 0 480.424683 435.355988 rectclip
-74.621902 -261.730804 translate
74.621902 261.730804 480.424683 435.355988 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2.412863e-35 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 2.1 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 58.863281 1 -1.016989 224.636719 486.363281 0.903477 0 0 0.880033 21.682526 58.347687 sc5mt astore estroke
/txtdraw true def
/txlndraw true def
(       Hardware ) [4.5 0 4.5 0 -37.988998 -20.753998 -9.038315 -20.753998 4.5 0 4.5 0 4.5 0 14.003998 0 9 0 7.992004 0 9.738007 0 12.996002 0 9 0 7.667999 0 7.992004 0 0 0] 266.317932 468.351624 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 0] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 84.364594 -1.011853 1 369.864594 342.135406 1 0 0 1 -7.000015 7.5 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 124.531982 -1.00803 1 407.031982 299.968018 1 0 0 1 -3.999992 9.5 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 171.223633 -1.00584 1 454.723633 254.276367 1 0 0 1 -5.000015 8.5 sc5mt astore estroke
(Kernel ) [13.554001 0 7.991989 0 7.721985 0 10.007996 0 7.992004 0 5.003998 0 0 0] 240 366 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 12 -3] dotx
(vi ) [9 0 5.003998 0 0 0] 270 325 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 0] dotx
(cc ) [7.992004 0 7.992004 0 0 0] 360 386 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 0] dotx
(make ) [14.994003 0 9.000015 0 9.828003 0 7.992004 0 0 0] 239 537 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 0] dotx
(awk ) [9 0 12.996002 0 10.007996 0 0 0] 160 451 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 0] dotx
(ls ) [5.003998 0 7.002014 0 0 0] 345 509 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 0] dotx
(SHELL ) [10.007996 0 14.003998 0 12.006012 0 12.006012 0 12.006012 0 0 0] 245 582 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -6 -9] dotx
( ) [0 0] 134 631 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 0] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 58.863281 1 -1.016989 224.636719 486.363281 1.04788 0 0 0.350799 -159.755524 498.384094 sc5mt astore estroke
(utilisateur) [10.007996 0 5.993988 0 5.003998 0 5.003998 0 5.003998 0 7.002014 0 9 0 5.993988 0 7.992004 0 10.007996 0 0 0] 243.365479 444.462494 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -149 203] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 58.863281 1 -1.016989 224.636719 486.363281 1.04788 0 0 0.350799 32.244476 525.384094 sc5mt astore estroke
(utilisateur) [10.007996 0 5.993988 0 5.003998 0 5.003998 0 5.003998 0 7.002014 0 9 0 5.993988 0 7.992004 0 10.007996 0 0 0] 243.365479 444.462494 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 43 230] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 58.863281 1 -1.016989 224.636719 486.363281 1.04788 0 0 0.350799 195.244476 429.384094 sc5mt astore estroke
(utilisateur) [10.007996 0 5.993988 0 5.003998 0 5.003998 0 5.003998 0 7.002014 0 9 0 5.993988 0 7.992004 0 10.007996 0 0 0] 243.365479 444.462494 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 206 134] dotx
/crendarw true def
/crfrtarw true def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.515411 -17.939697 162.242294 616.469849 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -6.868652 -20.147949 327.934326 637.073975 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -13.615662 -12.764648 458.807831 538.382324 1 0 0 1 0 0 sc6mt astore ssl
(Applications ) [12.546005 0 10.007996 0 10.007996 0 5.004013 0 5.003998 0 7.992004 0 9 0 5.993988 0 5.003998 0 9 0 10.007996 0 7.002014 0 0 0] 219 295 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 10 -8] dotx
end
grestore
%%EndDocument
 @endspecial 484 975 a
 currentpoint currentpoint translate 1 0.46823 div 1 0.46823 div scale
neg exch neg exch translate
 484 975 a 644 1067 a Fq(Fig.)13
b FD(1.2)g({)g Fp(Point)i(de)g(vue)h(utilisateur)230
1191 y FB({)21 b(Programmes)14 b(syst)o(\022)-18 b(eme)13
b(assem)o(bleurs/compi)q(l)q(ateurs/)o(\023)-17 b(edi)q(teurs)16
b(de)d(liens/c)o(hargeurs)230 1254 y({)21 b(syst)o(\022)-18
b(eme)14 b(d'exploitation)230 1316 y({)21 b(langage)15
b(mac)o(hine)230 1378 y({)21 b(microprogramme)230 1440
y({)g(mac)o(hines)15 b(ph)o(ysiques)179 1551 y Fu(1.2.2)55
b(L'arc)n(hitecture)17 b(du)i(syst)o(\022)-27 b(eme)236
1621 y FB(L'arc)o(hitecture)19 b(globale)h(d'UNIX)c(est)i(une)g(arc)o
(hitecture)h(par)f(couc)o(hes)g(\(co)q(quilles\))j(successsiv)o(es)179
1666 y(comme)13 b(le)h(mon)o(tre)g(la)g(\014gure)g(1.2.)f(Les)g
(utilisateure)j(comm)o(uniquen)o(t)g(a)o(v)o(ec)d(la)h(couc)o(he)g(la)g
(plus)g(\023)-18 b(ev)o(olu)o(\023)g(ee)179 1712 y(celle)15
b(des)f(application)q(s.)i(Le)e(programmeur)h(lui)g(v)n(a)f(p)q(ouv)o
(oir)i(en)e(fonction)h(de)f(ces)g(b)q(esoins)i(utiliser)g(des)179
1758 y(couc)o(hes)e(de)f(plus)h(en)f(plus)i(profondes.)179
1803 y(Chaque)e(couc)o(he)g(est)g(construite)g(p)q(our)h(p)q(ouv)o(oir)
f(^)-18 b(etre)12 b(utilis)o(\023)-18 b(ee)15 b(sans)e(connaitre)h(les)
f(couc)o(hes)h(inf)o(\023)-18 b(erieures)179 1849 y(\(ni)14
b(leur)f(fonctionnemen)o(t,)i(ni)f(leur)g(in)o(terface\).)179
1895 y(Cette)f(hi)o(\023)-18 b(erarc)o(hie)17 b(d'encapsulation)g(p)q
(ermet)e(d')o(\023)-18 b(ecrire)14 b(des)h(application)q(s)i(plus)e(p)q
(ortables)h(si)f(elles)g(son)o(t)178 1940 y(\023)-18
b(ecrites)15 b(dans)f(les)h(couc)o(hes)g(hautes.)f(P)o(our)h(des)f
(application)q(s)i(o)q(\022)-20 b(u)15 b(le)f(temps)g(de)h(calcul)g
(prime)g(dev)n(an)o(t)g(la)179 1986 y(p)q(ortabilit)o(\023)-18
b(e,)15 b(les)f(couc)o(hes)g(basses)g(seron)o(t)f(utilis)o(\023)-18
b(ees.)179 2096 y Fu(1.2.3)55 b(L'arc)n(hitecture)17
b(du)i(no)n(y)n(au)236 2166 y FB(L'autre)14 b(appro)q(c)o(he)i(arc)o
(hitecturale)g(est)e(l'arc)o(hitecture)h(in)o(terne)g(du)g(No)o(y)o(au)
f(\(k)o(ernel\).)h(C'est)e(\022)-19 b(a)14 b(dire)179
2212 y(l'arc)o(hitecture)e(du)f(programme)g(qui)h(v)n(a)e(nous)h(in)o
(terfacer)h(a)o(v)o(ec)e(le)h(mat)o(\023)-18 b(eriel.)12
b(Le)e(but)h(ici)h(est)e(de)h(simpli\014er)179 2257 y(la)g(compr)o
(\023)-18 b(ehension)13 b(et)d(la)i(fabrication)g(du)f(syst)o(\022)-18
b(eme.)11 b(Nous)f(c)o(herc)o(hons)i(donc)f(ici)h(\022)-19
b(a)11 b(d)o(\023)-18 b(ecomp)q(oser)11 b(le)h(no)o(y)o(au)179
2303 y(en)h(parties)h(disjoin)o(tes)h(\(qui)f(son)o(t)f(concev)n(ables)
i(et)e(programmables)i(de)e(fa\030)-17 b(cons)14 b(disjoin)o(tes\).)g
(La)f(Figure)179 2349 y(1.3)f(donne)h(une)g(id)o(\023)-18
b(ee)13 b(de)f(ce)g(que)h(p)q(eut)f(^)-18 b(etre)12 b(l'arc)o
(hitecture)i(in)o(terne)f(d'un)g(no)o(y)o(au)g(UNIX.)e(Noter)g(bien)j
(la)179 2394 y(p)q(osition)h(ext)o(\023)-18 b(erieure)14
b(des)g(biblioth)o(\022)-18 b(equ)q(es)16 b(.)p eop
%%Page: 6 14
6 13 bop 75 50 a FD(6)750 b Fz(CHAPITRE)14 b(1.)27 b(INTR)o(ODUCTION)14
b(ET)g(HISTORIQUE)484 2024 y
 currentpoint currentpoint translate 0.36853 0.36853 scale neg exch
neg exch translate
 484 2024 a 14 w @beginspecial
0 @llx 0 @lly 612 @urx 792 @ury 6120 @rwi @setspecial
%%BeginDocument: eps/architecture.noyau.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /defpat {
    7 dict begin /FontDict 9 dict def FontDict begin /cache exch def /key exch def /proc exch cvx def /mtx exch matrix invertmatrix def /height exch def /width exch def /ctm matrix currentmatrix def /ptm matrix identmatrix def /str (12345678901234567890123456789012) def end /FontBBox [ 0 0 FontDict /width get FontDict /height get ] def /FontMatrix FontDict /mtx get def /Encoding StandardEncoding def /FontType 3 def /BuildChar {
        pop begin FontDict begin width 0 cache {
            0 0 width height setcachedevice
        } {
            setcharwidth
        } ifelse 0 0 moveto width 0 lineto width height lineto 0 height lineto closepath clip newpath gsave proc grestore end end
    } def FontDict /key get currentdict definefont end
} bind def /patpath {
    dup type /dicttype eq {
        begin unpagectm
    } {
        exch begin unpagectm concat
    } ifelse currentdict setfont FontDict begin FontMatrix concat width 0 dtransform round width div exch round width div exch 0 height dtransform round height div exch round height div exch 0 0 transform round exch round exch ptm astore setmatrix errordict begin /*undefinedresult /undefinedresult load def /undefinedresult {
        pop 43
    } bind def end 42 pathbbox errordict begin /undefinedresult /*undefinedresult load def end dup 43 ne {
        5 -1 roll
    } if 42 eq {
        height div ceiling height mul 4 1 roll width div ceiling width mul 4 1 roll height div floor height mul 4 1 roll width div floor width mul 4 1 roll 2 index sub height div ceiling cvi exch 3 index sub width div ceiling cvi exch 4 2 roll moveto FontMatrix ptm invertmatrix pop {
            gsave ptm concat dup str length idiv {
                str show
            } repeat dup str length mod str exch 0 exch getinterval show grestore 0 height rmoveto
        } repeat pop
    } {
        pop
    } ifelse end end
} bind def /patfil {
    gsave clip patpath grestore newpath
} bind def /trpatfil {
    patfil
} bind def /oppatfil {
    gsave 1 setgray 1 setalpha fill grestore patfil
} bind def /trpateofil {
    pateofil
} bind def /oppateofil {
    gsave 1 setgray 1 setalpha fill grestore pateofil
} bind def /pateofil {
    gsave eoclip patpath grestore newpath
} bind def /patstrk {
    gsave strokepath clip patpath grestore newpath
} bind def /trpatstrk {
    patstrk
} bind def /oppatstrk {
    gsave 1 setgray 1 setalpha stroke grestore patstrk
} bind def /patashow {
    (0) exch {
        2 copy 0 exch put pop dup false charpath currentpoint 5 index type /dicttype eq {
            5 index patfil
        } {
            6 index 6 index patfil
        } ifelse moveto 3 copy pop rmoveto
    } forall pop pop pop dup type /dicttype ne {
        pop
    } if pop
} bind def /patshow {
    0 exch 0 exch patashow
} bind def /rpatfil {
    gsave setalpha pop setrgbcolor rpath tpatstr cvs cvn invpats {
        piddict exch get
    } {
        ipiddict exch get
    } ifelse findfont oppatfil grestore
} bind def /tpatstr 10 string def /getpat {
    tpatstr cvs cvn invpats {
        piddict exch get
    } {
        ipiddict exch get
    } ifelse
} bind def end
TopDrawDict begin 8 8 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 8 2 rectfill
} bind /hline1 true defpat pop 16 16 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 16 8 rectfill
} bind /hline2 true defpat pop 32 32 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 32 16 rectfill
} bind /hline3 true defpat pop 8 8 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 2 8 rectfill
} bind /vline1 true defpat pop 16 16 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 8 16 rectfill
} bind /vline2 true defpat pop 32 32 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 16 32 rectfill
} bind /vline3 true defpat pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 1 setlinewidth stroke
} bind /rdline1 true defpat pop 30 30 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 3 setlinewidth stroke
} bind /rdline2 true defpat pop 60 60 [ 300 72 div 0 0 300 72 div 0 0 ] {
    4 4 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 4 setlinewidth stroke
} bind /rdline3 true defpat pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 1 setlinewidth stroke
} bind /ldline1 true defpat pop 30 30 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 3 setlinewidth stroke
} bind /ldline2 true defpat pop 60 60 [ 300 72 div 0 0 300 72 div 0 0 ] {
    4 4 scale 2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 4 setlinewidth stroke
} bind /ldline3 true defpat pop 7 7 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 4 0 moveto 4 7 lineto 0 4 moveto 7 4 lineto 0.5 setlinewidth stroke
} bind /gray1 true defpat pop 11 11 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 6 0 moveto 6 11 lineto 0 6 moveto 11 6 lineto 0.5 setlinewidth stroke
} bind /gray2 true defpat pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 8 0 moveto 8 15 lineto 0 8 moveto 15 8 lineto 0.5 setlinewidth stroke
} bind /gray3 true defpat pop 19 19 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 10 0 moveto 10 19 lineto 0 10 moveto 19 10 lineto 0.5 setlinewidth stroke
} bind /gray4 true defpat pop 23 23 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 12 0 moveto 12 23 lineto 0 12 moveto 23 12 lineto 0.5 setlinewidth stroke
} bind /gray5 true defpat pop 31 31 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 16 0 moveto 16 31 lineto 0 16 moveto 31 16 lineto 0.5 setlinewidth stroke
} bind /gray6 true defpat pop 20 20 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 10 0 moveto 20 10 lineto 0 10 moveto 10 20 lineto 10 0 moveto 0 10 lineto 20 10 moveto 10 20 lineto 0.25 setlinewidth stroke
} bind /xhatch1 true defpat pop 30 30 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 0.5 setlinewidth stroke
} bind /xhatch2 true defpat pop 60 60 [ 300 72 div 0 0 300 72 div 0 0 ] {
    4 4 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /xhatch3 true defpat pop 20 20 [ 300 72 div 0 0 300 72 div 0 0 ] {
    newpath 10 10 4 0 360 arc closepath fill
} bind /dots1 true defpat pop 30 30 [ 300 72 div 0 0 300 72 div 0 0 ] {
    newpath 15 15 8 0 360 arc closepath fill
} bind /dots2 true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    newpath 25 25 20 0 360 arc closepath fill
} bind /dots3 true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 setlinecap 0 26 moveto 50 0 rlineto 0 1 moveto 50 0 rlineto 26 50 moveto 0 -25 rlineto 1 25 moveto 0 -25 rlineto 1 setlinewidth stroke
} bind /bricks true defpat pop 25 25 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0.5 0.5 scale 0 0 25 25 rectfill 25 25 25 25 rectfill
} bind /check1 true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 25 25 rectfill 25 25 25 25 rectfill
} bind /check2 true defpat pop 80 80 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 40 40 rectfill 40 40 40 40 rectfill
} bind /check3 true defpat pop 20 20 [ 300 72 div 0 0 300 72 div 0 0 ] {
    newpath 10 0 moveto 20 10 lineto 10 20 lineto 0 10 lineto closepath fill
} bind /diamond1 true defpat pop 30 30 [ 300 72 div 0 0 300 72 div 0 0 ] {
    newpath 15 0 moveto 30 15 lineto 15 30 lineto 0 15 lineto closepath fill
} bind /diamond2 true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    newpath 25 0 moveto 50 25 lineto 25 50 lineto 0 25 lineto closepath fill
} bind /diamond3 true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 setlinecap 10 10 30 30 rectfill 0 0 moveto 50 50 lineto 0 50 moveto 50 0 lineto 1 setlinewidth stroke
} bind /weave true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 setlinecap 25 25 22 0 360 arc closepath 1 setlinewidth stroke
} bind /donut true defpat pop 100 100 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap -20 0 moveto 25 25 rlineto -25 25 rlineto 25 25 rlineto -25 25 rlineto 5 0 moveto 25 25 rlineto -25 25 rlineto 25 25 rlineto -25 25 rlineto 30 0 moveto 25 25 rlineto -25 25 rlineto 25 25 rlineto -25 25 rlineto 55 0 moveto 25 25 rlineto -25 25 rlineto 25 25 rlineto -25 25 rlineto 80 0 moveto 25 25 rlineto -25 25 rlineto 25 25 rlineto -25 25 rlineto 1 setlinewidth stroke
} bind /ziggy true defpat pop 100 100 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 0 -20 moveto 25 25 rlineto 25 -25 rlineto 25 25 rlineto 25 -25 rlineto 0 5 moveto 25 25 rlineto 25 -25 rlineto 25 25 rlineto 25 -25 rlineto 0 30 moveto 25 25 rlineto 25 -25 rlineto 25 25 rlineto 25 -25 rlineto 0 55 moveto 25 25 rlineto 25 -25 rlineto 25 25 rlineto 25 -25 rlineto 0 80 moveto 25 25 rlineto 25 -25 rlineto 25 25 rlineto 25 -25 rlineto 1 setlinewidth stroke
} bind /zaggy true defpat pop 80 80 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 0 0 moveto 0 40 lineto 40 40 lineto 40 80 lineto 80 80 lineto 0 60 moveto 20 60 lineto 20 80 lineto 20 0 moveto 20 20 lineto 60 20 lineto 60 60 lineto 80 60 lineto 1 setlinewidth stroke
} bind /zaggyd true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 setlinecap 0 12.5 moveto 6.25 0 rlineto 0 37.5 moveto 31.25 0 rlineto 50 12.5 moveto -31.25 0 rlineto 50 37.5 moveto -6.25 0 rlineto 12.5 0 moveto 0 6.25 rlineto 37.5 0 moveto 0 31.25 rlineto 12.5 50 moveto 0 -31.25 rlineto 37.5 50 moveto 0 -6.25 rlineto 1 setlinewidth stroke
} bind /plusses true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 setlinecap 0 10 moveto 10 0 rlineto 0 -10 rlineto 0 40 moveto 10 0 rlineto 0 10 rlineto 50 10 moveto -10 0 rlineto 0 -10 rlineto 50 40 moveto -10 0 rlineto 0 10 rlineto 7 7 moveto 36 0 rlineto 0 36 rlineto -36 0 rlineto closepath 1 setlinewidth stroke
} bind /boxes true defpat pop 100 100 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 setlinecap 50 50 40 0 360 arc closepath 40 60 moveto 0 8 rlineto 60 60 moveto 0 8 rlineto 50 45 moveto 0 8 rlineto 35 35 moveto 35 21 65 21 65 35 curveto 1 setlinewidth stroke
} bind /smiley true defpat pop /piddict 256 dict def piddict begin /1 /gray3 def /2 /gray2 def /3 /gray1 def /4 /gray6 def /5 /gray5 def /6 /gray4 def /7 /hline3 def /8 /hline2 def /9 /hline1 def /10 /vline3 def /11 /vline2 def /12 /vline1 def /13 /rdline3 def /14 /rdline2 def /15 /rdline1 def /16 /ldline3 def /17 /ldline2 def /18 /ldline1 def /19 /check3 def /20 /check2 def /21 /check1 def /22 /xhatch3 def /23 /xhatch2 def /24 /xhatch1 def /25 /dots3 def /26 /dots2 def /27 /dots1 def /28 /zaggyd def /29 /zaggy def /30 /ziggy def /31 /diamond3 def /32 /diamond2 def /33 /diamond1 def /34 /donut def /35 /weave def /36 /bricks def /37 /plusses def /38 /boxes def /39 /smiley def end /invpats true def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 612 792 rectclip
0 0 612 792 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2.1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [1 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2.1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [1 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2.1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [1 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
end
grestore
/usedash true def
/strdsh [1 2] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 522 0 39 582 1 0 0 1 -3 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 522 0 36 154 1 0 0 1 -3 0 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(Materiel ) [16.992004 0 9 0 5.994003 0 7.992004 0 7.992004 0 5.004013 0 7.992004 0 5.003998 0 0 0] 208 226 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 40 -129] dotx
/txtdraw true def
/crtxtred 0.333338 def /crtxtgrn 0.333338 def /crtxtblu 0.333338 def /txtinclr true def
/txlndraw true def
/crtxlnred 0.666662 def /crtxlngrn 0.666662 def /crtxlnblu 0.666662 def /txlninclr true def
(Niveau Materiel ) [12.995998 0 4.824001 0 8.82 0 7.991997 0 9 0 10.008003 0 4.5 0 16.991997 0 8.999992 0 5.994003 0 7.992004 0 7.992004 0 5.003998 0 7.992004 0 5.003998 0 0 0] 49 257 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -15 -123] dotx
(Niveau Noyau ) [12.995998 0 4.824001 0 8.82 0 7.991997 0 9 0 10.008003 0 4.5 0 12.996002 0 9 0 9 0 9 0 10.007996 0 0 0] 49 257 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -17 -96] dotx
(Niveau Noyau ) [12.995998 0 4.824001 0 8.82 0 7.991997 0 9 0 10.008003 0 4.5 0 12.996002 0 9 0 9 0 9 0 10.007996 0 0 0] 49 257 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -17 301] dotx
(Niveau Utilisateur ) [12.995998 0 4.824001 0 8.82 0 7.991997 0 9 0 10.008003 0 4.5 0 12.996002 0 5.994003 0 5.003998 0 5.003998 0 5.003998 0 7.001999 0 9 0 5.994003 0 7.992004 0 10.007996 0 7.992004 0 0 0] 49 257 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -18 333] dotx
/txtdraw true def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txlndraw true def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
(Applications/utilisateurs ) [12.546005 0 10.007996 0 10.007996 0 5.003998 0 5.003998 0 7.991989 0 9 0 5.993988 0 5.003998 0 9 0 10.007996 0 7.002014 0 5.003998 0 10.007996 0 5.993988 0 5.003998 0 5.003998 0 5.003998 0 7.002014 0 9 0 5.993988 0 7.992004 0 10.007996 0 7.992004 0 7.002014 0 0 0] 208 226 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -4.000015 465] dotx
/usedash false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 348 669 149 -29 0.771812 0 0 0.862069 101.409393 92.275879 sc6mt astore rstroke
(bibliotheques ) [10.007996 0 5.003998 0 10.007996 0 5.003998 0 5.003998 0 9 0 5.993988 0 10.007996 0 7.992004 0 10.007996 0 10.007996 0 7.992004 0 7.002014 0 0 0] 351.049988 651.169983 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 22 0] dotx
( ) [0 0] 189 688 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -3 0] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 348 669 149 -29 1.704698 0 0 0.999998 -407.234985 -109.998665 sc6mt astore rstroke
(Interface   appels - systeme  ) [7.002014 0 10.007996 0 5.993988 0 7.992004 0 7.992004 0 5.993988 0 9 0 7.992004 0 7.992004 0 4.5 0 4.5 0 4.5 0 9 0 10.007996 0 10.007996 0 7.992004 0 5.003998 0 7.002014 0 4.5 0 5.994019 0 4.5 0 7.002014 0 9 0 7.002014 0 5.994019 0 7.992004 0 14.994019 0 7.992004 0 4.5 0 0 0] 371.274994 651.169922 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -162 -110] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 348 669 149 -29 1.395973 0 0 6.310343 -149.798767 -3720.619629 sc6mt astore rstroke
(Sous-Systeme Gestion des processus ) [10.007996 0 9 0 10.007996 0 7.002014 0 5.993988 0 10.007996 0 9 0 7.002014 0 5.993988 0 7.992004 0 14.993988 0 7.992004 0 -135.836975 -20.754028 14.003998 0 7.992004 0 7.002014 0 5.993988 0 5.003998 0 9 0 10.007996 0 4.5 0 10.007996 0 7.992004 0 7.002014 0 4.5 0 10.007996 0 7.667999 0 9 0 7.992004 0 7.992004 0 7.002014 0 7.002014 0 10.007996 0 7.002014 0 0 0] 399.503021 651.169983 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -12 -168] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 348 669 149 -29 1.395973 0 0 2.37931 -431.798767 -1090.758179 sc6mt astore rstroke
(Sous-Systeme de  Gestion de fichiers ) [10.007996 0 9 0 10.007996 0 7.002014 0 5.993988 0 10.007996 0 9 0 7.002014 0 5.993988 0 7.992004 0 14.993988 0 7.992004 0 -61.496979 -20.754028 10.007996 0 7.992004 0 4.5 0 -84.770996 -20.754028 14.003998 0 7.992004 0 7.002014 0 5.993988 0 5.003998 0 9 0 10.007996 0 4.5 0 10.007996 0 7.992004 0 4.5 0 5.544006 0 5.003998 0 7.992004 0 10.007996 0 5.003998 0 7.992004 0 7.992004 0 7.002014 0 0 0] 399.503021 651.169983 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -294 -168] dotx
/usedash true def
/strdsh [1 2] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 348 669 149 -29 0.979866 0 0 1.068965 44.006737 -316.137848 sc6mt astore rstroke
("scheduler" ) [9.98999 0 7.002014 0 7.992004 0 10.007996 0 7.992004 0 10.007996 0 10.007996 0 5.003998 0 7.992004 0 7.992004 0 9.98999 0 0 0] 374.011017 651.170044 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 37 -270] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 348 669 149 -29 0.979866 0 0 1.620694 43.006737 -631.244019 sc6mt astore rstroke
(communication interprocessus ) [7.992004 0 9 0 14.993988 0 14.993988 0 10.007996 0 10.007996 0 5.003998 0 7.992004 0 9 0 5.993988 0 5.003998 0 9 0 10.007996 0 -114.740967 -20.754028 5.003998 0 10.007996 0 5.993988 0 7.992004 0 7.812012 0 10.007996 0 7.667999 0 9 0 7.992004 0 7.992004 0 7.002014 0 7.002014 0 10.007996 0 7.002014 0 0 0] 361.501038 651.169983 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 36 -216] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 348 669 149 -29 0.979866 0 0 1.068965 44.006737 -354.137848 sc6mt astore rstroke
(gestion memoire) [9 0 7.992004 0 7.002014 0 5.993988 0 5.003998 0 9 0 10.007996 0 4.5 0 14.993988 0 7.992004 0 14.993988 0 9 0 5.003998 0 7.667999 0 0 0] 357.92804 651.170044 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 37 -308] dotx
/usedash false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 348 669 149 -29 0.583893 0 0 0.862069 -25.194641 -192.724121 sc6mt astore rstroke
(cache ) [7.992004 0 9 0 7.992004 0 10.007996 0 7.992004 0 0 0] 370.007996 651.169983 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -170 -285] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 348 669 149 -29 1.409396 0 0 0.862069 -431.469757 -258.724121 sc6mt astore rstroke
(caractere  |       bloc  ) [7.992004 0 9 0 7.992004 0 9 0 7.992004 0 5.993988 0 7.992004 0 7.667999 0 7.992004 0 4.5 0 4.5 0 3.959991 0 4.5 0 4.5 0 4.5 0 4.5 0 4.5 0 4.5 0 4.5 0 10.007996 0 5.003998 0 9.000031 0 7.992004 0 4.5 0 0 0] 378.957001 651.169983 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -289 -351] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 348 669 149 -29 1.409396 0 0 1.206897 -431.469788 -514.413696 sc6mt astore rstroke
(Controleurs  ) [12.996002 0 9 0 10.007996 0 5.993988 0 7.667999 0 9 0 5.003998 0 7.992004 0 10.007996 0 7.992004 0 7.002014 0 4.5 0 0 0] 406.66806 651.170044 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -289 -376] dotx
/crendarw true def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -99.799988 111 424.399994 1 0 0 1 -3 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -35.799988 222 426.399994 1 0 0 1 -3 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -25.799988 194 350.399994 1 0 0 1 -3 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -17.799988 168 256.399994 1 0 0 1 -3 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 63.252808 -30.155396 271.373596 466.577698 1 0 0 1 -3 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -19.799957 381 523.399963 1 0 0 1 -3 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 49.364807 -18.258179 314.817596 678.629089 1 0 0 1 -3 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -19.980652 -98.304932 281.490326 671.652466 1 0 0 1 -3 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -59.800049 404 629.400024 1 0 0 1 -3 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -59.799988 385 304.399994 1 0 0 1 -3 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -18.800018 222 519.400024 1 0 0 1 -3 0 sc6mt astore ssl
/crlinw 1 def
/crendarw false def
/crfrtarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 170 -53 230 641 1 0 0 1 -3 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 40 -50 220 638 1 0 0 1 -3 0 sc6mt astore ssl
/txtdraw true def
/crtxtred 0.333338 def /crtxtgrn 0.1451 def /crtxtblu 0.277123 def /txtinclr true def
/txtwpat true def
/txlndraw true def
/crtxlnred 0.666662 def /crtxlngrn 0.666662 def /crtxlnblu 0.666662 def /txlninclr true def
gsave /offs [7.001999 0 10.007996 0 5.994003 0 7.991997 0 7.991997 0 10.007996 0 10.007996 0 5.994003 0 5.003998 0 9 0 10.007996 0 7.001999 0 0 0] def /nof 0 def [1 0 0 1 48 -10] concat /Times-Bold [ 18 1 mul 0 0 18 0 0 ] selectfont crtxtpat findfont /filpat exch def newpath 83.994003 648 moveto 1 1 (Interuptions ) length {
    gsave 1 sub (Interuptions ) exch 1 getinterval true charpath txtdraw {
        txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha filpat txtwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } if grestore offs nof 2 getinterval aload pop rmoveto /nof nof 2 add def
} for grestore
/crlinw 2 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 100 120 360 -36 1 0 0 1 16 2 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 100 120 360 -36 1.347222 0 0 1 -72.722137 98 sc6mt astore rstroke
/txtdraw true def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txlndraw true def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
(Controle Materiel ) [12.996002 0 9 0 10.007996 0 5.994003 0 7.667999 0 9.000015 0 5.003998 0 7.992004 0 4.5 0 16.992004 0 9 0 5.993988 0 7.992004 0 7.992004 0 5.003998 0 7.992004 0 5.003998 0 0 0] 208 226 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 12 -31] dotx
end
grestore
end
grestore
grestore
%%EndDocument
 @endspecial 484 2024 a
 currentpoint currentpoint translate 1 0.36853 div 1 0.36853 div scale
neg exch neg exch translate
 484 2024 a 658 2115 a Fq(Fig.)e
FD(1.3)h({)h Fp(A)o(r)n(chite)n(ctur)n(e)f(du)j(noyau)p
eop
%%Page: 7 15
7 14 bop 1817 50 a FD(7)179 485 y Fw(Chapitre)32 b(2)179
700 y Fy(Syst)m(\022)-56 b(eme)38 b(de)h(Gestion)g(de)179
825 y(Fic)m(hiers)236 1090 y FB(v)o(enfo)q(ot)14 b(D.Revuz)27
b(ddfo)q(oto)q(ev)o(enfo)q(ot)236 1143 y(Le)11 b(syst)o(\022)-18
b(eme)11 b(de)f(gestion)i(de)f(\014c)o(hiers)h(est)e(un)h(outil)h(de)f
(manipulation)j(des)d(\014c)o(hiers)h(et)e(de)h(la)g(structure)179
1189 y(d'arb)q(orescence)j(des)g(\014c)o(hiers)g(sur)f(disque)i(et)e(a)
g(aussi)h(le)f(r^)-19 b(ole)14 b(sous)g(UNIX)e(de)h(conserv)o(er)h
(toutes)f(les)h(in-)179 1234 y(formations)f(don)o(t)f(la)g(p)o(\023)-18
b(erennit)o(\023)g(e)13 b(est)f(imp)q(ortan)o(te)h(p)q(our)g(le)f(syst)
o(\022)-18 b(eme.)12 b(Ainsi)h(tous)f(les)g(ob)r(jets)g(imp)q(ortan)o
(ts)179 1280 y(du)17 b(syst)o(\022)-18 b(eme)17 b(son)o(t)g(r)o(\023)
-18 b(ef)o(\023)g(erenc)o(\023)g(es)17 b(dans)h(le)f(syst)o(\022)-18
b(eme)17 b(de)g(\014c)o(hiers)h(\(m)o(\023)-18 b(emoire,)17
b(terminaux,)h(p)o(\023)-18 b(eriph)o(\023)g(erique)q(s)179
1326 y(v)n(ari)o(\023)g(es,)13 b(etc\).)236 1424 y(Il)h(p)q(ermet)g(de)
f(plus)i(une)f(utilisation)j(facile)d(des)g(\014c)o(hiers)h(et)e(g)o
(\022)-18 b(ere)13 b(de)h(fa\030)-17 b(con)14 b(transparen)o(te)g(les)g
(di\013)o(\023)-18 b(e-)179 1470 y(ren)o(ts)13 b(probl)o(\022)-18
b(emes)15 b(d'acc)o(\022)-18 b(es)13 b(aux)h(supp)q(orts)g(de)f(masse)g
(\(partage,)h(d)o(\023)-18 b(ebit,)14 b(droits,)f(etc\).)179
1684 y Fv(2.1)66 b(Le)22 b(concept)h(de)f(\014c)n(hier)236
1780 y FB(L'unit)o(\023)-18 b(e)14 b(logique)h(de)f(base)f(du)h(S.G.F.)
e FC(le)i(\014c)o(hier)p FB(.)236 1879 y(Le)f(con)o(ten)o(u)h(est)f(en)
o(ti)o(\022)-18 b(eremen)o(t)14 b(d)o(\023)-18 b(e\014ni)15
b(par)e(le)h(cr)o(\023)-18 b(eateur.)236 1977 y(Sur)14
b(Unix)g(les)f(\014c)o(hiers)i(ne)e(son)o(t)g(pas)h(t)o(yp)o(\023)-18
b(es.)236 2076 y FC(Un)15 b(\014c)o(hier)e(Unix)h(est)h(une)f(suite)h
(\014nie)e(de)i(b)o(ytes)g(\(o)q(ctets\).)236 2129 y(Mat)o(\023)-21
b(erialis)o(\023)g(e)15 b(par)g(une)f(ino)q(de)g(et)h(des)g(blo)q(cs)f
(du)g(disque.)236 2228 y FB(L'ino)q(de)h(d)o(\023)-18
b(e\014nit)14 b(le)g(\014c)o(hier,)f(soit)h(principale)q(men)o(t)i(les)
d(informations)c(:)230 2313 y({)21 b(le)14 b(propri)o(\023)-18
b(etaire)15 b(et)e(le)g(group)q(e)h(propri)o(\023)-18
b(etaire,)230 2391 y({)21 b(les)14 b(droits)g(d'acc)o(\022)-18
b(es)13 b(des)h(di\013)o(\023)-18 b(eren)o(ts)14 b(utilisateurs,)230
2468 y({)21 b(la)14 b(taille,)230 2545 y({)21 b(la)14
b(date)f(de)g(cr)o(\023)-18 b(eation,)230 2623 y({)21
b(la)14 b(lo)q(calisation)j(sur)c(disque.)179 2708 y(on)g(trouv)o(era)h
(sur)f(d'autre)h(syst)o(\022)-18 b(emes)13 b(d'autres)h(structures)f
(d'information)j(p)q(our)d(d)o(\023)-18 b(ecrire)14 b(les)g(\014c)o
(hiers.)236 2761 y Fx(Un)f(nom)f(est)g(li)o(\023)-19
b(e)13 b(\022)-20 b(a)12 b(un)h(\014chier)e(\(une)h(r)o(\023)-19
b(ef)o(\023)g(er)n(enc)n(e)11 b(indique)f(un)j(\014chier\))e(mais)h(un)
g(\014chier)g(n)l('est)f(p)n(as)i(li)o(\023)-19 b(e)179
2806 y(\022)f(a)13 b(une)g(r)o(\023)-19 b(ef)o(\023)g(er)n(enc)n(e,)11
b(un)i(\014chier)f(p)n(eut)g(exister)g(sans)h(avoir)f(de)h(nom)g(dans)g
(l'arb)n(or)n(esc)n(enc)m(e.)p eop
%%Page: 8 16
8 15 bop 75 50 a FD(8)674 b Fz(CHAPITRE)14 b(2.)27 b(SYST)1180
39 y(\022)1175 50 y(EME)15 b(DE)f(GESTION)g(DE)f(FICHIERS)179
170 y Fv(2.2)88 b(Fic)n(hiers)24 b(ordinaires)g(/)e(Fic)n(hiers)j(sp)o
(\023)-32 b(eciaux.)236 254 y FB(On)13 b(a)g(deux)h(grands)g(t)o(yp)q
(es)g(de)f(\014c)o(hiers)h(sous)g(Unix)20 b(:)179 318
y FC(les)15 b(\014c)o(hiers)e(standards)22 b FB(que)13
b(son)o(t)g(par)g(exemple)g(les)h(\014c)o(hiers)g(texte,)e(les)h(ex)o
(\023)-18 b(ecutables,)14 b(etc.)e(C'est-\022)-19 b(a-)270
364 y(dire)14 b(tout)f(ce)g(qui)h(est)f(manipul)o(\023)-18
b(e)16 b(par)d(les)h(utilisateurs.)179 427 y FC(Les)h(\014c)o(hiers)e
(sp)o(\023)-21 b(eciaux)21 b FB(p)o(\023)-18 b(eriph)o(\023)g(eriques,)
14 b(m)o(\023)-18 b(emoire)11 b(etc,)g(qui)h(ne)f(son)o(t)h(manipulabl)
q(es)i(que)d(par)h(l'in)o(ter-)270 473 y(m)o(\023)-18
b(ediaire)15 b(du)e(syst)o(\022)-18 b(eme.)179 537 y
Fx(L)n(es)11 b(c)n(atalo)n(gues)c FB(son)o(t)k(des)g(\014c)o(hiers)h
(sp)o(\023)-18 b(eciaux,)12 b(il)g(faut)f(en)g(e\013et)g(p)q(our)g(les)
h(manipuler)h(ph)o(ysiquemen)o(t)g(faire)179 583 y(app)q(el)h(au)g
(syst)o(\022)-18 b(eme)472 567 y Fs(1)490 583 y FB(.)179
675 y(Les)13 b(\014c)o(hiers)h(ph)o(ysiques)h(dans)f(le)g(r)o(\023)-18
b(ep)q(ertoire)14 b(/dev)230 785 y({)21 b(Character)13
b(devices)353 840 y(les)h(terminaux)g(\(cla)o(viers,)g(\023)-18
b(ecrans\))353 894 y(les)14 b(impriman)o(tes)353 949
y(etc)230 1013 y({)21 b(Blo)q(c)o(k)14 b(devices)353
1067 y(la)g(m)o(\023)-18 b(emoire)353 1122 y(les)14 b(disques)353
1177 y(les)g(bandes)g(magn)o(\023)-18 b(etiques)353 1231
y(etc)179 1296 y(Les)13 b(\014c)o(hiers)h(\022)-19 b(a)13
b(usages)h(logiques)h(et)e(non)h(ph)o(ysiques)230 1415
y({)21 b(liens)15 b(sym)o(b)q(oliques)230 1478 y({)21
b(pseudo-terminaux)230 1542 y({)g(so)q(c)o(k)o(ets)230
1606 y({)g(tub)q(es)14 b(nomm)o(\023)-18 b(es)353 1661
y(Ce)11 b(dernier)i(t)o(yp)q(e)g(de)e(\014c)o(hiers)i(sp)o(\023)-18
b(eciaux)14 b(est)e(utilis)o(\023)-18 b(e)14 b(p)q(our)e(servir)h(d'in)
o(terface)f(en)o(tre)g(disques,)270 1706 y(en)o(tre)h(mac)o(hines)i(et)
e(sim)o(uler)8 b(:)k(des)i(terminaux,)g(des)f(lignes)i(de)e(comm)o
(unication,)j(etc.)179 1820 y Fu(2.2.1)55 b(Les)18 b(catalogues)g
(\(historique\))236 1891 y FB(Les)f(arb)q(orescences)g(de)g(\014c)o
(hiers)g(et)f(de)g(catalogues,)i(organis)o(\023)-18 b(ees)18
b(comme)e(un)h(graphe)g(acyclique)1703 1875 y Fs(2)1723
1891 y FB(,)179 1937 y(apparaissen)o(t)g(a)o(v)o(ec)e(le)g(pro)r(jet)f
(MUL)m(TICS.)g(Cette)g(organisation)k(logique)e(du)f(disque)i(a)d(les)h
(a)o(v)n(an)o(tages)179 1982 y(suiv)n(an)o(ts)8 b(:)270
2092 y(Une)13 b(racine,)h(un)f(acc)o(\022)-18 b(es)14
b(absolu)g(ais)o(\023)-18 b(e.)270 2138 y(Une)13 b(structure)h
(dynamique.)270 2184 y(Une)f(grande)h(puissance)h(d'expression.)270
2229 y(Un)e(graphe)h(acyclique.)179 2339 y(L'organisation)20
b(est)d(arb)q(orescen)o(te)i(a)o(v)o(ec)f(quelques)i(connections)f
(suppl)o(\023)-18 b(emen)o(taires)21 b(\(liens)e(m)o(ultiples)179
2385 y(sur)d(un)g(m)o(^)-18 b(eme)16 b(\014c)o(hier\))h(qui)g(en)f(fon)
o(t)g(un)g(graphe.)g(Mais)h(ce)f(graphe)h(doit)f(rester)g(acyclique,)i
(p)q(our)f(les)179 2431 y(raisons)d(suiv)n(an)o(tes)9
b(:)236 2523 y(L'ensem)o(ble)18 b(des)e(algorithmes)i(simples)g
(utilisabl)q(es)h(sur)d(des)h(graphe)g(acycliques)i(comme)d(le)g(par-)
179 2568 y(cours,)e(la)g(v)o(\023)-18 b(eri\014cation)17
b(des)d(\014c)o(hiers)h(libres,)g(etc.)f(deviennen)o(t)i(b)q(eaucoup)f
(plus)g(di\016ciles)h(\022)-19 b(a)13 b(\023)-18 b(ecrire)15
b(p)q(our)179 2614 y(des)e(graphes)h(admettan)o(t)g(des)f(cycles.)p
75 2689 705 2 v 120 2728 a Fo(1.)8 b(les)15 b(r)o(\023)-17
b(ep)q(ertoires)12 b(resten)o(t)h(accessibles)g(en)h(lecture)g(comme)f
(des)h(\014c)o(hiers)f(ordinaires)g(\(essa)o(y)o(ez)g(de)i(faire)e
Fn(cat)k(".")p Fo(\),)d(mais)75 2767 y(l'acc)o(\022)-17
b(es)10 b(en)g(\023)-17 b(ecriture)9 b(est)j(con)o(train)o(t,)c(p)q
(our)j(assurer)f(la)h(structure)e(arb)q(orescen)o(te)o(.)120
2806 y(2.)f(Ce)k(n'est)f(pas)f(un)h(arbre)g(car)f(un)h(\014c)o(hier)f
(p)q(eut)h(a)o(v)o(oir)f(plusieurs)f(r)o(\023)-17 b(ef)o(\023)g
(erences)p eop
%%Page: 9 17
9 16 bop 75 50 a Fz(2.3.)26 b(LES)14 b(INODES)1398 b
FD(9)602 708 y
 currentpoint currentpoint translate 0.3711 0.3711 scale neg exch neg
exch translate
 602 708 a 14 w @beginspecial 0 @llx 0
@lly 455 @urx 377 @ury 4550 @rwi @setspecial
%%BeginDocument: eps/chapitre2.arbo1.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 454.660095 376.684082 rectclip
-70.178406 -223.131348 translate
70.178406 223.131348 454.660095 376.684082 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [1 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1.053221 0 -31.906113 sc5mt astore pop false {
    sc5mt dodrawctm 70.5 242.5 454 357 0 rfpath unpagectm
} {
    454 357 70.5 242.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
[1 0 0 1 0 0] dodrawctm
454
357
2
[1 0 0 -1 -70.5 599.5]

/_NXImageStr0 _NXImageString 0 2394 getinterval def {currentfile _NXImageStr0 readhexstring pop} bind image
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc03f00ff00ffffffffc3ffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fc003ff0ffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3f0f00ff0ffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffff0fffffffffffffffffffffffffffffffffffffc00ffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3f3fc0ff0ffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffff
ffffffffffffffffffffffffff03ffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffc0ff0ffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffff
ff03ffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffc0ff0ffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffff03ffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffc3ff0ffffffff3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffff03fffc00ffff0303003ff00300c0f03ff00ffffffc0fff
ffffffffffffffffffffffffffffffffffffc3fff0fff0fffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffff03fff0f03fffc0c03c0fc0c3c0f0000fc0c3ffffff00ffffffffffffffffffffffffff
ffffffffffffc3ffc3fff0fffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffff03fff0f03fffc0fc3c0f03c3c0f03c0f03c3fffffff00fffffffffffffffffffffffffffffffffffffc3ff0fcff0ff
fffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffff03ffffc03fffc0fff00f03ffc0f03c0f0003ffc03fff00ffffffffffffffffffffffffffffffffffffc3fc3f0ff0fffffff0ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffff03fffc303fffc0ff0c0f03ffc0f03c0f03ffffc03ffff0ffffffffffffffffffffffffffffffffffffc3f0000ff0fffffff0ffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffff03fff0f03fffc0fc3c0f03ffc0f03c0f03ffffffffff00ffffffffffffffffffffffffffffffffffffc3f0000ff0fffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffff03ff30f03fffc0fc3c0f03ffc0f03c0f03fffffffff00fffffffffffffffffffffffffffffffffffffc3fffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0
ffffffffffffffffffffffffffffffffffffff03fc30003fffc0fc000fc0c3c0f03c0fc0c3ffffff00ffffffffffffffffffffffffffffffffffffffc3fffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff
fffffffffffffc00003c0c0fff003f0303f00f00000c03f00ffffffc0fffffffffffffffffffffffffffffffffffffffc03fffff00fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc03fffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03fffffff3fffffffffffffffffffff3ffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03fffffffc0ffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff0ffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffc3ffcffffffffffffffffffff03fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffc0fffc3fffffc3fffffffcffffc0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffc0fffffffff03fff0ffffffc3fffffff0fffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffc03ffffffffc3ffff0ffffffc3fffffffc3fffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ff03fffffffff0ffffc3ffffffc3ffffffff0fffffc0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03fffffffffc3ffffc3ffff
ffc3ffffffff0ffffff03ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00fffffffffc0fffff0fffffffc3ffffffffc3ffffff0fff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffff03fffff0fffffffc3fffffffff0ffffffc0ffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffc3fffffc3fffffffc3fffffffff0fffffff03fffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0fffffffffff0ffffffc3fffffffc3fffffffffc3fffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc03ffffffffff03ffffff0ffffffffc3ffffffffff0fffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03ffffffffffc0fffffff0ffffffffc3ffffffffff0ffffffff03ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffff03fffffffffff0fffffffc3ffffffffc3ffffffffffc3fffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff03fffffffffffc3fffffffc3ffffffffc3fffffffffff0ffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffff00ffffffffffff0ffffffff0fffffffffc3fffffffffff0fffffffff03ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffff03ffff
ffff0fffffffffc3fffffffffffc3ffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffffc0ffffffffc3fffffffffc3ffffffff
ffff0fffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc03ffffffffffff0fffffffffc3fffffffffc3ffffffffffffc3fffffffff0ffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc03ffffffffffffc3fffffffff0ffffffffffc3ffffffffffffc3fffffffffc0fffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03ffffffffffffc0ffffffffff0ffffffffffc3fffffffffffff0ffffffffff03ffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03fffffffffffff03fffffffffc3ffffffffffc3fffffffffffffc3ffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00fffffffffffffc3ffffffffffc3ffffffffffc3fffffffffffffc3ffffffffffc0ffffffffffffffff3fffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffffff0fffffffffff0fffffffffffc3ffffffffffffff0fffffffffff03fffffffffffff003fffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffc0ffffffffffffff03ffffffffffc3fffffffffffc3ffffffffffffffc3fffffffffff0fffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffc0ffffffffffffffc0fffffffffffc3fffffffffffc3ffffffffffffffc3fffffffffffc0ffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc03ffffffffffffff
0ffffffffffff0ffffffffffffc3fffffffffffffff0ffffffffffff03ffffffffffc0c3fffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03ffffffffffffffc3ffffffffffff0ffffffffff
ffc3fffffffffffffffc3ffffffffffff0ffffffffff03f3fffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03fffffffffff03fffffffffffffff0ffffffffffffc3ffffffefffbfc3fffffffffffffffc3fff
ffff3ffffc3ffffffffc0ff03ffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00ffffffffff00fffffffffffffff03ffffffffffffc3ffffffefffbfc3ffffffffffffffff0fffffffcfffff03fffffffc0ff0
3ffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03fccc0fffffffff00fffffffffffffffc0fffffffffffff0fffffffebfabfc3ffffffffffffffffc3ffffff0fffffc0fffffffc3fc003ffffffffffffffffffffff
fffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03c03f03fffffffc0ffffffffffffffff0ffffffffffffff0ffffffffeeabfc3ffffffffffffffffc3fffff003fffffc3fffffff0303f0fffffffffffffffffffffffffffffffffffffffffffff3
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcffc0f03ffffffc0ffffffffffffffffc3fffffffffffffc3fffffffeaafbfc3fffffffffffffffff0ffffc03cffffff03fffffffc0ff0fffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffcfc0fc0fffffc03fffffffffffffffc0ffffffffffffffc3fffffffeaafffc3fffffffffffffffffc3fff00ff3fffffc0ffffffc00fc003fffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffc03f03f03ffff03ffffff3fffffffff03ffffffffffffff0ffffffffeafbbfc3fffffffffffffffffc3ffc0ffc3ffffffc3ffffffc3f03f0fffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fff
fc3f03c3ffff03ffffffc3ffffffffc3fffffffffffffff0ffffffffebfebfc3ffffffffffffffffff0fff3fc00fffffff0fffffff3c0ff0fffffffffffffffffffffffffffffffffffffffffff1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00fc0fc0fc03ffff03ffffffcf3ff
ffffff0fffffffffffffffc3ffffffffefffbfc3ffffffffffffffffffc3ff0f00ffffffffc0ffffffc00fc0fffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03003f03c3ffff00fffffff3f3fffffffc3fffffffffffffffc3
ffffffffffffbfc3ffffffffffffffffffc3fff003fffffffff03ffffff03f03f3fffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00f00f03cffffc0fffffff00f3ffffffc0ffffffffffffffff0ffffffffbeaaabfc3ffffffff
fffffffffff0ffc03fc03fffffff0fffffff3c0ff03ffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0fc0fc03fffc0ffffffffc00cffffff03ffffffffffffffff0fffffffeaeaaabfc3fffffffffffffffffffc3ffcff033fff
ffffc0ffffffc03ff03ffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03f0fc3fffc03ffffffc0fc00fffffc3ffffffffffffffffc3ffffffffbeaaabfc3fffffffffffffffffffc3ffcc303cffffffff03ffffff03fc003ffff
fffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03f03cfffc03ffff3ff3c3f00fffff0fffffffffffffffffc3fffffffffefffbfc3ffffffffffffffffffff0fff0f030fffffffff0ffffffcff03f0ffffffffffffffffffffffffffff
fffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0fcfffff03ffff03fc3c0ff0ffff03fffffffffffffffff0ffffffffffffffbfc3ffffffffffffffffffffc3ffcf033fffffffffc3ffffff3c0ff0fffffffffffffffffffffffffffffffffffffff0ffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0fcffff03ffffcc0fc3cfffcfffc0ffffffffffffffffff0fffffffffffaaabfc3ffffffffffffffffffffc3ffcf03fffffffffff03ffffff00fc0fffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffff003fff00fffffff03c03fcfffff0fffffffffff03fffffc3ffffffffffeaaabfc3fffffffffffffffffffff0fff00fc0fffffffffc0ffffff03fc0fffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffcffffc0ffffffff03f03f3ffffc3ffffffffffc03fffffc3ffffffffffeaaabfc3fffffffffffffffffffffc3ffffc003fffffffffc3ffffc03c03fffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcfffc0ffffffff
c00f00c3fffc0fffffffffffcfffffff0fffffffffffefffbfc3fffffffffffffffffffffc3ffff00fcffffffffff03ffc03c00ffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0fffffffff0f03c00ffff03fffffffffff
cfff3fff0fffffffffffefffbfc3ffffffffffffffffffffff0ffff0330ffffffffffc0fffcff0fffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc03ffffffffc3f03ffffffc3ffffffffffffc3ff3ffc3fffffffffffeaaa
bfc3ffffffffffffffffffffffc3fff0f00fffffffffffc3fff3fffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03fffffffffc0fc0ffffff0fffffffffffffc03c3ffc3fffffffffffeaaabfc3ffffffffffffffffffff
fff0fff0fc3ffffffffffff03ffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03ffffffffffc0ff00ffffc3ffffffffffcf3f000fff0ffffffffffffeaaabfc3fffffffffffffffffffffff0fff0fcfcfffffffffffc
0ffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffff03f03fffc0fffffffffffc03fc03fff0ffffffffffffefffbfc3fffffffffffffffffffffffc3ffc0ff0ffffffffffffc3ffffffffffffffffffffff
fffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00fffffffffffff00f0ffff03ffffffffffff00ffffffc3ffffffffffffffffbfc3ffffffffffffffffffffffff0fffffc03ffffffffffff0fffffffffffffffffffffffffffffffffffffffffffff0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffffffc00ffffc3fffffffffffff003f3fffc3ffffffffffffeaaabfc3ffffffffffffffffffffffff0ffffc003ffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffc0ffffffffffffffffcfffff0ffffffffffffff30033fff0fffffffffffffeaaabfc3ffffffffffffffffffffffffc3ff300fc3ffffffffffff03fffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffc03fffffffffffffffffffff03ffffffffffffffff003fff0fffffffffffffeaaabfc3fffffffffffffffffffffffff0ffc03f03fffffffffffff0fffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03ffff
fffffffffffffffffc0fffffffffffffff3fc03ffc3fffffffffffffefffbfc3fffffffffffffffffffffffff0fff3ffcffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03ffffffffffffffffffffff0ffffff
fffffffff003fffffc3fffffffffffffffffbfc3fffffffffffffffffffffffffc3ff3fff00fffffffffffff03fffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03ffffffffffffffffffffffc3ffffffffffffffcfcfcffff0ffffff
ffffffffeaaabfc3ffffffffffffffffffffffffff0fffffc0cffffffffffffff0fffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00fffffffffffffffffffffff0fffffffffffffffc3cfcffff0ffffffffffffffeaaabfc3ffffffff
ffffffffffffffffff0ffff0c0f3fffffffffffffc3ffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0fffffffffffffffffffffff03fffffffffffffffc03fcfffc3ffffffffffffffeaaaffc3ffffffffffffffffffffffffffc3ffc3
c0c3ffffffffffffff03fffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0fffffffffffffffffffffffc0fffffffffffffffff00f0fffc3ffffffffffffffefffffc3fffffffffffffffffffffffffff0fff3c0cfffffffffffffffc0ffff
fffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc03fffffffffffffffffffffff0ffffffffffffffffffc003fff0fffffffffffffffffffffc3fffffffffffffffffffffffffff0fff3c0fffffffffffffffffc3fffffffffffffffffffffffffff
fffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc03fffffffffffffffffffffffc3fffffffffffffffffff003fff0fffffffffffffffffffffc3fffffffffffffffffffffffffffc3ffc03ffffffffffffffffff03fffffffffffffffffffffffffffffffffffff3ffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffff03fffffffffffffffffffffffc0fffffffffffffffffffffffffc3fffffffffffffffffffffc3ffffffffffffffffffffffffffff0fffffffffffffffffffffffc0fffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffff03ffffffffffffffffffffffff03fffffffffffffffffffffffffc3fffffffffffffffffffffc3ffffffffffffffffffffffffffff0ffffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00f
fffffffffffffffffffffffc3ffffffffffffffffffffffffff0ffffffffffffffffffffffc3ffffffffffffffffffffffffffffc3ffffffffffffffffffffffff03fffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0fffffffffffffffffffffffff0
fffffffffffffffffffffffffff0ffffffffffffffffffffffc3fffffffffffffffffffffffffffff0ffffffffffffffffffffffffc0fffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffc0fffffffffffffffffffffffff03ffffffffffffffffffffffff
ffc3ffffffffffffffffffffffc3fffffffffffffffffffffffffffff0fffffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffc0fffffffffffffffffffffffffc0fffffffffffffffffffffffffff0fffffffffffffffffffff
ffc3fffffffffffffffffffffffffffffc3fffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffc03fffffffffffffffffffffffff0ffffffffffffffffffffffffffff0fffffffffffffffffffffffc3ffffffffffffffffffff
ffffffffff0fffffffffffffffffffffffffc0fffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffff03fffffffffffffffffffffffffc3fffffffffffffffffffffffffffc3fffffffffffffffffffffffc3ffffffffffffffffffffffffffffff0fffffffffffff
fffffffffffff03ffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffff03ffffffffffffffffffffffffff0ffffffffffffffffffffffffffffc3fffffffffffffffffffffffc3ffffffffffffffffffffffffffffffc3ffffffffffffffffffffffffff0fffffffff
fffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffff03ffffffffffffffffffffffffffff0ffffffffffffffffffffffffc3fffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffc0fffffffffffffffffffffffffffffff0
ffffffffffffffffffffffffffffffffffffffffffffffc3ff00ffffffffffffffffffffffffffc0fffffffffffffffffffffffffffff0ffffffffffffffffffffffffc3fffffffffffffffffffffffffffffff0fffffffffffffffffffffffffff03ffffffffffffffffffffffffffffff0ffffffffffffffffffffffff
ffffffffffffffffffffff03fc0ffffffffffffffffffffffff0ff0fffffffffffffffffffffffffffc3c3ffffffffffffffffffffffffc3fffffffffffffffffffffffffffffffc3fffffffffffffffffffffffffff0ffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffc03
c0ffffffffffffffffffffffffc0fc3fffffffffffffffffffffffffffc3c3ffffffffffffffffffffffffc3ffffffffffffffffffffffffffffffff0f0fffffffffffffffffffffffffc3ff3ffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffff00003ffffffffffffffffffffff
ffc0c0ffffffffffffffffffffffffffffc00ffffffffffffffffffffffff0c30fffffffffffffffffffffffffffffffc303fffffffffffffffffffffffff03f0ffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffc0003fffffffffffffffffffffffff0003ffffffffffffffffff
ffffffffffc00ffffffffffffffffffffffff0000fffffffffffffffffffffffffffffffc003fffffffffffffffffffffffffc0c03fffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffff0000fffffffffffffffffffffffffc000fffffffffffffffffffffffffffff00003fffffffff
fffffffffffff0000ffffffffffffffffffffffffffffffff003ffffffffffffffffffffffffffc000fffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffc00000ffffffffffffffffffffffffc0000ffffffffffffffffffffffffffff00003ffffffffffffffffffffff0000fffffff
fffffffffffffffffffffff00000fffffffffffffffffffffffffff000fffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffff0000003fffffffffffffffffffffff000003fffffffffffffffffffffffffff0000fffffffffffffffffffffffc003ffffffffffffffffffffffffffffffc
0000ffffffffffffffffffffffffff00003ffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffc00000ffffffffffffffffffffffffc00003ffffffffffffffffffffffffffff0003fffffffffffffffffffffffc003fffffffffffffffffffffffffffffff0000ffffffffffffffffffff
fffffc00000ffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffc0003fffffffffffffffffffffffffffff000ffffffffffffffffffffffffc003fffffffffffffffffffffffffffffffc0003fffffffffffffffffffffffff000003ffffffffffff
fffffffffff0ffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffff000ffffffffffffffffffffffffffffffc003ffffffffffffffffffffffffc003ffffffffffffffffffffffffffffffff0003ffffffffffffffffffffffffff00003fffffffffffffffffffffff0ffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00fffffffffffffffffffffffffffffffc00ffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffff003fffffffffffffffffffffffffffc000fffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffc03ffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffc00ffffffffffffffffffffffffffffc003ffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffc0fffffffffffffffffffffffffff00fffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffff03ffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffc3fffffffffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ff
ffffffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffc3ffffffffffffffffffffffffc03f03ff00fc0003f00ffc03fc03ffffffffffffffffc03fc0fff03fc03ffffffff0ffffffffffffffffffffffffffffffffffffc03fc0ff000fc03fc03ffffffffffff00ff03ff00ff00fffffffffffffffffff00fc03fc03ffffffffffffffffffeabfaaffaaffffffffffffffffff
ffffc3fc03fc3c3c0003c003f0f0ffc3ffffffffffffffffc3ff00ffc03ffc3ffffffff3ffffffffffffffffffffffffffffffffffffc3ff00fc003f0f0ffc3ffffffffffff0ffc03fc3c3ff0fffffffffffffffffff0ff0f0ffc3ffffffffffffffffffebfeaabffaffffffffffffffffffffffc3c003f03f0c000f3f00
c0fc3fc3ffffffffffffffffc3f000fc003ffc3ffffffff0ffffffffffffffffffffffffffffffffffffc3ff00fcffff0f03fc3ffffffffffff0fc003fc3c0ff0fffffffffffffffffff0fc0f03fc3ffffffffffffffffffebfbfaaffaffffffffffffffffffffffc3ff03f03f0cff0fffc0c0fc3fc3ffffffffffffffff
c3ffc0fff03ffc3ffffffff0ffffffffffffffffffffffffffffffffffffc3fcc0fcfffc0f03fc3ffffffffffff0fff03f03c0ff0fffffffffffffffffff0fc0f03fc3ffffffffffffffffffebfffeaffaffffffffffffffffffffffc3ff03f00f0ffc3fff03c03c3fc3ffffffffffffffffc3ffc0fff03ffc3ffffffff0
ffffffffffffffffffffffffffffffffffffc3fcc0fc03fc0f03fc3ffffffffffff0fff03f03c0ff0fffffffffffffffffff0fc0f03fc3ffffffffffffffffffebfffabffaffffffffffffffffffffffc3ff03fc003ffc3ff00ff000ffc3ffffffffffffffffc3ffc0fff03ffc3ffffffff0ffffffffffffffffffffffff
ffffffffffffc3f3c0fc003c0f03fc3ffffffffffff0fff03f03c0ff0fffffffffffffffffff0fc0f03fc3ffffffffffffffffffebffaafffaffffffffffffffffffffffc3ff03ff00fffc3ff003fc03ffc3ffffffffffffffffc3ffc0fff03ffc3ffffffff0ffffffffffffffffffffffffffffffffffffc3c3c0fff00c
0f03fc3ffffffffffff0fff03f03c0ff0fffffffffffffffffff0ff0f03fc3ffffffffffffffffffebffaabffaffffffffffffffffffffffc3ff03fc003ff0ffff00f000ffc3ffffffffffffffffc3ffc0fff03ffc3ffffffff0ffffffffffffffffffffffffffffffffffffc3cfc0fffc0c0f03fc3ffffffffffff0fff0
3f03c0ff0fffffffffffffffffff0ffc003fc3ffffffffffffffffffebfffaaffaffffffffffffffffffffffc3ff03f0fc0ff0ffffc0c3f03fc3ffffffffffffffffc3ffc0fff03ffc3ffffffff0ffffffffffffffffffffffffffffffffffffc3c0003ffc0c0f03fc3ffffffffffff0fff03f03c0ff0fffffffffffffff
ffff0ffff03fc3ffffffffffffffffffebfffeaffaffffffffffffffffffffffc3ff03f0fc0fc0fffff0c3f03fc3ffffffffffffffffc3ffc0fff03ffc3ffffffff0ffffffffffffffffffffffffffffffffffffc3c0003ffc0c0f03fc3ffffffffffff0fff03f03c0ff0fffffffffffffffffff0ffff0ffc3ffffffffff
ffffffffebffffaffaffffffffffffffffffffffc3ff03f0fc0fc3ff0ff0c3f03fc3ffffffffffffffffc3ffc0fff03ffc3ffffffff0ffffffffffffffffffffffffffffffffffffc3ffc0f0fc0f0f0ffc3ffffffffffff0fff03fc3c3ff0fffffffffffffffffff0fffc0ffc3ffffffffffffffffffebfaffaffaffffff
ffffffffffffffffc3ff03fc3c3fc3ff03c3f0f0ffc3ffffffffffffffffc3ffc0fff03ffc3ffffffff0ffffffffffffffffffffffffffffffffffffc3ffc0f0303f0f0ffc3ffffffffffff0fff03fc3c3ff0fffffffffffffffffff0ffc03ffc3ffffffffffffffffffebfabebffaffffffffffffffffffffffc3f0003f
00ff03ffc00ffc03ffc3ffffffffffffffffc3fc000f0003fc3ffffffff0ffffffffffffffffffffffffffffffffffffc3ffc0f003ffc03ffc3ffffffffffff0ff0003f00fff0fffffffffffffffffff0fc03fffc3ffffffffffffffffffebfeaafffaffffffffffffffffffffffc3ffffffffffffffffffffffffc3ffff
ffffffffffffc3fffffffffffc3ffffffff0ffffffffffffffffffffffffffffffffffffc3fffffffffffffffc3ffffffffffff0ffffffffffff0fffffffffffffffffff0fffffffc3ffffffffffffffffffebfffffffaffffffffffffffffffffffc3ffffffffffffffffffffffffc3ffffffffffffffffc3ffffffffff
fc3ffffffff0ffffffffffffffffffffffffffffffffffffc3fffffffffffffffc3ffffffffffff0ffffffffffff0fffffffffffffffffff0fffffffc3ffffffffffffffffffebfffffffaffffffffffffffffffffffc03ffffffffffffffffffffffc03ffffffffffffffffc03fffffffffc03ffffffff0ffffffffffff
ffffffffffffffffffffffffc03fffffffffffffc03ffffffffffff00ffffffffff00fffffffffffffffffff00fffffc03ffffffffffffffffffeabfffffaafffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffcfffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffc3fffffff3ffffffffffffffffffffffffffcfffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffff0ffffffff0ffffffffffffffffffffffffffc3ffffffffffffffffffffffffffff0fffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffc3ffffffff0ffffffffffffffffffffffffffc3ffffffffffffffffffffffffffff00c03fffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffff0fffffffff0ffffffffffffffffffffffffffc3ffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffff0fffffffff0ffffffffffffffffffffffffffc3ffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffcff
fffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffc3fffffffff0ffffffffffffffffffffffffffc3ffffffffffffffffffffffffffff0003fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffff0ffffffffffffffffffffffffff
fffffffffffffffffffffff0ffffffffffffffffffffffffffffffffff0fffffffffc3ffffffffffffffffffffffffff0fffffffffffffffffffffffffffff0003fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffff0
fffffffffffffffffffffffffffffffffc3fffffffffc3ffffffffffffffffffffffffff0fffffffffffffffffffffffffffffc00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff
fffffffffc3fffffffffc3ffffffffffffffffffffffffff0fffffffffffffffffffffffffffffc00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffff0ffffffffffc3ff
ffffffffffffffffffffffff0fffffffffffffffffffffffffffffc00fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffc3ffffffffffc3ffffffffffffffffffffffffff
0fffffffffffffffffffffffffffffc03fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffc3ffffffffffc3ffffffffffffffffffffffffff0fffffffffffffffffffffff
ffffffc03fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffff0fffffffffffc3ffffffffffffffffffffffffff0fffffffffffffffffffffffffffffc0ffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffc3fffff00f03fffffffffffffffffffffffffffffffffffff3fffffffffffffffffffffffffffffffc3fffffffffffc3ffffffffffffffffffffffffff0fffffffffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffff
ffffffffc00c00fffffffc3fffffffffffc3fffffc0f03fffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffff0ffffffffffffc3ffffffffffffffffffffffffff0fffffffffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffff030030fffffffc3f
fffffffffff0fffffc0f03fffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffff0ffffffffffffc3ffffffffffffffffffffffffff0ffffffffffffffffffffffffffffff3fffffffffffffffffffffffffffffffffffffffffcffffff03f03ffffffff0fffffffffffff0fffffc0fffff
fffffffffffffffffffffffffffffffffff0fffffffffffffffaafffffffffffffc3ffffffffffff0ffffffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffff03f03ffffffff0fffffffffffffc3ffffc0c03f003f00f03c0ff003f00ffffff
fffffffffff0fffffffffffffffeafffffffffffff0fffffffffffff0ffffffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff003000c00fc000003ffffffc3fffffffffffffc3ffffc0f03c0c3c0c3c0003c0c3c0c3ffffffffffffffff0ffffffffffff
fffeaffffffffffffc3fffffffffffff0ffffffffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3c3c0f0f03f03f03fffffffc3fffffffffffffc3ffffc0f0303c303c3c0f0303c303c3ffffffffffffffff0fffffffffffffffeaffffffffffffc3ffffe
abffffff0ffffffffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0f3c0f0f03f03f03fffffff0fffffffffffffff0ffffc0f0303ff0003c0f0303ff0003ffffffffffffffff0ffffffffaaffaabeaeaffaaffffff0ffffffabffffff0fffffffffffffff
fffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc03fc0ffc03f03f03fffffff0fffffffffffffff0ffffc0f0303ff03ffc0f0303ff03ffffffffffffffffff0fffffffeaebeaebeaaabebebffffc3ffffffabffffff0ffffffffffffffffffffffffffc3fffeabfffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00fc0fc303f03f03ffffffc3fffffffffffffffc3fffc0f0303ff03ffc0f0303ff03ffffffffffffffffff0fffffffabebabebeafababeaffff0fffffffabffffff0ffffffffffffffffffffffffffc3fffafafffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffc03c0f0f03f03f03ffffffc3fffffffffffffffc3fffc0f0303ff03ffc0f0303ff03ffffffffffffffffff0fffffffaaababffeafababeaffff0fffffffabeaafff0fffffffffffffffffbffbfffffc3fffafabffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffcf03c0f0f03f03f03ffffff0ffffffffffffffffc3fffc0f03c0c3c0c3c0f03c0c3c0c3ffffffffffffffff0fffffffabffabffeafababeafffc3fffffffabafafff0ffffffffffffffffebfebfffffc3ffeafabffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3c3c0c0003f03f0
3ffffff0fffffffffffffffff0fff00000f00ff00f00300f00ff00fffffffffffffffff0fffffffabffabffeafababeafff0ffffffffababefff0fffffffffffffffeaaaaaaabaac2afeafabffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00ff03c0c0c00c00fffffc3ffffffffffffffff
f0fffffffffffffffffffffffffffffffffffffffffffff0fffffffabffabffeafababeaffc3ffffffffabaafffc3ffffffffffffffffabfabeafeb0fabeafabffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffffffffffffffffc3fffffffffffffffffffff
fffffffffffffffffffffff0fffffffeaebeaebeafabebebffc3ffffffffabeabffc3ffffffffffffffffabfabeabef0fabeafabffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffff0
ffffffffaaffaafaabaafaafff0fffffffffabfaaffc3ffffffffffffffffabfabfabaf0eabeafabffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff
fc3fffffffffabbeaffc3ffffffffffffffffabfabfabbf0babeafabfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffff0ffffffffffabafaffc3fff
fffffffffffffabfabfeabf0fabeafabfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffff0fffffffffeaaaabffc3ffffffffffffffffabfabfeabf0
fabfafaffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffc3fffffffffffffffffc3ffffffffffffffffabbabbfaff0aabfafafffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff0ffffffffffffffffffc3ffffffffffffffffeafeaffaff0aeafeabfffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff0ffffffffffffffffffc3fffffffffffffffffffffffaff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffc3fffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffc3ffffffffffffffffffc3fffffffffffffffffffffffbff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffff
fffffffffffffff0fffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffff0fffffffffffffffffffc3fffffffffffffffffffffaebff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffff0ffffffff
fffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffc3fffffffffffffffffff0ffffffffffffffffffffffaaffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffffffc3fffffffffffffffffffffffffffffff
fffffffffff0ffffffffffffffffffffffc3fffffffffffffffffff0ffffffffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffff0ffffffffffff
ffffffffff0ffffffffffffffffffff0ffffffffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffc3fffffffffffff
fffffff0ffffffffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffff3fffffffffffffffffffff0fffffffffffffffffffff0ffffffffffffffff
ffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffff0fffffffffffffffffffff0ffffffffffffffffffffffffffc3ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffc3fffffffffffffffffffff0ffffffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffc3f3fffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffff0ffffffffffffffffffffff0ffffffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffff0ffffffffffffffffffffffffff0c3fffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffc3ffffffffffffffffffffff0ffffffffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc
fc3ffffffffffffffffffffffffff003fffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffc3ffffffffffffffffffffff0ffffffffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3c3fffffffffffffffffffff
fffc0003fffffffffffffffffffffffffffffffffffffff0fffffffffffffffffff0fffffffffffffffffffff3c3ffffffffffffffffffffffffcf0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00fffffffffffffffffffffffffc0000ffffffffffffffff
fffffffffffffffffffffff0ffffffffffffffffffc3fffffffffffffffffffff00303ffffffffffffffffffffffc00c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00ffffffffffffffffffffffffff0000fffffffffffffffffffffffffffffffffffffff0
ffffffffffffffffff0ffffffffffffffffffffff00003ffffffffffffffffffffffc0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00003ffffffffffffffffffffffffc000fffffffffffffffffffffffffffffffffffffff0ffffffffffffffffff0fffff
fffffffffffffffff0000fffffffffffffffffffffffc0003ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00003ffffffffffffffffffffffffc000fffffffffffffffffffffffffffffffffffffff0fffffffffffffff0fc3ffffffffffffffffffffff0000fff
ffffffffffffffffffffc0003ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffff000fffffffffffffffffffffffffffffffffffffff0fffffffffffffff0f0fffffffffffffffffffffffc003ffffffffffffffffffffffff000
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0003ffffffffffffffffffffffffffc00fffffffffffffffffffffffffffffffffffffff3fffffffffffffff003fffffffffffffffffffffffc003ffffffffffffffffffffffff000ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000ffffffffffffffffffffffffffff00fffffffffffffffffffffffffffffffffffffff0ffffffffffffffc003fffffffffffffffffffffffc003ffffffffffffffffffffffff000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffc003ffffffffffffffffffffffffffff00fffffffffffffffffffffffffffffffffffffff0ffffffffffffffc0003ffffffffffffffffffffffc00fffffffffffffffffffffffff003ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffc00fffffffffffffffffffffffffffffc0fffffffffffffffffffffffffffffffffffffff0ffffffffffffff00000ffffffffffffffffffffffc00fffffffffffffffffffffffff003ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc03fffffffffff
fffffffffffffffffff0fffffffffffffffffffffffffffffffffffffff0ffffffffffffff00003fffffffffffffffffffffff03fffffffffffffffffffffffffc0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0fffffffffffffffffffffffffffffffcffff
fffffffffffffffffffffffffffffffffff0ffffffffffffff0000ffffffffffffffffffffffff03fffffffffffffffffffffffffc0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffff0fffffffffffffc000fffffffffffffffffffffffff03fffffffffffffffffffffffffc0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffff
fc003fffffffffffffffffffffffff0ffffffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffc00ffffffffffffffffffff
ffffff0ffffffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffff00fffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffff03fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00fc03ff00fc0003f00ffc03fc03fffffffffffffffffffffff0fffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ff000fc3c3c0003c3c3f000ffc3fffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffff0fc3c0303c0c000f03f0cfc03fc3fffffffffffffffffffffff0fffffffffffffffffffffffffffaaffabffaaffeabffaaffaaffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00fff03f00fc0003f00ffc03
fc03ffffffffffffffff0fcff0303c0cff0f03f0fff03fc3fffffffffffffffffffffff0faafeabffaafeaaabeabfffffffaffeabfebebfafafeaabffaffffffd53fd5ffd53ff51ffd17ff15ff15ffffffffffffffffffffffffffffffffffffffffffffffff0fff03fc003c0003c3c3f000ffc3ffffffffffffffff0fff
f0303c0ffc3f00f0ffc0ffc3fffffffffffffffffffffff0faffafafebebeaaabfebfffffffafeaabfebeafafabbfaaffaffffffd7ff55ff5f5fd7d7f5f5fd557ff5ffffffffffffffffffffffffffffffffffffffffffffffff0ffc0ff3f00c000f03f0cfc03fc3ffffffffffffffff0ffff0303c0ffc3fc003fc03ffc3
fffffffffffffffffffffff3fafeafebebeaeaaaffebfffffffafffabfabeaeafabffeaffaffffffd7f555ff5f5757f5d5fd77f55ff5ffffffffffffffffffffffffffffffffffffffffffffffff0ff03ffffc0cff0f03f0fff03fc3ffffffffffffffff0ffff0fc3c0ffc3ff00ffc00ffc3fffffffffffffffffffffff0
fafeafebabeaeffaffebfffffffafffabfabeaeafabffabffaffffffd7ffd5fd5f5757f5d5fd7ffd5ff5ffffffffffffffffffffffffffffffffffffffffffffffff0ff0fffff03ffc3f00f0ffc0ffc3ffffffffffffffff0fffc3ff000ff0ffc003ffc03fc3fffffffffffffffffffffff0fafeabebabeaffebffebffff
fffafffabfabeaeafabfaafffaffffffd7ffd5fd5f5755f5d57d7ff57ff5ffffffffffffffffffffffffffffffffffffffffffffffff0fc003ff00fffc3fc003fc03ffc3ffffffffffffffff0fff0ffffc0ff0ff0fc0fff03fc3fffffffffffffffffffffff0faffaaafabeaffebffebfffffffafffabfabeaeafabfaabf
faffffffd7ffd5fd5f57d557f555ff55fff5ffffffffffffffffffffffffffffffffffffffffffffffff0fc0f0ff003ffc3ff00ffc00ffc3ffffffffffffffff0ffc3f3ffc3fc0ff0fc0fffc3fc3fffffffffffffffffffffff0faffeabfabeaffebffebfffffffafffabfabeaeafabffaaffaffffffd7ffd5fd5f57f55f
fd57ff557ff5ffffffffffffffffffffffffffffffffffffffffffffffff0fc0f03ff00ff0ffc003ffc03fc3ffffffffffffffff0ff0fc3ff03fc3ff0fc0c3fc3fc3fffffffffffffffffffffff0faffaaafabeaffafffebfffffffafffabfabeaeafabffeaffaffffffd7ffd5fd5f57d557f555fff55ff5ffffffffffff
ffffffffffffffffffffffffffffffffffff0fc0f03ffc0ff0ff0fc0fff03fc3ffffffffffffffff0fc0003f00ffc3ffc3c3c0f0ffc3fffffffffffffffffffffff0fafebfababeaffafffebfffffffafffabfabeaeafabfffaffaffffffd7ffd5fd5f175fd5d7f57ffd5ff5ffffffffffffffffffffffffffffffffffff
ffffffffffff0fc0f03fff0fc0ff0fc0fffc3fc3ffffffffffffffff0fc000300fff03fff00ff003ffc3fffffffffffffffffffffff0fafebfababeafeafffebfffffffafffabfebebfafafaffaffaffffffd7ffd5fd5f575fd5d7f57fff5ff5ffffffffffffffffffffffffffffffffffffffffffffffff0fc0f030ff0f
c3ff0fc0c3fc3fc3ffffffffffffffff0fffffffffffffffffffffffffc3fffffffffffffffffffffffcfafebfabebebfebfffebfffffffafffabfebebfafafabebffaffffffd7ffd5ff5f5f5fd5d7f575ff5ff5ffffffffffffffffffffffffffffffffffffffffffffffff0ff0f0f03c3fc3ffc3c3c0f0ffc3ffffffff
ffffffff0fffffffffffffffffffffffffc3fffffffffffffffffffffffffaffafafebebfebfffebfffffffaffaaabfaaffeabfeaafffaffffffd7ffd5ff5f5fd7d7f5f5f57d7ff5ffffffffffffffffffffffffffffffffffffffffffffffff0ffc03fc00ff03fff00ff003ffc3ffffffffffffffff00ffffffffffffff
fffffffffc03fffffffffffffffffffffff0faffeabffaaffabfffebfffffffafffffffffffffffffffffaffffffd7fd555fd57ff55ffd57fd55fff5ffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffff0faffffffffffffffffebfffffffafffffffffffffffffffffaffffffd7fffffffffffffffffffffffff5ffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0faffffffffff
ffffffebfffffffaafffffffffffffffffffaaffffffd7fffffffffffffffffffffffff5ffffffffffffffffffffffffffffffffffffffffffffffff00fffffffffffffffffffffffc03fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0faaffffffffffffffeabffffffffffffffff
ffffffffffffffffffffd57fffffffffffffffffffffff55fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffff0fffffffffcfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffffffff0ffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffffffffc3fffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffff00fffffffffff0ffffffffffffc3fffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffc0ffffffffffc3ffffffffffffc3fffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffc0ffffffffffc3fffffffffffff0fffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffff0fffffffff
fffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0c0f0303fffff0ffffffffffffffc3ffff000300c0f0fff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc000fc0c3ffffc3ffffffffffffffc3ffff0f03c0f0003ffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03c0fc0ffffffc3ffffffffffffffc3ffff3f03c0f03c0ffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03c0fc0ffffff0ffffffffffffffff0fffffc0fc0f03c0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03c0fc0ffffff0ffffffffffffffff0fffff03fc0f03c0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03c0fc0fffffc3ffffffffffffffffc3fffc0ffc0f03c0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03c0fc0fffffc3ffffffffffffffffc3fffc0f3c0f03c0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffc0c0fc0fffff0fffffffffffffffffc3fff03c3c0f00c3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff0303003ffff0ffffffffffffffffff0fff0003003030ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc
3ffffffffffffffffff0ffffffffff03fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffc3fff
ffffff03fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffc3fffffffff03ffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffc3ffffffffc00ffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffc3ffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff0fffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffff
fffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffffffffffffffffffffffc3fffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffffffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffc3f3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffff0c3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffc3fffffffffffffffffffffffffff003fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffff
fffffffffffffffffffffc0003fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3f0ffffffffffffffffffffffffffc00
00fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0f0fffffffffffffffffffffffffff0000ffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff003fffffffffffffffffffffffffffc000ffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff003fffffffffffffffffffffffffffc000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0000fffffffffffffffffffffffffff000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0000fffffffffffffffffffffffffffc00fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0003ffffffffffffffffffffffffffff00fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffc000fffffffffffffffffffffffffffff00fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffc003fffffffffffffffffffffffffffffc0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fff000fffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff003ffffffffffffffffff
fffffffffffc00fc0ffc03ff00fffc0fc03ffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffc3ff00ff0f0fc
3c3ff00ffc3ffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03ffffffffffffffffffffffffffffffc3f000fc0f0303f0ff00ffc3fffffffffffff
fffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00fc03ff00fc0003c03ffffffffffffffffffffffc3ffc0fc0f0303f0fcc0ffc3fffffffffffffffffffffffffffffffffffff
fffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ff0f0fc003c0003fc3ffffffffffffffffffffffc3ffc0fc0f0300f0fcc0ffc3ffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ff0f03c3c0c000ffc3ffffffffffffffffffffffc3ffc0fc0f03c003f3c0ffc3ffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fc0f0303c0cff0ffc3ffffffffffffffffffffffc3ffc0ff0f03f00fc3c0ffc3ffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff0fc0f0303c0ffc3ffc3ffffffffffffffffffffffc3ffc0ffc003c003cfc0ffc3ffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff0fc0f0303c0ffc3ffc3ffffffffffffffffffffffc3ffc0ffff030fc0c0003fc3ffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff0fc0f0303c0ffc3ffc3ffffffffffffffffffffffc3ffc0ffff0f0fc0c0003fc3ffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fc0f0303c0ff0fffc
3ffffffffffffffffffffffc3ffc0fffc0f0fc0ffc0ffc3ffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fc0f0303c0ff0fffc3ffffffffffffffffffffffc
3ffc0ffc03fc3c3ffc0ffc3ffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fc0f0303c0fc0fffc3ffffffffffffffffffffffc3fc000c03fff00fffc0ffc3f
fffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ff0f0fc3c3fc3fffc3ffffffffffffffffffffffc3ffffffffffffffffffffc3fffffffffffffffffffffffff
fffffffffffffffffffffff3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ff0f0fc3c3fc3fffc3ffffffffffffffffffffffc3ffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffff0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffc03ff00ff03fffc3ffffffffffffffffffffffc03ffffffffffffffffffc03ffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffc03ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffffffff3fffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffc3fffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffc00fffffffffffffffffffffffffc3ffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffff03fffffffffffffffffffffffffc3ffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03ffffffffffffffffff
fffffff0fffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03fffffffffffffffffffffffff0fffffffffffffc3f
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03f003f00c0f03fc03f003ffffc3fffffffffffffc3fffff0003ffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03c3c0fc0300c0f030c3c3ffffc3ffffffffffffff0fffffc0f03fffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03c3c0fc0f03c0c0f0c0f3ffff0fffffffffffffff0fffffc0fc0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03ff00fc0f03c0c000c03fffff0fffffffffffffff0fffffc0fc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03f0c0fc0f03c0c0fff00ffffc3fffffffffffffffc3ffffc0fc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03c3c0fc0f03c0c0fffc03fffc3fffffffffffffffc3ffffc0f03ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffff03c3c0fc0f03c0c0ffcf03fff0fffffffffffffffff0ffffc003fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffff03c000fc0f03c0f030c3c3fff0fffffffffffffffff0ffffc0f03ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0303f03030
0300c03c03c00fffc3fffffffffffffffff0ffffc0fc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff030fffffffffffffffffffffffc3ffffff
fffffffffffc3fffc0fc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc03fffffffffffffffffffffff0ffffffffffffffffffc3fffc0fc0c0f
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffff0fffc0f03c0fffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffffffffffffffffff0fff0000fc0fffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffc3fffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffff0ffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ff0ffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3fffffffffffffffffffff
fc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffffffc3fffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffc3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffc3ffffffffffffffffffffffffff0fcfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffc3ffffffffffffffffffffffffffc30fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffff
fffffffffffffffc00fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffff0000ffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcfc3ffffffffffffffffffffffffff00003fffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3c3ffffffffffffffffffffffffffc0003fffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00ffffffffffffffffffffffffffff0003fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00ffffffffffffffffffffffffffff0003ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00003ffffffffffffffffffffffffffc003ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00003fffffffffffffffffffffffffff003ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffc03ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffff0003ffffffffffffffffffffffffffffc03fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000f
fffffffffffffffffffffffffffff03ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc003fffffffffffffffffffffffff
fffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00ffffffffffffffffffffffffffffffff3fffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc03ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 70.5 242.5 454 357 1 0 0 1.053221 0 -31.906113 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 602 708 a
 currentpoint currentpoint translate 1 0.3711 div 1 0.3711 div scale
neg exch neg exch translate
 602 708 a 632 799 a Fq(Fig.)13
b FD(2.1)f({)i Fp(l'arb)n(or)n(esc)n(enc)n(e)g(MUL)m(TICS)236
925 y FB(Des)e(algorithmes)h(de)e(ramasse-miettes)i(doiv)o(en)o(t)e(^)
-18 b(etre)11 b(utilis)o(\023)-18 b(es)14 b(p)q(our)e(sa)o(v)o(oir)g
(si)f(certains)i(ob)r(jets)e(son)o(t)179 971 y(utilis)o(\023)-18
b(es)15 b(on)f(non)f(et)g(p)q(our)h(r)o(\023)-18 b(ecup)q(erer)14
b(les)f(ino)q(des)i(ou)e(blo)q(cs)i(p)q(erdus)f(apr)o(\022)-18
b(es)13 b(un)h(crash.)236 1063 y(T)m(ous)c(les)h(algorithmes)h(de)e(d)o
(\023)-18 b(etection)11 b(dans)g(un)f(graphe)h(quelconque)h(on)o(t)e
(une)h(complexit)o(\023)-18 b(e)12 b(b)q(eaucoup)179
1108 y(plus)i(grande)g(que)f(ceux)h(qui)g(p)q(euv)o(en)o(t)g
(pro\014ter)g(de)f(l'acyclicit)o(\023)-18 b(e)16 b(du)d(graphe.)236
1200 y(Sous)h(Unix)g(nous)f(sommes)g(assur)o(\023)-18
b(es)14 b(que)f(le)g(graphe)h(est)f(acyclique)i(car)e(il)h(est)e(in)o
(terdit)j(d'a)o(v)o(oir)f(plu-)179 1246 y(sieurs)g(r)o(\023)-18
b(ef)o(\023)g(erences)13 b(p)q(our)h(un)g(m)o(^)-18 b(eme)13
b(catalogue)h(\(sauf)f(la)h(r)o(\023)-18 b(ef)o(\023)g(erence)13
b(sp)o(\023)-18 b(eciale)15 b(")p FA(..)p FB(")e(\).)236
1338 y FC(Sous)i(UNIX)f(c'est)i(un)d(graphe)i(acyclique)7
b(!)179 1472 y Fv(2.3)66 b(Les)22 b(ino)r(des)236 1556
y FB(L'ino)q(de)c(est)f(le)g(cen)o(tre)f(de)h(tous)g(les)f(\023)-18
b(ec)o(hanges)18 b(en)o(tre)f(le)g(disque)h(et)e(la)i(m)o(\023)-18
b(emoire.)17 b(L'ino)q(de)g(est)g(la)179 1602 y(structure)f(qui)h(con)o
(tien)o(t)g(toutes)f(les)h(informations)h(sur)e(un)g(\014c)o(hier)h
(donn)o(\023)-18 b(e)17 b(\022)-19 b(a)16 b(l'exception)i(de)e(sa)g(r)o
(\023)-18 b(ef)o(\023)g(e-)179 1647 y(rence,)13 b(dans)h(l'arb)q
(orescence.)236 1739 y(Les)f(informations)j(sto)q(c)o(k)o(\023)-18
b(ees)13 b(dans)h(une)g(ino)q(de)g(disque)h(son)o(t)7
b(:)230 1803 y({)21 b(utilisateur)16 b(propri)o(\023)-18
b(etaire)230 1867 y({)21 b(group)q(e)14 b(propri)o(\023)-18
b(etaire)230 1931 y({)21 b(t)o(yp)q(e)14 b(de)f(\014c)o(hier)230
1994 y({)21 b(droits)14 b(d'acc)o(\022)-18 b(es)230 2058
y({)21 b(date)13 b(de)h(dernier)g(acc)o(\022)-18 b(es)230
2121 y({)21 b(date)13 b(de)h(derni)o(\022)-18 b(ere)14
b(mo)q(di\014cation)230 2185 y({)21 b(date)13 b(de)h(derni)o(\022)-18
b(ere)14 b(mo)q(di\014cation)i(de)d(l'ino)q(de)230 2248
y({)21 b(taille)15 b(du)f(\014c)o(hier)230 2312 y({)21
b(adresses)14 b(des)f(blo)q(cs-disque)j(con)o(tenan)o(t)e(le)g(\014c)o
(hier.)236 2376 y(Dans)k(une)g(ino)q(de)g(en)g(m)o(\023)-18
b(emoire)18 b(\(\014c)o(hier)g(en)f(cours)h(d'utilisation)i(par)e(un)f
(pro)q(cessus\))i(on)e(trouv)o(e)179 2422 y(d'autres)c(informations)j
(suppl)o(\023)-18 b(emen)o(taires)9 b(:)236 2514 y(le)14
b(statut)f(de)g(l'ino)q(de)270 2578 y Fr(f)g FB(lo)q(c)o(k)o(ed,)270
2624 y(w)o(aiting)i(P)270 2669 y(ino)q(de)g(\022)-19
b(a)12 b(\023)-18 b(ecrire,)270 2715 y(\014c)o(hier)14
b(\022)-19 b(a)12 b(\023)-18 b(ecrire,)270 2761 y(le)14
b(\014c)o(hier)g(est)f(un)g(p)q(oin)o(t)i(de)e(mon)o(tage)270
2806 y Fr(g)p eop
%%Page: 10 18
10 17 bop 75 50 a FD(10)653 b Fz(CHAPITRE)14 b(2.)27
b(SYST)1180 39 y(\022)1175 50 y(EME)15 b(DE)f(GESTION)g(DE)f(FICHIERS)
484 995 y
 currentpoint currentpoint translate 0.48216 0.48216 scale neg exch
neg exch translate
 484 995 a 14 w @beginspecial 0 @llx 0 @lly
467 @urx 433 @ury 4670 @rwi @setspecial
%%BeginDocument: eps/sdf.DisqueDur.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 467 432.040039 rectclip
-41 -302.35199 translate
41 302.35199 467 432.040039 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 0 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw true def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/txtdraw true def
/txlndraw true def
(Structure du syst\334me de fichier sur un disque logique ) [10.671997 0 5.328003 0 6.223999 0 9.776001 0 8.896004 0 5.327995 0 9.776001 0 6.223999 0 8.895996 0 4.447998 0 9.776001 0 9.776001 0 4.447998 0 8.895996 0 8.895996 0 8.895996 0 5.328003 0 8.895996 0 14.223999 0 8.895996 0 4.447998 0 9.776001 0 8.895996 0 4.447998 0 5.328003 0 4.447998 0 8.735992 0 9.776001 0 4.447998 0 8.895996 0 6.223999 0 4.447998 0 8.895996 0 9.776001 0 6.223999 0 4.447998 0 9.776001 0 9.776001 0 4.447998 0 9.776001 0 4.447998 0 8.895996 0 9.776001 0 9.776001 0 8.895996 0 4.447998 0 4.447998 0 9.776001 0 9.776001 0 4.447998 0 9.776001 0 9.776001 0 8.895996 0 0 0] 85 681 /Helvetica-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -31 36] dotx
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 93 651 41 -34 1.829268 0 0 1.558824 -123.121956 -327.794128 sc6mt astore rstroke
(Boot Bloc ) [11.552002 0 9.776001 0 9.776001 0 5.328003 0 -36.432007 -19.039978 11.552002 0 4.447998 0 9.776001 0 8.896004 0 0 0] 77.5 634.607971 /Helvetica-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -28 36] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 134 651 55 -34 1.436364 0 0 1.558824 -70.472778 -327.794128 sc6mt astore rstroke
(Super Bloc ) [10.671997 0 9.776001 0 9.776001 0 8.895996 0 6.223999 0 -45.343994 -19.039978 11.552002 0 4.447998 0 9.776001 0 8.895996 0 0 0] 151.5 634.607971 /Helvetica-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -27 36] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 189 651 100 -34 1.39 0 0 1.558824 -61.710018 -327.794128 sc6mt astore rstroke
(Inode liste) [4.447998 0 9.776001 0 9.776001 0 9.776001 0 8.895996 0 4.447998 0 4.447998 0 4.447998 0 8.895996 0 5.328003 0 0 0] 231.5 634.607971 /Helvetica-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -28 36] dotx
/txtdraw true def
/txlndraw true def
(  ) [3.891998 0 0 0] 310.635986 634.607971 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 -28 36] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 289 651 170 -34 0.982353 0 0 1.558824 57.100014 -327.794128 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Blocs de donn\335es ) [11.552002 0 4.447998 0 9.776001 0 8.895996 0 8.895996 0 4.447998 0 9.776001 0 8.895996 0 -66.687988 -19.039978 9.776001 0 9.776001 0 9.776001 0 9.776001 0 8.895996 0 8.895996 0 8.895996 0 0 0] 371.499969 634.607971 /Helvetica-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -28 36] dotx
/txtdraw true def
/txlndraw true def
( ) [0 0] 140 543 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 -21 25] dotx
( ) [0 0] 245 643 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 -22 37] dotx
/crlinw 1.5 def
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
1 0 0.267949 1 -167.09903 0 sc4mt astore 1 0 0.267949 1 -167.09903 0 sc5mt astore 310 650 17 -53 1 0 0.267949 1 -189.563141 36.999977 sc6mt astore rstroke
1 0 0.267949 1 -167.09903 0 sc4mt astore 1 0 0.267949 1 -167.09903 0 sc5mt astore 310 650 17 -53 1 0 0.262894 0.981134 -18.545303 48.262688 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Plusieurs disques logiques sur un disque physique  ) [10.671997 0 4.447998 0 9.776001 0 8.896004 0 4.447998 0 8.896004 0 9.776001 0 5.983994 0 8.895996 0 4.447998 0 9.776001 0 4.447998 0 8.895996 0 9.776001 0 9.776001 0 8.895996 0 8.895996 0 4.447998 0 4.447998 0 9.776001 0 9.776001 0 4.447998 0 9.776001 0 9.776001 0 8.895996 0 8.895996 0 4.447998 0 8.895996 0 9.776001 0 6.223999 0 4.447998 0 9.776001 0 9.776001 0 4.447998 0 9.776001 0 4.447998 0 8.895996 0 9.776001 0 9.776001 0 8.895996 0 4.447998 0 9.776001 0 9.455994 0 8.895996 0 8.895996 0 4.447998 0 9.776001 0 9.776001 0 8.895996 0 4.447998 0 0 0] 84 535 /Helvetica-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -21 25] dotx
/crlinw 1 def
/usedash false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 66 492 419 -32 1 0 0 1 4 -57 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -32 94.5 492 1 0 0 1 1.5 -57 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -32.5 120.5 492.5 1 0 0 1 1.5 -57 sc6mt astore ssl
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
1 0 0.267949 1 -84.741081 0 sc4mt astore 1 0 0.267949 1 -110.741081 0 sc5mt astore 0 -32 94.5 492 0.5 0 0.267949 1 -40.871887 -57 sc6mt astore ssl
1 0 0.267949 1 -84.741081 0 sc4mt astore 1 0 0.267949 1 -110.741081 0 sc5mt astore 0 -32.5 120.5 492.5 0.5 0 0.267949 1 -40.871887 -57 sc6mt astore ssl
/usedash false def
1 0 0 1 78 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -32 94.5 492 1.75 0 0 1 -2.375015 -57.5 sc6mt astore ssl
1 0 0 1 78 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -32.5 120.5 492.5 1.75 0 0 1 -2.375015 -57.5 sc6mt astore ssl
/usedash true def
1 0 0.267949 1 -84.741081 0 sc4mt astore 1 0 0.267949 1 -110.741081 0 sc5mt astore 0 -32 94.5 492 0.5 0 0.267949 1 2.128113 -56.5 sc6mt astore ssl
1 0 0.267949 1 -84.741081 0 sc4mt astore 1 0 0.267949 1 -110.741081 0 sc5mt astore 0 -32.5 120.5 492.5 0.5 0 0.267949 1 2.128113 -56.5 sc6mt astore ssl
/usedash false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -32 94.5 492 1 0 0 1 141 -57.5 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -32.5 120.5 492.5 1 0 0 1 141 -57.5 sc6mt astore ssl
/usedash true def
1 0 0.267949 1 -84.741081 0 sc4mt astore 1 0 0.267949 1 -110.741081 0 sc5mt astore 0 -32 94.5 492 0.5 0 0.267949 1 98.628113 -57.5 sc6mt astore ssl
1 0 0.267949 1 -84.741081 0 sc4mt astore 1 0 0.267949 1 -110.741081 0 sc5mt astore 0 -32.5 120.5 492.5 0.5 0 0.267949 1 98.628113 -57.5 sc6mt astore ssl
/usedash false def
1 0 0 1 78 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -32 94.5 492 1.75 0 0 1 137.124985 -58 sc6mt astore ssl
1 0 0 1 78 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -32.5 120.5 492.5 1.75 0 0 1 137.124985 -58 sc6mt astore ssl
/usedash true def
1 0 0.267949 1 -84.741081 0 sc4mt astore 1 0 0.267949 1 -110.741081 0 sc5mt astore 0 -32 94.5 492 0.5 0 0.267949 1 141.628113 -57 sc6mt astore ssl
1 0 0.267949 1 -84.741081 0 sc4mt astore 1 0 0.267949 1 -110.741081 0 sc5mt astore 0 -32.5 120.5 492.5 0.5 0 0.267949 1 141.628113 -57 sc6mt astore ssl
/usedash false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -32 94.5 492 1 0 0 1 281.5 -57 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -32.5 120.5 492.5 1 0 0 1 281.5 -57 sc6mt astore ssl
/usedash true def
1 0 0.267949 1 -84.741081 0 sc4mt astore 1 0 0.267949 1 -110.741081 0 sc5mt astore 0 -32 94.5 492 0.5 0 0.267949 1 239.128098 -57 sc6mt astore ssl
1 0 0.267949 1 -84.741081 0 sc4mt astore 1 0 0.267949 1 -110.741081 0 sc5mt astore 0 -32.5 120.5 492.5 0.5 0 0.267949 1 239.128098 -57 sc6mt astore ssl
/usedash false def
1 0 0 1 78 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -32 94.5 492 1.75 0 0 1 277.625 -57.5 sc6mt astore ssl
1 0 0 1 78 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -32.5 120.5 492.5 1.75 0 0 1 277.625 -57.5 sc6mt astore ssl
/usedash true def
1 0 0.267949 1 -84.741081 0 sc4mt astore 1 0 0.267949 1 -110.741081 0 sc5mt astore 0 -32 94.5 492 0.5 0 0.267949 1 282.128113 -56.5 sc6mt astore ssl
1 0 0.267949 1 -84.741081 0 sc4mt astore 1 0 0.267949 1 -110.741081 0 sc5mt astore 0 -32.5 120.5 492.5 0.5 0 0.267949 1 282.128113 -56.5 sc6mt astore ssl
/usedash false def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -15.823303 -79.116516 106.823303 382.116516 1 0 0 1 -21 25 sc6mt astore ssl
/crendarw true def
/crfrtarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -3.714615 78.006775 246 305 1 0 0 1 -21 25 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 85.263885 66.316345 295 313 1 0 0 1 -21 25 sc6mt astore ssl
(Boot Bloc ) [11.552002 0 9.776001 0 9.776001 0 5.328003 0 4.447998 0 11.552002 0 4.447998 0 9.776001 0 8.895996 0 0 0] 91 365 /Helvetica-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -49 -58] dotx
(Super Bloc ) [10.671997 0 9.776001 0 9.776001 0 8.895996 0 6.223999 0 4.447998 0 11.552002 0 4.447998 0 9.776001 0 8.895996 0 0 0] 194 367 /Helvetica-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -86 135] dotx
(Inode liste ) [4.447998 0 9.776001 0 9.776001 0 9.776001 0 8.895996 0 4.447998 0 4.447998 0 4.447998 0 8.895996 0 5.328003 0 8.895996 0 0 0] 278 399 /Helvetica-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 35 101] dotx
(Blocs de donn\335es ) [11.552002 0 4.447998 0 9.776001 0 8.895996 0 8.895996 0 4.447998 0 9.776001 0 8.895996 0 -66.687988 -19.040009 9.776001 0 9.776001 0 9.776001 0 9.776001 0 8.895996 0 8.895996 0 8.895996 0 0 0] 303 350 /Helvetica-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 75 -21] dotx
(Boot Bloc \(vide\) ) [11.552002 0 9.776001 0 9.776001 0 5.328003 0 4.447998 0 11.552002 0 4.447998 0 9.776001 0 8.895996 0 4.447998 0 5.328003 0 8.895996 0 4.447998 0 9.776001 0 8.895996 0 5.328003 0 0 0] 91 365 /Helvetica-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 100 -51] dotx
/crendarw false def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 169.375458 -62.910889 225.624542 383.910889 1 0 0 1 -21 25 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48.251831 -60.314789 365.748169 381.314789 1 0 0 1 -21 25 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -60.591187 -55.930328 499.591187 378.930328 1 0 0 1 -21 25 sc6mt astore ssl
/crendarw true def
/crfrtarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -8.177078 -59.056702 140 463 1 0 0 1 -21 25 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 90.983704 -59.708069 171 464 1 0 0 1 -21 25 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 196.288391 -63.162109 209 466 1 0 0 1 -21 25 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -170.413956 -66.810028 354 466 1 0 0 1 -21 25 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -49.474915 -68.144714 369 466 1 0 0 1 -21 25 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 45.279663 -57.292664 385 463 1 0 0 1 -21 25 sc6mt astore ssl
/txtdraw true def
/crtxtred 0.333338 def /crtxtgrn 0.333338 def /crtxtblu 0.333338 def /txtinclr true def
/txlndraw false def
(Disque logique 1 ) [11.552002 0 4.447998 0 8.895996 0 9.776001 0 9.776001 0 8.895996 0 4.447998 0 4.447998 0 9.776001 0 9.776001 0 4.447998 0 9.776001 0 9.776001 0 8.895996 0 4.447998 0 8.895996 0 0 0] 350 255 /Helvetica-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -272 191] dotx
(Disque logique 2 ) [11.552002 0 4.447998 0 8.895996 0 9.776001 0 9.776001 0 8.895996 0 4.447998 0 4.447998 0 9.776001 0 9.776001 0 4.447998 0 9.776001 0 9.776001 0 8.895996 0 4.447998 0 8.895996 0 0 0] 350 255 /Helvetica-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -135 190] dotx
(Disque logique 3 ) [11.552002 0 4.447998 0 8.895996 0 9.776001 0 9.776001 0 8.895996 0 4.447998 0 4.447998 0 9.776001 0 9.776001 0 4.447998 0 9.776001 0 9.776001 0 8.895996 0 4.447998 0 8.895996 0 0 0] 350 255 /Helvetica-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 5 188.999985] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 995 a
 currentpoint currentpoint translate 1 0.48216 div 1 0.48216 div scale
neg exch neg exch translate
 484 995 a 446 1086 a Fq(Fig.)f
FD(2.2)h({)h Fp(Or)n(ganisation)h(des)g(blo)n(cs)g(et)f(des)h(ino)n
(des)h(\(SYS)f(V\))179 1215 y FB(Et)e(deux)g(v)n(aleurs)i(qui)f(p)q
(ermetten)o(t)f(de)h(lo)q(caliser)h(l'ino)q(de)g(sur)e(un)h(des)f
(disques)i(logiques)9 b(:)270 1276 y(Num)o(\023)-18 b(ero)13
b(du)h(disque)g(logique)270 1322 y(Num)o(\023)-18 b(ero)13
b(de)h(l'ino)q(de)g(dans)g(le)g(disque)179 1383 y(cette)f(information)j
(est)d(in)o(utile)j(sur)e(le)g(disque)h(\(on)f(a)f(une)h(bijection)i
(en)o(tre)d(la)h(p)q(osition)i(de)e(l'ino)q(de)h(sur)179
1428 y(disque)f(et)f(le)h(n)o(um)o(\023)-18 b(ero)13
b(d'ino)q(de\).)179 1474 y(On)i(trouv)o(e)g(aussi)i(d'autres)e(t)o(yp)q
(es)g(d'informations)j(comme)d(l'acc)o(\022)-18 b(es)15
b(\022)-19 b(a)15 b(la)h(table)g(des)f(v)o(errous)h(ou)f(bien)179
1520 y(des)e(informations)i(sur)f(les)f(disques)i(\022)-19
b(a)13 b(distance)i(dans)e(les)h(p)q(oin)o(ts)h(de)e(mon)o(tage.)179
1650 y Fv(2.4)66 b(Organisation)23 b(des)f(disques)h(System)f(V)236
1732 y FB(L'organisation)17 b(disque)e(d)o(\023)-18 b(ecrite)15
b(sur)f(la)h(\014gure)g(2.2)e(est)h(la)h(plus)g(simple)g(que)g(l'on)f
(p)q(eut)h(trouv)o(er)f(de)179 1778 y(nos)g(jours)h(sous)f(UNIX,)f(il)i
(en)g(existe)g(d'autres)f(\(cf.)f(section)j(2.8\))e(o)q(\022)-20
b(u)14 b(l'on)h(p)q(eut)f(en)h(particulier)h(placer)179
1824 y(un)f(m)o(^)-18 b(eme)16 b(disque)h(logique)g(sur)f(plusieurs)h
(disques)g(ph)o(ysiques)h(\(dangereux\),)e(certaines)h(o)q(\022)-20
b(u)15 b(les)h(blo)q(cs)179 1869 y(son)o(t)d(fragmen)o(tables,)h(etc.)
179 1983 y FC(Bo)q(ot)i(blo)q(c)j FB(utilis)o(\023)-18
b(e)15 b(au)f(c)o(hargemen)o(t)g(du)f(syst)o(\022)-18
b(eme.)179 2042 y FC(Sup)q(er)14 b(Blo)q(c)20 b FB(il)15
b(con)o(tien)o(t)f(toutes)f(les)h(informations)h(g)o(\023)-18
b(en)o(\023)g(erales)15 b(sur)e(le)g(disque)i(logique.)179
2101 y FC(Ino)q(de)f(list)20 b FB(T)m(able)13 b(des)h(ino)q(des.)179
2161 y FC(blo)q(cs)20 b FB(les)13 b(blo)q(cs)i(de)e(donn)o(\023)-18
b(ees)14 b(c)o(hain)o(\023)-18 b(es)15 b(\022)-19 b(a)13
b(la)g(cr)o(\023)-18 b(eation)15 b(du)e(disque)i(\()p
FA(mkfs)p FB(\).)179 2229 y(Les)e(blo)q(cs)h(de)f(donn)o(\023)-18
b(ees)15 b(ne)e(son)o(t)g(pas)h(fragmen)o(tables)g(sous)g(Syst)o(\022)
-18 b(eme)14 b(V.)179 2358 y Fv(2.5)66 b(Adressage)21
b(des)h(blo)r(cs)g(dans)g(les)h(ino)r(des)236 2441 y
FB(Le)15 b(syst)o(\022)-18 b(eme)15 b(d'adressage)g(des)g(blo)q(cs)h
(dans)f(les)g(ino)q(des)h(\(syst)o(\022)-18 b(eme)15
b(V\))f(consiste)i(en)e(13)h(adresses)g(de)179 2487 y(blo)q(cs.)g(Les)e
(dix)i(premi)o(\022)-18 b(eres)15 b(adresses)g(son)o(t)f(des)g
(adresses)h(qui)g(p)q(oin)o(ten)o(t)g(directemen)o(t)h(sur)e(les)g(blo)
q(cs)h(de)179 2532 y(donn)o(\023)-18 b(ees)17 b(du)e(\014c)o(hier.)i
(Les)e(autres)h(son)o(t)g(des)g(adresses)g(indirectes)i(v)o(ers)d(des)h
(blo)q(cs)h(de)f(donn)o(\023)-18 b(ees)16 b(con)o(te-)179
2578 y(nan)o(t)c(des)h(adresses.)f(La)g(\014gure)h(2.3)f(nous)h(mon)o
(tre)f(les)h(trois)f(niv)o(eaux)i(d'indirection)q(.)g(L'in)o(t)o(\023)
-18 b(er)o(^)g(et)12 b(de)h(cette)179 2624 y(repr)o(\023)-18
b(esen)o(tation)13 b(est)f(d')o(\023)-18 b(economiser)13
b(sur)f(la)g(taille)i(des)e(ino)q(des)h(tout)f(en)g(p)q(ermettan)o(t)g
(un)g(acc)o(\022)-18 b(es)12 b(rapide)h(au)179 2669 y(p)q(etits)h
(\014c)o(hiers)h(\(la)f(ma)r(jorit)o(\023)-18 b(e)14
b(des)f(\014c)o(hiers)i(son)o(t)f(p)q(etits\).)f(Mais)i(en)e(laissan)o
(t)j(la)d(p)q(ossibil)q(it)o(\023)-18 b(e)16 b(de)e(cr)o(\023)-18
b(eer)13 b(de)179 2715 y(tr)o(\022)-18 b(es)13 b(gros)g(\014c)o(hiers)8
b(:)594 2806 y(10)h(+)f(256)h(+)f(\(256)i Fr(\002)e FB(256\))h(+)f
(\(256)h Fr(\002)g FB(256)g Fr(\002)f FB(256\))p eop
%%Page: 11 19
11 18 bop 75 50 a Fz(2.6.)26 b(ALLOCA)m(TION)14 b(DES)g(INODES)h(D'UN)e
(DISQUE)781 b FD(11)484 1300 y
 currentpoint currentpoint translate 0.45876 0.45876 scale neg exch
neg exch translate
 484 1300 a 14 w @beginspecial
0 @llx 0 @lly 491 @urx 615 @ury 4910 @rwi @setspecial
%%BeginDocument: eps/inodes.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 490.014038 614.830017 rectclip
-53 -117 translate
53 117 490.014038 614.830017 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 1 0 0 1 11 179 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(direct 0 ) [10.007996 0 5.003998 0 7.667999 0 7.991997 0 7.991997 0 5.994003 0 4.5 0 9 0 0 0] 60.5 416.170013 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 11 179] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 405 78 -29 1 0 0 1 11 179 sc6mt astore rstroke
(direct 1 ) [10.007996 0 5.003998 0 7.667999 0 7.991997 0 7.991997 0 5.994003 0 4.5 0 9 0 0 0] 60.5 387.170013 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 11 179] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 376 78 -29 1 0 0 1 11 179 sc6mt astore rstroke
(direct 2 ) [10.007996 0 5.003998 0 7.667999 0 7.991997 0 7.991997 0 5.994003 0 4.5 0 9 0 0 0] 60.5 358.170013 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 11 179] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 347 78 -29 1 0 0 1 11 179 sc6mt astore rstroke
(direct 3 ) [10.007996 0 5.003998 0 7.667999 0 7.991997 0 7.991997 0 5.994003 0 4.5 0 9 0 0 0] 60.5 329.170013 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 11 179] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 318 78 -29 1 0 0 1 11 179 sc6mt astore rstroke
(direct 4 ) [10.007996 0 5.003998 0 7.667999 0 7.991997 0 7.991997 0 5.994003 0 4.5 0 9 0 0 0] 60.5 300.170013 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 11 179] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 289 78 -29 1 0 0 1 11 179 sc6mt astore rstroke
(direct 5 ) [10.007996 0 5.003998 0 7.667999 0 7.991997 0 7.991997 0 5.994003 0 4.5 0 9 0 0 0] 60.5 271.170013 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 11 179] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 260 78 -29 1 0 0 1 11 179 sc6mt astore rstroke
(direct 6 ) [10.007996 0 5.003998 0 7.667999 0 7.991997 0 7.991997 0 5.994003 0 4.5 0 9 0 0 0] 60.5 242.169998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 11 179] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 231 78 -29 1 0 0 1 11 179 sc6mt astore rstroke
(direct 7 ) [10.007996 0 5.003998 0 7.667999 0 7.991997 0 7.991997 0 5.994003 0 4.5 0 9 0 0 0] 60.5 213.169998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 11 179] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 202 78 -29 1 0 0 1 11 179 sc6mt astore rstroke
(direct 8 ) [10.007996 0 5.003998 0 7.667999 0 7.991997 0 7.991997 0 5.994003 0 4.5 0 9 0 0 0] 60.5 184.169998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 11 179] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 173 78 -29 1 0 0 1 11 179 sc6mt astore rstroke
(direct 9 ) [10.007996 0 5.003998 0 7.667999 0 7.991997 0 7.991997 0 5.994003 0 4.5 0 9 0 0 0] 60.5 155.169998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 11 179] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 144 78 -29 1 0 0 1 11 179 sc6mt astore rstroke
(indirect  ) [5.003998 0 10.007996 0 10.007996 0 5.003998 0 7.667999 0 7.991997 0 7.991997 0 5.994003 0 4.5 0 0 0] 60.5 126.169998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 11 179] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 115 78 -29 1 0 0 1 11 179 sc6mt astore rstroke
(double ) [10.007996 0 9 0 10.007996 0 10.007996 0 5.003998 0 7.991997 0 0 0] 60.5 97.169998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 11 179] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 86 78 -29 1 0 0 1 11 179 sc6mt astore rstroke
(triple  ) [5.994003 0 7.991997 0 5.003998 0 10.008003 0 5.003998 0 7.991997 0 4.5 0 0 0] 60.5 68.169998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 11 179] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.551282 0 0 0.172414 167.02565 277.172424 sc6mt astore rstroke
1 0 0 1 0 -5 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.551282 0 0 0.172414 167.02565 272.172424 sc6mt astore rstroke
1 0 0 1 0 -10 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.551282 0 0 0.172414 167.02565 267.172424 sc6mt astore rstroke
1 0 0 1 0 -15 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.551282 0 0 0.172414 167.02565 262.172424 sc6mt astore rstroke
1 0 0 1 0 -20 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.551282 0 0 0.172414 167.02565 257.172424 sc6mt astore rstroke
1 0 0 1 0 -25 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.551282 0 0 0.172414 167.02565 252.172424 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.589744 0 0 0.172414 163.794876 221.172424 sc6mt astore rstroke
1 0 0 1 0 -5 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.589744 0 0 0.172414 163.794876 216.172424 sc6mt astore rstroke
1 0 0 1 0 -10 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.589744 0 0 0.172414 163.794876 211.172424 sc6mt astore rstroke
1 0 0 1 0 -15 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.589744 0 0 0.172414 163.794876 206.172424 sc6mt astore rstroke
1 0 0 1 0 -20 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.589744 0 0 0.172414 163.794876 201.172424 sc6mt astore rstroke
1 0 0 1 0 -25 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.589744 0 0 0.172414 163.794876 196.172424 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.615385 0 0 0.172414 164.307693 169.172424 sc6mt astore rstroke
1 0 0 1 0 -5 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.615385 0 0 0.172414 164.307693 164.172424 sc6mt astore rstroke
1 0 0 1 0 -10 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.615385 0 0 0.172414 164.307693 159.172424 sc6mt astore rstroke
1 0 0 1 0 -15 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.615385 0 0 0.172414 164.307693 154.172424 sc6mt astore rstroke
1 0 0 1 0 -20 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.615385 0 0 0.172414 164.307693 149.172424 sc6mt astore rstroke
1 0 0 1 0 -25 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.615385 0 0 0.172414 164.307693 144.172424 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.589744 0 0 0.172414 264.794861 231.172424 sc6mt astore rstroke
1 0 0 1 0 -5 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.589744 0 0 0.172414 264.794861 226.172424 sc6mt astore rstroke
1 0 0 1 0 -10 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.589744 0 0 0.172414 264.794861 221.172424 sc6mt astore rstroke
1 0 0 1 0 -15 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.589744 0 0 0.172414 264.794861 216.172424 sc6mt astore rstroke
1 0 0 1 0 -20 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.589744 0 0 0.172414 264.794861 211.172424 sc6mt astore rstroke
1 0 0 1 0 -25 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.589744 0 0 0.172414 264.794861 206.172424 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.589744 0 0 0.172414 263.794861 168.172424 sc6mt astore rstroke
1 0 0 1 0 -5 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.589744 0 0 0.172414 263.794861 163.172424 sc6mt astore rstroke
1 0 0 1 0 -10 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.589744 0 0 0.172414 263.794861 158.172424 sc6mt astore rstroke
1 0 0 1 0 -15 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.589744 0 0 0.172414 263.794861 153.172424 sc6mt astore rstroke
1 0 0 1 0 -20 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.589744 0 0 0.172414 263.794861 148.172424 sc6mt astore rstroke
1 0 0 1 0 -25 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.589744 0 0 0.172414 263.794861 143.172424 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.602564 0 0 0.172414 342.05127 153.172424 sc6mt astore rstroke
1 0 0 1 0 -5 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.602564 0 0 0.172414 342.05127 148.172424 sc6mt astore rstroke
1 0 0 1 0 -10 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.602564 0 0 0.172414 342.05127 143.172424 sc6mt astore rstroke
1 0 0 1 0 -15 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.602564 0 0 0.172414 342.05127 138.172424 sc6mt astore rstroke
1 0 0 1 0 -20 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.602564 0 0 0.172414 342.05127 133.172424 sc6mt astore rstroke
1 0 0 1 0 -25 sc4mt astore 1 0 0 1 0 0 sc5mt astore 58 434 78 -29 0.602564 0 0 0.172414 342.05127 128.172424 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 476 686 39 -32 1 0 0 1 0 0 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 476 625.653564 39 -32 1 0 0 1 0 0 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 476 565.307068 39 -32 1 0 0 1 0 0 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 476 504.960632 39 -32 1 0 0 1 0 0 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 481 412.960632 39 -32 1 0 0 1 0 0 sc6mt astore rstroke
/usedash true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -1 -20 499 440 1 0 0 1 0 0 sc6mt astore ssl
/usedash false def
1 0 0 1 0 -87.385818 sc4mt astore 1 0 0 1 0 0 sc5mt astore 481 412.960632 39 -32 1 0 0 1 0 -87.385818 sc6mt astore rstroke
/usedash true def
1 0 0 1 0 -87.385818 sc4mt astore 1 0 0 1 0 0 sc5mt astore -1 -20 499 440 1 0 0 1 0 -87.385818 sc6mt astore ssl
/usedash false def
1 0 0 1 0 -174.771637 sc4mt astore 1 0 0 1 0 0 sc5mt astore 481 412.960632 39 -32 1 0 0 1 0 -174.771637 sc6mt astore rstroke
/usedash true def
1 0 0 1 0 -174.771637 sc4mt astore 1 0 0 1 0 0 sc5mt astore -1 -20 499 440 1 0 0 1 0 -174.771637 sc6mt astore ssl
/usedash false def
1 0 0 1 0 -262.157471 sc4mt astore 1 0 0 1 0 0 sc5mt astore 481 412.960632 39 -32 1 0 0 1 0 -262.157471 sc6mt astore rstroke
/usedash true def
1 0 0 1 0 -262.157471 sc4mt astore 1 0 0 1 0 0 sc5mt astore -1 -20 499 440 1 0 0 1 0 -262.157471 sc6mt astore ssl
/crlinw 1.5 def
/usedash false def
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 319.203735 69.095947 147 598 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 318.066589 38.907227 147 571 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 320.00415 9.726562 145 541 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 320.016571 -19.453888 146 511 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 41.401337 12.796234 148 280.546112 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 44.149445 37.616974 148 308.546112 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 44.000473 -0.453384 146 245.546112 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 51.145172 28.606628 240 273 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 46.072021 5.863708 243 236 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 31.134705 5.448578 337 221 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 68.376617 -62.906494 406 211 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 234.205902 50.97583 237 345.110107 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 147.026001 11.205933 324 298.110107 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72.010345 3.458176 400 221.110107 1 0 0 1 0 0 sc6mt astore ssl
(Inode ) [7.001999 0 10.007996 0 9 0 10.007996 0 7.991997 0 0 0] 74 627 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 0] dotx
(Blocs de donn\335es sur le disque ) [12.006012 0 5.003998 0 9 0 7.992004 0 7.002014 0 4.5 0 10.007996 0 7.992004 0 4.5 0 10.007996 0 9 0 10.007996 0 10.007996 0 7.992004 0 7.992004 0 7.002014 0 -130.014038 -20.754028 7.002014 0 10.007996 0 7.992004 0 4.5 0 5.003998 0 7.992004 0 4.5 0 10.007996 0 5.003998 0 7.002014 0 10.007996 0 10.007996 0 7.992004 0 0 0] 429 706 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -18 7] dotx
( ) [0 0] 53 150 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 -33] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 1300 a
 currentpoint currentpoint translate 1 0.45876 div 1 0.45876 div scale
neg exch neg exch translate
 484 1300 a 460 1392 a Fq(Fig.)13
b FD(2.3)g({)g Fp(A)n(dr)n(essage)i(dir)n(e)n(ct)f(et)h(indir)n(e)n(ct)
f(des)h(ino)n(de)g(UNIX)366 1788 y
 currentpoint currentpoint translate 0.59637 0.59637 scale neg exch
neg exch translate
 366 1788 a 14 w @beginspecial
0 @llx 0 @lly 472 @urx 136 @ury 4720 @rwi @setspecial
%%BeginDocument: eps/ialloc1.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 471.000031 135.447998 rectclip
-54.999977 -581.511963 translate
54.999977 581.511963 471.000031 135.447998 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 694 470 -49 1 0 0 1 0 0 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Liste des inodes du Super Bloc ) [10.671997 0 4.447998 0 6.223999 0 5.328003 0 7.104004 0 4 0 8.895996 0 7.104004 0 6.223999 0 4 0 4.447998 0 8.895996 0 8 0 8.895996 0 7.104004 0 6.223999 0 4 0 8.895996 0 8.895996 0 4 0 8.895996 0 8.895996 0 8.895996 0 7.104004 0 7.104004 0 4 0 10.671997 0 4.447998 0 8 0 7.104004 0 0 0] 169 463 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -113.000023 237] dotx
/usedash true def
/crendarw true def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 124 0 72 664 1 0 0 1 7 -2 sc6mt astore ssl
(inodes libres ) [4.447998 0 8.895996 0 8 0 8.895996 0 7.104004 0 6.223999 0 4 0 4.447998 0 4.447998 0 8.895996 0 6.815994 0 7.104004 0 6.223999 0 0 0] 126 551 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -33 120] dotx
/usedash false def
/crendarw false def
/crfrtarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 0 0 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 267 694 50 -49 1 0 0 1 0 0 sc6mt astore rstroke
(19\011 ) [8 0 8 0 0 0 0 0] 209 628 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 53 1] dotx
(20 ) [8 0 8 0 0 0] 64 577 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 247 52] dotx
(18 ) [8 0 8 0 0 0] 145 513 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 64 115] dotx
/usedash true def
/crendarw true def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 124 0 72 664 1 0 0 1 286 -3 sc6mt astore ssl
(       vide ) [4 0 4 0 4 0 4 0 4 0 4 0 4 0 8 0 4.447998 0 8.895996 0 7.104004 0 0 0] 126 551 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 246 119] dotx
/crlinw 1.5 def
/usedash false def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -20 319 612 1 0 0 1 1 4 sc6mt astore ssl
(Curseur ) [11.552002 0 8.895996 0 7.104004 0 6.223999 0 7.104004 0 8.895996 0 7.104004 0 0 0] 228 501 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 67 85] dotx
(83 ) [8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -38 213] dotx
(48 ) [8 0 8 0 0 0] 71 568 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 213 95] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 366 1788 a
 currentpoint currentpoint translate 1 0.59637 div 1 0.59637 div scale
neg exch neg exch translate
 366 1788 a 571 1879 a Fq(Fig.)e
FD(2.4)g({)g Fp(Ino)n(des)j(libr)n(es)d(dans)j(le)f(Sup)n(erBlo)n(c.)
179 2012 y FB(blo)q(cs)f(disques.)179 2144 y Fv(2.6)66
b(Allo)r(cation)23 b(des)f(ino)r(des)h(d'un)g(disque)236
2226 y FB(L'allo)q(cation)17 b(des)d(ino)q(des)h(est)f(r)o(\023)-18
b(ealis)o(\023)g(ee)16 b(en)e(rec)o(herc)o(han)o(t)g(dans)h(la)g(zone)f
(des)g(ino)q(des)h(du)g(disque)g(une)179 2272 y(ino)q(de)f(libre.)f(P)o
(our)g(acc)o(\023)-18 b(el)o(\023)g(erer)13 b(cette)f(rec)o(herc)o(he)c
(:)j(un)i(tamp)q(on)g(d'ino)q(des)h(libres)g(est)e(g)o(\023)-18
b(er)o(\023)g(e)13 b(dans)g(le)g(Sup)q(er-)179 2318 y(Blo)q(c,)g(de)g
(plus)h(l'indice)h(de)e(la)g(premi)o(\022)-18 b(ere)14
b(ino)q(de)g(libre)g(est)e(gard)o(\023)-18 b(e)14 b(en)f(r)o(\023)-18
b(ef)o(\023)g(erence)12 b(dans)i(le)f(Sup)q(erBlo)q(c)i(a\014n)179
2363 y(de)e(red)o(\023)-18 b(emarrer)14 b(la)f(rec)o(herc)o(he)h
(qu'\022)-19 b(a)13 b(partir)h(de)f(la)h(premi)o(\022)-18
b(ere)14 b(ino)q(de)h(r)o(\023)-18 b(eellemen)o(t)14
b(libre.)236 2409 y(Mais)20 b(ce)f(syst)o(\022)-18 b(eme)19
b(a)g(une)g(faille)i(qu'il)f(faut)f(pr)o(\023)-18 b(ev)o(oir)20
b(dans)f(l')o(\023)-18 b(ecriture)20 b(dans)g(l'algorithme)h(iallo)q(c)
179 2455 y(d'allo)q(cation)16 b(d'ino)q(de,)e(cette)f(faille)i(est)e(d)
o(\023)-18 b(ecrite)14 b(dans)f(la)h(Figure)g(2.10)179
2587 y Fv(2.7)66 b(Allo)r(cation)23 b(des)f(blo)r(cs-disque)236
2669 y FB(L'algorithme)c(utilis)o(\023)-18 b(e)19 b(p)q(our)e(g)o(\023)
-18 b(erer)16 b(l'allo)q(catio)q(n)j(des)e(ino)q(des)h(s'appuie)f(sur)g
(le)g(fait)f(que)h(l'on)g(p)q(eut)179 2715 y(tester)e(si)h(une)g(ino)q
(de)h(est)e(libre)i(ou)f(non)g(en)f(regardan)o(t)i(son)f(con)o(ten)o
(u.)g(Ceci)f(n'est)h(plus)g(vrai)h(p)q(our)f(les)179
2761 y(blo)q(cs.)f(La)g(solution)h(est)f(de)f(c)o(ha)l(^)-15
b(\020ner)16 b(les)g(blo)q(cs.)f(Ce)f(c)o(ha)l(^)-15
b(\020nage)16 b(est)f(r)o(\023)-18 b(ealis)o(\023)g(e)16
b(par)f(blo)q(cs)g(d'adresses)h(p)q(our)179 2806 y(acc)o(\023)-18
b(el)o(\023)g(erer)14 b(les)h(acc)o(\022)-18 b(es)13
b(et)h(pro\014ter)g(au)g(maxim)o(um)g(du)g(bu\013er)h(cac)o(he.)e(Il)h
(existe)h(donc)f(un)g(blo)q(c)h(d'adresses)p eop
%%Page: 12 20
12 19 bop 75 50 a FD(12)653 b Fz(CHAPITRE)14 b(2.)27
b(SYST)1180 39 y(\022)1175 50 y(EME)15 b(DE)f(GESTION)g(DE)f(FICHIERS)
366 489 y
 currentpoint currentpoint translate 0.59637 0.59637 scale neg exch
neg exch translate
 366 489 a 14 w @beginspecial 0 @llx 0 @lly
472 @urx 136 @ury 4720 @rwi @setspecial
%%BeginDocument: eps/ialloc2.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 471.000031 135.447968 rectclip
-49.999977 -407.511993 translate
49.999977 407.511993 471.000031 135.447968 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2.412863e-35 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 694 470 -49 1 0 0 1 -5 -174 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Liste des inodes du Super Bloc ) [10.671997 0 4.447998 0 6.223999 0 5.328003 0 7.104004 0 4 0 8.895996 0 7.104004 0 6.223999 0 4 0 4.447998 0 8.895996 0 8 0 8.895996 0 7.104004 0 6.223999 0 4 0 8.895996 0 8.895996 0 4 0 8.895996 0 8.895996 0 8.895996 0 7.104004 0 7.104004 0 4 0 10.671997 0 4.447998 0 8 0 7.104004 0 0 0] 169 463 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -118.000023 63] dotx
/usedash true def
/crendarw true def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 124 0 72 664 1 0 0 1 2 -176 sc6mt astore ssl
(inodes libres ) [4.447998 0 8.895996 0 8 0 8.895996 0 7.104004 0 6.223999 0 4 0 4.447998 0 4.447998 0 8.895996 0 6.815994 0 7.104004 0 6.223999 0 0 0] 126 551 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -38 -54] dotx
/usedash false def
/crendarw false def
/crfrtarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 -5 -174 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 267 694 50 -49 1 0 0 1 -5 -174 sc6mt astore rstroke
(19\011 ) [8 0 8 0 0 0 0 0] 209 628 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 48 -173] dotx
(20 ) [8 0 8 0 0 0] 64 577 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 242 -122] dotx
(18 ) [8 0 8 0 0 0] 145 513 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 59 -59] dotx
/usedash true def
/crendarw true def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 184.000122 -0.938782 292.999939 487.969391 1 0 0 1 0 0 sc6mt astore ssl
(       vide ) [4 0 4 0 4 0 4 0 4 0 4 0 4 0 8 0 4.447998 0 8.895996 0 7.104004 0 0 0] 126 551 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 198 -55] dotx
/crlinw 1.5 def
/usedash false def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -20 319 612 1 0 0 1 -57 -170 sc6mt astore ssl
(Curseur ) [11.552002 0 8.895996 0 7.104004 0 6.223999 0 7.104004 0 8.895996 0 7.104004 0 0 0] 228 501 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 9 -89] dotx
(83 ) [8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -43 39] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 366 489 a
 currentpoint currentpoint translate 1 0.59637 div 1 0.59637 div scale
neg exch neg exch translate
 366 489 a 649 581 a Fq(Fig.)f
FD(2.5)h({)h Fp(A)o(l)r(lo)n(c)n(ation)g(d'une)i(ino)n(de.)366
1254 y
 currentpoint currentpoint translate 0.5677 0.5677 scale neg exch neg
exch translate
 366 1254 a 14 w @beginspecial 0 @llx 0 @lly 496
@urx 248 @ury 4960 @rwi @setspecial
%%BeginDocument: eps/ialloc3.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 495.63855 247.447937 rectclip
-29 -123.512024 translate
29 123.512024 495.63855 247.447937 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 694 470 -49 1 0 0 1 -1 -346 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Liste des inodes du Super Bloc ) [10.671997 0 4.447998 0 6.223999 0 5.328003 0 7.104004 0 4 0 8.895996 0 7.104004 0 6.223999 0 4 0 4.447998 0 8.895996 0 8 0 8.895996 0 7.104004 0 6.223999 0 4 0 8.895996 0 8.895996 0 4 0 8.895996 0 8.895996 0 8.895996 0 7.104004 0 7.104004 0 4 0 10.671997 0 4.447998 0 8 0 7.104004 0 0 0] 169 463 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -114.000023 -109] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 -163 -346 sc6mt astore rstroke
(0 ) [8 0 0 0] 64 577 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -12 -292] dotx
/usedash true def
/crendarw true def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 416 0 70 341 1 0 0 1 9 -28 sc6mt astore ssl
(       vide ) [4 0 4 0 4 0 4 0 4 0 4 0 4 0 8 0 4.447998 0 8.895996 0 7.104004 0 0 0] 126 551 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 82 -229] dotx
/crlinw 1.5 def
/usedash false def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -20 319 612 1 0 0 1 -264 -342 sc6mt astore ssl
(Curseur ) [11.552002 0 8.895996 0 7.104004 0 6.223999 0 7.104004 0 8.895996 0 7.104004 0 0 0] 228 501 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -198 -261] dotx
(473 ) [8 0 8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -203 -134] dotx
/crlinw 1 def
/crfrtarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 694 470 -49 1 0 0 1 -4 -503 sc6mt astore rstroke
(Liste des inodes du Super Bloc ) [10.671997 0 4.447998 0 6.223999 0 5.328003 0 7.104004 0 4 0 8.895996 0 7.104004 0 6.223999 0 4 0 4.447998 0 8.895996 0 8 0 8.895996 0 7.104004 0 6.223999 0 4 0 8.895996 0 8.895996 0 4 0 8.895996 0 8.895996 0 8.895996 0 7.104004 0 7.104004 0 4 0 10.671997 0 4.447998 0 8 0 7.104004 0 0 0] 169 463 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -117.000023 -266] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 -166 -503 sc6mt astore rstroke
(0 ) [8 0 0 0] 64 577 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -15 -449] dotx
/usedash true def
/crendarw true def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 416 0 70 341 1 0 0 1 6 -185 sc6mt astore ssl
(475 ) [8 0 8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 211 -286] dotx
/usedash false def
/crendarw false def
/crfrtarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 154 -503 sc6mt astore rstroke
1 0 0 1 50 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 204 -503 sc6mt astore rstroke
1 0 0 1 100 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 254 -503 sc6mt astore rstroke
(inodes libres ) [4.447998 0 8.895996 0 8 0 8.895996 0 7.104004 0 6.223999 0 4 0 4.447998 0 4.447998 0 8.895996 0 6.815994 0 7.104004 0 6.223999 0 0 0] 126 551 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 69 -386] dotx
(477 ) [8 0 8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 163 -287] dotx
(479 ) [8 0 8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 115 -287] dotx
(539 ) [8 0 8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -204 -285] dotx
(\(num\335ro d\251inode de r\335f\335rence\) ) [5.328003 0 8.895996 0 8.895996 0 13.328003 0 7.104004 0 6.815994 0 8 0 4 0 8.895996 0 4.447998 0 4.447998 0 8.895996 0 8 0 8.895996 0 7.104004 0 4 0 8.896011 0 7.104004 0 4 0 7.104004 0 7.104004 0 5.328003 0 7.104004 0 6.81601 0 7.104004 0 8.895996 0 7.104004 0 7.104004 0 5.328003 0 0 0] 138 250 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 2 -5] dotx
/crlinw 1.5 def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 44.636047 -44.636047 94.363953 300.636047 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 53.636047 53.636047 84.363953 187.363953 1 0 0 1 0 0 sc6mt astore ssl
end
grestore
grestore
%%EndDocument
 @endspecial 366 1254 a
 currentpoint currentpoint translate 1 0.5677 div 1 0.5677 div scale
neg exch neg exch translate
 366 1254 a 631 1345 a Fq(Fig.)c
FD(2.6)h({)h Fp(Si)h(le)f(Sup)n(erBlo)n(c)i(est)e(vide.)366
1729 y
 currentpoint currentpoint translate 0.54689 0.54689 scale neg exch
neg exch translate
 366 1729 a 14 w @beginspecial 0 @llx 0 @lly 515
@urx 127 @ury 5150 @rwi @setspecial
%%BeginDocument: eps/ialloc4.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 514.880005 126.447998 rectclip
-40 -573.511963 translate
40 573.511963 514.880005 126.447998 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 0 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 694 470 -49 1 0 0 1 -12 -17 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Liste des inodes du Super Bloc ) [10.671997 0 4.447998 0 6.223999 0 5.328003 0 7.104004 0 4 0 8.895996 0 7.104004 0 6.223999 0 4 0 4.447998 0 8.895996 0 8 0 8.895996 0 7.104004 0 6.223999 0 4 0 8.895996 0 8.895996 0 4 0 8.895996 0 8.895996 0 8.895996 0 7.104004 0 7.104004 0 4 0 10.671997 0 4.447998 0 8 0 7.104004 0 0 0] 169 463 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -125.000023 220] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 -174 -17 sc6mt astore rstroke
(0 ) [8 0 0 0] 64 577 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -23 37] dotx
/usedash true def
/crendarw true def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 416 0 70 341 1 0 0 1 -2 301 sc6mt astore ssl
/crlinw 1.5 def
/usedash false def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -20 319 612 1 0 0 1 202 -4 sc6mt astore ssl
(Curseur ) [11.552002 0 8.895996 0 7.104004 0 6.223999 0 7.104004 0 8.895996 0 7.104004 0 0 0] 228 501 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 268 77] dotx
(475 ) [8 0 8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 203 200] dotx
/crlinw 1 def
/crfrtarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 146 -17 sc6mt astore rstroke
1 0 0 1 50 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 196 -17 sc6mt astore rstroke
1 0 0 1 100 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 246 -17 sc6mt astore rstroke
(inodes libres ) [4.447998 0 8.895996 0 8 0 8.895996 0 7.104004 0 6.223999 0 4 0 4.447998 0 4.447998 0 8.895996 0 6.815994 0 7.104004 0 6.223999 0 0 0] 126 551 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 61 100] dotx
(477 ) [8 0 8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 155 199] dotx
(479 ) [8 0 8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 107 199] dotx
(539 ) [8 0 8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -212 201] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 366 1729 a
 currentpoint currentpoint translate 1 0.54689 div 1 0.54689 div scale
neg exch neg exch translate
 366 1729 a 431 1821 a Fq(Fig.)f
FD(2.7)g({)g Fp(Lib)o(\023)-20 b(er)n(ation)15 b(d'une)g(ino)n(de)h
(ave)n(c)f(le)g(Sup)n(erBlo)n(c)g(plein.)366 2205 y
 currentpoint currentpoint translate 0.54689 0.54689 scale neg exch
neg exch translate
 366
2205 a 14 w @beginspecial 0 @llx 0 @lly 515 @urx 127
@ury 5150 @rwi @setspecial
%%BeginDocument: eps/ialloc5.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 514.880005 126.447968 rectclip
-45 -369.511993 translate
45 369.511993 514.880005 126.447968 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 0 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 694 470 -49 1 0 0 1 -7 -221 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Liste des inodes du Super Bloc ) [10.671997 0 4.447998 0 6.223999 0 5.328003 0 7.104004 0 4 0 8.895996 0 7.104004 0 6.223999 0 4 0 4.447998 0 8.895996 0 8 0 8.895996 0 7.104004 0 6.223999 0 4 0 8.895996 0 8.895996 0 4 0 8.895996 0 8.895996 0 8.895996 0 7.104004 0 7.104004 0 4 0 10.671997 0 4.447998 0 8 0 7.104004 0 0 0] 169 463 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -120.000023 16] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 -169 -221 sc6mt astore rstroke
(0 ) [8 0 0 0] 64 577 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -18 -167] dotx
/usedash true def
/crendarw true def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 416 0 70 341 1 0 0 1 3 97 sc6mt astore ssl
/crlinw 1.5 def
/usedash false def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -20 319 612 1 0 0 1 207 -208 sc6mt astore ssl
(Curseur ) [11.552002 0 8.895996 0 7.104004 0 6.223999 0 7.104004 0 8.895996 0 7.104004 0 0 0] 228 501 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 273 -127] dotx
(475 ) [8 0 8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 208 -4] dotx
/crlinw 1 def
/crfrtarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 151 -221 sc6mt astore rstroke
1 0 0 1 50 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 201 -221 sc6mt astore rstroke
1 0 0 1 100 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 251 -221 sc6mt astore rstroke
(inodes libres ) [4.447998 0 8.895996 0 8 0 8.895996 0 7.104004 0 6.223999 0 4 0 4.447998 0 4.447998 0 8.895996 0 6.815994 0 7.104004 0 6.223999 0 0 0] 126 551 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 66 -104] dotx
(477 ) [8 0 8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 160 -5] dotx
(479 ) [8 0 8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 112 -5] dotx
(219 ) [8 0 8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -207 -3] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 366 2205 a
 currentpoint currentpoint translate 1 0.54689 div 1 0.54689 div scale
neg exch neg exch translate
 366 2205 a 376 2296 a Fq(Fig.)e
FD(2.8)g({)h Fp(L)n(e)g(num)o(\023)-20 b(er)n(o)15 b(d'ino)n(de)h(inf)o
(\023)-20 b(erieur)14 b(au)h(num)o(\023)-20 b(er)n(o)15
b(de)g(r)o(\023)-20 b(ef)o(\023)g(er)n(enc)n(e.)366 2680
y
 currentpoint currentpoint translate 0.54689 0.54689 scale neg exch
neg exch translate
 366 2680 a 14 w @beginspecial 0 @llx 0 @lly 515 @urx
127 @ury 5150 @rwi @setspecial
%%BeginDocument: eps/ialloc6.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 514.880005 126.447968 rectclip
-46 -174.511993 translate
46 174.511993 514.880005 126.447968 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 0 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 694 470 -49 1 0 0 1 -6 -416 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Liste des inodes du Super Bloc ) [10.671997 0 4.447998 0 6.223999 0 5.328003 0 7.104004 0 4 0 8.895996 0 7.104004 0 6.223999 0 4 0 4.447998 0 8.895996 0 8 0 8.895996 0 7.104004 0 6.223999 0 4 0 8.895996 0 8.895996 0 4 0 8.895996 0 8.895996 0 8.895996 0 7.104004 0 7.104004 0 4 0 10.671997 0 4.447998 0 8 0 7.104004 0 0 0] 169 463 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -119.000023 -179] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 -168 -416 sc6mt astore rstroke
(0 ) [8 0 0 0] 64 577 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -17 -362] dotx
/usedash true def
/crendarw true def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 416 0 70 341 1 0 0 1 4 -98 sc6mt astore ssl
/crlinw 1.5 def
/usedash false def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -20 319 612 1 0 0 1 208 -403 sc6mt astore ssl
(Curseur ) [11.552002 0 8.895996 0 7.104004 0 6.223999 0 7.104004 0 8.895996 0 7.104004 0 0 0] 228 501 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 274 -322] dotx
(475 ) [8 0 8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 209 -199] dotx
/crlinw 1 def
/crfrtarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 152 -416 sc6mt astore rstroke
1 0 0 1 50 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 202 -416 sc6mt astore rstroke
1 0 0 1 100 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 217 694 50 -49 1 0 0 1 252 -416 sc6mt astore rstroke
(inodes libres ) [4.447998 0 8.895996 0 8 0 8.895996 0 7.104004 0 6.223999 0 4 0 4.447998 0 4.447998 0 8.895996 0 6.815994 0 7.104004 0 6.223999 0 0 0] 126 551 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 67 -299] dotx
(477 ) [8 0 8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 161 -200] dotx
(479 ) [8 0 8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 113 -200] dotx
(219 ) [8 0 8 0 8 0 0 0] 271 452 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -206 -198] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 366 2680 a
 currentpoint currentpoint translate 1 0.54689 div 1 0.54689 div scale
neg exch neg exch translate
 366 2680 a 370 2772 a Fq(Fig.)13
b FD(2.9)g({)h Fp(L)n(e)h(num)o(\023)-20 b(er)n(o)15
b(d'ino)n(de)g(sup)o(\023)-20 b(erieur)14 b(au)i(num)o(\023)-20
b(er)n(o)15 b(de)g(r)o(\023)-20 b(ef)o(\023)g(er)n(enc)n(e.)p
eop
%%Page: 13 21
13 20 bop 75 50 a Fz(2.7.)26 b(ALLOCA)m(TION)14 b(DES)g(BLOCS-DISQUE)
922 b FD(13)248 2345 y
 currentpoint currentpoint translate 0.65881 0.65881 scale neg exch
neg exch translate
 248 2345 a 13 w @beginspecial
0 @llx 0 @lly 513 @urx 677 @ury 5130 @rwi @setspecial
%%BeginDocument: eps/faille.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 512.174011 676.758118 rectclip
-27 -112.075989 translate
27 112.075989 512.174011 676.758118 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/txtdraw true def
/crtxtred 0.009705 def /crtxtgrn 0.009705 def /crtxtblu 0.009705 def /txtinclr true def
/txlndraw true def
(Processus A  ) [10.998001 0 7.667999 0 9 0 7.991997 0 7.991997 0 7.001999 0 7.001999 0 10.007996 0 7.001999 0 3.509995 0 12.996002 0 4.5 0 0 0] 52 727 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 36 40.878113] dotx
(Processus B  ) [10.998001 0 7.667999 0 9 0 7.991997 0 7.991997 0 7.001999 0 7.001999 0 10.007996 0 7.001999 0 4.5 0 12.005997 0 4.5 0 0 0] 52 727 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 188 43.00412] dotx
(Processus C ) [10.998001 0 7.667999 0 9 0 7.991997 0 7.991997 0 7.001999 0 7.001999 0 10.007996 0 7.001999 0 4.5 0 12.996002 0 0 0] 52 727 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 372 42.914093] dotx
/crlinjn 2 def
/crlinw 2 def
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -386 36 779.878113 1 0 0 1 6 -10 sc6mt astore ssl
(temps ) [5.993999 0 7.992001 0 14.993999 0 10.007999 0 7.001999 0 0 0] 27 330 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 1 17.878113] dotx
(allocation de l\251inode I ) [9 0 5.003998 0 5.003998 0 9 0 7.991997 0 9.000008 0 5.994003 0 5.003998 0 9 0 10.007996 0 -75.005997 -20.754028 10.007996 0 7.991997 0 4.5 0 5.003998 0 5.003998 0 5.003998 0 10.008003 0 9 0 10.007996 0 7.992004 0 4.5 0 7.001999 0 0 0] 87 674 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 6 67.878113] dotx
(en sommeil pendant  la lecture de l\251inode \(a\)  ) [7.992 0 10.008 0 4.5 0 7.001999 0 9 0 14.993999 0 14.993999 0 7.991997 0 5.003998 0 5.003998 0 4.5 0 10.007996 0 7.991997 0 10.008003 0 10.007996 0 9 0 10.007996 0 5.994003 0 4.5 0 -169.334976 -20.754028 5.004 0 9 0 4.5 0 5.004 0 7.992001 0 7.992001 0 5.993999 0 10.007999 0 7.667999 0 7.992001 0 4.5 0 10.008003 0 7.991997 0 4.5 0 5.003998 0 5.003998 0 5.003998 0 10.008003 0 9 0 10.007996 0 7.992004 0 4.5 0 5.994003 0 9 0 5.994003 0 4.5 0 0 0] 7.746002 628 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 57 65.878113] dotx
/usedash true def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -100 132 667.878113 1 0 0 1 6 -10 sc6mt astore ssl
(Travail sur  l\251Inode I en m\335moire ) [10.674 0 7.992001 0 8.549999 0 8.82 0 9 0 5.003998 0 5.003998 0 4.5 0 7.001999 0 10.007996 0 7.991997 0 4.5 0 -124.604988 -20.753998 5.004 0 5.004 0 7.002 0 10.007998 0 9 0 10.007999 0 7.992001 0 4.5 0 7.001999 0 4.5 0 7.991997 0 10.007996 0 4.5 0 14.994003 0 7.991997 0 14.993996 0 9 0 5.003998 0 7.667999 0 7.992004 0 0 0] 27.477001 465 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 72 73.878113] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -114 132 507.878113 1 0 0 1 6 -10 sc6mt astore ssl
/strdsh [2 2] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -72 277 761.878113 1 0 0 1 6 -10 sc6mt astore ssl
(allocation avec super bloc vide \(b\) l\251inode I \(libre\) est remise dans le super bloc \(c\) ) [9 0 5.003998 0 5.003998 0 9 0 7.991997 0 9 0 5.994003 0 5.003998 0 9 0 10.007996 0 -127.682991 -20.754028 8.55 0 8.82 0 7.992 0 7.992001 0 4.5 0 7.001999 0 10.007999 0 10.007999 0 7.992001 0 7.991997 0 4.5 0 10.007996 0 5.003998 0 9 0 7.991997 0 4.5 0 9 0 5.004005 0 10.007996 0 7.992004 0 4.5 0 5.994003 0 10.007996 0 5.994003 0 -188.342987 -20.754028 5.004 0 5.004 0 5.004 0 10.007999 0 9 0 10.008001 0 7.992001 0 4.5 0 7.001999 0 4.5 0 5.993999 0 5.003998 0 5.003998 0 10.008003 0 7.667999 0 7.991997 0 5.994003 0 4.5 0 7.991997 0 7.001999 0 5.994003 0 4.5 0 7.667999 0 7.992004 0 14.994003 0 5.003998 0 7.001999 0 7.992004 0 -179.16301 -20.754028 10.007999 0 9 0 10.007999 0 7.001999 0 4.5 0 5.003998 0 7.992001 0 4.499996 0 7.001999 0 10.007996 0 10.007996 0 7.991997 0 7.991997 0 4.5 0 10.007996 0 5.003998 0 9 0 7.992004 0 4.5 0 5.994003 0 7.992004 0 5.994003 0 0 0] 49.497002 674 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 201 -32.121887] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -63 280 580.878113 1 0 0 1 6 -10 sc6mt astore ssl
(allocation d\251une inode \(d\) ) [9 0 5.003998 0 5.003998 0 9 0 7.991997 0 9.000008 0 5.994003 0 5.003998 0 9 0 10.007996 0 -75.005997 -20.754028 10.007996 0 5.003998 0 10.007996 0 10.007996 0 7.992004 0 4.5 0 5.003998 0 10.007996 0 9 0 10.007996 0 7.992004 0 4.5 0 5.994003 0 10.007996 0 5.994003 0 0 0] 87 674 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 156 -180.121887] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -63 282 461.878113 1 0 0 1 6 -10 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -274 457 772.878113 1 0 0 1 6 -10 sc6mt astore ssl
(allocation \(d\) de l\251inode I ) [9 0 5.003998 0 5.003998 0 9 0 7.991997 0 9.000008 0 5.994003 0 5.003998 0 9 0 10.007996 0 4.5 0 5.994003 0 10.007996 0 5.994003 0 -101.501999 -20.754028 10.007996 0 7.991997 0 4.5 0 5.003998 0 5.003998 0 5.003998 0 10.008003 0 9 0 10.007996 0 7.992004 0 4.5 0 7.001999 0 0 0] 87 674 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 332 -200.121887] dotx
(Mais l\251inode I  n\251est pas libre !! ) [16.991997 0 9 0 5.003998 0 7.001999 0 4.499992 0 5.003998 0 5.003998 0 5.003998 0 10.007996 0 9 0 10.007996 0 7.992004 0 4.5 0 7.001999 0 4.5 0 -110.519974 -20.754028 10.007996 0 5.003998 0 7.991997 0 7.001999 0 5.994003 0 4.5 0 10.008003 0 9 0 7.001999 0 4.5 0 5.003998 0 5.003998 0 10.007996 0 7.667999 0 7.992004 0 4.5 0 5.994003 0 5.994003 0 0 0] 87 674 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 327 -243.121887] dotx
/usedash false def
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -194 108 299 1 0 0 1 14 43 sc6mt astore ssl
(temps ) [5.993999 0 7.992001 0 14.993999 0 10.007999 0 7.001999 0 0 0] 27 330 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 77 -213] dotx
/crlinw 1 def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 90 258 279 -23 1 0 0 1 80 80 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 106 258 15 -23 1 0 0 1 80 80 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 121 258 15 -23 1 0 0 1 80 80 sc6mt astore rstroke
(I ) [7.002007 0 0 0] 124.999001 240.169998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 80 80] dotx
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 109 0 169 247 1 0 0 1 80 80 sc6mt astore ssl
/usedash false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 91 221 279 -23 1 0 0 1 79 80 sc6mt astore rstroke
/usedash true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 109 0 170 210 1 0 0 1 79 80 sc6mt astore ssl
/usedash false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 185 279 -23 1 0 0 1 77.999985 80 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 108 185 15 -23 1 0 0 1 77.999985 80 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 121 258 15 -23 1 0 0 1 79.999985 7 sc6mt astore rstroke
/usedash true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 109 0 171 174 1 0 0 1 77.999985 80 sc6mt astore ssl
/usedash false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 126 167 15 -23 1 0 0 1 275 98 sc6mt astore rstroke
(J ) [9 0 0 0] 129 149.169998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 275 98] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 121 258 15 -23 1 0 0 1 295 7 sc6mt astore rstroke
(I ) [7.002007 0 0 0] 124.999001 240.169998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 295 7] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 379 182 14 -23 1.285714 0 0 1 -56.285751 83 sc6mt astore rstroke
(K ) [14.003998 0 0 0] 380.998016 164.169998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 51.999985 83] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 185 279 -23 1 0 0 1 78 4 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 111 148 15 -23 1 0 0 1 75 41 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 121 258 15 -23 1 0 0 1 80 -69 sc6mt astore rstroke
/usedash true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 109 0 174 137 1 0 0 1 75 41 sc6mt astore ssl
/usedash false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 126 167 15 -23 1 0 0 1 275 22 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 121 258 15 -23 1 0 0 1 295 -69 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 121 258 15 -23 1 0 0 1 265 -69 sc6mt astore rstroke
(L ) [12.006004 0 0 0] 122.497002 240.169998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 265 -69] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 185 279 -23 1 0 0 1 78 43 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 108 148 15 -23 1 0 0 1 78 80 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 121 258 15 -23 1 0 0 1 80 -30 sc6mt astore rstroke
/usedash true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 109 0 171 137 1 0 0 1 78 80 sc6mt astore ssl
/usedash false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 126 167 15 -23 1 0 0 1 275 61 sc6mt astore rstroke
(J ) [9 0 0 0] 129 149.169998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 275 61] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 121 258 15 -23 1 0 0 1 295 -30 sc6mt astore rstroke
(I ) [7.002007 0 0 0] 124.999001 240.169998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 295 -30] dotx
(\(a\) ) [5.993999 0 9 0 5.993999 0 0 0] 42.506001 244 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 94 77] dotx
(\(b\) ) [5.993999 0 10.007999 0 5.993999 0 0 0] 42.001999 244 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 94 41] dotx
(\(c\) ) [5.993999 0 7.992001 0 5.993999 0 0 0] 43.010002 244 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 94 4] dotx
(\(d\) ) [5.993999 0 10.007999 0 5.993999 0 0 0] 42.001999 244 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 94 -34] dotx
(\(e\) ) [5.993999 0 7.992001 0 5.993999 0 0 0] 43.010002 244 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 94 -73] dotx
(allocation \(e\) d\251une autre l\251inode ) [9 0 5.004002 0 5.003998 0 9 0 7.991997 0 9 0 5.994003 0 5.003998 0 9 0 10.008003 0 4.5 0 5.994003 0 7.992004 0 5.994003 0 -122.094009 -20.754028 10.007999 0 5.004 0 10.007998 0 10.007999 0 7.992001 0 4.5 0 9 0 10.008003 0 5.994003 0 7.667999 0 7.991997 0 4.5 0 5.003998 0 5.003998 0 5.003998 0 10.008003 0 9 0 10.007996 0 7.992004 0 0 0] 37.257 674 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 376 -285.121887] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 248 2345 a
 currentpoint currentpoint translate 1 0.65881 div 1 0.65881 div scale
neg exch neg exch translate
 248 2345 a 538 2436 a Fq(Fig.)13
b FD(2.10)f({)i Fp(F)m(ail)r(le)g(de)h(l'algorithme)f(d'al)r(lo)n(c)n
(ation.)p eop
%%Page: 14 22
14 21 bop 75 50 a FD(14)653 b Fz(CHAPITRE)14 b(2.)27
b(SYST)1180 39 y(\022)1175 50 y(EME)15 b(DE)f(GESTION)g(DE)f(FICHIERS)
366 1021 y
 currentpoint currentpoint translate 0.63799 0.63799 scale neg exch
neg exch translate
 366 1021 a 14 w @beginspecial 0 @llx 0 @lly
441 @urx 337 @ury 4410 @rwi @setspecial
%%BeginDocument: eps/balloc1.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 440.564453 336.754028 rectclip
-56.382652 -402.075989 translate
56.382652 402.075989 440.564453 336.754028 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0.009705 def /crtxtgrn 0.009705 def /crtxtblu 0.009705 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 401 -39 1 0 0 1 0 -56 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 41 -39 1 0 0 1 0 -56 sc6mt astore rstroke
/txtdraw true def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txlndraw true def
(109) [9 0 9 0 0 0] 99 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 -56] dotx
/txtdraw true def
/txlndraw true def
<0920> [0 0 0 0] 126 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 0 -56] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 133 764 41 -39 1 0 0 1 0 -56 sc6mt astore rstroke
( ) [0 0] 137 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 0 -56] dotx
/txtdraw true def
/txlndraw true def
(106\011 ) [9 0 9 0 9 0 0 0 0 0] 143 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 -56] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 174 764 41 -39 1 0 0 1 0 -56 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 178 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 0 -56] dotx
/txtdraw true def
/txlndraw true def
(103 ) [9 0 9 0 9 0 0 0] 184 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 -56] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 215 764 41 -39 1 0 0 1 0 -56 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 219 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 0 -56] dotx
/txtdraw true def
/txlndraw true def
(100 ) [9 0 9 0 9 0 0 0] 225 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 -56] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 256 764 41 -39 1 0 0 1 0 -56 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 264.5 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 0 -56] dotx
/txtdraw true def
/txlndraw true def
(95 ) [9 0 9 0 0 0] 270.5 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 -56] dotx
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 162 0 318 693 1 0 0 1 0 0 sc6mt astore ssl
/strdsh [2 2] def /dshpatoff 0 def
/crendarw true def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 81.375992 598.004822 82 598 arow
false 1 0 0 1 -8 -51 sc5mt astore sstrt
systemdict
begin
42 640 145 769 setbbox
120 733 moveto
121 725 108 726 98 715 curveto
88 704 87 698 83 692 curveto
79 686 76 681 72 673 curveto
68 665 69 649 90 649 curveto
end
/nspans 4 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/usedash false def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 401 -39 1 0 0 1 3 -145 sc6mt astore rstroke
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 123 0 311 601 1 0 0 1 0 0 sc6mt astore ssl
/usedash false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 256 764 41 -39 1 0 0 1 198 -145 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 260 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 198 -145] dotx
/txtdraw true def
/txlndraw true def
(112 ) [9 0 9 0 9 0 0 0] 266 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 198 -145] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 41 -39 1 0 0 1 3 -145 sc6mt astore rstroke
(211) [9 0 9 0 0 0] 99 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 3 -145] dotx
/txtdraw true def
/txlndraw true def
<0920> [0 0 0 0] 126 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 3 -145] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 133 764 41 -39 1 0 0 1 3 -145 sc6mt astore rstroke
( ) [0 0] 137 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 3 -145] dotx
/txtdraw true def
/txlndraw true def
(208\011 ) [9 0 9 0 9 0 0 0 0 0] 143 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 3 -145] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 174 764 41 -39 1 0 0 1 3 -145 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 178 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 3 -145] dotx
/txtdraw true def
/txlndraw true def
(205 ) [9 0 9 0 9 0 0 0] 184 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 3 -145] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 215 764 41 -39 1 0 0 1 3 -145 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 219 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 3 -145] dotx
/txtdraw true def
/txlndraw true def
(202 ) [9 0 9 0 9 0 0 0] 225 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 3 -145] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 256 764 41 -39 1 0 0 1 3 -145 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 260 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 3 -145] dotx
/txtdraw true def
/txlndraw true def
(199 ) [9 0 9 0 9 0 0 0] 266 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 3 -145] dotx
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw true def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 79.375992 503.004822 80 503 arow
false 1 0 0 1 -10 -146 sc5mt astore sstrt
systemdict
begin
42 640 145 769 setbbox
120 733 moveto
121 725 108 726 98 715 curveto
88 704 87 698 83 692 curveto
79 686 76 681 72 673 curveto
68 665 69 649 90 649 curveto
end
/nspans 4 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/usedash false def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 401 -39 1 0 0 1 1 -240 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 256 764 41 -39 1 0 0 1 196 -240 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 260 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 196 -240] dotx
/txtdraw true def
/txlndraw true def
(214 ) [9 0 9 0 9 0 0 0] 266 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 196 -240] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 41 -39 1 0 0 1 1 -240 sc6mt astore rstroke
(311) [9 0 9 0 0 0] 99 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 1 -240] dotx
/txtdraw true def
/txlndraw true def
<0920> [0 0 0 0] 126 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 1 -240] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 133 764 41 -39 1 0 0 1 1 -240 sc6mt astore rstroke
( ) [0 0] 137 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 1 -240] dotx
/txtdraw true def
/txlndraw true def
(308\011 ) [9 0 9 0 9 0 0 0 0 0] 143 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 1 -240] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 174 764 41 -39 1 0 0 1 1 -240 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 178 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 1 -240] dotx
/txtdraw true def
/txlndraw true def
(305 ) [9 0 9 0 9 0 0 0] 184 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 1 -240] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 215 764 41 -39 1 0 0 1 1 -240 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 219 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 1 -240] dotx
/txtdraw true def
/txlndraw true def
(302 ) [9 0 9 0 9 0 0 0] 225 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 1 -240] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 256 764 41 -39 1 0 0 1 1 -240 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 260 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 1 -240] dotx
/txtdraw true def
/txlndraw true def
(301 ) [9 0 9 0 9 0 0 0] 266 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 1 -240] dotx
/usedash true def
/crendarw true def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 76.375992 408.004822 77 408 arow
false 1 0 0 1 -13 -241 sc5mt astore sstrt
systemdict
begin
42 640 145 769 setbbox
120 733 moveto
121 725 108 726 98 715 curveto
88 704 87 698 83 692 curveto
79 686 76 681 72 673 curveto
68 665 69 649 90 649 curveto
end
/nspans 4 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
(etc  ) [7.992004 0 5.994003 0 7.992004 0 4.5 0 0 0] 126.761002 459 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 3 -52] dotx
(Super Bloc Liste ) [10.007999 0 10.007999 0 10.007999 0 7.992001 0 7.991997 0 4.5 0 12.005997 0 5.003998 0 9 0 7.991997 0 4.5 0 12.006004 0 5.003998 0 7.001999 0 5.994003 0 7.992004 0 0 0] 33.496002 776 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 59 -56] dotx
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 123 0 311 504 1 0 0 1 0 0 sc6mt astore ssl
/txtdraw true def
/crtxtred 0.009705 def /crtxtgrn 0.009705 def /crtxtblu 0.009705 def /txtinclr true def
/txlndraw true def
(Bloc 109 ) [12.005997 0 5.003998 0 9 0 7.992004 0 4.5 0 9 0 9 0 9 0 0 0] 115 633 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -20 -5] dotx
(Bloc 211 ) [12.005997 0 5.003998 0 9 0 7.992004 0 4.5 0 9 0 9 0 9 0 0 0] 115 633 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -19 -100] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 366 1021 a
 currentpoint currentpoint translate 1 0.63799 div 1 0.63799 div scale
neg exch neg exch translate
 366 1021 a 645 1112 a Fq(Fig.)g
FD(2.11)f({)i Fp(Liste)g(chain)o(\023)-20 b(e)n(e)16
b(de)f(blo)n(cs.)366 1592 y
 currentpoint currentpoint translate 0.64526 0.64526 scale neg exch
neg exch translate
 366 1592 a 14 w @beginspecial
0 @llx 0 @lly 436 @urx 160 @ury 4360 @rwi @setspecial
%%BeginDocument: eps/balloc2.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 435.76593 159.812195 rectclip
-52.183945 -592.017822 translate
52.183945 592.017822 435.76593 159.812195 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 401 -39 1 0 0 1 -9 -43 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 41 -39 1 0 0 1 -10 -43 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(109) [9 0 9 0 0 0] 99 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -10 -43] dotx
/txtdraw true def
/txlndraw true def
<0920> [0 0 0 0] 126 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 -10 -43] dotx
/usedash true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 329 0 148 745 1 0 0 1 -6 -39 sc6mt astore ssl
/strdsh [2 2] def /dshpatoff 0 def
/crendarw true def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 72.375992 611.004822 73 611 arow
false 1 0 0 1 -17 -38 sc5mt astore sstrt
systemdict
begin
42 640 145 769 setbbox
120 733 moveto
121 725 108 726 98 715 curveto
88 704 87 698 83 692 curveto
79 686 76 681 72 673 curveto
68 665 69 649 90 649 curveto
end
/nspans 4 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/usedash false def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 401 -39 1 0 0 1 -6 -132 sc6mt astore rstroke
/usedash true def
/strdsh [2 5 2 2 7] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 123 0 308 653 1 0 0 1 -6 -39 sc6mt astore ssl
/usedash false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 256 764 41 -39 1 0 0 1 189 -132 sc6mt astore rstroke
( ) [0 0] 260 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 189 -132] dotx
/txtdraw true def
/txlndraw true def
(112 ) [9 0 9 0 9 0 0 0] 266 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 189 -132] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 41 -39 1 0 0 1 -6 -132 sc6mt astore rstroke
(211) [9 0 9 0 0 0] 99 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -6 -132] dotx
/txtdraw true def
/txlndraw true def
<0920> [0 0 0 0] 126 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 -6 -132] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 133 764 41 -39 1 0 0 1 -6 -132 sc6mt astore rstroke
( ) [0 0] 137 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 -6 -132] dotx
/txtdraw true def
/txlndraw true def
(208\011 ) [9 0 9 0 9 0 0 0 0 0] 143 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -6 -132] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 174 764 41 -39 1 0 0 1 -6 -132 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 178 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 -6 -132] dotx
/txtdraw true def
/txlndraw true def
(205 ) [9 0 9 0 9 0 0 0] 184 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -6 -132] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 215 764 41 -39 1 0 0 1 -6 -132 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 219 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 -6 -132] dotx
/txtdraw true def
/txlndraw true def
(202 ) [9 0 9 0 9 0 0 0] 225 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -6 -132] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 256 764 41 -39 1 0 0 1 -6 -132 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 260 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 -6 -132] dotx
/txtdraw true def
/txlndraw true def
(199 ) [9 0 9 0 9 0 0 0] 266 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -6 -132] dotx
(Super Bloc Liste ) [10.007999 0 10.007999 0 10.007999 0 7.992001 0 7.991997 0 4.5 0 12.005997 0 5.003998 0 9 0 7.991997 0 4.5 0 12.006004 0 5.003998 0 7.001999 0 5.994003 0 7.992004 0 0 0] 33.496002 776 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 50 -43] dotx
(vide ) [9 0 5.003998 0 10.007996 0 7.992004 0 0 0] 284 745 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 9 -56] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 366 1592 a
 currentpoint currentpoint translate 1 0.64526 div 1 0.64526 div scale
neg exch neg exch translate
 366 1592 a 615 1683 a Fq(Fig.)e
FD(2.12)g({)g Fp(Etat)i(initial)f(du)h(Sup)n(erBlo)n(c.)179
1816 y FB(dans)h(le)g(sup)q(er)g(blo)q(c)h(qui)f(sert)f(de)h(zone)g(de)
f(tra)o(v)n(ail)i(p)q(our)g(l'allo)q(cateur)g(de)f(blo)q(cs.)g
(L'utilisation)j(de)d(ce)179 1862 y(blo)q(c)e(et)f(le)g(m)o(\023)-18
b(ecanisme)15 b(d'allo)q(cation)h(son)o(t)d(d)o(\023)-18
b(ecrits)14 b(dans)g(les)f(Figures)i(2.11)e(\022)-19
b(a)13 b(2.16)p eop
%%Page: 15 23
15 22 bop 75 50 a Fz(2.7.)26 b(ALLOCA)m(TION)14 b(DES)g(BLOCS-DISQUE)
922 b FD(15)366 609 y
 currentpoint currentpoint translate 0.64526 0.64526 scale neg exch
neg exch translate
 366 609 a 14 w @beginspecial 0
@llx 0 @lly 436 @urx 160 @ury 4360 @rwi @setspecial
%%BeginDocument: eps/balloc3.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 435.7659 159.91214 rectclip
-71.378036 -266.917877 translate
71.378036 266.917877 435.7659 159.91214 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 5 2 2 7] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 401 -39 1 0 0 1 10 -368 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 41 -39 1 0 0 1 10 -368 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(109) [9 0 9 0 0 0] 99 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 10 -368] dotx
/txtdraw true def
/txlndraw true def
<0920> [0 0 0 0] 126 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 10 -368] dotx
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 296 0 194 381 1 0 0 1 0 0 sc6mt astore ssl
/strdsh [2 2] def /dshpatoff 0 def
/crendarw true def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 91.375992 286.004822 92 286 arow
false 1 0 0 1 2 -363 sc5mt astore sstrt
systemdict
begin
42 640 145 769 setbbox
120 733 moveto
121 725 108 726 98 715 curveto
88 704 87 698 83 692 curveto
79 686 76 681 72 673 curveto
68 665 69 649 90 649 curveto
end
/nspans 4 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/usedash false def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 401 -39 1 0 0 1 13 -457 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 256 764 41 -39 1 0 0 1 208 -457 sc6mt astore rstroke
( ) [0 0] 260 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 208 -457] dotx
/txtdraw true def
/txlndraw true def
(112 ) [9 0 9 0 9 0 0 0] 266 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 208 -457] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 41 -39 1 0 0 1 13 -457 sc6mt astore rstroke
(211) [9 0 9 0 0 0] 99 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 13 -457] dotx
/txtdraw true def
/txlndraw true def
<0920> [0 0 0 0] 126 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 13 -457] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 133 764 41 -39 1 0 0 1 13 -457 sc6mt astore rstroke
( ) [0 0] 137 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 13 -457] dotx
/txtdraw true def
/txlndraw true def
(208\011 ) [9 0 9 0 9 0 0 0 0 0] 143 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 13 -457] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 174 764 41 -39 1 0 0 1 13 -457 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 178 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 13 -457] dotx
/txtdraw true def
/txlndraw true def
(205 ) [9 0 9 0 9 0 0 0] 184 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 13 -457] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 215 764 41 -39 1 0 0 1 13 -457 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 219 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 13 -457] dotx
/txtdraw true def
/txlndraw true def
(202) [9 0 9 0 0 0] 225 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 13 -457] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 256 764 41 -39 1 0 0 1 13 -457 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 260 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 13 -457] dotx
/txtdraw true def
/txlndraw true def
(199 ) [9 0 9 0 9 0 0 0] 266 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 13 -457] dotx
(Super Bloc Liste ) [10.007999 0 10.007999 0 10.007999 0 7.992001 0 7.991997 0 4.5 0 12.005997 0 5.003998 0 9 0 7.991997 0 4.5 0 12.006004 0 5.003998 0 7.001999 0 5.994003 0 7.992004 0 0 0] 33.496002 776 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 69 -368] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 41 -39 1 0 0 1 51 -368 sc6mt astore rstroke
(978) [9 0 9 0 0 0] 99 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 51 -368] dotx
/txtdraw true def
/txlndraw true def
<0920> [0 0 0 0] 126 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 51 -368] dotx
/usedash true def
/strdsh [2 5 2 2 7] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 123 0 308 653 1 0 0 1 17 -365 sc6mt astore ssl
end
grestore
grestore
%%EndDocument
 @endspecial 366 609 a
 currentpoint currentpoint translate 1 0.64526 div 1 0.64526 div scale
neg exch neg exch translate
 366 609 a 639 700 a Fq(Fig.)13
b FD(2.13)f({)i Fp(Lib)o(\023)-20 b(er)n(ation)14 b(du)i(blo)n(c)e
(978.)366 1282 y
 currentpoint currentpoint translate 0.64526 0.64526 scale neg exch
neg exch translate
 366 1282 a 14 w @beginspecial 0 @llx
0 @lly 436 @urx 161 @ury 4360 @rwi @setspecial
%%BeginDocument: eps/balloc4.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 435.7659 160.014587 rectclip
-82.174721 -599.81543 translate
82.174721 599.81543 435.7659 160.014587 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 5 2 2 7] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 401 -39 1 0 0 1 21 -35 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 41 -39 1 0 0 1 21 -35 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(109) [9 0 9 0 0 0] 99 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 21 -35] dotx
/txtdraw true def
/txlndraw true def
<0920> [0 0 0 0] 126 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 21 -35] dotx
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 329 0 148 745 1 0 0 1 24 -31 sc6mt astore ssl
/strdsh [2 2] def /dshpatoff 0 def
/crendarw true def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 102.375992 619.004822 103 619 arow
false 1 0 0 1 13 -30 sc5mt astore sstrt
systemdict
begin
42 640 145 769 setbbox
120 733 moveto
121 725 108 726 98 715 curveto
88 704 87 698 83 692 curveto
79 686 76 681 72 673 curveto
68 665 69 649 90 649 curveto
end
/nspans 4 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/usedash false def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 401 -39 1 0 0 1 24 -124 sc6mt astore rstroke
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 123 0 308 653 1 0 0 1 24 -31 sc6mt astore ssl
/usedash false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 256 764 41 -39 1 0 0 1 219 -124 sc6mt astore rstroke
( ) [0 0] 260 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 219 -124] dotx
/txtdraw true def
/txlndraw true def
(112 ) [9 0 9 0 9 0 0 0] 266 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 219 -124] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 41 -39 1 0 0 1 24 -124 sc6mt astore rstroke
(211) [9 0 9 0 0 0] 99 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 24 -124] dotx
/txtdraw true def
/txlndraw true def
<0920> [0 0 0 0] 126 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 24 -124] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 133 764 41 -39 1 0 0 1 24 -124 sc6mt astore rstroke
( ) [0 0] 137 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 24 -124] dotx
/txtdraw true def
/txlndraw true def
(208\011 ) [9 0 9 0 9 0 0 0 0 0] 143 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 24 -124] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 174 764 41 -39 1 0 0 1 24 -124 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 178 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 24 -124] dotx
/txtdraw true def
/txlndraw true def
(205) [9 0 9 0 0 0] 184 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 24 -124] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 215 764 41 -39 1 0 0 1 24 -124 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 219 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 24 -124] dotx
/txtdraw true def
/txlndraw true def
(202 ) [9 0 9 0 9 0 0 0] 225 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 24 -124] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 256 764 41 -39 1 0 0 1 24 -124 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 260 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 24 -124] dotx
/txtdraw true def
/txlndraw true def
(199) [9 0 9 0 0 0] 266 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 24 -124] dotx
(Super Bloc Liste ) [10.007999 0 10.007999 0 10.007999 0 7.992001 0 7.991997 0 4.5 0 12.005997 0 5.003998 0 9 0 7.991997 0 4.5 0 12.006004 0 5.003998 0 7.001999 0 5.994003 0 7.992004 0 0 0] 33.496002 776 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 80 -35] dotx
/usedash true def
/strdsh [2 5 2 2 7] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 123 0 308 653 1 0 0 1 25 -31 sc6mt astore ssl
(Bloc 109 ) [12.005997 0 5.004005 0 9 0 7.992004 0 4.5 0 9 0 9 0 9 0 0 0] 113.249001 565 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 6 83] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 366 1282 a
 currentpoint currentpoint translate 1 0.64526 div 1 0.64526 div scale
neg exch neg exch translate
 366 1282 a 640 1374 a Fq(Fig.)f
FD(2.14)g({)g Fp(A)o(l)r(lo)n(c)n(ation)i(du)g(blo)n(c)g(978.)366
1996 y
 currentpoint currentpoint translate 0.64087 0.64087 scale neg exch
neg exch translate
 366 1996 a 14 w @beginspecial 0 @llx 0 @lly 439
@urx 177 @ury 4390 @rwi @setspecial
%%BeginDocument: eps/balloc5.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 438.62381 176.005035 rectclip
-77.376198 -243.824982 translate
77.376198 243.824982 438.62381 176.005035 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 401 -39 1 0 0 1 22 -384 sc6mt astore rstroke
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 123 0 308 653 1 0 0 1 22 -291 sc6mt astore ssl
/usedash false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 256 764 41 -39 1 0 0 1 217 -384 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 260 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 217 -384] dotx
/txtdraw true def
/txlndraw true def
(112 ) [9 0 9 0 9 0 0 0] 266 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 217 -384] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 41 -39 1 0 0 1 22 -384 sc6mt astore rstroke
(211) [9 0 9 0 0 0] 99 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 22 -384] dotx
/txtdraw true def
/txlndraw true def
<0920> [0 0 0 0] 126 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 22 -384] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 133 764 41 -39 1 0 0 1 22 -384 sc6mt astore rstroke
( ) [0 0] 137 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 22 -384] dotx
/txtdraw true def
/txlndraw true def
(208\011 ) [9 0 9 0 9 0 0 0 0 0] 143 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 22 -384] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 174 764 41 -39 1 0 0 1 22 -384 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 178 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 22 -384] dotx
/txtdraw true def
/txlndraw true def
(205 ) [9 0 9 0 9 0 0 0] 184 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 22 -384] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 215 764 41 -39 1 0 0 1 22 -384 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 219 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 22 -384] dotx
/txtdraw true def
/txlndraw true def
(202 ) [9 0 9 0 9 0 0 0] 225 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 22 -384] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 256 764 41 -39 1 0 0 1 22 -384 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 260 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 22 -384] dotx
/txtdraw true def
/txlndraw true def
(199) [9 0 9 0 0 0] 266 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 22 -384] dotx
(Super Bloc Liste ) [10.007999 0 10.007999 0 10.007999 0 7.992001 0 7.991997 0 4.5 0 12.005997 0 5.003998 0 9 0 7.991997 0 4.5 0 12.006004 0 5.003998 0 7.001999 0 5.994003 0 7.992004 0 0 0] 33.496002 776 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 84 -375] dotx
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw true def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 97.375992 263.004822 98 263 arow
false 1 0 0 1 8 -386 sc5mt astore sstrt
systemdict
begin
42 640 145 769 setbbox
120 733 moveto
121 725 108 726 98 715 curveto
88 704 87 698 83 692 curveto
79 686 76 681 72 673 curveto
68 665 69 649 90 649 curveto
end
/nspans 4 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/usedash false def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 401 -39 1 0 0 1 19 -480 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 256 764 41 -39 1 0 0 1 214 -480 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 260 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 214 -480] dotx
/txtdraw true def
/txlndraw true def
(214 ) [9 0 9 0 9 0 0 0] 266 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 214 -480] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 41 -39 1 0 0 1 19 -480 sc6mt astore rstroke
(311) [9 0 9 0 0 0] 99 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 19 -480] dotx
/txtdraw true def
/txlndraw true def
<0920> [0 0 0 0] 126 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 19 -480] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 133 764 41 -39 1 0 0 1 19 -480 sc6mt astore rstroke
( ) [0 0] 137 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 19 -480] dotx
/txtdraw true def
/txlndraw true def
(308\011 ) [9 0 9 0 9 0 0 0 0 0] 143 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 19 -480] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 174 764 41 -39 1 0 0 1 19 -480 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 178 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 19 -480] dotx
/txtdraw true def
/txlndraw true def
(305 ) [9 0 9 0 9 0 0 0] 184 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 19 -480] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 215 764 41 -39 1 0 0 1 19 -480 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 219 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 19 -480] dotx
/txtdraw true def
/txlndraw true def
(302 ) [9 0 9 0 9 0 0 0] 225 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 19 -480] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 256 764 41 -39 1 0 0 1 19 -480 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 260 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 19 -480] dotx
/txtdraw true def
/txlndraw true def
(301 ) [9 0 9 0 9 0 0 0] 266 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 19 -480] dotx
/usedash true def
/strdsh [2 5 2 2 7] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 123 0 308 653 1 0 0 1 20 -388 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 123 0 308 653 1 0 0 1 22 -291 sc6mt astore ssl
(Bloc 211 ) [12.005997 0 5.004005 0 9 0 7.992004 0 4.5 0 9 0 9 0 9 0 0 0] 113.249001 565 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 2 -274] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 366 1996 a
 currentpoint currentpoint translate 1 0.64087 div 1 0.64087 div scale
neg exch neg exch translate
 366 1996 a 640 2087 a Fq(Fig.)e
FD(2.15)g({)g Fp(A)o(l)r(lo)n(c)n(ation)i(du)g(blo)n(c)g(109.)366
2661 y
 currentpoint currentpoint translate 0.64526 0.64526 scale neg exch
neg exch translate
 366 2661 a 14 w @beginspecial 0 @llx 0 @lly 436
@urx 161 @ury 4360 @rwi @setspecial
%%BeginDocument: eps/balloc6.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 435.7659 160.014587 rectclip
-82.174721 -599.81543 translate
82.174721 599.81543 435.7659 160.014587 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw true def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 102.375992 619.004822 103 619 arow
false 1 0 0 1 13 -30 sc5mt astore sstrt
systemdict
begin
42 640 145 769 setbbox
120 733 moveto
121 725 108 726 98 715 curveto
88 704 87 698 83 692 curveto
79 686 76 681 72 673 curveto
68 665 69 649 90 649 curveto
end
/nspans 4 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/usedash false def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 401 -39 1 0 0 1 24 -124 sc6mt astore rstroke
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 123 0 308 653 1 0 0 1 24 -31 sc6mt astore ssl
/usedash false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 256 764 41 -39 1 0 0 1 219 -124 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 260 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 219 -124] dotx
/txtdraw true def
/txlndraw true def
(112 ) [9 0 9 0 9 0 0 0] 266 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 219 -124] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 41 -39 1 0 0 1 24 -124 sc6mt astore rstroke
(211) [9 0 9 0 0 0] 99 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 24 -124] dotx
/txtdraw true def
/txlndraw true def
<0920> [0 0 0 0] 126 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 24 -124] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 133 764 41 -39 1 0 0 1 24 -124 sc6mt astore rstroke
( ) [0 0] 137 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 24 -124] dotx
/txtdraw true def
/txlndraw true def
(208\011 ) [9 0 9 0 9 0 0 0 0 0] 143 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 24 -124] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 174 764 41 -39 1 0 0 1 24 -124 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 178 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 24 -124] dotx
/txtdraw true def
/txlndraw true def
(205) [9 0 9 0 0 0] 184 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 24 -124] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 215 764 41 -39 1 0 0 1 24 -124 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 219 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 24 -124] dotx
/txtdraw true def
/txlndraw true def
(202 ) [9 0 9 0 9 0 0 0] 225 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 24 -124] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 256 764 41 -39 1 0 0 1 24 -124 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 260 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 24 -124] dotx
/txtdraw true def
/txlndraw true def
(199) [9 0 9 0 0 0] 266 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 24 -124] dotx
/usedash true def
/strdsh [2 5 2 2 7] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 123 0 308 653 1 0 0 1 25 -31 sc6mt astore ssl
(Bloc 612 ) [12.005997 0 5.004005 0 9 0 7.992004 0 4.5 0 9 0 9 0 9 0 0 0] 113.249001 565 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 6 83] dotx
/usedash false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 401 -39 1 0 0 1 21 -35 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 92 764 41 -39 1 0 0 1 21 -35 sc6mt astore rstroke
(612) [9 0 9 0 0 0] 99 740.559998 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 21 -35] dotx
/txtdraw true def
/txlndraw true def
<0920> [0 0 0 0] 126 740.559998 /Times-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 21 -35] dotx
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 329 0 148 745 1 0 0 1 24 -31 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(Super Bloc Liste ) [10.007999 0 10.007999 0 10.007999 0 7.992001 0 7.991997 0 4.5 0 12.005997 0 5.003998 0 9 0 7.991997 0 4.5 0 12.006004 0 5.003998 0 7.001999 0 5.994003 0 7.992004 0 0 0] 33.496002 776 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 80 -35] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 366 2661 a
 currentpoint currentpoint translate 1 0.64526 div 1 0.64526 div scale
neg exch neg exch translate
 366 2661 a 639 2752 a Fq(Fig.)e
FD(2.16)f({)i Fp(Lib)o(\023)-20 b(er)n(ation)14 b(du)i(blo)n(c)e(612.)p
eop
%%Page: 16 24
16 23 bop 75 50 a FD(16)653 b Fz(CHAPITRE)14 b(2.)27
b(SYST)1180 39 y(\022)1175 50 y(EME)15 b(DE)f(GESTION)g(DE)f(FICHIERS)
179 170 y Fv(2.8)66 b(Les)22 b(syst)o(\022)-32 b(emes)20
b(de)i(\014c)n(hiers)i(\013s/ufs)d(de)i(BSD)236 252 y
FB(Les)13 b(disques)i(sous)f(BSD)g(son)o(t)f(organis)o(\023)-18
b(es)15 b(par)f(group)q(es)g(de)f(cylindres)j(et)d(c)o(hacun)h(de)f
(ces)g(group)q(es)i(a)179 298 y(la)g(m)o(^)-18 b(eme)15
b(organisation)i(que)e(les)h(disques)g(logiques)h(System)e(V,)f(a)o(v)o
(ec)h(en)g(plus)h(une)f(table)h(de)e(group)q(es)179 344
y(de)h(cylindres)i(qui)f(p)q(ermet)f(d'organiser)i(l'allo)q(cation)h
(des)d(blo)q(cs)i(de)e(fa\030)-17 b(con)15 b(\022)-19
b(a)15 b(r)o(\023)-18 b(eduire)16 b(le)g(d)o(\023)-18
b(eplacemen)o(t)179 389 y(des)13 b(t)o(^)-18 b(etes)13
b(de)g(lecture)h(\(ce)f(qui)h(augmen)o(te)g(le)g(d)o(\023)-18
b(ebit\).)236 435 y(Quelques)15 b(di\013)o(\023)-18 b(erences)9
b(:)236 481 y(Les)k(blo)q(cs)i(de)e(donn)o(\023)-18 b(ees)14
b(son)o(t)g(plus)g(grands)g(\(4K)f(ou)g(8K\))g(mais)h(fragmen)o
(tables.)236 526 y(Une)19 b(ino)q(de)h(con)o(tien)o(t)g(12)f(adresses)g
(directes,)h(une)f(adresse)g(indirecte)i(et)d(2)h(adresses)g
(indirectes)179 572 y(doubles.)236 618 y(En\014n,)12
b(les)f(r)o(\023)-18 b(ep)q(ertoires)13 b(son)o(t)e(comp)q(os)o(\023)
-18 b(es)12 b(d'enregistremen)o(ts)g(de)f(tailles)i(v)n(ariables)g
(\(le)f(nom)f(des)g(liens)179 663 y(est)i(en)h(e\013et)f(limit)o(\023)
-18 b(e)16 b(\022)-19 b(a)13 b(14)h(en)f(System)h(V,)f(et)g(\022)-19
b(a)13 b(255)h(en)g(BSD,)g(c.f.)e(en)o(tr)o(\023)-18
b(ees-sorties)15 b(sur)e(r)o(\023)-18 b(ep)q(ertoires\),)15
b(la)179 709 y(norme)e(POSIX)g(\014xe)g(la)h(taille)h(maxim)o(um)f(des)
g(liens)g(\022)-19 b(a)13 b(255)h(\(MAXNAMLEN\).)p eop
%%Page: 17 25
17 24 bop 1796 50 a FD(17)179 478 y Fw(Chapitre)32 b(3)179
686 y Fy(Le)38 b(Bu\013er)g(Cac)m(he)179 927 y Fv(3.1)66
b(In)n(tro)r(duction)24 b(au)f(bu\013er)g(cac)n(he)236
1010 y FB(Le)12 b(bu\013er)h(cac)o(he)g(est)f(un)h(ensem)o(ble)g(de)g
(structures)g(de)f(donn)o(\023)-18 b(ees)13 b(et)f(d'algorithmes)j(qui)
e(p)q(ermetten)o(t)179 1056 y(de)g(minimiser)i(le)f(nom)o(bre)g(des)f
(acc)o(\022)-18 b(es)13 b(disque.)236 1147 y(Ce)f(qui)h(est)g(tr)o
(\022)-18 b(es)12 b(imp)q(ortan)o(t)h(car)g(les)g(disques)h(son)o(t)e
(tr)o(\022)-18 b(es)12 b(len)o(ts)h(relativ)o(emen)o(t)i(au)d(CPU)g(et)
g(un)h(no)o(y)o(au)179 1193 y(qui)h(se)f(c)o(hargerait)i(de)e(toutes)h
(les)f(en)o(tr)o(\023)-18 b(ees/sorties)15 b(serait)f(d'une)g(grande)g
(len)o(teur)g(et)f(l'unit)o(\023)-18 b(e)15 b(de)e(traite-)179
1239 y(men)o(t)g(ne)g(serait)h(e\013ectiv)o(emen)o(t)g(utilis)o(\023)
-18 b(ee)16 b(qu'\022)-19 b(a)13 b(un)h(faible)g(p)q(ourcen)o(tage)h
(\(v)o(oir)e(Historique\).)179 1284 y(Deux)h(id)o(\023)-18
b(ees)14 b(p)q(our)f(r)o(\023)-18 b(eduire)15 b(le)e(nom)o(bre)h(des)f
(acc)o(\022)-18 b(es)14 b(disques)8 b(:)219 1347 y(1.)21
b(bu\013eriser)d(les)f(di\013)o(\023)-18 b(eren)o(tes)18
b(commandes)g(d')o(\023)-18 b(ecriture)17 b(et)f(de)g(lecture)h(de)g
(fa\030)-17 b(con)17 b(\022)-19 b(a)16 b(faire)g(un)h(acc)o(\022)-18
b(es)270 1393 y(disque)14 b(uniquemen)o(t)g(p)q(our)f(une)g(quan)o(tit)
o(\023)-18 b(e)14 b(de)e(donn)o(\023)-18 b(ees)14 b(de)e(taille)i
(raisonnable)h(\(un)e(blo)q(c)g(disque\).)219 1456 y(2.)21
b(Eviter)c(des)e(\023)-18 b(ecritures)17 b(in)o(utiles)h(quand)f(les)f
(donn)o(\023)-18 b(ees)17 b(p)q(euv)o(en)o(t)g(encore)e(^)-18
b(etre)16 b(c)o(hang)o(\023)-18 b(ees)17 b(\()o(\023)-18
b(ecriture)270 1502 y(di\013)o(\023)g(er)o(\023)g(ees\).)179
1613 y Fu(3.1.1)55 b(Av)m(an)n(tages)19 b(et)f(d)o(\023)-27
b(esa)n(v)m(an)n(tages)19 b(du)g(bu\013er)f(cac)n(he)230
1684 y FB({)j(Un)14 b(acc)o(\022)-18 b(es)14 b(uniforme)i(au)e(disque.)
h(Le)f(no)o(y)o(au)h(n'a)f(pas)h(\022)-19 b(a)14 b(conna)l(^)-15
b(\020tre)15 b(la)g(raison)g(de)f(l'en)o(tr)o(\023)-18
b(ee-sortie.)270 1729 y(Il)15 b(copie)h(les)f(donn)o(\023)-18
b(ees)15 b(depuis)i(et)d(v)o(ers)h(des)f(tamp)q(ons)i(\(que)f(ce)f
(soien)o(t)i(des)f(donn)o(\023)-18 b(ees,)15 b(des)g(ino)q(des)270
1775 y(ou)i(le)f(sup)q(erblo)q(c\).)i(Ce)e(m)o(\023)-18
b(ecanisme)18 b(est)e(mo)q(dulaire)i(et)e(s'in)o(t)o(\022)-18
b(egre)17 b(facilemen)o(t)h(\022)-19 b(a)16 b(l'ensem)o(ble)i(du)270
1821 y(syst)o(\022)-18 b(eme)14 b(qu'il)g(rend)g(plus)g(facile)g(\022)
-19 b(a)12 b(\023)-18 b(ecrire.)230 1883 y({)21 b(Rend)11
b(l'utilisation)i(des)d(en)o(tr)o(\023)-18 b(ees-sorties)11
b(plus)g(simple)h(p)q(our)e(l'utilisateu)q(r)i(qui)f(n'a)f(pas)g(\022)
-19 b(a)9 b(se)h(soucier)270 1929 y(des)j(probl)o(\022)-18
b(emes)15 b(d'alignemen)o(t,)g(il)f(rend)g(les)f(programmes)h(p)q
(ortables)h(sur)e(d'autres)h(UNIX)1637 1913 y Fs(1)1654
1929 y FB(.)230 1992 y({)21 b(Il)c(r)o(\023)-18 b(eduit)17
b(le)f(tra\014c)h(disque)g(et)f(de)h(ce)f(fait)g(augmen)o(te)h(la)g
(capacit)o(\023)-18 b(e)17 b(du)g(syst)o(\022)-18 b(eme.)16
b(A)o(tten)o(tion)7 b(:)16 b(le)270 2038 y(nom)o(bre)e(de)f(tamp)q(ons)
h(ne)f(doit)h(pas)g(trop)f(r)o(\023)-18 b(eduire)14 b(la)g(m)o(\023)-18
b(emoire)14 b(cen)o(trale)g(utilisable)q(.)230 2100 y({)21
b(L'impl)o(\023)-18 b(emen)o(tation)16 b(du)d(bu\013er)h(cac)o(he)g
(prot)o(\022)-18 b(ege)13 b(con)o(tre)h(certaines)f(\023)-18
b(ecritures)14 b("concurren)o(tes")230 2163 y({)21 b(L')o(\023)-18
b(ecriture)13 b(di\013)o(\023)-18 b(er)o(\023)g(ee)13
b(p)q(ose)g(un)f(probl)o(\022)-18 b(eme)14 b(dans)e(le)h(cas)f(d'un)g
(crash)h(du)f(syst)o(\022)-18 b(eme.)12 b(En)h(e\013et)f(si)g(v)o(otre)
270 2209 y(mac)o(hine)k(s'arr)o(^)-18 b(ete)15 b(\(coupure)h(de)f
(couran)o(t\))h(et)e(que)i(un)f(\(ou)g(plusieurs\))i(blo)q(cs)f(son)o
(t)g(marqu)o(\023)-18 b(es)15 b("\022)-19 b(a)269 2255
y(\023)h(ecrire")15 b(ils)g(n'on)o(t)f(donc)h(pas)e(\023)-18
b(et)o(\023)g(es)14 b(sauv)o(egard)o(\023)-18 b(es)16
b(ph)o(ysiquemen)o(t.)g(L'in)o(t)o(\023)-18 b(egrit)o(\023)g(e)15
b(des)f(donn)o(\023)-18 b(ees)16 b(n'est)270 2300 y(donc)e(pas)f(assur)
o(\023)-18 b(ee)14 b(en)f(cas)h(de)f(crash.)230 2363
y({)21 b(Le)13 b(bu\013er)g(cac)o(he)h(n)o(\023)-18 b(ecessite)14
b(que)f(l'on)g(e\013ectue)h(une)f(recopie)h(\(in)o(terne)g(\022)-19
b(a)12 b(la)i(m)o(\023)-18 b(emoire,)13 b(de)g(la)g(zone)270
2409 y(utilisateur)k(au)d(cac)o(he)g(ou)g(in)o(v)o(ersemen)o(t\))h(p)q
(our)g(toute)f(en)o(tr)o(\023)-18 b(ee-sortie.)14 b(Dans)h(le)f(cas)g
(de)g(transferts)270 2454 y(nom)o(breux)g(ceci)g(ralen)o(tit)h(les)e
(en)o(tr)o(\023)-18 b(ees-sorties)15 b(.)179 2587 y Fv(3.2)66
b(Le)22 b(bu\013er)i(cac)n(he,)e(structures)h(de)f(donn)o(\023)-32
b(ees.)236 2670 y FB(Le)13 b(statut)h(d'un)f(blo)q(c)h(cac)o(he)g(est)f
(une)g(com)o(binaison)j(des)c(\023)-18 b(etats)13 b(suiv)n(an)o(ts)c(:)
179 2733 y FC(v)o(errouill)o(\023)-21 b(e)19 b FB(l'acc)o(\022)-18
b(es)14 b(est)f(reserv)o(\023)-18 b(e)13 b(\022)-19 b(a)13
b(un)h(pro)q(cessus.)p 75 2768 705 2 v 120 2806 a Fo(1.)8
b(Les)k(probl)o(\022)-17 b(emes)8 b(d'alignemen)o(t)g(existen)o(t)i
(toujours)f(quand)h(on)h(transf)o(\022)-17 b(ere)9 b(des)i(donn)o(\023)
-17 b(ees,)10 b(cf.)h(proto)q(coles)d(XDR,RPC)p eop
%%Page: 18 26
18 25 bop 75 50 a FD(18)1018 b Fz(CHAPITRE)14 b(3.)27
b(LE)14 b(BUFFER)g(CA)o(CHE)484 609 y
 currentpoint currentpoint translate 0.4435 0.4435 scale neg exch neg
exch translate
 484 609 a 14 w
@beginspecial 0 @llx 0 @lly 508 @urx 262 @ury 5080 @rwi
@setspecial
%%BeginDocument: eps/buffercache.header.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 507.258057 261.508057 rectclip
-41.911987 -444.32196 translate
41.911987 444.32196 507.258057 261.508057 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 179 765 115 -26 1 0 0 1 5 -95 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( # de disque ) [4.5 0 9 0 4.5 0 10.007996 0 7.992004 0 4.5 0 10.007996 0 5.003998 0 7.001999 0 10.007996 0 10.007996 0 7.992004 0 0 0] 191.238998 747.169983 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 5 -95] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 179 739 115 -26 1 0 0 1 5 -95 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 200.552002 721.169983 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 5 -95] dotx
/txtdraw true def
/txlndraw true def
(#\200 de bloc ) [9 0 0 0 4.5 0 10.007996 0 7.992004 0 4.5 0 10.007996 0 5.003998 0 9 0 7.992004 0 0 0] 204.444 721.169983 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 5 -95] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 179 713 115 -26 1 0 0 1 5 -95 sc6mt astore rstroke
( statut ) [4.5 0 7.001999 0 5.994003 0 9 0 5.994003 0 10.007996 0 5.994003 0 0 0] 212.253998 695.169983 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 5 -95] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 179 687 115 -26 1 0 0 1 5 -95 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 179 661 115 -26 1 0 0 1 5 -95 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 179 635 115 -26 1 0 0 1 5 -95 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 179 609 115 -26 1 0 0 1 5 -95 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 179 583 115 -26 1 0 0 1 5 -95 sc6mt astore rstroke
/crlinw 2 def
/crendarw true def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 381.668549 637.000305 382 637 arow
false 1 0 0 1.016129 6 -106.822571 sc5mt astore sstrt
systemdict
begin
134 648 430 749 setbbox
238 674 moveto
259 673 318 675.682495 326 690.682495 curveto
334 705.682495 327 703 338 718 curveto
349 733 365 732.015869 376 732.015869 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 71 0 243 603 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 71 0 244 549 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore -1 0 0 1 597 0 sc5mt astore 71 0 263 576 -1 0 0 1 510 -99 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore -1 0 0 1 597 0 sc5mt astore 71 0 263 576 -1 0 0 1 506 -50 sc6mt astore ssl
(Suivant sur hash queue ) [10.007996 0 10.007996 0 4.824005 0 8.820007 0 9 0 10.007996 0 5.993988 0 4.5 0 7.002014 0 10.007996 0 7.992004 0 4.5 0 10.007996 0 9 0 7.002014 0 10.007996 0 4.5 0 10.007996 0 10.007996 0 7.992004 0 10.007996 0 7.992004 0 0 0] 244.404999 649 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 93 -100] dotx
(Suivant sur liste des libres ) [10.007996 0 10.007996 0 4.82399 0 8.820007 0 9 0 10.007996 0 5.993988 0 4.5 0 7.002014 0 10.007996 0 7.992004 0 4.5 0 5.003998 0 5.003998 0 7.002014 0 5.993988 0 7.992004 0 4.5 0 10.007996 0 7.992004 0 7.002014 0 4.5 0 5.003998 0 5.003998 0 10.007996 0 7.667999 0 7.992004 0 7.002014 0 0 0] 233.830002 649 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 104 -154] dotx
(Pr\335c\335dent sur  liste des libres ) [10.997986 0 7.992004 0 7.992004 0 7.992004 0 7.992004 0 10.007996 0 7.992004 0 10.007996 0 5.993988 0 4.5 0 7.002014 0 10.007996 0 7.992004 0 -109.323029 -20.754028 4.5 0 5.003998 0 5.003998 0 7.002014 0 5.993988 0 7.992004 0 4.5 0 10.007996 0 7.992004 0 7.002014 0 4.5 0 5.003998 0 5.003998 0 10.007996 0 7.667999 0 7.992004 0 7.002014 0 0 0] 280.765015 649 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -235 -179] dotx
(Pr\335c\335dent sur  hash queue ) [10.997986 0 7.992004 0 7.992004 0 7.992004 0 7.992004 0 10.007996 0 7.992004 0 10.007996 0 5.993988 0 4.5 0 7.002014 0 10.007996 0 7.992004 0 -98.748016 -20.754028 4.5 0 10.007996 0 9 0 7.002014 0 10.007996 0 4.5 0 10.007996 0 10.007996 0 7.992004 0 10.007996 0 7.992004 0 0 0] 280.765015 649 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -237 -115] dotx
(Ent\336te de Bloc ) [12.005997 0 10.007996 0 5.994003 0 7.992004 0 5.994003 0 7.992004 0 4.5 0 10.007996 0 7.992004 0 4.5 0 12.005997 0 5.003998 0 9 0 7.992004 0 0 0] 110.505997 789 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 72 -102] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 609 a
 currentpoint currentpoint translate 1 0.4435 div 1 0.4435 div scale
neg exch neg exch translate
 484 609 a 438 700 a Fq(Fig.)f
FD(3.1)g({)h Fp(Structur)n(e)g(des)h(ent)o(^)-20 b(etes)15
b(de)g(Blo)n(c)g(du)h(Bu\013er)f(Cache)484 1327 y
 currentpoint currentpoint translate 0.4884 0.4884 scale neg exch neg
exch translate
 484
1327 a 14 w @beginspecial 0 @llx 0 @lly 461 @urx 279
@ury 4610 @rwi @setspecial
%%BeginDocument: eps/buffercache.listes.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 461 278.830017 rectclip
-66 -398 translate
66 398 461 278.830017 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw true def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crfrtarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 79 760 44 -33 1 0 0 1 168 -150 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(b 1 ) [10.007996 0 4.5 0 9 0 0 0] 82 742.169983 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 168 -150] dotx
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 0 133 753 1 0 0 1 168 -150 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore -1 0 0 1 295 0 sc5mt astore 27 0 134 736 -1 0 0 1 475 -148 sc6mt astore ssl
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 79 760 44 -33 1 0 0 1 268 -150 sc6mt astore rstroke
(b 2 ) [10.007996 0 4.5 0 9 0 0 0] 82 742.169983 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 268 -150] dotx
/crlinred 0.666662 def /crlingrn 0.666662 def /crlinblu 0.666662 def /strinclr true def
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 0 133 753 1 0 0 1 268 -150 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore -1 0 0 1 295 0 sc5mt astore 27 0 134 736 -1 0 0 1 575 -148 sc6mt astore ssl
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 79 760 44 -33 1 0 0 1 370 -150 sc6mt astore rstroke
(b n ) [10.007996 0 4.5 0 10.007996 0 0 0] 82 742.169983 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 370 -150] dotx
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 0 133 753 1 0 0 1 69 -150 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore -1 0 0 1 295 0 sc5mt astore 27 0 134 736 -1 0 0 1 376 -148 sc6mt astore ssl
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 62 767 105 -38 1 0 0 1 30 -154 sc6mt astore rstroke
(t\336te de liste  ) [5.994003 0 7.991997 0 5.994003 0 7.991997 0 4.5 0 10.007996 0 7.991997 0 4.5 0 5.003998 0 5.003998 0 7.002007 0 5.994003 0 7.992004 0 4.5 0 0 0] 61 412 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 39 176] dotx
/crendarw true def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 81.465096 604.004211 82 604 arow
false 1 0 0 1 30 -154 sc5mt astore sstrt
systemdict
begin
14 736 536 808 setbbox
464 756 moveto
482 755 502 773 483 784 curveto
464 795 55 794 44 783 curveto
33 772 34 758 52 758 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/crendarw false def
/crfrtarw true def
1 0 0 1 0 0 sc5mt astore crlinw 1 -8.742278e-08 -8.742278e-08 -1 6.103516e-05 1366.015869 sc6mt astore 506.537018 589.023987 506 589 arow
false 1 -8.742278e-08 -8.742278e-08 -1 30.000069 1344.015869 sc5mt astore sstrt
systemdict
begin
14 736 536 808 setbbox
476 755.015808 moveto
494 754.015808 502 773 483 784 curveto
464 795 59 793 48 782 curveto
37 771 42.999996 759.015869 60.999996 759.015869 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 -8.742278e-08 -8.742278e-08 -1 6.103516e-05 1366.015869 sc6mt astore splstroke
(Liste des blocs libres  ) [12.005997 0 5.003998 0 7.001999 0 5.994003 0 7.991997 0 4.5 0 10.008003 0 7.992004 0 7.001999 0 4.5 0 10.007996 0 5.003998 0 9 0 7.992004 0 7.001999 0 4.5 0 5.003998 0 5.003998 0 10.007996 0 7.667999 0 7.992004 0 7.001999 0 4.5 0 0 0] 68 792 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 126 -134] dotx
(allocation du tampon 1 : le moins r\335cemment utilis\335 ) [9 0 5.003998 0 5.003998 0 9 0 7.991997 0 9 0 5.994003 0 5.003998 0 8.999992 0 10.007996 0 4.5 0 10.007996 0 10.007996 0 4.5 0 5.994003 0 9 0 14.994003 0 10.007996 0 9 0 10.007996 0 4.5 0 9 0 4.5 0 5.994003 0 4.499985 0 5.003998 0 7.992004 0 4.5 0 14.993988 0 9 0 5.003998 0 10.007996 0 7.002014 0 4.5 0 7.992004 0 7.992004 0 7.992004 0 7.992004 0 14.993988 0 14.993988 0 7.992004 0 10.007996 0 5.993988 0 4.5 0 10.007996 0 5.993988 0 5.003998 0 5.003998 0 5.003998 0 7.002014 0 7.992004 0 0 0] 68 792 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 34 -288] dotx
/crfrtarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 79 760 44 -33 1 0 0 1 270 -304 sc6mt astore rstroke
(b 2 ) [10.007996 0 4.5 0 9 0 0 0] 82 742.169983 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 270 -304] dotx
/crlinred 0.666662 def /crlingrn 0.666662 def /crlinblu 0.666662 def /strinclr true def
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 0 133 753 1 0 0 1 270 -304 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore -1 0 0 1 295 0 sc5mt astore 27 0 134 736 -1 0 0 1 577 -302 sc6mt astore ssl
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 79 760 44 -33 1 0 0 1 372 -304 sc6mt astore rstroke
(b n ) [10.007996 0 4.5 0 10.007996 0 0 0] 82 742.169983 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 372 -304] dotx
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 127 0 175 576 1 0 0 1 29 -127 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore -1 0 0 1 295 0 sc5mt astore -126 0 314 561 1 0 0 1 29 -127 sc6mt astore ssl
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 62 767 105 -38 1 0 0 1 32 -308 sc6mt astore rstroke
(t\336te de liste  ) [5.994003 0 7.991997 0 5.994003 0 7.991997 0 4.5 0 10.007996 0 7.991997 0 4.5 0 5.003998 0 5.003998 0 7.002007 0 5.994003 0 7.992004 0 4.5 0 0 0] 61 412 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 41 22] dotx
/crendarw true def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 83.465096 450.004211 84 450 arow
false 1 0 0 1 32 -308 sc5mt astore sstrt
systemdict
begin
14 736 536 808 setbbox
464 756 moveto
482 755 502 773 483 784 curveto
464 795 55 794 44 783 curveto
33 772 34 758 52 758 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/crendarw false def
/crfrtarw true def
1 0 0 1 0 0 sc5mt astore crlinw 1 -8.742278e-08 -8.742278e-08 -1 6.103516e-05 1366.015869 sc6mt astore 508.537018 435.024017 508 435.000031 arow
false 1 -8.742278e-08 -8.742278e-08 -1 32.000069 1190.015869 sc5mt astore sstrt
systemdict
begin
14 736 536 808 setbbox
476 755.015808 moveto
494 754.015808 502 773 483 784 curveto
464 795 59 793 48 782 curveto
37 771 42.999996 759.015869 60.999996 759.015869 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 -8.742278e-08 -8.742278e-08 -1 6.103516e-05 1366.015869 sc6mt astore splstroke
end
grestore
grestore
%%EndDocument
 @endspecial 484 1327 a
 currentpoint currentpoint translate 1 0.4884 div 1 0.4884 div scale
neg exch neg exch translate
 484 1327 a 612 1418 a Fq(Fig.)e
FD(3.2)g({)g Fp(L)n(a)i(liste)f(des)h(tamp)n(ons)h(libr)n(es.)179
1551 y FC(v)n(alide)j FB(\(les)14 b(donn)o(\023)-18 b(ees)14
b(con)o(ten)o(ues)g(dans)g(le)g(blo)q(c)g(son)o(t)f(v)n(alides\).)179
1614 y FC("\022)-22 b(a)14 b(\023)-21 b(ecrire")21 b
FB(les)16 b(donn)o(\023)-18 b(ees)17 b(du)g(blo)q(c)g(doiv)o(en)o(t)f
(^)-18 b(etre)14 b(\023)-18 b(ecrites)17 b(sur)f(disque)i(a)o(v)n(an)o
(t)e(de)g(r)o(\023)-18 b(eallouer)18 b(le)e(blo)q(c)h(\()270
1660 y(c'est)c(de)g(l')o(\023)-18 b(ecriture)14 b(retard)o(\023)-18
b(ee\).)179 1723 y FC(actif)20 b FB(le)13 b(no)o(y)o(au)h(est)f(en)g
(train)h(d')o(\023)-18 b(ecrire/lire)16 b(le)d(blo)q(c)h(sur)g(le)f
(disque.)179 1786 y FC(attendu)20 b FB(un)14 b(pro)q(cessus)g(attend)g
(la)f(lib)o(\023)-18 b(eration)16 b(du)e(blo)q(c.)179
1897 y Fu(3.2.1)55 b(La)19 b(liste)e(doublemen)n(t)g(c)n(ha)-6
b(^)-22 b(\020n)o(\023)-27 b(ee)18 b(des)g(blo)r(cs)g(libres)236
1968 y FB(Les)f(tamp)q(ons)h(libres)g(appartiennen)o(t)h(sim)o(ultan)o
(\023)-18 b(emen)o(t)19 b(\022)-19 b(a)17 b(deux)h(listes)g(doublemen)o
(t)g(c)o(ha)l(^)-15 b(\020n)o(\023)d(ees)9 b(:)16 b(la)179
2013 y(liste)e(des)f(blo)q(cs)i(libres)f(et)f(la)h(hash-liste)h
(corresp)q(ondan)o(t)g(au)e(dernier)h(blo)q(c)h(a)o(y)o(an)o(t)d(\023)
-18 b(et)o(\023)g(e)13 b(con)o(ten)o(u)h(dans)g(ce)179
2059 y(tamp)q(on.)236 2105 y(L'insertion)f(dans)g(la)f(liste)g(des)g
(tamp)q(ons)g(libres)h(se)e(fait)h(en)f(\014n)h(de)g(liste,)g(la)g
(suppression)i(\(allo)q(cation)179 2151 y(du)f(tamp)q(on)g(\022)-19
b(a)12 b(un)h(blo)q(c)h(donn)o(\023)-18 b(e\))13 b(se)f(fait)h(en)g(d)o
(\023)-18 b(ebut)13 b(de)f(liste,)i(ainsi)g(le)f(tamp)q(on)g(allou)o
(\023)-18 b(e)14 b(est)f(le)f(plus)i(vieux)179 2196 y(tamp)q(on)k(lib)o
(\023)-18 b(er)o(\023)g(e)420 2181 y Fs(2)439 2196 y
FB(.)17 b(Ceci)h(p)q(ermet)g(une)g(r)o(\023)-18 b(ep)q(onse)19
b(imm)o(\023)-18 b(ediate)19 b(si)f(le)g(blo)q(c)h(corresp)q(ondan)o(t)
h(est)d(r)o(\023)-18 b(eutilis)o(\023)g(e)179 2242 y(a)o(v)n(an)o(t)13
b(que)h(le)f(tamp)q(on)h(ne)f(soit)h(allou)o(\023)-18
b(e)15 b(\022)-19 b(a)13 b(un)g(autre)h(blo)q(c.)179
2375 y Fv(3.3)66 b(L'algorithme)23 b(de)g(la)g(primitiv)n(e)i
Fm(getblk)179 2458 y FA(Algorithm)o(e)17 b(getblk)g(\(allocati)o(on)f
(d'un)i(tampon\))179 2504 y(entree)f(:)i(#)h(disque)d(logique)g(,)i(#)g
(de)g(block)179 2549 y(sortie)e(:)i(un)g(tampon)e(verrouille)f
(utilisable)g(pour)i(manipuler)e(bloc)179 2595 y({)257
2641 y(while)i(\(tampon)f(non)h(trouve\))257 2686 y({)336
2732 y(if)h(\(tampon)d(dans)j(sa)f(hash)g(liste\))p 75
2768 705 2 v 120 2806 a Fo(2.)8 b(ordre)i(\014fo)5 b(:)12
b(\014rst)f(in)g(\014rst)f(out)p eop
%%Page: 19 27
19 26 bop 75 50 a Fz(3.3.)26 b(L'ALGORITHME)13 b(DE)h(LA)g(PRIMITIVE)g
Fl(GETBLK)761 b FD(19)366 732 y
 currentpoint currentpoint translate 0.58289 0.58289 scale neg exch
neg exch translate
 366 732 a 14 w @beginspecial
0 @llx 0 @lly 483 @urx 250 @ury 4830 @rwi @setspecial
%%BeginDocument: eps/getblk1.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 483 249.523224 rectclip
-29 -374.584747 translate
29 374.584747 483 249.523224 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 654 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 613 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 572 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 531 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 71 456 91 -31 1 0 0 1 0 -50 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(liste libres ) [5.003998 0 5.003998 0 7.001999 0 5.994003 0 7.991997 0 4.5 0 5.003998 0 5.003998 0 10.008003 0 7.667999 0 7.992004 0 7.001999 0 0 0] 73.5 438.170013 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 -50] dotx
(bloc# 0 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -210 -38] dotx
(bloc# 1 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -210 -85] dotx
(bloc# 2 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -212 -128] dotx
(bloc# 3 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -209 -173] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 2.098083e-05 -50.000015 sc6mt astore rstroke
1 0 0 1 46.199997 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 92.20002 -50.000015 sc6mt astore rstroke
1 0 0 1 92.399994 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.400024 -50.000015 sc6mt astore rstroke
1 0 0 1 0 -39.919998 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 2.098083e-05 -97.920013 sc6mt astore rstroke
1 0 0 1 46.199997 -39.919998 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 93.200035 -97.920013 sc6mt astore rstroke
1 0 0 1 92.399994 -39.919998 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.40004 -97.920013 sc6mt astore rstroke
1 0 0 1 0 -79.839996 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 2.098083e-05 -145.840012 sc6mt astore rstroke
1 0 0 1 46.199997 -79.839996 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 92.200035 -145.840012 sc6mt astore rstroke
1 0 0 1 92.399994 -79.839996 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.40004 -145.840012 sc6mt astore rstroke
1 0 0 1 0 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 1.000021 -193.76001 sc6mt astore rstroke
1 0 0 1 46.199997 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 92.200035 -193.76001 sc6mt astore rstroke
1 0 0 1 92.399994 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.40004 -193.76001 sc6mt astore rstroke
/usedash true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 195 634 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 195 591 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 196 544 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 196 496 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 283 492 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 283 540 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 282 590 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 284 636 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 376 638 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 376 591 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 375 542 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 375 494 1 0 0 1 0 -50 sc6mt astore ssl
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 462 494 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 463 541 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 463 590 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 464 636 1 0 0 1 0 -50 sc6mt astore ssl
/crendarw false def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 35.99321 632.2854 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 34.99321 588.2854 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 35.99321 544.2854 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 34.99321 499.2854 1 0 0 1 0 -50 sc6mt astore ssl
(28 ) [9 0 9 0 0 0] 231 369 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 22 212] dotx
(4 ) [9 0 0 0] 48 721 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 301 -140] dotx
(64 ) [9 0 9 0 0 0] 84 710 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 348 -131] dotx
(17 ) [9 0 9 0 0 0] 142 711 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 109 -176] dotx
(5 ) [9 0 0 0] 212 715 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 139 -180] dotx
(97 ) [9 0 9 0 0 0] 281 721 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 153 -189] dotx
(98 ) [9 0 9 0 0 0] 111 689 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 143 -202] dotx
(50 ) [9 0 9 0 0 0] 178 695 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 166 -208] dotx
(10 ) [9 0 9 0 0 0] 285 691 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 148 -204] dotx
(3 ) [9 0 0 0] 131 670 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 127 -231] dotx
(35 ) [9 0 9 0 0 0] 174 675 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 170 -234] dotx
(99 ) [9 0 9 0 0 0] 241 676 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 192 -237] dotx
/crlinw 2 def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw true def
/crfrtarw false def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 232.428711 430.96225 233.000015 431 arow
false 0.907895 0 0 1 15.105223 -55 sc5mt astore sstrt
systemdict
begin
121 422 263 492 setbbox
162.89856 444 moveto
195.89856 452 200.347824 458 200.347824 458 curveto
200.347824 458 219 485 240 486 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 322.139801 530.923401 323 531 arow
false 0.854167 0 0 1 41.416656 -50 sc5mt astore sstrt
systemdict
begin
264 496 366 596 setbbox
284 497 moveto
304 498 305 577 305 549 curveto
305 521 295.658539 579 329.658539 581 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 323.168701 578.995239 324 579 arow
false 1 0 0 1 0 -50 sc5mt astore sstrt
systemdict
begin
292 578 409 631 setbbox
373 578 moveto
395 578 408 612 385 612 curveto
362 612 337 613 317 613 curveto
297 613 296 629 324 629 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 235.759155 593.008972 237 593 arow
false 1 0 0 1 0 -50 sc5mt astore sstrt
systemdict
begin
189 629 424 687 setbbox
375 631 moveto
400 631 410 671 373 672 curveto
336 673 285 673 251 673 curveto
217 673 195 643 237 643 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 416.513397 545.027039 417 545 arow
false 0.964789 0 0 1 9.859161 -50 sc5mt astore sstrt
systemdict
begin
266 579 439 628 setbbox
280 626 moveto
294 626 294 611 312 611 curveto
330 611 368.795624 619 387.795624 603 curveto
406.795624 587 405 596 422 595 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 409.349304 494.975098 410 495 arow
false 1 0 0 1 0 -50 sc5mt astore sstrt
systemdict
begin
388 543 493 581 setbbox
465 581 moveto
489 581 493 564 470 565 curveto
447 566 407 566 402 563 curveto
397 560 388 544 410 545 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 176.84906 383.000916 176 383 arow
false 0.95549 0 0 1 22.166164 -50 sc5mt astore sstrt
systemdict
begin
133 431 548 531 setbbox
462 531 moveto
491 531 498 436 439 436 curveto
380 436 189 433 161 433 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 232.428711 430.96225 233.000015 431 arow
false 0.907895 0 0 1 15.105223 -55 sc5mt astore sstrt
systemdict
begin
121 422 263 492 setbbox
162.89856 444 moveto
195.89856 452 200.347824 458 200.347824 458 curveto
200.347824 458 219 485 240 486 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 322.139801 530.923401 323 531 arow
false 0.854167 0 0 1 41.416656 -50 sc5mt astore sstrt
systemdict
begin
264 496 366 596 setbbox
284 497 moveto
304 498 305 577 305 549 curveto
305 521 295.658539 579 329.658539 581 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
end
grestore
grestore
%%EndDocument
 @endspecial 366 732 a
 currentpoint currentpoint translate 1 0.58289 div 1 0.58289 div scale
neg exch neg exch translate
 366 732 a 405 823 a Fq(Fig.)13
b FD(3.3)g({)g Fp(Etat)i(du)g(bu\013er)h(c)n(ache)f(avant)h(les)e(sc)o
(\023)-20 b(enarios)15 b(1,)g(2)g(et)g(3.)336 956 y FA({)493
1002 y(if)j(\(tampon)f(actif)h(\))493 1047 y({)316 1093
y([5])195 b(sleep)18 b(attente)f(de)h(la)h(liberation)d(du)j(tampon)571
1139 y(continuer)493 1184 y(})316 1230 y([1])117 b(verrouill)o(er)16
b(le)j(tampon)493 1276 y(retirer)e(le)h(tampon)g(de)g(la)h(liste)f(des)
g(tampons)f(libres)493 1321 y(retourner)f(le)j(tampon)336
1367 y(})336 1413 y(else)37 b(/*)19 b(n'est)f(pas)g(dans)g(la)h(hash)f
(liste)g(*/)336 1458 y({)493 1504 y(if)g(\(aucun)g(tampon)f(libre)h(\))
493 1550 y({)336 1595 y([4])175 b(sleep)18 b(attente)f(de)h(la)h
(liberation)d(d'un)i(tampon)571 1641 y(continuer)493
1687 y(})493 1732 y(retirer)f(le)h(tampon)g(de)g(la)h(liste)f(libre)336
1778 y([3])97 b(if)18 b(\(le)h(tampon)e(est)i(a)g(ecrire\))493
1823 y({)571 1869 y(lancer)e(la)i(sauvegarde)d(sur)i(disque)571
1915 y(continuer)493 1960 y(})336 2006 y([2])97 b(retirer)17
b(le)h(buffer)g(de)g(son)h(ancienne)d(liste)512 2052
y(de)j(hashage,)e(le)h(placer)g(sur)g(la)h(nouvelle)493
2097 y(retourner)d(le)j(tampon)336 2143 y(})257 2189
y(})179 2234 y(})p eop
%%Page: 20 28
20 27 bop 75 50 a FD(20)1018 b Fz(CHAPITRE)14 b(3.)27
b(LE)14 b(BUFFER)g(CA)o(CHE)366 797 y
 currentpoint currentpoint translate 0.58289 0.58289 scale neg exch
neg exch translate
 366 797 a 14 w
@beginspecial 0 @llx 0 @lly 483 @urx 233 @ury 4830 @rwi
@setspecial
%%BeginDocument: eps/getblk1b.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 483 233 rectclip
-29 -374 translate
29 374 483 233 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/usedash true def
/crendarw true def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 416.513397 545.027039 417 545 arow
false 0.964789 0 0 1 9.859161 -50 sc5mt astore sstrt
systemdict
begin
266 579 439 628 setbbox
280 626 moveto
294 626 294 611 312 611 curveto
330 611 368.795624 619 387.795624 603 curveto
406.795624 587 405 596 422 595 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/crlinw 1 def
/usedash false def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 654 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 613 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 572 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 531 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 71 456 91 -31 1 0 0 1 0 -50 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(liste libres ) [5.003998 0 5.003998 0 7.001999 0 5.994003 0 7.991997 0 4.5 0 5.003998 0 5.003998 0 10.008003 0 7.667999 0 7.992004 0 7.001999 0 0 0] 73.5 438.170013 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 -50] dotx
(bloc# 0 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -210 -38] dotx
(bloc# 1 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -210 -85] dotx
(bloc# 2 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -212 -128] dotx
(bloc# 3 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -209 -173] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 2.098083e-05 -50.000015 sc6mt astore rstroke
1 0 0 1 46.199997 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 92.20002 -50.000015 sc6mt astore rstroke
1 0 0 1 92.399994 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.400024 -50.000015 sc6mt astore rstroke
1 0 0 1 0 -39.919998 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 2.098083e-05 -97.920013 sc6mt astore rstroke
1 0 0 1 46.199997 -39.919998 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 93.200035 -97.920013 sc6mt astore rstroke
1 0 0 1 92.399994 -39.919998 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.40004 -97.920013 sc6mt astore rstroke
1 0 0 1 0 -79.839996 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 2.098083e-05 -145.840012 sc6mt astore rstroke
1 0 0 1 46.199997 -79.839996 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 92.200035 -145.840012 sc6mt astore rstroke
1 0 0 1 92.399994 -79.839996 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.40004 -145.840012 sc6mt astore rstroke
1 0 0 1 0 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 1.000021 -193.76001 sc6mt astore rstroke
1 0 0 1 46.199997 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 92.200035 -193.76001 sc6mt astore rstroke
1 0 0 1 92.399994 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.40004 -193.76001 sc6mt astore rstroke
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 195 634 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 195 591 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 196 544 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 196 496 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 283 492 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 283 540 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 282 590 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 284 636 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 376 638 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 376 591 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 375 542 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 375 494 1 0 0 1 0 -50 sc6mt astore ssl
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 462 494 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 463 541 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 463 590 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 464 636 1 0 0 1 0 -50 sc6mt astore ssl
/crendarw false def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 35.99321 632.2854 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 34.99321 588.2854 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 35.99321 544.2854 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 34.99321 499.2854 1 0 0 1 0 -50 sc6mt astore ssl
(28 ) [9 0 9 0 0 0] 231 369 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 22 212] dotx
(4 ) [9 0 0 0] 48 721 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 301 -140] dotx
(64 ) [9 0 9 0 0 0] 84 710 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 348 -131] dotx
(17 ) [9 0 9 0 0 0] 142 711 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 109 -176] dotx
(5 ) [9 0 0 0] 212 715 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 139 -180] dotx
(97 ) [9 0 9 0 0 0] 281 721 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 153 -189] dotx
(98 ) [9 0 9 0 0 0] 111 689 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 143 -202] dotx
(50 ) [9 0 9 0 0 0] 178 695 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 166 -208] dotx
(10 ) [9 0 9 0 0 0] 285 691 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 148 -204] dotx
(3 ) [9 0 0 0] 131 670 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 127 -231] dotx
(35 ) [9 0 9 0 0 0] 174 675 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 170 -234] dotx
(99 ) [9 0 9 0 0 0] 241 676 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 192 -237] dotx
/crlinw 2 def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw true def
/crfrtarw false def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 232.428711 430.96225 233.000015 431 arow
false 0.907895 0 0 1 15.105223 -55 sc5mt astore sstrt
systemdict
begin
121 422 263 492 setbbox
162.89856 444 moveto
195.89856 452 200.347824 458 200.347824 458 curveto
200.347824 458 219 485 240 486 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 322.139801 530.923401 323 531 arow
false 0.854167 0 0 1 41.416656 -50 sc5mt astore sstrt
systemdict
begin
264 496 366 596 setbbox
284 497 moveto
304 498 305 577 305 549 curveto
305 521 295.658539 579 329.658539 581 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 232.428711 430.96225 233.000015 431 arow
false 0.907895 0 0 1 15.105223 -55 sc5mt astore sstrt
systemdict
begin
121 422 263 492 setbbox
162.89856 444 moveto
195.89856 452 200.347824 458 200.347824 458 curveto
200.347824 458 219 485 240 486 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 322.139801 530.923401 323 531 arow
false 0.854167 0 0 1 41.416656 -50 sc5mt astore sstrt
systemdict
begin
264 496 366 596 setbbox
284 497 moveto
304 498 305 577 305 549 curveto
305 521 295.658539 579 329.658539 581 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 231.167801 582.99469 232 583 arow
false 1 0 0 1 3 -45 sc5mt astore sstrt
systemdict
begin
192 578 409 639 setbbox
373 578 moveto
395 578 389 606 366 606 curveto
343 606 239 610 219 610 curveto
199 610 201 628 229 628 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 409.349304 494.975098 410 495 arow
false 1 0 0 1 0 -50 sc5mt astore sstrt
systemdict
begin
388 543 493 581 setbbox
465 581 moveto
489 581 493 564 470 565 curveto
447 566 407 566 402 563 curveto
397 560 388 544 410 545 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 177.84906 383.000916 177 383 arow
false 0.95549 0 0 1 23.166164 -50 sc5mt astore sstrt
systemdict
begin
133 431 548 531 setbbox
462 531 moveto
491 531 498 436 439 436 curveto
380 436 189 433 161 433 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
end
grestore
grestore
%%EndDocument
 @endspecial 366 797 a
 currentpoint currentpoint translate 1 0.58289 div 1 0.58289 div scale
neg exch neg exch translate
 366 797 a 342 889 a Fq(Fig.)f
FD(3.4)f({)i Fp(Sc)o(\023)-20 b(enario)15 b(1-)g(Demande)h(d'un)g(tamp)
n(on)f(p)n(our)g(le)g(blo)n(c-disque)g(4.)366 1711 y
 currentpoint currentpoint translate 0.53654 0.53654 scale neg exch
neg exch translate

366 1711 a 14 w @beginspecial 0 @llx 0 @lly 525 @urx
254 @ury 5250 @rwi @setspecial
%%BeginDocument: eps/getblk2b.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 524.329712 254 rectclip
-29.000002 -374 translate
29.000002 374 524.329712 254 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 654 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 613 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 572 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 531 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 71 456 91 -31 1 0 0 1 0 -50 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(liste libres ) [5.003998 0 5.003998 0 7.001999 0 5.994003 0 7.991997 0 4.5 0 5.003998 0 5.003998 0 10.008003 0 7.667999 0 7.992004 0 7.001999 0 0 0] 73.5 438.170013 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 -50] dotx
(bloc# 0 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -210 -38] dotx
(bloc# 1 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -210 -85] dotx
(bloc# 2 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -212 -128] dotx
(bloc# 3 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -209 -173] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 2.098083e-05 -50.000015 sc6mt astore rstroke
1 0 0 1 46.199997 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 92.20002 -50.000015 sc6mt astore rstroke
1 0 0 1 92.399994 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.400024 -50.000015 sc6mt astore rstroke
1 0 0 1 0 -39.919998 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 2.098083e-05 -97.920013 sc6mt astore rstroke
1 0 0 1 46.199997 -39.919998 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 93.200035 -97.920013 sc6mt astore rstroke
1 0 0 1 92.399994 -39.919998 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.40004 -97.920013 sc6mt astore rstroke
1 0 0 1 0 -79.839996 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 2.098083e-05 -145.840012 sc6mt astore rstroke
1 0 0 1 46.199997 -79.839996 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 92.200035 -145.840012 sc6mt astore rstroke
1 0 0 1 92.399994 -79.839996 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.40004 -145.840012 sc6mt astore rstroke
1 0 0 1 0 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 271.000031 -95.76001 sc6mt astore rstroke
1 0 0 1 46.199997 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 92.200035 -193.76001 sc6mt astore rstroke
1 0 0 1 92.399994 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.40004 -193.76001 sc6mt astore rstroke
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 195 634 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 195 591 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 196 544 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 88 -1 196 446 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 283 492 1 0 0 1 2 -46 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 283 540 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 282 590 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 284 636 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 376 638 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 376 591 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 375 542 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 375 494 1 0 0 1 0 -50 sc6mt astore ssl
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 462 494 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 463 541 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 463 590 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 464 636 1 0 0 1 0 -50 sc6mt astore ssl
/crendarw false def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 35.99321 632.2854 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 34.99321 588.2854 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 35.99321 544.2854 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 34.99321 499.2854 1 0 0 1 0 -50 sc6mt astore ssl
(28 ) [9 0 9 0 0 0] 231 369 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 22 212] dotx
(4 ) [9 0 0 0] 48 721 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 301 -140] dotx
(64 ) [9 0 9 0 0 0] 84 710 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 348 -131] dotx
(17 ) [9 0 9 0 0 0] 142 711 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 109 -176] dotx
(5 ) [9 0 0 0] 212 715 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 139 -180] dotx
(97 ) [9 0 9 0 0 0] 281 721 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 153 -189] dotx
(98 ) [9 0 9 0 0 0] 111 689 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 143 -202] dotx
(50 ) [9 0 9 0 0 0] 178 695 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 166 -208] dotx
(10 ) [9 0 9 0 0 0] 285 691 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 148 -204] dotx
(41 ) [9 0 9 0 0 0] 131 670 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 392 -135] dotx
(35 ) [9 0 9 0 0 0] 174 675 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 170 -234] dotx
(99 ) [9 0 9 0 0 0] 241 676 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 192 -237] dotx
/crlinw 2 def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw true def
/crfrtarw false def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 324.168701 582.995239 325 583 arow
false 1 0 0 1 1 -46 sc5mt astore sstrt
systemdict
begin
292 578 409 631 setbbox
373 578 moveto
395 578 390 606 367 606 curveto
344 606 337 613 317 613 curveto
297 613 296 629 324 629 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 227.761826 596.009277 229 596 arow
false 1 0 0 1 1 -46 sc5mt astore sstrt
systemdict
begin
185 629 424 687 setbbox
375 631 moveto
400 631 410 671 373 672 curveto
336 673 285 673 251 673 curveto
217 673 186 642 228 642 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 417.512695 549.034485 418 549 arow
false 0.964789 0 0 1 10.859161 -46 sc5mt astore sstrt
systemdict
begin
266 533 439 628 setbbox
280 626 moveto
294 626 291.021881 608 309.021881 608 curveto
327.021881 608 350.48175 610 377.430664 611 curveto
404.379578 612 405 596 422 595 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 410.349304 498.975098 411 499 arow
false 1 0 0 1 1 -46 sc5mt astore sstrt
systemdict
begin
388 543 493 581 setbbox
465 581 moveto
489 581 493 564 470 565 curveto
447 566 407 566 402 563 curveto
397 560 388 544 410 545 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 177.84906 387.000916 177 387 arow
false 0.95549 0 0 1 23.166164 -46 sc5mt astore sstrt
systemdict
begin
133 431 548 531 setbbox
462 531 moveto
491 531 498 436 439 436 curveto
380 436 189 433 161 433 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/strdsh [2 2] def /dshpatoff 0 def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 330.582977 530.996155 331 531 arow
false 1 0 0 1 0 -50 sc5mt astore sstrt
systemdict
begin
145 443 351 596 setbbox
163 449 moveto
181 449 281 457 292 464 curveto
303 471 301 552 307 560 curveto
313 568 317 581 331 581 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
end
grestore
grestore
%%EndDocument
 @endspecial 366 1711 a
 currentpoint currentpoint translate 1 0.53654 div 1 0.53654 div scale
neg exch neg exch translate
 366 1711 a 331 1803 a Fq(Fig.)e
FD(3.5)g({)g Fp(Sc)o(\023)-20 b(enario)16 b(2-)f(Demande)h(d'un)f(tamp)
n(on)h(p)n(our)f(le)f(blo)n(c-disque)h(41.)366 2598 y
 currentpoint currentpoint translate 0.53859 0.53859 scale neg exch
neg exch translate

366 2598 a 14 w @beginspecial 0 @llx 0 @lly 523 @urx
241 @ury 5230 @rwi @setspecial
%%BeginDocument: eps/getblk3b.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 522.530273 240.415253 rectclip
-29 -374.584747 translate
29 374.584747 522.530273 240.415253 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 0 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 654 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 613 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 572 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 531 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 71 456 91 -31 1 0 0 1 0 -50 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(liste libres) [5.003998 0 5.003998 0 7.001999 0 5.994003 0 7.991997 0 4.5 0 5.003998 0 5.003998 0 10.007996 0 7.667999 0 7.992004 0 0 0] 73.500008 438.170013 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 -50] dotx
(bloc# 0 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -210 -38] dotx
(bloc# 1 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -210 -85] dotx
(bloc# 2 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -212 -128] dotx
(bloc# 3 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -209 -173] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 2.098083e-05 -50.000015 sc6mt astore rstroke
1 0 0 1 46.199997 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 92.20002 -50.000015 sc6mt astore rstroke
1 0 0 1 92.399994 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.400024 -50.000015 sc6mt astore rstroke
1 0 0 1 0 -39.919998 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 2.098083e-05 -97.920013 sc6mt astore rstroke
1 0 0 1 46.199997 -39.919998 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 93.200035 -97.920013 sc6mt astore rstroke
1 0 0 1 92.399994 -39.919998 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.40004 -97.920013 sc6mt astore rstroke
1 0 0 1 0 -79.839996 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 2.098083e-05 -145.840012 sc6mt astore rstroke
1 0 0 1 46.199997 -79.839996 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 92.200035 -145.840012 sc6mt astore rstroke
1 0 0 1 92.399994 -79.839996 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.40004 -145.840012 sc6mt astore rstroke
1 0 0 1 0 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 1.000021 -193.76001 sc6mt astore rstroke
1 0 0 1 46.199997 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 92.200035 -193.76001 sc6mt astore rstroke
1 0 0 1 92.399994 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.40004 -193.76001 sc6mt astore rstroke
/usedash true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 195 634 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 195 591 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 196 544 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 196 496 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 283 492 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 283 540 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 282 590 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 284 636 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 376 591 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 375 542 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 375 494 1 0 0 1 0 -50 sc6mt astore ssl
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 462 494 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 463 541 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 463 590 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 464 636 1 0 0 1 0 -50 sc6mt astore ssl
/crendarw false def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 35.99321 632.2854 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 34.99321 588.2854 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 35.99321 544.2854 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 34.99321 499.2854 1 0 0 1 0 -50 sc6mt astore ssl
(28 ) [9 0 9 0 0 0] 231 369 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 22 212] dotx
(4 ) [9 0 0 0] 48 721 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 301 -140] dotx
(64 ) [9 0 9 0 0 0] 84 710 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 348 -131] dotx
(17 ) [9 0 9 0 0 0] 142 711 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 109 -176] dotx
(5 ) [9 0 0 0] 212 715 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 139 -180] dotx
(97 ) [9 0 9 0 0 0] 281 721 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 153 -189] dotx
(98 ) [9 0 9 0 0 0] 111 689 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 143 -202] dotx
(50 ) [9 0 9 0 0 0] 178 695 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 166 -208] dotx
(10 ) [9 0 9 0 0 0] 285 691 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 148 -204] dotx
(3 ) [9 0 0 0] 131 670 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 127 -231] dotx
(35 ) [9 0 9 0 0 0] 174 675 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 170 -234] dotx
(99 ) [9 0 9 0 0 0] 241 676 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 192 -237] dotx
/crlinw 2 def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw true def
/crfrtarw false def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 228.584198 575.000305 229 575 arow
false 1 0 0 1 4 -62 sc5mt astore sstrt
systemdict
begin
-111.999992 433.000061 424 807 setbbox
160 458.000031 moveto
185.000015 458.000031 204 475 204 488 curveto
204 500.999969 207 620 209 629 curveto
211 638 211 637 225 637 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 409.349304 494.975098 410 495 arow
false 1 0 0 1 0 -50 sc5mt astore sstrt
systemdict
begin
388 543 493 581 setbbox
465 581 moveto
489 581 493 564 470 565 curveto
447 566 407 566 402 563 curveto
397 560 388 544 410 545 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 176.84906 385.000916 176 385 arow
false 0.95549 0 0 1 22.166164 -48 sc5mt astore sstrt
systemdict
begin
133 431 548 531 setbbox
462 531 moveto
491 531 498 436 439 436 curveto
380 436 189 433 161 433 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/crfilalph 1 def
1 0 0 1 0 0 sc5mt astore 322 615 67 -56 1 0 0 1 0 0 sc6mt astore rfill
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 411.727417 549.033875 412.000031 549 arow
false 0.964789 0 0 1 12.859161 -51 sc5mt astore sstrt
systemdict
begin
266 579 439.620422 633 setbbox
281.03653 630 moveto
295.03653 630 307.985443 626 328.715363 624 curveto
349.445282 622 364.992737 621 375.357697 618 curveto
385.722656 615 404.379639 601 413.708069 600 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/crlinw 1 def
/usedash false def
/crendarw false def
1 0 0 1 46.199997 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 269.200043 -146.76001 sc6mt astore rstroke
(18 ) [9 0 9 0 0 0] 286 270 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 233 212] dotx
/txtdraw true def
/txlndraw true def
(writing ) [10.108002 0 6.216003 0 3.891998 0 4.662003 0 3.891998 0 7.783997 0 7 0 0 0] 210 359 /Times-Bold [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 31 56] dotx
(writing ) [10.108002 0 6.216003 0 3.891998 0 4.662003 0 3.891998 0 7.783997 0 7 0 0 0] 210 359 /Times-Bold [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 125 154.000031] dotx
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 108 1 315 585 1 0 0 1 0 0 sc6mt astore ssl
end
grestore
grestore
%%EndDocument
 @endspecial 366 2598 a
 currentpoint currentpoint translate 1 0.53859 div 1 0.53859 div scale
neg exch neg exch translate
 366 2598 a 282 2689 a Fq(Fig.)d
FD(3.6)h({)h Fp(Sc)o(\023)-20 b(enario)15 b(3-)g(Demande)h(p)n(our)f
(le)g(blo)n(c)f(18)i(\(3)f(&)f(5)i(mar)n(qu)o(\023)-20
b(es)14 b(\022)-21 b(a)14 b(\023)-20 b(e)n(crir)n(e\).)p
eop
%%Page: 21 29
21 28 bop 75 50 a Fz(3.3.)26 b(L'ALGORITHME)13 b(DE)h(LA)g(PRIMITIVE)g
Fl(GETBLK)761 b FD(21)366 1010 y
 currentpoint currentpoint translate 0.58289 0.58289 scale neg exch
neg exch translate
 366 1010 a 14 w @beginspecial
0 @llx 0 @lly 483 @urx 233 @ury 4830 @rwi @setspecial
%%BeginDocument: eps/getblk4.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 483 233 rectclip
-29.000002 -374 translate
29.000002 374 483 233 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 654 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 613 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 572 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 531 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 71 456 91 -31 1 0 0 1 0 -50 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(liste libres ) [5.003998 0 5.003998 0 7.001999 0 5.994003 0 7.991997 0 4.5 0 5.003998 0 5.003998 0 10.008003 0 7.667999 0 7.992004 0 7.001999 0 0 0] 73.5 438.170013 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 -50] dotx
(bloc# 0 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -210 -38] dotx
(bloc# 1 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -210 -85] dotx
(bloc# 2 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -212 -128] dotx
(bloc# 3 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -209 -173] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 2.098083e-05 -50.000015 sc6mt astore rstroke
1 0 0 1 46.199997 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 92.20002 -50.000015 sc6mt astore rstroke
1 0 0 1 92.399994 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.400024 -50.000015 sc6mt astore rstroke
1 0 0 1 0 -39.919998 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 2.098083e-05 -97.920013 sc6mt astore rstroke
1 0 0 1 46.199997 -39.919998 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 93.200035 -97.920013 sc6mt astore rstroke
1 0 0 1 92.399994 -39.919998 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.40004 -97.920013 sc6mt astore rstroke
1 0 0 1 0 -79.839996 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 2.098083e-05 -145.840012 sc6mt astore rstroke
1 0 0 1 46.199997 -79.839996 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 92.200035 -145.840012 sc6mt astore rstroke
1 0 0 1 92.399994 -79.839996 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.40004 -145.840012 sc6mt astore rstroke
1 0 0 1 0 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 1.000021 -193.76001 sc6mt astore rstroke
1 0 0 1 46.199997 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 92.200035 -193.76001 sc6mt astore rstroke
1 0 0 1 92.399994 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.40004 -193.76001 sc6mt astore rstroke
/usedash true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 195 634 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 195 591 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 196 544 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 196 496 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 283 492 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 283 540 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 282 590 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 284 636 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 376 638 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 376 591 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 375 542 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 375 494 1 0 0 1 0 -50 sc6mt astore ssl
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 462 494 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 463 541 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 463 590 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 464 636 1 0 0 1 0 -50 sc6mt astore ssl
/crendarw false def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 35.99321 632.2854 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 34.99321 588.2854 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 35.99321 544.2854 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 34.99321 499.2854 1 0 0 1 0 -50 sc6mt astore ssl
(28 ) [9 0 9 0 0 0] 231 369 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 22 212] dotx
(4 ) [9 0 0 0] 48 721 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 301 -140] dotx
(64 ) [9 0 9 0 0 0] 84 710 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 348 -131] dotx
(17 ) [9 0 9 0 0 0] 142 711 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 109 -176] dotx
(5 ) [9 0 0 0] 212 715 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 139 -180] dotx
(97 ) [9 0 9 0 0 0] 281 721 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 153 -189] dotx
(98 ) [9 0 9 0 0 0] 111 689 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 143 -202] dotx
(50 ) [9 0 9 0 0 0] 178 695 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 166 -208] dotx
(10 ) [9 0 9 0 0 0] 285 691 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 148 -204] dotx
(3 ) [9 0 0 0] 131 670 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 127 -231] dotx
(35 ) [9 0 9 0 0 0] 174 675 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 170 -234] dotx
(99 ) [9 0 9 0 0 0] 241 676 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 192 -237] dotx
/crlinw 2 def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw true def
/crfrtarw false def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 175.675766 379.793884 174.999985 379.999969 arow
false 0.95549 0 0 1 40.166164 -69 sc5mt astore sstrt
systemdict
begin
99.555908 414.999969 548 531 setbbox
130.649078 467.999969 moveto
156.81366 477.999969 240.540375 465.999969 241.586945 456.999969 curveto
242.633514 447.999969 164.13974 441.999969 141.114899 448.999969 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
end
grestore
grestore
%%EndDocument
 @endspecial 366 1010 a
 currentpoint currentpoint translate 1 0.58289 div 1 0.58289 div scale
neg exch neg exch translate
 366 1010 a 569 1101 a Fq(Fig.)13
b FD(3.7)f({)i Fp(Sc)o(\023)-20 b(enario)15 b(4-)g(Plus)g(de)g(blo)n
(cs)g(libr)n(es.)366 2388 y
 currentpoint currentpoint translate 0.58289 0.58289 scale neg exch
neg exch translate
 366 2388 a 14 w @beginspecial
0 @llx 0 @lly 483 @urx 250 @ury 4830 @rwi @setspecial
%%BeginDocument: eps/getblk5.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 483 249.523224 rectclip
-29 -374.584747 translate
29 374.584747 483 249.523224 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    3 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 654 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 613 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 572 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 72 531 106 -41 1.367925 0 0 1.109756 -48.49057 -118.780518 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 71 456 91 -31 1 0 0 1 0 -50 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(liste libres ) [5.003998 0 5.003998 0 7.001999 0 5.994003 0 7.991997 0 4.5 0 5.003998 0 5.003998 0 10.008003 0 7.667999 0 7.992004 0 7.001999 0 0 0] 73.5 438.170013 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 0 -50] dotx
(bloc# 0 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -210 -38] dotx
(bloc# 1 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -210 -85] dotx
(bloc# 2 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -212 -128] dotx
(bloc# 3 mod 4 ) [10.007996 0 5.003998 0 9 0 7.992004 0 9 0 4.5 0 9 0 4.5 0 14.993988 0 9 0 10.007996 0 4.5 0 9 0 0 0] 277 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -209 -173] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 2.098083e-05 -50.000015 sc6mt astore rstroke
1 0 0 1 46.199997 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 92.20002 -50.000015 sc6mt astore rstroke
1 0 0 1 92.399994 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.400024 -50.000015 sc6mt astore rstroke
1 0 0 1 0 -39.919998 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 2.098083e-05 -97.920013 sc6mt astore rstroke
1 0 0 1 46.199997 -39.919998 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 93.200035 -97.920013 sc6mt astore rstroke
1 0 0 1 92.399994 -39.919998 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.40004 -97.920013 sc6mt astore rstroke
1 0 0 1 0 -79.839996 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 2.098083e-05 -145.840012 sc6mt astore rstroke
1 0 0 1 46.199997 -79.839996 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 92.200035 -145.840012 sc6mt astore rstroke
1 0 0 1 92.399994 -79.839996 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.40004 -145.840012 sc6mt astore rstroke
1 0 0 1 0 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 1.000021 -193.76001 sc6mt astore rstroke
1 0 0 1 46.199997 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 92.200035 -193.76001 sc6mt astore rstroke
1 0 0 1 92.399994 -119.759995 sc4mt astore 1 0 0 1 0 0 sc5mt astore 243 653 39 -32 1 0 0 1 180.40004 -193.76001 sc6mt astore rstroke
/usedash true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 195 634 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 195 591 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 196 544 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 196 496 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 283 492 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 283 540 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 282 590 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 284 636 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 376 638 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 376 591 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 375 542 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 48 0 375 494 1 0 0 1 0 -50 sc6mt astore ssl
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 462 494 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 463 541 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 463 590 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 42 0 464 636 1 0 0 1 0 -50 sc6mt astore ssl
/crendarw false def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 35.99321 632.2854 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 34.99321 588.2854 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 35.99321 544.2854 1 0 0 1 0 -50 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 15.00679 0.7146 34.99321 499.2854 1 0 0 1 0 -50 sc6mt astore ssl
(28 ) [9 0 9 0 0 0] 231 369 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 22 212] dotx
(4 ) [9 0 0 0] 48 721 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 301 -140] dotx
(64 ) [9 0 9 0 0 0] 84 710 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 348 -131] dotx
(17 ) [9 0 9 0 0 0] 142 711 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 109 -176] dotx
(5 ) [9 0 0 0] 212 715 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 139 -180] dotx
(97 ) [9 0 9 0 0 0] 281 721 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 153 -189] dotx
(98 ) [9 0 9 0 0 0] 111 689 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 143 -202] dotx
(50 ) [9 0 9 0 0 0] 178 695 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 166 -208] dotx
(10 ) [9 0 9 0 0 0] 285 691 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 148 -204] dotx
(3 ) [9 0 0 0] 131 670 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 127 -231] dotx
(35 ) [9 0 9 0 0 0] 174 675 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 170 -234] dotx
(99 ) [9 0 9 0 0 0] 241 676 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 192 -237] dotx
/crlinw 2 def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw true def
/crfrtarw false def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 232.428711 430.96225 233.000015 431 arow
false 0.907895 0 0 1 15.105223 -55 sc5mt astore sstrt
systemdict
begin
121 422 263 492 setbbox
162.89856 444 moveto
195.89856 452 200.347824 458 200.347824 458 curveto
200.347824 458 219 485 240 486 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 322.139801 530.923401 323 531 arow
false 0.854167 0 0 1 41.416656 -50 sc5mt astore sstrt
systemdict
begin
264 496 366 596 setbbox
284 497 moveto
304 498 305 577 305 549 curveto
305 521 295.658539 579 329.658539 581 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 323.168701 578.995239 324 579 arow
false 1 0 0 1 0 -50 sc5mt astore sstrt
systemdict
begin
292 578 409 631 setbbox
373 578 moveto
395 578 408 612 385 612 curveto
362 612 337 613 317 613 curveto
297 613 296 629 324 629 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 235.759155 593.008972 237 593 arow
false 1 0 0 1 0 -50 sc5mt astore sstrt
systemdict
begin
189 629 424 687 setbbox
375 631 moveto
400 631 410 671 373 672 curveto
336 673 285 673 251 673 curveto
217 673 195 643 237 643 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 416.513397 545.027039 417 545 arow
false 0.964789 0 0 1 9.859161 -50 sc5mt astore sstrt
systemdict
begin
266 579 439 628 setbbox
280 626 moveto
294 626 294 611 312 611 curveto
330 611 368.795624 619 387.795624 603 curveto
406.795624 587 405 596 422 595 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 409.349304 494.975098 410 495 arow
false 1 0 0 1 0 -50 sc5mt astore sstrt
systemdict
begin
388 543 493 581 setbbox
465 581 moveto
489 581 493 564 470 565 curveto
447 566 407 566 402 563 curveto
397 560 388 544 410 545 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 176.84906 383.000916 176 383 arow
false 0.95549 0 0 1 22.166164 -50 sc5mt astore sstrt
systemdict
begin
133 431 548 531 setbbox
462 531 moveto
491 531 498 436 439 436 curveto
380 436 189 433 161 433 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 232.428711 430.96225 233.000015 431 arow
false 0.907895 0 0 1 15.105223 -55 sc5mt astore sstrt
systemdict
begin
121 422 263 492 setbbox
162.89856 444 moveto
195.89856 452 200.347824 458 200.347824 458 curveto
200.347824 458 219 485 240 486 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 322.139801 530.923401 323 531 arow
false 0.854167 0 0 1 41.416656 -50 sc5mt astore sstrt
systemdict
begin
264 496 366 596 setbbox
284 497 moveto
304 498 305 577 305 549 curveto
305 521 295.658539 579 329.658539 581 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
end
grestore
grestore
%%EndDocument
 @endspecial 366 2388 a
 currentpoint currentpoint translate 1 0.58289 div 1 0.58289 div scale
neg exch neg exch translate
 366 2388 a 342 2479 a Fq(Fig.)e
FD(3.8)g({)h Fp(Sc)o(\023)-20 b(enario)15 b(5-)g(Demande)h(p)n(our)f
(le)f(blo)n(c)h(17)h(qui)e(est)h(d)o(\023)-20 b(ej\022)f(a)15
b(utilis)o(\023)-20 b(e.)p eop
%%Page: 22 30
22 29 bop 75 50 a FD(22)1018 b Fz(CHAPITRE)14 b(3.)27
b(LE)14 b(BUFFER)g(CA)o(CHE)p eop
%%Page: 23 31
23 30 bop 1796 50 a FD(23)179 478 y Fw(Chapitre)32 b(4)179
685 y Fy(La)39 b(biblioth)m(\022)-56 b(eque)39 b(standard)179
926 y Fv(4.1)66 b(Les)22 b(descripteurs)i(de)e(\014c)n(hiers.)236
1009 y FB(Le)c(\014c)o(hier)h(d'inclusion)i FA(<stdio.h>)14
b FB(con)o(tien)o(t)19 b(la)g(d)o(\023)-18 b(e\014nition)20
b(du)e(t)o(yp)q(e)g FA(FILE)p FB(.)34 b(Ce)17 b(t)o(yp)q(e)h(est)g(une)
179 1054 y(structure)12 b(con)o(tenan)o(t)h(les)g(informations)h(n)o
(\023)-18 b(ecessaires)13 b(au)f(syst)o(\022)-18 b(eme)13
b(p)q(our)f(la)h(manipulation)i(d'un)d(\014c)o(hier)179
1100 y(ouv)o(ert.)h(Le)g(con)o(ten)o(u)h(exact)f(de)g(cette)g
(structure)h(p)q(eut)g(v)n(arier)f(d'un)h(syst)o(\022)-18
b(eme)13 b(\022)-19 b(a)13 b(l'autre)h(\(UNIX,)e(VMS,)179
1146 y(autre\).)236 1191 y(T)m(outes)i(les)g(fonctions)g(d'E/S)g
(utilisen)o(t)i(en)d(premier)i(argumen)o(t)f(un)g(p)q(oin)o(teur)g(sur)
g(une)g(telle)g(struc-)179 1237 y(ture)7 b(:)16 b FA(FILE)i(*)p
FB(.)e(Le)g(r^)-19 b(ole)18 b(de)f(cet)f(argumen)o(t)i(est)f
(d'indiquer)i(le)e(\014c)o(hier)h(sur)f(lequel)i(on)e(doit)h
(e\013ectuer)179 1283 y(l'op)o(\023)-18 b(eration)15
b(d')o(\023)-18 b(ecriture)14 b(ou)f(de)g(lecture.)236
1328 y(P)o(our)18 b(p)q(ouv)o(oir)h(utiliser)g(une)e(fonction)h(d'en)o
(tr)o(\023)-18 b(ee-sortie)19 b(il)f(faut)f(donc)g(a)o(v)o(oir)h(une)g
(v)n(aleur)g(p)q(our)g(ce)179 1374 y(premier)13 b(argumen)o(t,)g(c'est)
e(le)i(r^)-19 b(ole)13 b(de)f(la)h(fonction)g FA(fopen)d
FB(de)j(nous)g(fournir)g(ce)f(p)q(oin)o(teur)i(en)e("ouvran)o(t")179
1420 y(le)h(\014c)o(hier.)27 b(Les)13 b(deux)h(fonctions)g
FA(printf)d FB(et)i FA(scanf)d FB(son)o(t)k(des)f(synon)o(ymes)i(de)785
1465 y FA(fprintf\(std)o(ou)o(t,)h(format,)h(...\))179
1511 y FB(et)805 1557 y FA(fscanf\(std)o(in)o(,)g(format,)g(...\))179
1602 y FB(o)q(\022)-20 b(u)21 b FA(stdout)c FB(et)k FA(stdin)d
FB(son)o(t)j(des)f(expressions)j(de)e(t)o(yp)q(e)f FA(FILE)f(*)g
FB(d)o(\023)-18 b(e\014nies)23 b(sous)e(forme)f(de)g(macro-)179
1648 y(d)o(\023)-18 b(e\014nitions)16 b(dans)d(le)h(\014c)o(hier)g
FA(<stdio.h>)236 1694 y FB(.)f(Av)o(ec)g(POSIX)g(ce)f(son)o(t)i
(e\013ectiv)o(emen)o(t)g(des)g(fonctions.)236 1739 y(Sous)j(UNIX)e(les)
i(\014c)o(hiers)g(ouv)o(erts)g(par)f(un)g(pro)q(cessus)i(le)e(resten)o
(t)g(dans)h(ses)f(\014ls.)h(P)o(ar)f(exemple)h(le)179
1785 y(shell)d(a)f(en)h(g)o(\023)-18 b(en)o(\023)g(eral)14
b(trois)g(\014c)o(hiers)g(ouv)o(erts)7 b(:)179 1845 y
FA(stdin)19 b FB(le)13 b(terminal)i(ouv)o(ert)e(en)h(lecture.)179
1902 y FA(stdout)k FB(le)c(terminal)g(ouv)o(ert)g(en)e(\023)-18
b(ecriture.)179 1959 y FA(stderr)18 b FB(le)c(terminal)g(ouv)o(ert)g
(en)e(\023)-18 b(ecriture,)14 b(et)f(en)g(mo)q(de)g(non)h(bu\013eris)o
(\023)-18 b(e.)179 2019 y(ainsi)17 b(si)f(l'ex)o(\023)-18
b(ecution)18 b(d'un)d(programme)i(C)e(est)g(r)o(\023)-18
b(ealis)o(\023)g(ee)17 b(\022)-19 b(a)15 b(partir)i(du)f(shell)h(le)f
(programme)g(C)f(a)g(d)o(\023)-18 b(ej\022)f(a)179 2064
y(ces)11 b(trois)h(descripteurs)i(de)d(\014c)o(hiers)i(utilisabl)q(es.)
25 b(C'est)11 b(p)q(ourquoi)i(il)g(est)e(en)h(g)o(\023)-18
b(en)o(\023)g(eral)12 b(p)q(ossible)i(d'utiliser)179
2110 y FA(printf)h FB(et)i FA(scanf)e FB(sans)j(ouvrir)g(pr)o(\023)-18
b(ealablemen)o(t)20 b(de)e(\014c)o(hiers.)g(Mais)g(si)g(l'en)o(tr)o
(\023)-18 b(ee)18 b(standard)h(n'est)e(pas)179 2156 y(ouv)o(erte,)c
FA(scanf)d FB(\023)-18 b(ec)o(houe)7 b(:)179 2213 y FA(#include)16
b(<stdio.h>)179 2258 y(main\(\))179 2304 y({)257 2350
y(int)j(i;)257 2441 y(if)g(\(scanf\("\045d)o(",)d(&i\))j(==)f(EOF\))257
2487 y({)336 2532 y(printf\("l)o(\\')o(ent)o(ree)e(standard)g(est)j
(fermee\\n")o(\);)257 2578 y(})257 2624 y(else)257 2669
y({)336 2715 y(printf\("l)o(\\')o(ent)o(ree)d(standard)g(est)j
(ouverte\\n)o("\))o(;)257 2761 y(})179 2806 y(})p eop
%%Page: 24 32
24 31 bop 75 50 a FD(24)774 b Fz(CHAPITRE)14 b(4.)27
b(LA)14 b(BIBLIOTH)1472 39 y(\022)1467 50 y(EQUE)i(ST)m(AND)o(ARD)236
166 y FB(Compil)o(\023)-18 b(e,\()p FA(a.out)p FB(\),)12
b(cela)i(donne)g(les)g(deux)f(sorties)h(suiv)n(an)o(tes)9
b(:)179 234 y FA($)19 b(a.out)179 280 y(l'entree)d(standard)h(est)h
(ouverte)179 326 y($)h(a.out)f(<&-)g(#)h(fermeture)e(de)h(l'entree)f
(standard)f(en)j(ksh)179 371 y(l'entree)d(standard)h(est)h(fermee)236
438 y FB(De)c(m)o(^)-18 b(eme)13 b FA(printf)c FB(\023)-18
b(ec)o(houe)14 b(si)f(la)h(sortie)g(standard)g(est)f(ferm)o(\023)-18
b(ee.)179 555 y Fu(4.1.1)55 b(Ouv)n(erture)18 b(d'un)g(\014c)n(hier)236
627 y FB(La)13 b(fonction)i(de)e(la)g(biblioth\022)-18
b(eque)16 b(standard)e FA(fopen)d FB(p)q(ermet)j(d'ouvrir)g(un)f(\014c)
o(hier)i(ou)e(de)g(le)h(cr)o(\023)-18 b(eer.)179 695
y FA(#include)16 b(<stdio.h>)179 741 y(FILE)37 b(*fopen\(cons)o(t)16
b(char)j(*filenam)o(e,)434 787 y(const)e(char)i(*type\);)236
853 y FC(\014lename)12 b FB(est)g(une)h(r)o(\023)-18
b(ef)o(\023)g(erence)12 b(absolue)i(ou)f(relativ)o(e)g(du)g(\014c)o
(hier)h(\022)-19 b(a)12 b(ouvrir;)h(si)g(le)f(\014c)o(hier)i(n'existe)f
(pas)179 899 y(alors)j(il)h(est)e(cr)o(\023)-18 b(e)o(\023)g(e)16
b Fk(si)g(et)f(seulemen)o(t)i(si)f FB(l'utilisateur)j(du)d(pro)q
(cessus)h(a)e(l'autorisation)j(d')o(\023)-18 b(ecrire)17
b(dans)f(le)179 944 y(r)o(\023)-18 b(ep)q(ertoire.)236
1037 y FC(t)o(yp)q(e)14 b FB(est)f(une)g(des)g(c)o(ha)l(^)-15
b(\020nes)15 b(suiv)n(an)o(tes)8 b(:)179 1104 y FC("r")21
b FB(ouv)o(erture)14 b(en)f(lecture)h(au)f(d)o(\023)-18
b(ebut)14 b(du)g(\014c)o(hier)179 1169 y FC("w")21 b
FB(ouv)o(erture)12 b(en)e(\023)-18 b(ecriture)12 b(au)f(d)o(\023)-18
b(ebut)12 b(du)f(\014c)o(hier)i(a)o(v)o(ec)d(\023)-18
b(ecrasemen)o(t)11 b(du)h(\014c)o(hier)g(si)g(il)g(existe)g(\(le)f
(\014c)o(hier)270 1214 y(est)i(vid)o(\023)-18 b(e)14
b(de)f(son)h(con)o(ten)o(u)g(\022)-19 b(a)13 b(l'ouv)o(erture\).)179
1280 y FC("a")21 b FB(ouv)o(erture)14 b(en)e(\023)-18
b(ecriture)14 b(\022)-19 b(a)13 b(la)h(\014n)f(du)h(\014c)o(hier)g
(\(mo)q(de)g(app)q(end\).)179 1345 y FC("r+","w+","a+")23
b FB(ouv)o(erture)14 b(en)f(lecture)f(\023)-18 b(ecriture)14
b(resp)q(ectiv)o(emen)o(t)g(au)f(d)o(\023)-18 b(ebut)13
b(du)g(\014c)o(hier,)h(au)f(d)o(\023)-18 b(e-)270 1390
y(but)13 b(du)h(\014c)o(hier)g(a)o(v)o(ec)e(\023)-18
b(ecrasemen)o(t,)14 b(\022)-19 b(a)13 b(la)g(\014n)h(du)f(\014c)o
(hier.)179 1468 y FA(FILE)18 b(*f;)179 1514 y(...)179
1559 y(if)h(\(\(f)f(=)h(fopen\("tot)o(o",)d("r"\)\))i(==)g(NULL\))179
1605 y({)257 1651 y(fprintf\(st)o(der)o(r,)e("impossibl)o(e)g(d'ouvrir)
h(toto\\n"\);)257 1696 y(exit\(1\);)179 1742 y(})179
1788 y(...)236 1864 y FB(La)i(fonction)g(retourne)h(un)e(p)q(oin)o
(teur)i(sur)f(un)g(descripteur)h(du)f(\014c)o(hier)g(ouv)o(ert)g(ou)g
FA(NULL)e FB(en)h(cas)179 1910 y(d')o(\023)-18 b(ec)o(hec,)13
b(\(acc)o(\022)-18 b(es)13 b(in)o(terdit,)h(cr)o(\023)-18
b(eation)15 b(imp)q(ossible,)g(etc\).)179 2027 y Fu(4.1.2)55
b(Redirection)17 b(d'un)h(descripteur)8 b(:)19 b Fj(freopen)236
2099 y FB(P)o(ermet)12 b(d'asso)q(cier)h(un)f(descripteur)h(d)o(\023)
-18 b(ej\022)f(a)12 b(utilis)o(\023)-18 b(e)14 b(\022)-19
b(a)11 b(une)i(autre)e(ouv)o(erture)i(de)f(\014c)o(hier.)g(Ceci)g(p)q
(ermet)179 2145 y(de)h(r)o(\023)-18 b(ealiser)15 b(facilemen)o(t)f(les)
g(redirections)h(du)f(shell.)179 2213 y FA(FILE)k(*freopen\()o(con)o
(st)e(char)i(*ref,)453 2258 y(const)g(char)g(*mode,)453
2304 y(FILE)g(*f\))236 2371 y FB(P)o(ar)13 b(exemple)i(les)e
(redirections)j(de)d(la)h(ligne)g(shell)9 b(:)179 2438
y FA(com)18 b(<ref1)g(>>ref2)179 2505 y FB(p)q(euv)o(en)o(t)13
b(^)-18 b(etre)13 b(r)o(\023)-18 b(ealis)o(\023)g(ees)15
b(a)o(v)o(ec)179 2573 y FA(if)k(\(!freopen)o(\(")o(ref)o(1")o(,)e("r",)
h(stdin\))f(||)i(!freopen\()o("re)o(f2)o(",)d("a",)i(stdout\)\))179
2619 y({)257 2664 y(fprintf\(st)o(der)o(r,)e("erreur)h(sur)h(une)h
(redirecti)o(on\\)o(n")o(\);)257 2710 y(exit\(1\);)179
2756 y(})179 2801 y(execl\("./)o(com)o(",)d("com",)h(NULL\);)p
eop
%%Page: 25 33
25 32 bop 75 50 a Fz(4.1.)26 b(LES)14 b(DESCRIPTEURS)g(DE)g(FICHIERS.)
908 b FD(25)179 166 y Fu(4.1.3)55 b(Cr)o(\023)-27 b(eation)18
b(de)h(\014c)n(hiers)f(temp)r(oraires)236 244 y FB(La)13
b(fonction)179 323 y FA(#include)j(<stdio.h>)179 369
y(FILE)i(*tmpfile\()o(voi)o(d\))o(;)236 444 y FB(cr)o(\023)-18
b(ee)15 b(et)g(ouvre)h(en)e(\023)-18 b(ecriture)16 b(un)g(nouv)o(eau)g
(\014c)o(hier)g(temp)q(oraire,)g(qui)g(sera)g(d)o(\023)-18
b(etruit)16 b(\(un)f FA(unlink)e FB(est)179 490 y(r)o(\023)-18
b(ealis)o(\023)g(e)13 b(imm)o(\023)-18 b(ediatemen)o(t\))13
b(\022)-19 b(a)11 b(la)h(\014n)g(de)g(l'ex)o(\023)-18
b(ecution)13 b(du)f(pro)q(cessus,)h(atten)o(tion)f(le)g(descripteur)h
(est)f(h)o(\023)-18 b(erit)o(\023)g(e)179 535 y(par)13
b(les)h(\014ls.)f(Cette)g(fonction)h(utilise)i(la)d(fonction)179
615 y FA(char)18 b(*tmpnam\(c)o(har)e(*ptr\);)236 690
y FB(Cette)c(fonction)h(g)o(\023)-18 b(en)o(\022)g(ere)13
b(un)f(nouv)o(eau)h(nom)g(de)f(\014c)o(hier)h(et)f(place)h(celui-ci)h
(dans)f(la)f(zone)h(p)q(oin)o(t)o(\023)-18 b(ee)13 b(par)179
736 y(ptr)g(si)g(ptr)g Fr(6)p FB(=)g(NULL,)f(la)h(zone)h(r)o(\023)-18
b(eserv)o(\023)g(ee)13 b(doit)g(^)-18 b(etre)13 b(d'au)g(moins)h
FA(L)p 1167 736 12 2 v 14 w(tmpnam)c FB(o)q(ctets.)j(Si)g(ptr)g(=)g
FA(NULL)e FB(une)179 781 y(zone)i(statique)i(est)e(utilis)o(\023)-18
b(ee.)179 913 y Fu(4.1.4)55 b(Ecriture)17 b(non)i(format)o(\023)-27
b(ee)236 990 y FB(Les)10 b(deux)g(fonctions)h(suiv)n(an)o(tes)h(p)q
(ermetten)o(t)e(d')o(\023)-18 b(ecrire)10 b(et)g(de)f(lire)i(des)f
(zones)g(m)o(\023)-18 b(emoire,)11 b(le)f(con)o(ten)o(u)g(de)179
1036 y(la)h(m)o(\023)-18 b(emoire)12 b(est)e(directemen)o(t)h(\023)-18
b(ecrit)11 b(sur)g(disque)i(sans)e(transformation,)h(et)e(r)o(\023)-18
b(ecipro)q(quemen)o(t)13 b(le)f(con)o(ten)o(u)179 1082
y(du)j(disque)h(est)f(plac)o(\023)-18 b(e)16 b(tel)f(quel)h(en)f(m)o
(\023)-18 b(emoire.)15 b(L'in)o(t)o(\023)-18 b(er)o(^)g(et)15
b(de)g(ces)g(fonctions)h(est)f(d'obtenir)h(des)f(en)o(tr)o(\023)-18
b(ees)179 1127 y(sorties)12 b(plus)h(rapides)h(et)d(des)h(sauv)o
(egardes)i(disque)f(plus)g(compactes)f(mais)h(malheureusemen)o(t)h
(illisib)q(le)q(s)179 1173 y(\(binaire\).)179 1252 y
FA(#include)i(<stdio.h>)179 1298 y(int)i(fwrite\(voi)o(d)f(*add,)g
(size_t)h(ta,)g(size_t)f(nbobjets,)f(FILE)j(*f\);)236
1373 y FB(Ecrit)13 b FA(nbobjets)c FB(de)j(taille)i FA(ta)d
FB(qui)i(se)f(trouv)o(en)o(t)h(\022)-19 b(a)12 b(l'adresse)h
FA(add)e FB(dans)i(le)f(\014c)o(hier)h(de)g(descripteur)g
FA(f)p FB(.)179 1453 y FA(#include)j(<stdio.h>)179 1499
y(int)i(fread\(void)e(*add,)i(size_t)f(ta,)h(size_t)g(nbobjets,)e(FILE)
i(*f\);)236 1574 y FB(Lit)c FA(nbobjets)c FB(de)k(taille)h
FA(ta)e FB(dans)h(le)g(\014c)o(hier)h(de)e(descripteur)i
FA(f)e FB(et)g(les)h(place)h(\022)-19 b(a)13 b(partir)i(de)e(l'adresse)
179 1619 y FA(add)e FB(en)j(m)o(\023)-18 b(emoire.)236
1669 y(A)o(tten)o(tion)8 b(:)i(La)g(fonction)i FA(fread)c
FB(retourne)k(0)e(si)h(l'on)h(essa)o(y)o(e)f(de)f(lire)i(au)f(del\022)
-19 b(a)12 b(du)e(\014c)o(hier.)i(P)o(our)e(\023)-18
b(ecrire)179 1715 y(une)13 b(b)q(oucle)i(de)e(lecture)h(propre)g(on)f
(utilise)i(la)f(fonction)g FA(feof\(FILE)i(*\))6 b FB(:)179
1795 y FA(int)18 b(n[2];)179 1886 y(while)f(\(fread\(n,)g(sizeof\(in)o
(t\))o(,)g(2,)h(f\),)h(!feof\(f\)\))296 1931 y(printf\("\045d)d(\045d)j
(\\n",)f(n[0],)g(n[1]\);)179 2088 y Fu(4.1.5)55 b(Acc)o(\022)-27
b(es)18 b(s)o(\023)-27 b(equen)n(tiel)236 2166 y FB(On)13
b(distingue)j(deux)e(tec)o(hniques)h(d'acc)o(\022)-18
b(es)13 b(aux)h(supp)q(orts)g(magn)o(\023)-18 b(etiques)9
b(:)230 2241 y({)21 b(L'acc)o(\022)-18 b(es)11 b(s)o(\023)-18
b(equen)o(tiel)13 b(qui)f(consiste)g(\022)-19 b(a)10
b(traiter)i(les)f(informations)i(dans)f(l'ordre)f(o)q(\022)-20
b(u)11 b(elle)h(apparaissen)o(t)270 2286 y(sur)h(le)g(supp)q(ort)h
(\(bandes\).)g(Le)e(lecteur)i(ph)o(ysique)h(a)o(v)n(ance)e(a)o(v)o(ec)g
(la)g(lecture,)h(et)e(se)h(p)q(ositionne)i(sur)270 2332
y(le)f(d)o(\023)-18 b(ebut)13 b(de)h(l'enregistremen)o(t)h(suiv)n(an)o
(t.)230 2403 y({)21 b(L'acc)o(\022)-18 b(es)12 b(direct)g(qui)g
(consiste)h(\022)-19 b(a)12 b(se)f(placer)i(directemen)o(t)f(sur)g
(l'information)i(sans)e(parcourir)h(celles)270 2449 y(qui)i(la)g(pr)o
(\023)-18 b(ec)o(\022)g(eden)o(t)15 b(\(disques\).)h(Le)e(lecteur)h(ph)
o(ysique)h(reste)e(sur)g(le)h(m)o(^)-18 b(eme)14 b(enregistremen)o(t)i
(apr)o(\022)-18 b(es)270 2494 y(une)14 b(lecture.)179
2569 y(En)i(langage)h(C)f(l'acc)o(\022)-18 b(es)16 b(est)g(s)o(\023)-18
b(equen)o(tiel)18 b(mais)f(il)g(est)e(p)q(ossible)k(de)d(d)o(\023)-18
b(eplacer)17 b(le)f("p)q(oin)o(teur)i(de)e(\014c)o(hier")179
2615 y(c'est)c(\022)-19 b(a)13 b(dire)h(s)o(\023)-18
b(electionner)16 b(l'indice)f(du)e(pro)q(c)o(hain)i(o)q(ctet)f(\022)-19
b(a)13 b(lire)h(ou)e(\023)-18 b(ecrire.)236 2665 y(Comme)12
b(nous)g(v)o(enons)h(de)f(le)g(v)o(oir)h(dans)f(les)g(mo)q(des)h(d'ouv)
o(erture,)f(le)g(p)q(oin)o(teur)i(de)e(\014c)o(hier)g(p)q(eut)g(^)-18
b(etre)179 2711 y(initialemen)o(t)16 b(plac)o(\023)-18
b(e)14 b(en)f(d)o(\023)-18 b(ebut)14 b(ou)g(\014n)f(de)g(\014c)o(hier.)
236 2761 y(Les)c(quatre)g(fonctions)i(d'en)o(tr)o(\023)-18
b(ee-sortie)9 b(\()p FA(fgetc,)18 b(fputc,)f(fscanf,)g(fprintf)p
FB(\))6 b(tra)o(v)n(aillen)o(t)11 b(s)o(\023)-18 b(equen-)179
2806 y(tiellemen)o(t)15 b(\022)-19 b(a)13 b(partir)h(de)f(cette)g
(origine)i(\014x)o(\023)-18 b(ee)14 b(par)f FA(fopen)p
FB(.)p eop
%%Page: 26 34
26 33 bop 75 50 a FD(26)774 b Fz(CHAPITRE)14 b(4.)27
b(LA)14 b(BIBLIOTH)1472 39 y(\022)1467 50 y(EQUE)i(ST)m(AND)o(ARD)179
166 y Fu(4.1.6)55 b(Manipulation)18 b(du)h(p)r(oin)n(teur)f(de)h(\014c)
n(hier)236 238 y FB(Le)d(p)q(oin)o(teur)g(de)g(\014c)o(hier)g(est)g(un)
f(en)o(tier)h FA(long)e FB(qui)i(indique)i(\022)-19 b(a)15
b(partir)h(de)g(quel)g(o)q(ctet)g(du)f(\014c)o(hier)i(la)179
284 y(pro)q(c)o(haine)e(fonction)f(d'en)o(tr)o(\023)-18
b(ee-sortie)14 b(doit)g(s'e\013ectuer.)236 331 y(En)g(d)o(\023)-18
b(ebut)13 b(de)h(\014c)o(hier)g(cet)f(en)o(tier)h(est)f(n)o(ul.)179
408 y FA(#include)j(<stdio.h>)179 453 y(int)i(fseek\(FILE)e(*f,)i(long)
h(pos,)f(int)g(direction\))o(;)236 529 y(f)13 b FB(le)g(descripteur)i
(du)f(\014c)o(hier)g(dans)g(lequel)h(on)o(t)e(d)o(\023)-18
b(eplace)14 b(le)g(p)q(oin)o(teur.)236 576 y(direction)h(est)e(une)h
(des)f(trois)h(constan)o(tes)g(en)o(ti)o(\022)-18 b(eres)14
b(suiv)n(an)o(tes)9 b(:)179 642 y FC(SEEK)p 300 642 14
2 v 15 w(SET)20 b FB(p)q(ositionnemen)o(t)c(sur)d(l'o)q(ctet)h(p)q(os)f
(du)h(\014c)o(hier)179 706 y FC(SEEK)p 300 706 V 15 w(CUR)21
b FB(p)q(ositionnemen)o(t)d(sur)e(le)h FA(pos)p FB(-i)o(\022)-18
b(eme)15 b(o)q(ctet)g(apr)o(\022)-18 b(es)17 b(la)f(p)q(osition)i
(couran)o(te)f(du)f(p)q(oin)o(teur)270 752 y(de)d(\014c)o(hier.)h(\()o
(\023)-18 b(equiv)n(alen)o(t)16 b(\022)-19 b(a)13 b(SEEK)p
781 752 12 2 v 14 w(SET)g(couran)o(t+p)q(os\).)179 817
y FC(SEEK)p 300 817 14 2 v 15 w(END)20 b FB(p)q(ositionnemen)o(t)c(sur)
d(le)h FA(pos)p FB(-i)o(\022)-18 b(eme)12 b(o)q(ctet)h(apr)o(\022)-18
b(es)14 b(la)f(\014n)h(du)f(\014c)o(hier.)179 883 y(Remarquer)i(que)g
FA(pos)e FB(est)h(un)h(en)o(tier)g(sign)o(\023)-18 b(e)22
b(:)14 b(il)h(est)g(p)q(ossible)h(se)f(placer)g(sur)g(le)g(4i)o(\022)
-18 b(eme)15 b(o)q(ctet)f(a)o(v)n(an)o(t)h(la)179 928
y(\014n)e(du)h(\014c)o(hier)8 b(:)179 996 y FA(fseek\(f,)16
b(-4L,)i(SEEK_END\);)179 1112 y Fu(4.1.7)55 b(Un)19 b(exemple)c(d'acc)o
(\022)-27 b(es)18 b(direct)g(sur)h(un)g(\014c)n(hier)f(d'en)n(tiers.)
236 1184 y FB(La)c(fonction)h(suiv)n(an)o(te)g(lit)g(le)g(n-i)o(\022)
-18 b(eme)14 b(en)o(tier)h(d'un)f(\014c)o(hier)h(d'en)o(tiers)g(pr)o
(\023)-18 b(ealablemen)o(t)15 b(\023)-18 b(ecrit)14 b(gr^)-19
b(ace)15 b(\022)-19 b(a)179 1230 y FA(fwrite)t FB(:)270
1296 y FA(int)19 b(lireniem)o(e\(i)o(nt)d(n,)j(FILE)f(*f\))270
1341 y({)349 1387 y(int)g(buf;)349 1478 y(fseek\(f,)e(sizeof\(int)o
(\)*)o(\(n-)o(1\),)g(SEEK_SET\))o(;)349 1524 y(fread\(&b)o(uf,)g
(sizeof\(in)o(t\),)g(1,)j(f\);)349 1569 y(return)e(buf;)270
1615 y(})39 b(\\istd{fse)o(ek})o(\\is)o(td)o({fr)o(ea)o(d})179
1732 y Fu(4.1.8)55 b(Les)24 b(autres)g(fonctions)g(de)g(d)o(\023)-27
b(eplacemen)n(t)22 b(du)i(p)r(oin)n(teur)g(de)g(\014-)179
1790 y(c)n(hier.)236 1862 y FB(La)13 b(fonction)i FA(ftell)257
1929 y(long)j(int)h(ftell\(FIL)o(E)e(*\);)236 2040 y
FB(retourne)d(la)g(p)q(osition)h(couran)o(te)f(du)g(p)q(oin)o(teur.)179
2086 y(La)f(fonction)h FA(rewind)257 2153 y(void)k(rewind\(FIL)o(E)f
(*f\);)178 2265 y FB(\023)-18 b(equiv)n(alen)o(t)15 b(\022)-19
b(a)7 b(:)12 b FA(\(void\))18 b(fseek)f(\(f,)i(0L,)f(0\))179
2402 y Fv(4.2)66 b(Les)22 b(tamp)r(ons)g(de)g(\014c)n(hiers)i(de)e
(stdlib.)236 2487 y FB(La)12 b(biblioth)o(\022)-18 b(eq)q(ue)15
b(standard)e(utilise)h(des)e(tamp)q(ons)h(p)q(our)f(minimiser)i(le)f
(nom)o(bre)f(d'app)q(els)h(syst)o(\022)-18 b(eme.)179
2532 y(Il)9 b(est)h(p)q(ossible)i(de)d(tester)h(l'e\016cacit)o(\023)-18
b(e)10 b(de)g(cette)f(bu\013erisation)j(en)e(comparan)o(t)g(la)g
(vitesse)h(de)e(recopie)i(d'un)179 2578 y(m)o(^)-18 b(eme)11
b(\014c)o(hier)h(a)o(v)o(ec)f(un)h(tamp)q(on)g(de)f(taille)i(1)e(o)q
(ctet)g(et)g(un)g(tamp)q(on)h(adapt)o(\023)-18 b(e)12
b(\022)-19 b(a)11 b(la)h(mac)o(hine,)g(la)g(di\013)o(\023)-18
b(erence)179 2624 y(devien)o(t)19 b(vite)f(tr)o(\022)-18
b(es)18 b(imp)q(ortan)o(te.)h(Une)e(fa\030)-17 b(con)18
b(simple)h(de)f(le)g(p)q(ercev)o(oir)i(est)d(d')o(\023)-18
b(ecrire)19 b(un)f(programme)179 2669 y FA(com)12 b FB(qui)i(r)o(\023)
-18 b(ealise)14 b(des)f(\023)-18 b(ecritures)14 b(sur)g(la)f(sortie)h
(standard)h(ligne)g(par)e(ligne,)i(de)e(regarder)h(sa)f(vitesse)h(puis)
179 2715 y(de)i(comparer)h(a)o(v)o(ec)g(la)f(commande)i(suiv)n(an)o
(tes)8 b(:)p FA(com)18 b(|)h(cat)c FB(la)i(biblioth)o(\022)-18
b(equ)q(e)19 b(standard)e(utilisan)o(t)i(des)179 2761
y(bu\013er)12 b(di\013)o(\023)-18 b(eren)o(ts)12 b(dans)g(les)g(deux)g
(cas)f(une)h(di\013)o(\023)-18 b(erence)12 b(de)g(vitese)g(d'ex)o(\023)
-18 b(ecution)12 b(est)f(p)q(erceptible)j(\(sur)d(une)179
2806 y(mac)o(hine)j(len)o(te)g(la)g(di\013)o(\023)-18
b(erence)15 b(de)e(vitesse)h(est)e(\023)-18 b(eviden)o(te,)14
b(mais)g(elle)g(existe)g(aussi)g(sur)g(une)f(rapide.)8
b(.)e(.)g(\).)p eop
%%Page: 27 35
27 34 bop 75 50 a Fz(4.2.)26 b(LES)14 b(T)m(AMPONS)h(DE)e(FICHIERS)h
(DE)g(STDLIB.)785 b FD(27)179 166 y Fu(4.2.1)55 b(Les)18
b(mo)r(des)f(de)h(bu\013erisation)g(par)h(d)o(\023)-27
b(efaut.)236 236 y FB(Le)12 b(mo)q(de)g(de)g(bu\013erisation)j(des)e
(\014c)o(hiers)g(ouv)o(erts)f(par)g(la)h(biblioth)o(\022)-18
b(equ)q(e)15 b(standard)e(d)o(\023)-18 b(ep)q(end)13
b(du)f(t)o(yp)q(e)179 282 y(de)h(p)o(\023)-18 b(eriph)o(\023)g(erique.)
230 386 y({)21 b(Si)14 b(le)f(\014c)o(hier)i(est)e(un)g
FC(terminal)f FB(la)i(bu\013erisation)i(est)d(faite)g(ligne)i(\022)-19
b(a)13 b(ligne.)353 437 y(En)f Fx(\023)-19 b(e)n(critur)n(e)24
b FB(le)14 b(tamp)q(on)f(est)g(vid)o(\023)-18 b(e)14
b(\022)-19 b(a)12 b(c)o(haque)h(\023)-18 b(ecriture)14
b(d'un)f FA('\\n')e FB(,)h(ou)h(quand)h(il)g(est)f(plein)270
482 y(\(premi)o(\022)-18 b(ere)14 b(des)f(deux)h(o)q(ccurences\).)353
533 y(En)f Fx(le)n(ctur)n(e)23 b FB(le)12 b(tamp)q(on)h(est)g(rempli)g
(apr)o(\022)-18 b(es)13 b(c)o(haque)g(v)n(alidation)i(\(R)o(C\),)d(si)h
(l'on)f(tap)q(e)h(trop)f(de)270 578 y(caract)o(\022)-18
b(eres)14 b(le)f(terminal)i(proteste)e(\(b)q(eep\))h(le)g(bu\013er)g
(cla)o(vier)f(\023)-18 b(etan)o(t)13 b(plein.)230 634
y({)21 b(Si)14 b(le)f(\014c)o(hier)i(est)e(sur)g(un)g
FC(disque)i(magn)o(\023)-21 b(etique)353 684 y FB(En)12
b Fx(\023)-19 b(e)n(critur)n(e)25 b FB(le)14 b(tamp)q(on)g(est)f(vid)o
(\023)-18 b(e)14 b(a)o(v)n(an)o(t)f(de)h(d)o(\023)-18
b(eb)q(order.)353 735 y(En)13 b Fx(le)n(ctur)n(e)25 b
FB(le)14 b(tamp)q(on)g(est)f(rempli)h(quand)g(il)h(est)d(vide.)236
794 y(Le)i(shell)i(de)f(login)h(c)o(hange)f(le)g(mo)q(de)g(de)f
(bu\013erisation)j(de)e FC(stderr)g FB(qui)g(est)f(un)h(\014c)o(hier)h
(terminal)g(\022)-19 b(a)179 839 y(non)13 b(bu\013eris)o(\023)-18
b(e.)236 931 y(Nous)14 b(a)o(v)o(ons)f(donc)h(\022)-19
b(a)13 b(notre)h(disp)q(osition)i(trois)e(mo)q(des)f(de)h
(bu\013erisation)i(standards)8 b(:)230 989 y({)21 b(Non)13
b(bu\013eris)o(\023)-18 b(e)15 b(\(sortie)f(erreur)f(standard\),)230
1045 y({)21 b(Bu\013eris)o(\023)-18 b(e)15 b(par)e(ligne)i(\(lecture/)o
(\023)-18 b(ecriture)15 b(sur)e(terminal\),)230 1100
y({)21 b(Bu\013eris)o(\023)-18 b(e)15 b(par)e(blo)q(cs)h(\(taille)h
(des)f(tamp)q(ons)g(du)f(bu\013er)h(cac)o(he\).)179 1159
y(Les)g(terminaux)i(accepten)o(t)e(d'autres)h(mo)q(des)g(de)f
(bu\013erisation)j(plus)f(complexes)f(en)g(en)o(tr)o(\023)-18
b(ee)14 b(que)h(nous)178 1204 y(\023)-18 b(etudierons)15
b(a)o(v)o(ec)e(les)h(particularit)o(\023)-18 b(es)16
b(de)d(ces)g(p)o(\023)-18 b(eriph)o(\023)g(eriques)16
b(\(c)o(hap)l(^)-15 b(\020tre)14 b(11\).)179 1250 y(Un)f(exemple)h(de)f
(r)o(\023)-18 b(eouv)o(erture)14 b(de)g(la)f(sortie)h(standard,)g(a)o
(v)o(ec)f(p)q(erte)h(du)f(mo)q(de)g(de)h(bu\013erisation)9
b(:)270 1309 y FA(#include)17 b(<stdio.h>)270 1354 y(main\(\))270
1400 y({)349 1446 y(freopen\()o("/d)o(ev/)o(tt)o(y",)f("w",)i
(stderr\);)349 1491 y(fprintf\()o(std)o(err)o(,)e("texte)i(non)g
(termine)f(par)h(un)h(newline)e("\);)349 1537 y(sleep\(12)o(\);)349
1583 y(exit\(0\);)f(/*)j(realise)e(fclose\(st)o(der)o(r\))f(qui)i
(realise)f(fflush\(stde)o(rr)o(\))g(*/)270 1628 y(})236
1687 y FB(Il)d(faut)f(attendre)g(12)h(secondes)g(l'a\016c)o(hage.)179
1795 y Fu(4.2.2)55 b(Manipulation)18 b(des)h(tamp)r(ons)e(de)i(la)f
(biblioth)o(\022)-27 b(eque)17 b(standard.)236 1865 y
FB(Un)12 b(tamp)q(on)g(allou)o(\023)-18 b(e)13 b(automatiquemen)o(t)h
(\(mallo)q(c\))f(est)e(asso)q(ci)o(\023)-18 b(e)13 b(\022)-19
b(a)11 b(c)o(haque)i(ouv)o(erture)f(de)g(\014c)o(hier)g(par)179
1910 y FA(fopen)f FB(au)i(momen)o(t)g(de)g(la)h(premi)o(\022)-18
b(ere)14 b(en)o(tr)o(\023)-18 b(ee-sortie)14 b(sur)g(le)f(\014c)o
(hier.)179 2002 y(La)g(manipulation)j(des)e(tamp)q(ons)g(de)f(la)h
(biblioth)o(\022)-18 b(eque)16 b(standard)f(comp)q(orte)e(deux)h(asp)q
(ects)7 b(:)219 2060 y(1.)21 b(Manipulati)q(on)16 b(de)d(la)h
(bu\013erisation)i(de)d(fa\030)-17 b(con)13 b(p)q(onctuelle)j
(\(vidange\).)219 2116 y(2.)21 b(P)o(ositionnemen)o(t)16
b(du)d(mo)q(de)h(de)f(bu\013erisation.)179 2215 y Fi(Manipulati)o(ons)g
(p)q(onctuell)o(es)236 2285 y FB(La)g(fonction)i(suiv)n(an)o(te)f(p)q
(ermet)f(de)h(vider)g(le)f(tamp)q(on)h(asso)q(ci)o(\023)-18
b(e)15 b(au)e(FILE)g(*)g(f)6 b(:)179 2340 y FA(#include)16
b(<stdio.h>)179 2386 y(fflush\(FI)o(LE)g(*f\);)179 2441
y FB(En)g(\023)-18 b(ecriture)18 b(force)e(la)i(copie)g(du)f(tamp)q(on)
h(asso)q(ci)o(\023)-18 b(e)18 b(\022)-19 b(a)17 b(la)g(structure)h(f)e
(dans)i(le)f(tamp)q(on)h(syst)o(\022)-18 b(eme)17 b(\(ne)179
2487 y(garan)o(tit)d(pas)f(l')o(\023)-18 b(ecriture)15
b(en)e(cas)g(d'in)o(terruption)j(du)d(syst)o(\022)-18
b(eme!\).)179 2532 y(En)13 b(lecture)h(d)o(\023)-18 b(etruit)14
b(le)g(con)o(ten)o(u)g(du)f(tamp)q(on,)h(si)f(l'on)h(est)f(en)g(mo)q
(de)h(ligne)h(uniquemen)o(t)g(jusqu'au)e(pre-)179 2578
y(mier)g(caract)o(\022)-18 b(ere)14 b FA('\\n')p FB(.)236
2669 y(La)f(fonction)i(fclose\(\))e(r)o(\023)-18 b(ealise)15
b(un)e(\017ush\(\))h(a)o(v)n(an)o(t)f(de)g(fermer)g(le)h(\014c)o(hier.)
179 2715 y(La)i(fonction)i(exit\(\))e(app)q(el)i(fclose\(\))f(sur)g
(tous)f(les)h(\014c)o(hiers)h(ouv)o(ert)f(par)f(fop)q(en)h(\(freop)q
(en,tmp\014le,.)8 b(.)e(.)g(\))179 2761 y(a)o(v)n(an)o(t)13
b(de)g(terminer)h(le)g(pro)q(cessus.)p eop
%%Page: 28 36
28 35 bop 75 50 a FD(28)774 b Fz(CHAPITRE)14 b(4.)27
b(LA)14 b(BIBLIOTH)1472 39 y(\022)1467 50 y(EQUE)i(ST)m(AND)o(ARD)195
166 y Fi(Manipulati)o(ons)c(du)j(mo)q(de)h(de)f(bu\013erisatio)o(n)e
(et)i(de)h(la)f(taille)e(du)i(tamp)q(on.)236 236 y FB(La)e(primitiv)o
(e)218 296 y FA(int)18 b(setvbuf\(FIL)o(E)e(*f,)336 342
y(char)i(*adresse,)336 388 y(int)g(mode,)336 433 y(size_t)f(taille\);)
236 539 y FB(p)q(ermet)g(un)f(c)o(hangemen)o(t)h(du)g(mo)q(de)f(de)g
(bu\013erisation)j(du)e(\014c)o(hier)g Fx(f)32 b FB(a)o(v)o(ec)16
b(un)h(tamp)q(on)f(de)h(taille)179 585 y Fx(tail)r(le)12
b FB(fourni)k(par)f(l'utilisateur)j(\022)-19 b(a)14 b(l'adresse)i
Fx(adr)n(esse)d FB(si)i(elle)h(est)e(non)h(n)o(ulle,)h(a)o(v)o(ec)f(le)
g Fx(mo)n(de)f FB(d)o(\023)-18 b(e\014ni)16 b(par)179
631 y(les)d(macro-d)o(\023)-18 b(e\014nition)q(s)16 b(suiv)n(an)o(tes)e
(\()p FA(<stdio.h>)p FB(\))s(:)179 691 y FA(_IOFBF)154
b(bufferise)179 737 y(_IONBF)g(Non)19 b(bufferise)179
782 y(_IOMYBUF)114 b(Mon)19 b(buffer)179 828 y(_IOLBF)154
b(bufferise)17 b(par)h(ligne)g(\(ex:)g(les)g(terminaux\))236
934 y FB(A)o(tten)o(tion)8 b(:)j(Il)g(ne)h(faut)f(pas)h(app)q(eler)h
(cette)e(fonction)i(apr)o(\022)-18 b(es)12 b(l'allo)q(cation)j
(automatique)e(r)o(\023)-18 b(ealis)o(\023)g(ee)13 b(par)179
980 y(la)g(biblioth\022)-18 b(eque)16 b(standard)e(apr)o(\022)-18
b(es)14 b(le)g(premier)g(app)q(el)g(\022)-19 b(a)13 b(une)h(fonction)g
(d'en)o(tr)o(\023)-18 b(ee-sortie)14 b(sur)f(le)h(\014c)o(hier.)179
1025 y(Il)g(est)g(fortemen)o(t)g(conseill)o(\023)-18
b(e)16 b(que)f(la)f(zone)g(m)o(\023)-18 b(emoire)15 b(p)q(oin)o(t)o
(\023)-18 b(ee)15 b(par)g Fx(adr)n(esse)c FB(soit)k(au)f(moins)h(d'une)
g(taille)178 1071 y(\023)-18 b(egale)14 b(\022)-19 b(a)13
b Fx(tail)r(le)p FB(.)236 1117 y(Seul)i(un)f(passage)h(au)f(mo)q(de)g
(bu\013eris)o(\023)-18 b(e)15 b(en)f(ligne)h(ou)f(non)g(bu\013eris)o
(\023)-18 b(e)16 b(p)q(eut)d(^)-18 b(etre)13 b(r)o(\023)-18
b(ealis)o(\023)g(e)16 b(apr)o(\022)-18 b(es)14 b(l'allo-)179
1162 y(cation)i(automatique)h(du)f(tamp)q(on,)g(au)g(risque)g(de)g(p)q
(erdre)g(ce)f(tamp)q(on)h(\(absence)g(d)7 b('app)q(el)16
b(de)g FA(free)p FB(\).)179 1208 y(Ce)11 b(qui)h(p)q(ermet)g(par)f
(exemple)i(de)e(c)o(hanger)i(le)e(mo)q(de)h(de)g(bu\013erisation)i(de)e
(la)f(sortie)i(standard)f(apr)o(\022)-18 b(es)12 b(un)179
1254 y FA(fork)p FB(.)d(A)o(tten)o(tion)i(ce)g(p)q(eut)g(^)-18
b(etre)11 b(dangereux,)h(p)q(our)f(le)h(con)o(ten)o(u)g(couran)o(t)g
(du)f(tamp)q(on)h(comme)f(le)g(mon)o(tre)179 1299 y(l'exemple)j(suiv)n
(an)o(t.)236 1391 y(Av)n(an)o(t)f(cette)g(fonction)i(de)e(norme)g
(POSIX)g(on)g(utilisai)q(t)i(trois)f(fonctions)8 b(:)270
1452 y FA(void)18 b(setbuf\(FIL)o(E)f(*f,)h(char)g(*buf\);)270
1498 y(void)g(setbuffer\()o(FIL)o(E)e(*f,char)h(*adresse,s)o(ize)o(_t)f
(t\);)270 1543 y(void)i(setlignebu)o(f\(F)o(IL)o(E)f(*f\);)270
1665 y(#include)g(<stdio.h>)270 1711 y(main\(\))270 1756
y({)309 1802 y(printf\("Bo)o(nJo)o(ur)f("\);)309 1848
y(switch\(for)o(k\(\))o(\))309 1893 y({)349 1939 y(case)i(-1)g(:)407
1985 y(exit\(1\);)349 2030 y(case)37 b(0)19 b(:)407 2076
y(printf\("je)d(suis)i(le)h(fils"\);)270 2121 y(/*)g(version)e(1)i
(sans)f(la)h(ligne)f(suivante)e(version)h(2)i(avec)38
b(*/)407 2167 y(setbuffer\(s)o(td)o(out)o(,)16 b(NULL,)i(0\);)407
2213 y(sleep\(1\);)407 2258 y(printf\("Enc)o(or)o(e)f(le)h(fils"\);)407
2304 y(break;)349 2350 y(default)e(:)407 2395 y(printf\("je)g(suis)i
(le)h(pere"\);)407 2441 y(sleep\(2\);)309 2487 y(})309
2532 y(printf\("\\n)o("\);)270 2578 y(})270 2624 y(version)e(1)270
2669 y(fork_stdli)o(b)270 2715 y(BonJour)g(je)i(suis)f(le)h(fils)f
(Encore)f(le)i(fils)270 2761 y(BonJour)e(je)i(suis)f(le)h(pere)270
2806 y(version)e(2)p eop
%%Page: 29 37
29 36 bop 75 50 a Fz(4.3.)26 b(MANIPULA)m(TION)15 b(DES)f(LIENS)g(D'UN)
f(FICHIER)748 b FD(29)270 166 y FA(Encore)17 b(le)i(fils)270
212 y(BonJour)e(je)i(suis)f(le)h(pere)179 347 y Fv(4.3)66
b(Manipulation)25 b(des)d(liens)h(d'un)g(\014c)n(hier)236
432 y FB(Changer)14 b(le)g(nom)f(d'un)g(\014c)o(hier)21
b(:)179 543 y FA(int)d(rename\(con)o(st)e(char)i(*de,const)e(char)i
(*vers\);)236 608 y FB(p)q(ermet)e(de)f(renommer)g(un)h(\014c)o(hier)g
(\(ou)f(un)g(r)o(\023)-18 b(ep)q(ertoire\).)16 b(Il)f(faut)g(que)h(les)
f(deux)h(r)o(\023)-18 b(ef)o(\023)g(erences)15 b(soien)o(t)179
654 y(de)e(m)o(^)-18 b(eme)13 b(t)o(yp)q(e)g(\(\014c)o(hier)i(ou)e(r)o
(\023)-18 b(ep)q(ertoire\))14 b(dans)g(le)f(m)o(^)-18
b(eme)13 b(syst)o(\022)-18 b(eme)14 b(de)f(\014c)o(hiers.)179
699 y(Rapp)q(el)21 b(:)12 b(ceci)i(n'a)f(d'e\013et)g(que)h(sur)f(l'arb)
q(orescence)i(de)e(\014c)o(hiers.)179 792 y(D)o(\023)-18
b(etruire)14 b(une)g(r)o(\023)-18 b(ef)o(\023)g(erence)19
b(:)179 858 y FA(int)f(remove\(con)o(st)e(char)i(*filename\))o(;)236
923 y FB(D)o(\023)-18 b(etruit)19 b(le)e(lien)i(donn)o(\023)-18
b(e)18 b(en)f(argumen)o(t,)h(le)f(syst)o(\022)-18 b(eme)18
b(r)o(\023)-18 b(ecup)o(\022)g(ere)18 b(l'ino)q(de)h(et)e(les)g(blo)q
(cs)i(asso)q(ci)o(\023)-18 b(es)18 b(au)179 968 y(\014c)o(hier)c(si)g
(c')o(\023)-18 b(etait)13 b(le)g(dernier)i(lien.)179
1149 y Fv(4.4)66 b(Lancemen)n(t)23 b(d'une)g(commande)f(shell)179
1234 y FA(#include)16 b(<stdlib.h>)179 1279 y(int)i(system\(con)o(st)e
(char)i(*chaine_de)o(_co)o(mm)o(and)o(e\);)236 1353 y
FB(Cr)o(\023)-18 b(ee)14 b(un)h(pro)q(cessus)h(\\/bin/p)q(osix/s)q(h")h
(qui)e(ex)o(\023)-18 b(ecute)15 b(la)g(commande)8 b(;)14
b(il)h(y)f(a)h(atten)o(te)f(de)g(la)h(\014n)g(du)179
1399 y(shell,)i(\(la)f(commande)h(p)q(eut)f(elle)g(^)-18
b(etre)15 b(lanc)o(\023)-18 b(ee)17 b(en)f(mo)q(de)g(d)o(\023)-18
b(etac)o(h)o(\023)g(e)16 b(ce)g(qui)g(fait)g(que)g(le)g(shell)i
(retourne)179 1445 y(imm)o(\023)-18 b(ediatemen)o(t)15
b(sans)f(faire)g(un)f FA(wait)p FB(\).)f(Ce)g(m)o(\023)-18
b(ecanisme)15 b(est)e(tr)o(\022)-18 b(es)14 b(co)q(^)-20
b(uteux.)13 b(A)o(tten)o(tion)i(la)f(commande)179 1490
y FA(system)8 b FB(blo)q(que)k(les)g(signaux)g(SIGINT)f(et)f(SIGQUIT,)g
(il)i(faut)e(analyser)j(la)e(v)n(aleur)h(de)f(retour)g(de)g
FA(system)179 1536 y FB(de)g(la)i(m)o(^)-18 b(eme)11
b(fa\030)-17 b(cons)12 b(que)g(celle)h(de)f FA(wait)p
FB(.)d(Il)j(est)f(conseill)o(\023)-18 b(e)14 b(de)e(blo)q(quer)h(ces)f
(deux)g(signaux)i(a)o(v)n(an)o(t)e(l'app)q(el)179 1582
y(de)h FA(system)k FB(.)179 1717 y Fv(4.5)66 b(T)-6 b(erminaison)24
b(d'un)f(pro)r(cessus)p 182 1801 15 2 v 196 1801 a Fi(exit)37
b FB(La)13 b(primitiv)o(e)j(de)d(terminaison)i(de)e(pro)q(cessus)i(de)e
(bas)g(niv)o(eau)c(:)257 1867 y FA(#include)17 b(<stdlib.h)o(>)257
1913 y(void)h(_exit\(int)e(valeur\);)236 1978 y FB(La)d(primitiv)o(e)p
459 1978 12 2 v 30 w FA(exit)e FB(est)i(la)h(fonction)g(de)f
(terminaison)j("bas)d(niv)o(eau")230 2043 y({)21 b(elle)14
b(ferme)f(les)h(descripteurs)h(ouv)o(erts)e(par)h Fx(op)n(en,)e(op)n
(endir)f FB(ou)i(h)o(\023)-18 b(erit)o(\023)g(es)14 b(du)f(pro)q
(cessus)i(p)o(\022)-18 b(ere.)230 2107 y({)21 b(la)15
b FA(valeur)c FB(est)i(fournie)i(au)f(pro)q(cessus)h(p)o(\022)-18
b(ere)15 b(qui)f(la)h(r)o(\023)-18 b(ecup)o(\022)g(ere)14
b(par)g(l'app)q(el)i(syst)o(\022)-18 b(eme)14 b Fx(wait)p
FB(.)f(Cette)270 2153 y(v)n(aleur)h(est)f(le)h(co)q(de)f(de)h(retour)f
(de)g(pro)q(cessus)i(en)e(shell.)236 2217 y(Cette)k(primitiv)o(e)j(est)
e(automatiquemen)o(t)h(app)q(el)o(\023)-18 b(ee)19 b(\022)-19
b(a)18 b(la)g(\014n)g(de)g(la)g(fonction)g FA(main)e
FB(\(sauf)i(en)f(cas)179 2263 y(d'app)q(els)d(r)o(\023)-18
b(ecursifs)14 b(de)g FA(main)p FB(\).)179 2365 y Fi(exit)37
b FB(La)13 b(fonction)h(de)g(terminaison)h(de)e(pro)q(cessus)h(de)g
(stdlib)8 b(:)179 2431 y FA(#include)16 b(<stdlib.h>)179
2477 y(void)i(exit\(int)e(valeur\);)236 2542 y FB(la)e(fonction)g
Fx(exit)6 b FB(:)230 2607 y({)21 b(lance)14 b(les)g(fonctions)g(d)o
(\023)-18 b(e\014nies)15 b(par)e Fx(atexit)p FB(.)230
2671 y({)21 b(ferme)13 b(l'ensem)o(ble)i(des)e(descripteurs)i(ouv)o
(erts)f(gr^)-19 b(ace)13 b(\022)-19 b(a)13 b(la)h(biblioth)o(\022)-18
b(eque)16 b(standard)f(\()p Fx(fop)n(en)p FB(\).)230
2735 y({)21 b(d)o(\023)-18 b(etruit)14 b(les)g(\014c)o(hiers)g(fabriqu)
o(\023)-18 b(es)15 b(par)e(la)h(primitiv)o(e)h Fx(tmp\014le)230
2799 y FB({)21 b(app)q(elle)p 404 2799 V 29 w Fx(exit)26
b FB(a)o(v)o(ec)13 b FA(valeur)p FB(.)p eop
%%Page: 30 38
30 37 bop 75 50 a FD(30)774 b Fz(CHAPITRE)14 b(4.)27
b(LA)14 b(BIBLIOTH)1472 39 y(\022)1467 50 y(EQUE)i(ST)m(AND)o(ARD)179
166 y Fi(atexit)37 b FB(La)14 b(primitiv)o(e)i FA(atexit)11
b FB(p)q(ermet)j(de)g(sp)o(\023)-18 b(eci\014er)15 b(des)g(fonctions)g
(\022)-19 b(a)14 b(app)q(eler)h(en)f(\014n)g(d'ex)o(\023)-18
b(ecution,)179 212 y(elle)14 b(son)o(t)f(lanc)o(\023)-18
b(ees)15 b(par)e FA(exit)e FB(dans)j(l'ordre)g(in)o(v)o(erse)g(de)f
(leur)h(p)q(ositionnement)h(par)f FA(atexit)p FB(.)179
274 y FA(#include)i(<stdlib.h>)179 320 y(int)i(atexit\(voi)o(d)f
(\(*fonctio)o(n\))f(\(void)i(\)\);)179 382 y FB(Exemple)8
b(:)270 444 y FA(void)18 b(bob\(void\))e({printf\("c)o(ouc)o(ou\\)o(n")
o(\);})270 490 y(void)i(bib\(void\))e({printf\("c)o(uic)o(ui)g("\);})
270 581 y(main\(int)h(argc\))270 627 y({)309 673 y(atexit\(bob)o(\);)
309 718 y(atexit\(bib)o(\);)309 764 y(if)i(\(argc)f(-)h(1\))349
810 y(exit\(0\);)309 855 y(else)349 901 y(_exit\(0\))o(;)270
947 y(})270 992 y($)g(make)f(atexit)270 1038 y(cc)58
b(atexit.c)36 b(-o)19 b(atexit)270 1084 y($)g(atexit)270
1129 y($)g(atexit)f(unargumen)o(t)270 1175 y(cuicui)f(coucou)270
1221 y($)179 1352 y Fv(4.6)66 b(Gestion)22 b(des)g(erreurs)236
1434 y FB(Les)14 b(fonctions)g(de)g(la)f(biblioth\022)-18
b(eque)16 b(standard)f(p)q(ositionnen)o(t)h(deux)e(indicateurs)i
(d'erreur,)d(la)h(fonc-)179 1480 y(tion)g(suiv)n(an)o(te)g(les)g(rep)q
(ositionne)9 b(:)198 1542 y FA(void)18 b(clearerr\(FI)o(LE)e(*\);)236
1605 y FB(La)f(fonction)h FA(int)j(feof\(FILE)d(*\))e
FB(est)g(vraie)i(si)f(la)h(\014n)f(de)g(\014c)o(hier)h(est)f(attein)o
(te)g(sur)g(ce)g(canal,)h FA(int)179 1650 y(ferror\(FI)o(LE)g(*\))d
FB(est)h(vraie)h(si)g(une)f(erreur)g(a)g(eu)g(lieu)i(p)q(endan)o(t)f
(la)g(derni)o(\022)-18 b(ere)15 b(ten)o(tativ)o(e)g(de)f(lecture)h(ou)
179 1696 y(d')o(\023)-18 b(ecriture)14 b(sur)f(ce)g(canal.)179
1742 y(Une)g(description)i(en)f(langue)g(naturelle)h(de)e(la)h(derni)o
(\022)-18 b(ere)15 b(erreur)e(p)q(eut)f(^)-18 b(etre)13
b(obten)o(ue)h(grace)g(\022)-19 b(a)270 1804 y FA(void)18
b(perror\(con)o(st)e(char)i(*message\);)179 1866 y FB(l'a\016c)o(hage)c
(se)f(fait)g(sur)h(la)f(sortie)h(erreur)f(standard)i(\()p
FA(stderr)p FB(\).)179 1997 y Fv(4.7)66 b(Cr)o(\023)-32
b(eation)22 b(et)g(destruction)i(de)e(r)o(\023)-32 b(ep)r(ertoires)236
2080 y FB(Cr)o(\023)-18 b(eation)14 b(d'un)g(r)o(\023)-18
b(ep)q(ertoire)14 b(vide)g(\(m)o(^)-18 b(eme)13 b(syn)o(taxe)h(que)g
FA(creat)p FB(\))j(:)179 2142 y FA(#include)f(<unistd.h>)179
2188 y(int)i(mkdir\(char)e(*ref,)i(mode_t)37 b(mode\);)179
2250 y FB(Destruction)21 b(:)179 2312 y FA(int)d(rmdir\(char)e(*ref\);)
236 2375 y FB(a)o(v)o(ec)d(les)g(m)o(^)-18 b(emes)13
b(restrictions)h(que)f(p)q(our)g(les)g(shells)h(sur)f(le)g(con)o(ten)o
(u)g(du)g(r)o(\023)-18 b(ep)q(ertoire)14 b(\(imp)q(ossible)h(de)179
2420 y(d)o(\023)-18 b(etruire)14 b(un)f(r)o(\023)-18
b(ep)q(ertoire)15 b(non)e(vide\).)p eop
%%Page: 31 39
31 38 bop 1796 50 a FD(31)179 481 y Fw(Chapitre)32 b(5)179
692 y Fy(App)s(els)38 b(syst)m(\022)-56 b(eme)38 b(du)g(Syst)m(\022)-56
b(eme)179 816 y(de)38 b(Gestion)h(de)f(Fic)m(hier)236
1031 y FB(Les)16 b(app)q(els)i(syst)o(\022)-18 b(eme)16
b(d'en)o(tr)o(\023)-18 b(ees-sorties)17 b(ou)f(en)o(tr)o(\023)-18
b(ees-sorties)17 b(de)f(bas)g(niv)o(eau)i(son)o(t)e(rudimen)o(taires)
179 1077 y(mais)h(p)q(olymorphes,)h(en)e(e\013et)g(c'est)f(eux)i(qui)g
(p)q(ermetten)o(t)f(d')o(\023)-18 b(ecrire)17 b(des)f(programmes)h(ind)
o(\023)-18 b(ep)q(endam-)179 1122 y(men)o(t)14 b(des)g(supp)q(orts)i
(ph)o(ysiques)g(sur)e(lesquels)j(se)d(fon)o(t)g(les)g(en)o(tr)o(\023)
-18 b(ees/sorties)16 b(et)e(de)g(p)q(ouv)o(oir)i(facilemen)o(t)179
1168 y(c)o(hanger)e(les)f(supp)q(orts)i(ph)o(ysiques)g(asso)q(ci)o
(\023)-18 b(es)15 b(a)e(une)g(en)o(tr)o(\023)-18 b(ee-sortie.)236
1263 y(Les)13 b(app)q(els)i(syst)o(\022)-18 b(eme)13
b(du)h(syst)o(\022)-18 b(eme)13 b(de)h(gestion)g(de)f(\014c)o(hier)h
(son)o(t)7 b(:)179 1335 y FA(open/crea)o(t)18 b FB(ouv)o(erture/cr)o
(\023)-18 b(eation)15 b(d'un)f(\014c)o(hier)179 1403
y FA(read/writ)o(e)k FB(lecture/ecriture)d(sur)e(un)h(\014c)o(hier)g
(ouv)o(ert)179 1472 y FA(lseek)19 b FB(d)o(\023)-18 b(eplacemen)o(t)14
b(du)g(p)q(oin)o(teur)h(de)e(\014c)o(hier)179 1541 y
FA(dup,dup2)k FB(copie)e(d'ouv)o(erture)f(de)f(\014c)o(hier)179
1609 y FA(close)19 b FB(fermeture)13 b(d'un)g(\014c)o(hier)179
1678 y FA(mount)19 b FB(c)o(hargemen)o(t)14 b(d'un)f(disque)179
1747 y FA(mknode)18 b FB(cr)o(\023)-18 b(eation)15 b(d'un)e(ino)q(de)h
(de)g(\014c)o(hier)g(sp)o(\023)-18 b(ecial)179 1815 y
FA(pipe)19 b FB(cr)o(\023)-18 b(eation)14 b(d'un)g(tub)q(e)179
1884 y FA(fcntl)19 b FB(manipulation)d(des)e(caract)o(\023)-18
b(eristiques)15 b(des)f(ouv)o(ertures)g(de)f(\014c)o(hiers)179
1956 y(Les)g(app)q(els)h(syst)o(\022)-18 b(eme)14 b(son)o(t)f(r)o(\023)
-18 b(ealis)o(\023)g(es)15 b(par)e(le)h(no)o(y)o(au)g(et)f(retournen)o
(t)h(-1)e(en)i(cas)f(d'erreur.)179 2149 y Fv(5.1)66 b
Fm(open)179 2237 y FA(#include)16 b(<fcntl.h>)179 2283
y(int)i(open\(char)e(*ref,)i(int)h(mode,)e(int)i(perm\);)236
2366 y FB(Ouv)o(erture)14 b(du)f(\014c)o(hier)i(de)e(r)o(\023)-18
b(ef)o(\023)g(erence)13 b(\(absolue)i(ou)e(relativ)o(e)i(\022)-19
b(a)13 b("."\))g Fx(r)n(ef)p FB(.)179 2412 y(Le)g Fx(mo)n(de)f
FB(d'ouv)o(erture)i(est)f(une)g(conjonction)i(des)e(masques)h(suiv)n
(an)o(ts)9 b(:)179 2487 y FA(O_RDONLY)36 b(/*)19 b(open)f(for)g
(reading)f(*/)179 2532 y(O_WRONLY)36 b(/*)19 b(open)f(for)g(writing)f
(*/)179 2578 y(O_RDWR)76 b(/*)19 b(open)f(for)g(read)g(&)i(write)d(*/)
179 2624 y(O_NDELAY)36 b(/*)19 b(non-block)o(ing)d(open)i(*/)179
2669 y(O_APPEND)36 b(/*)19 b(append)e(on)i(each)f(write)g(*/)179
2715 y(O_CREAT)56 b(/*)19 b(open)f(with)g(file)g(create)f(*/)179
2761 y(O_TRUNC)56 b(/*)19 b(open)f(with)g(truncatio)o(n)f(*/)179
2806 y(O_EXCL)76 b(/*)19 b(error)e(on)i(create)f(if)g(file)g(exists*/)p
eop
%%Page: 32 40
32 39 bop 75 50 a FD(32)205 b Fz(CHAPITRE)14 b(5.)27
b(APPELS)15 b(SYST)911 39 y(\022)906 50 y(EME)f(DU)g(SYST)1203
39 y(\022)1198 50 y(EME)h(DE)f(GESTION)g(DE)g(FICHIER)484
2234 y
 currentpoint currentpoint translate 0.83891 0.83891 scale neg exch
neg exch translate
 484 2234 a 14 w @beginspecial 0 @llx 0 @lly 267
@urx 468 @ury 2670 @rwi @setspecial
%%BeginDocument: eps/Tablesouverturesfichiers.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /estroke {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /efill {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath unpagectm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /apstroke {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc pie chord or {
        closepath
    } if crlinalph setalpha pie not chord not and {
        crfrtarw {
            2 copy crlinw exch gsave newpath angle1 1 add cos radius mul radius add angle1 1 add sin radius mul radius add moveto angle1 cos radius mul radius add angle1 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if crendarw {
            2 copy crlinw exch gsave newpath angle2 1 sub cos radius mul radius add angle2 1 sub sin radius mul radius add moveto angle2 cos radius mul radius add angle2 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if
    } if crlincp setlinecap crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /apfill {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup 5 -2 roll arc pie chord or {
        closepath
    } if 1 xscale div 1 yscale div scale crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /mkepath {
    dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def /closed exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc closed pie or chord or {
        closepath
    } if unpagectm
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 267 467.632477 rectclip
-79 -224.367538 translate
79 224.367538 267 467.632477 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1.9 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 484.000061 108 -26 -1.392289e-08 0.318519 -0.8 -3.496911e-08 558.563965 292.204376 sc6mt astore rstroke
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 458.000061 108 -26 -1.392289e-08 0.318519 -0.8 -3.496911e-08 558.563965 292.204376 sc6mt astore rstroke
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 432.000061 108 -26 -1.392289e-08 0.318519 -0.8 -3.496911e-08 558.563965 292.204376 sc6mt astore rstroke
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 406.000061 108 -26 -1.392289e-08 0.318519 -0.8 -3.496911e-08 558.563965 292.204376 sc6mt astore rstroke
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 380.000061 108 -26 -1.392289e-08 0.318519 -0.8 -3.496911e-08 558.563965 292.204376 sc6mt astore rstroke
/crlinw 1.9 def
/usedash true def
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 307.929108 0.472504 71.0709 321.527496 0.8 0 0 0.8 42.507202 91.552734 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(Dans chaque  processus ) [12.995998 0 9 0 10.007996 0 7.001999 0 4.5 0 7.991997 0 10.008003 0 9 0 10.007996 0 10.007996 0 7.992004 0 -98.513992 -20.754028 4.5 0 10.007999 0 7.667999 0 9 0 7.991997 0 7.991997 0 7.001999 0 7.001999 0 10.008003 0 7.001999 0 0 0] 34.000004 534 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [-3.496911e-08 0.8 -0.8 -3.496911e-08 531.363953 206.374756] dotx
/txtdraw true def
/txlndraw true def
( ) [0 0] 228.000015 547 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [-3.496911e-08 0.8 -0.8 -3.496911e-08 553.763916 159.174744] dotx
/txtdraw true def
/txlndraw true def
(Dans le noyau ) [12.995998 0 9 0 10.007996 0 7.001999 0 4.5 0 5.003998 0 7.991997 0 4.5 0 10.008003 0 9 0 9 0 9 0 10.007996 0 0 0] 34.000004 534 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [-3.496911e-08 0.8 -0.8 -3.496911e-08 525.763916 399.974731] dotx
/crlinw 1 def
/usedash false def
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 484.000061 108 -26 -2.477869e-08 0.56687 -0.8 -3.496911e-08 576.963928 344.109833 sc6mt astore rstroke
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 458.000061 108 -26 -2.477869e-08 0.56687 -0.8 -3.496911e-08 576.963928 344.109833 sc6mt astore rstroke
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 432.000061 108 -26 -2.477869e-08 0.56687 -0.8 -3.496911e-08 576.963928 344.109833 sc6mt astore rstroke
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 406.000061 108 -26 -2.477869e-08 0.56687 -0.8 -3.496911e-08 576.963928 344.109833 sc6mt astore rstroke
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 380.000061 108 -26 -2.477869e-08 0.56687 -0.8 -3.496911e-08 576.963928 344.109833 sc6mt astore rstroke
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 484.000061 108 -26 -2.735118e-08 0.625722 -0.8 -3.496911e-08 579.363953 418.565826 sc6mt astore rstroke
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 458.000061 108 -26 -2.735118e-08 0.625722 -0.8 -3.496911e-08 579.363953 418.565826 sc6mt astore rstroke
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 432.000061 108 -26 -2.735118e-08 0.625722 -0.8 -3.496911e-08 579.363953 418.565826 sc6mt astore rstroke
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 406.000061 108 -26 -2.735118e-08 0.625722 -0.8 -3.496911e-08 579.363953 418.565826 sc6mt astore rstroke
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 380.000061 108 -26 -2.735118e-08 0.625722 -0.8 -3.496911e-08 579.363953 418.565826 sc6mt astore rstroke
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 484.000061 108 -26 -3.496911e-08 0.8 -0.8 -3.496911e-08 573.763977 567.174805 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(inodes ) [3.996002 0 10.008003 0 10.007996 0 10.007996 0 10.007996 0 9 0 0 0] 74.48597 466.242035 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [-3.496911e-08 0.8 -0.8 -3.496911e-08 573.763977 567.174805] dotx
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 458.000061 108 -26 -3.496911e-08 0.8 -0.8 -3.496911e-08 573.763977 567.174805 sc6mt astore rstroke
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 432.000061 108 -26 -3.496911e-08 0.8 -0.8 -3.496911e-08 573.763977 567.174805 sc6mt astore rstroke
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 406.000061 108 -26 -3.496911e-08 0.8 -0.8 -3.496911e-08 573.763977 567.174805 sc6mt astore rstroke
(donn\335es ) [10.007996 0 10.007996 0 10.007996 0 10.007996 0 10.007996 0 10.007996 0 9 0 0 0] 66.475967 388.242035 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [-3.496911e-08 0.8 -0.8 -3.496911e-08 573.763977 567.174805] dotx
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 47.000004 380.000061 108 -26 -3.496911e-08 0.8 -0.8 -3.496911e-08 573.763977 567.174805 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Sur Disque ) [10.007999 0 10.007999 0 7.992001 0 4.5 0 12.996002 0 5.003998 0 7.001999 0 10.008003 0 10.007996 0 7.991997 0 0 0] 34.000004 534 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [-3.496911e-08 0.8 -0.8 -3.496911e-08 544.164001 577.574829] dotx
/crlinw 1.9 def
/usedash true def
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 327.929108 -0.527588 46.070885 626.527588 0.8 0 0 0.8 42.507202 91.552734 sc6mt astore ssl
/usedash false def
/crendarw true def
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 19.411255 40.587189 202 299 0.8 0 0 0.8 42.507202 91.552734 sc6mt astore ssl
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 0 33.600006 228 402 0.8 0 0 0.8 42.507202 91.552734 sc6mt astore ssl
/crfrtarw true def
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore crlinw -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc6mt astore 176.917465 538.759888 176.907211 538.752747 arow
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore crlinw -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc6mt astore 200.11055 601.94104 200.107208 601.952759 arow
false 0.8 0 0 0.8 42.507202 91.552734 sc5mt astore sstrt
systemdict
begin
160 538 213 672 setbbox
168 559 moveto
168 559 211 589 211 589 curveto
211 589 197 638 197 638 curveto
end
/nspans 2 def -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc6mt astore splstroke
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore -2.284119 30.264648 229.142059 533.367676 0.8 0 0 0.8 42.507202 91.552734 sc6mt astore ssl
-3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc4mt astore -3.496911e-08 0.8 -0.8 -3.496911e-08 608.16394 6.374741 sc5mt astore 22.87796 22.87793 233.06102 623.061035 0.8 0 0 0.8 42.507202 91.552734 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
( table des  descripteurs ) [5.004 0 5.004 0 10.007999 0 9.648 0 3.995999 0 10.007999 0 5.004002 0 10.007999 0 10.007999 0 9 0 -90.494995 -20.807999 5.004 0 10.007999 0 10.007999 0 9 0 9 0 6.264 0 3.996 0 10.007998 0 5.003998 0 10.007999 0 10.007999 0 5.994003 0 9 0 0 0] -13.843996 258.999939 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [-3.496911e-08 0.8 -0.8 -3.496911e-08 356.963959 258.374756] dotx
(la table syst\334me  des fichiers ouverts ) [3.995998 0 10.007999 0 5.004 0 5.004 0 10.007999 0 9.648 0 3.996 0 10.007999 0 5.004 0 9 0 9 0 9 0 5.003998 0 10.008003 0 14.994003 0 10.007996 0 -145.007996 -20.807999 5.003998 0 10.007999 0 10.007999 0 9 0 5.004 0 5.004 0 3.996 0 9 0 10.007999 0 3.996 0 10.007999 0 5.993999 0 9 0 5.004002 0 10.007999 0 10.007999 0 8.550003 0 10.008003 0 6.713997 0 5.003998 0 9 0 0 0] -39.844994 258.999939 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [-3.496911e-08 0.8 -0.8 -3.496911e-08 528.16394 397.574738] dotx
(la table des  inodes  en m\335moire ) [3.996 0 10.007999 0 5.004 0 5.004 0 10.007999 0 9.647999 0 3.996 0 10.008001 0 5.003998 0 10.007999 0 10.007999 0 9 0 5.003998 0 -74.862 -20.807999 3.996 0 10.007999 0 10.007999 0 10.008001 0 10.007999 0 9 0 -76.527 -20.807999 5.004 0 10.007999 0 10.007999 0 5.004 0 14.993999 0 10.007999 0 14.994001 0 10.007999 0 3.995998 0 5.994003 0 10.007996 0 0 0] -23.347994 258.999939 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [-3.496911e-08 0.8 -0.8 -3.496911e-08 350.563934 470.374756] dotx
( ) [0 0] 83.167 171.999939 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [-3.496911e-08 0.8 -0.8 -3.496911e-08 475.363953 157.574738] dotx
(0 ) [10.007996 0 0 0] 144 433 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [-3.496911e-08 0.8 -0.8 -3.496911e-08 532.16394 175.174744] dotx
(1 ) [10.007996 0 0 0] 144 433 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [-3.496911e-08 0.8 -0.8 -3.496911e-08 553.763916 175.174744] dotx
(2 ) [10.007996 0 0 0] 144 433 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [-3.496911e-08 0.8 -0.8 -3.496911e-08 576.963928 175.974747] dotx
/crendarw false def
/crfrtarw false def
-1.748456e-08 0.4 -0.4 -1.748456e-08 492.534302 241.366898 sc6mt astore 18.500008 2.486485 -1 399.000031 233.999954 -2.071539e-08 0.473913 -0.551351 -2.410034e-08 333.950531 357.475647 sc5mt astore efill
-1.748456e-08 0.4 -0.4 -1.748456e-08 492.534302 241.366898 sc4mt astore -1.748456e-08 0.4 -0.4 -1.748456e-08 492.534302 241.366898 sc6mt astore 18.500008 2.486485 -1 399.000031 233.999954 -2.071539e-08 0.473913 -0.551351 -2.410034e-08 333.950531 357.475647 sc5mt astore estroke
(Buffer cache) [12.006012 0 10.007996 0 5.003998 0 4.463989 0 10.007996 0 5.993988 0 -46.094696 -20.807999 9 0 10.007996 0 9 0 10.007996 0 0 0] 426.604553 211.552505 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [-1.748456e-08 0.4 -0.4 -1.748456e-08 298.534302 386.966888] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 2234 a
 currentpoint currentpoint translate 1 0.83891 div 1 0.83891 div scale
neg exch neg exch translate
 484 2234 a 588 2325 a Fq(Fig.)f
FD(5.1)g({)g Fp(T)m(ables)i(du)g(syst)o(\022)-20 b(eme)15
b(de)g(\014chiers.)p eop
%%Page: 33 41
33 40 bop 75 50 a Fz(5.1.)26 b Fh(OPEN)1541 b FD(33)425
1032 y
 currentpoint currentpoint translate 0.62177 0.62177 scale neg exch
neg exch translate
 425 1032 a 14 w @beginspecial 0 @llx 0 @lly 407
@urx 350 @ury 4070 @rwi @setspecial
%%BeginDocument: eps/ouvertureaa.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 407 350 rectclip
-116.5 -305.5 translate
116.5 305.5 407 350 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1 12 13 sc5mt astore pop false {
    sc5mt dodrawctm 104.5 292.5 403 207 0 rfpath unpagectm
} {
    403 207 104.5 292.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 12 13] dodrawctm
104.5 292.5 translate

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 402.372742 206.855988 rectclip
-233.024414 -282.37149 translate
233.024414 282.37149 402.372742 206.855988 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1.9 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw true def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
/crendarw false def
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 47.000004 484.000061 108 -26 0.298611 0 0 0.553847 254.239685 149.34729 sc6mt astore rstroke
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 47.000004 458.000061 108 -26 0.298611 0 0 0.553847 254.239685 149.34729 sc6mt astore rstroke
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 47.000004 432.000061 108 -26 0.298611 0 0 0.553847 254.239685 149.34729 sc6mt astore rstroke
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 47.000004 406.000061 108 -26 0.298611 0 0 0.553847 254.239685 149.34729 sc6mt astore rstroke
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 47.000004 380.000061 108 -26 0.298611 0 0 0.553847 254.239685 149.34729 sc6mt astore rstroke
/crlinw 1.9 def
/usedash true def
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 0 -237 291 522 0.75 0 0 0.75 108.524414 96.408997 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(Dans le processus   ) [12.995998 0 10.007999 0 10.007999 0 9 0 5.003998 0 3.996002 0 10.008003 0 -61.02 -20.807983 10.007999 0 5.993999 0 10.007999 0 9 0 10.008003 0 9 0 9 0 10.007996 0 9 0 5.003998 0 5.003998 0 0 0] 34.000004 534 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 208.274414 74.658997] dotx
(Dans le noyau ) [12.995998 0 10.007999 0 10.007999 0 9 0 5.003998 0 3.996002 0 10.008003 0 5.003998 0 10.007996 0 9.468002 0 8.639999 0 10.007996 0 10.007996 0 0 0] 34.000004 534 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 352.274414 73.908997] dotx
/crlinw 1 def
/usedash false def
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 47.000004 484.000061 108 -26 0.868056 0 0 0.75 300.97583 67.908997 sc6mt astore rstroke
<0920312020727720> [0 0 5.003998 0 10.007996 0 5.003998 0 5.003998 0 5.994003 0 12.996002 0 0 0] 49.499985 466.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 306.524414 67.908997] dotx
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 47.000004 458.000061 108 -26 0.868056 0 0 0.75 300.97583 67.908997 sc6mt astore rstroke
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 47.000004 432.000061 108 -26 0.868056 0 0 0.75 300.97583 67.908997 sc6mt astore rstroke
( 1 ) [5.003998 0 10.007996 0 0 0] 49.499985 414.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 306.524414 67.908997] dotx
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 47.000004 406.000061 108 -26 0.868056 0 0 0.75 300.97583 67.908997 sc6mt astore rstroke
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 47.000004 380.000061 108 -26 0.868056 0 0 0.75 300.97583 67.908997 sc6mt astore rstroke
( 1 ) [5.003998 0 10.007996 0 0 0] 49.499985 362.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 306.524414 67.908997] dotx
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 47.000004 484.000061 108 -26 0.75 0 0 0.75 452.024414 63.408974 sc6mt astore rstroke
( 1 ) [5.003998 0 10.007996 0 0 0] 49.5 466.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 452.024414 63.408974] dotx
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 47.000004 458.000061 108 -26 0.75 0 0 0.75 452.024414 63.408974 sc6mt astore rstroke
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 47.000004 432.000061 108 -26 0.75 0 0 0.75 452.024414 63.408974 sc6mt astore rstroke
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 47.000004 406.000061 108 -26 0.75 0 0 0.75 452.024414 63.408974 sc6mt astore rstroke
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 47.000004 380.000061 108 -26 0.75 0 0 0.75 452.024414 63.408974 sc6mt astore rstroke
/crlinw 1.9 def
/crendarw true def
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 62.093567 -35.358826 257 429 0.75 0 0 0.75 93.524414 91.158997 sc6mt astore ssl
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 57.658203 -5.849396 421 383 0.75 0 0 0.75 108.524414 96.408997 sc6mt astore ssl
(descripteurs ) [10.007999 0 10.007999 0 9 0 9 0 6.264 0 3.996 0 10.007999 0 5.003998 0 10.007999 0 10.007999 0 5.994003 0 9 0 0 0] -24.148996 258.999939 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 260.774414 236.658997] dotx
(inodes en m\335moire ) [3.995998 0 10.007999 0 10.007999 0 10.007999 0 10.007999 0 9 0 5.004 0 10.007999 0 10.007999 0 5.004 0 14.993999 0 10.007999 0 14.993996 0 10.007996 0 3.996002 0 5.994003 0 10.007996 0 0 0] -51.526993 258.999939 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 515.774414 244.908966] dotx
/crlinw 1 def
/crendarw false def
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 47.000004 484.000061 108 -26 0.868056 0 0 0.75 300.97583 -29.591003 sc6mt astore rstroke
( 1 ) [5.003998 0 10.007996 0 0 0] 49.499985 466.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 306.524414 -29.591003] dotx
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 47.000004 484.000061 108 -26 0.298611 0 0 0.553847 254.239685 76.597282 sc6mt astore rstroke
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 47.000004 458.000061 108 -26 0.298611 0 0 0.553847 254.239685 76.597282 sc6mt astore rstroke
/crlinw 0 def
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 0 -155 354 454 0.75 0 0 0.75 93.524414 91.158997 sc6mt astore ssl
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 0 -155 382 454 0.75 0 0 0.75 93.524414 91.158997 sc6mt astore ssl
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 0 -155 429 454 0.75 0 0 0.75 93.524414 91.158997 sc6mt astore ssl
/crlinw 1.9 def
/crendarw true def
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 66.533844 44.647705 423 322 0.75 0 0 0.75 108.524414 96.408997 sc6mt astore ssl
(rd ) [5.994003 0 10.007996 0 0 0] 125 244 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 269.774414 195.408997] dotx
(wr ) [12.996002 0 5.994003 0 0 0] 125 244 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 268.274414 157.158997] dotx
(0 ) [10.007996 0 0 0] 169 287 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 129.524414 191.658997] dotx
(1 ) [10.007996 0 0 0] 90 406 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 187.274414 85.908997] dotx
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 65.434998 -57.476685 236 401 0.75 0 0 0.75 108.524414 96.408997 sc6mt astore ssl
/crlinw 0 def
/crendarw false def
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 1 -129 549 447 0.75 0 0 0.75 93.524414 91.158997 sc6mt astore ssl
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 1 -129 568 447 0.75 0 0 0.75 93.524414 91.158997 sc6mt astore ssl
/crlinw 2.1 def
/crendarw true def
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 57.706177 -40.733765 590 429 0.75 0 0 0.75 108.524414 96.408997 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(vers  le buffer  cache et  le disque ) [8.730011 0 7.992004 0 5.993988 0 7.002014 0 4.5 0 -49.688995 -20.087997 5.003998 0 7.992004 0 4.5 0 8.640015 0 9 0 5.544006 0 5.993988 0 7.992004 0 5.993988 0 4.5 0 -61.812012 -20.087997 7.992004 0 7.992004 0 7.992004 0 9 0 7.992004 0 4.5 0 7.992004 0 5.003998 0 -63.729034 -20.087997 4.5 0 5.003998 0 7.992004 0 4.5 0 9 0 5.003998 0 7.002014 0 9 0 9 0 7.992004 0 0 0] 441.890991 148 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 263.774414 254.658997] dotx
/txtdraw true def
/txlndraw true def
(3   ) [10.007996 0 5.004028 0 5.004028 0 0 0] 590 402 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 50.774414 72.408997] dotx
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 53.993164 -17.179626 566 382 0.75 0 0 0.75 108.524414 96.408997 sc6mt astore ssl
(wr ) [12.996002 0 5.994003 0 0 0] 125 244 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 269.024414 136.908997] dotx
/crlinw 1.9 def
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 70.467621 -62.439667 233 376 0.75 0 0 0.75 108.524414 96.408997 sc6mt astore ssl
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 69.921539 53.10498 420 302 0.75 0 0 0.75 108.524414 96.408997 sc6mt astore ssl
(2 ) [10.007996 0 0 0] 90 406 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 188.024414 70.908997] dotx
(fd=open\("toto",O_RDWR |\200O_CREAT,0666\); ) [5.003998 0 10.007996 0 10.511993 0 10.007996 0 10.007996 0 10.007996 0 10.007996 0 5.994003 0 6.389999 0 5.003998 0 10.007996 0 5.003998 0 10.007996 0 6.390015 0 5.003998 0 14.003998 0 10.007996 0 12.996002 0 12.276001 0 16.992004 0 12.996002 0 5.003998 0 4.679993 0 0 0 14.003998 0 10.007996 0 12.996002 0 12.996002 0 12.006012 0 9.846008 0 8.838013 0 5.003998 0 10.007996 0 10.007996 0 10.007996 0 10.007996 0 5.993988 0 5.003998 0 0 0] 154 187 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 159.524414 145.908997] dotx
(fd ) [5.003998 0 10.007996 0 0 0] 90 406 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 185.774414 54.408997] dotx
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 66.554504 60.342743 234 360 0.75 0 0 0.75 108.524414 96.408997 sc6mt astore ssl
0.75 0 0 0.75 108.524414 96.408997 sc4mt astore 0.75 0 0 0.75 108.524414 96.408997 sc5mt astore 69.669739 -7.741089 424 437 0.75 0 0 0.75 108.524414 96.408997 sc6mt astore ssl
end
grestore
grestore
end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc5mt astore 118 515 394 -53 1 0 0 1 0 0 sc6mt astore rfill
1 0 0 1 0 0 sc5mt astore 205 500 -82 -53 1 0 0 1 0 0 sc6mt astore rfill
gsave clpmt currentmatrix pop newpath
1 0 0 1 16 156 sc5mt astore pop false {
    sc5mt dodrawctm 104.5 292.5 403 207 0 rfpath unpagectm
} {
    403 207 104.5 292.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 16 156] dodrawctm
104 306 translate

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 403.184967 179.693451 rectclip
-237.398041 -314 translate
237.398041 314 403.184967 179.693451 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 47.000004 484.000061 108 -26 0.298611 0 0 0.553847 254.863312 153.813263 sc6mt astore rstroke
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 47.000004 458.000061 108 -26 0.298611 0 0 0.553847 254.863312 153.813263 sc6mt astore rstroke
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 47.000004 432.000061 108 -26 0.298611 0 0 0.553847 254.863312 153.813263 sc6mt astore rstroke
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 47.000004 406.000061 108 -26 0.298611 0 0 0.553847 254.863312 153.813263 sc6mt astore rstroke
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 47.000004 380.000061 108 -26 0.298611 0 0 0.553847 254.863312 153.813263 sc6mt astore rstroke
/crlinw 1.9 def
/usedash true def
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 0 -237 291 522 0.75 0 0 0.75 109.148041 100.874969 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(Dans le processus   ) [12.995998 0 10.007999 0 10.007999 0 9 0 5.003998 0 3.996002 0 10.008003 0 -61.02 -20.807983 10.007999 0 5.993999 0 10.007999 0 9 0 10.008003 0 9 0 9 0 10.007996 0 9 0 5.003998 0 5.003998 0 0 0] 34.000004 534 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 212.648041 79.124969] dotx
(Dans le noyau ) [12.995998 0 10.007999 0 10.007999 0 9 0 5.003998 0 3.996002 0 10.008003 0 5.003998 0 10.007996 0 9.468002 0 8.639999 0 10.007996 0 10.007996 0 0 0] 34.000004 534 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 334.148041 78.374969] dotx
/crlinw 1 def
/usedash false def
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 47.000004 484.000061 108 -26 0.868056 0 0 0.75 301.599426 72.374969 sc6mt astore rstroke
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 47.000004 458.000061 108 -26 0.868056 0 0 0.75 301.599426 72.374969 sc6mt astore rstroke
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 47.000004 432.000061 108 -26 0.868056 0 0 0.75 301.599426 72.374969 sc6mt astore rstroke
( 1 ) [5.003998 0 10.007996 0 0 0] 49.499985 414.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 307.148041 72.374969] dotx
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 47.000004 406.000061 108 -26 0.868056 0 0 0.75 301.599426 72.374969 sc6mt astore rstroke
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 47.000004 380.000061 108 -26 0.868056 0 0 0.75 301.599426 72.374969 sc6mt astore rstroke
( 1 ) [5.003998 0 10.007996 0 0 0] 49.499985 362.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 307.148041 72.374969] dotx
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 47.000004 484.000061 108 -26 0.75 0 0 0.75 452.648041 67.874947 sc6mt astore rstroke
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 47.000004 458.000061 108 -26 0.75 0 0 0.75 452.648041 67.874947 sc6mt astore rstroke
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 47.000004 432.000061 108 -26 0.75 0 0 0.75 452.648041 67.874947 sc6mt astore rstroke
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 47.000004 406.000061 108 -26 0.75 0 0 0.75 452.648041 67.874947 sc6mt astore rstroke
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 47.000004 380.000061 108 -26 0.75 0 0 0.75 452.648041 67.874947 sc6mt astore rstroke
/crlinw 1.9 def
/crendarw true def
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 62.093567 -35.358826 257 429 0.75 0 0 0.75 94.148041 95.624969 sc6mt astore ssl
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 57.658203 -5.849396 421 383 0.75 0 0 0.75 109.148041 100.874969 sc6mt astore ssl
(descripteurs ) [10.007999 0 10.007999 0 9 0 9 0 6.264 0 3.996 0 10.007999 0 5.003998 0 10.007999 0 10.007999 0 5.994003 0 9 0 0 0] -24.148996 258.999939 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 261.398041 242.624969] dotx
(inodes en m\335moire ) [3.995998 0 10.007999 0 10.007999 0 10.007999 0 10.007999 0 9 0 5.004 0 10.007999 0 10.007999 0 5.004 0 14.993999 0 10.007999 0 14.993996 0 10.007996 0 3.996002 0 5.994003 0 10.007996 0 0 0] -51.526993 258.999939 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 516.398071 249.374939] dotx
/crlinw 1 def
/crendarw false def
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 47.000004 484.000061 108 -26 0.868056 0 0 0.75 301.599426 -25.125031 sc6mt astore rstroke
( 1 ) [5.003998 0 10.007996 0 0 0] 49.499985 466.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 307.148041 -25.125031] dotx
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 47.000004 484.000061 108 -26 0.298611 0 0 0.553847 254.863312 81.063255 sc6mt astore rstroke
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 47.000004 458.000061 108 -26 0.298611 0 0 0.553847 254.863312 81.063255 sc6mt astore rstroke
/crlinw 0 def
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 0 -155 354 454 0.75 0 0 0.75 94.148041 95.624969 sc6mt astore ssl
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 0 -155 382 454 0.75 0 0 0.75 94.148041 95.624969 sc6mt astore ssl
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 0 -155 429 454 0.75 0 0 0.75 94.148041 95.624969 sc6mt astore ssl
/crlinw 1.9 def
/crendarw true def
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 66.533844 44.647705 423 322 0.75 0 0 0.75 109.148041 100.874969 sc6mt astore ssl
(rd ) [5.994003 0 10.007996 0 0 0] 125 244 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 270.398041 199.874969] dotx
(wr ) [12.996002 0 5.994003 0 0 0] 125 244 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 268.898041 161.624969] dotx
(0 ) [10.007996 0 0 0] 169 287 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 130.148041 196.124969] dotx
(1 ) [10.007996 0 0 0] 90 406 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 187.898041 90.374969] dotx
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 65.434998 -57.476685 236 401 0.75 0 0 0.75 109.148041 100.874969 sc6mt astore ssl
/crlinw 0 def
/crendarw false def
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 1 -129 549 447 0.75 0 0 0.75 94.148041 95.624969 sc6mt astore ssl
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 1 -129 568 447 0.75 0 0 0.75 94.148041 95.624969 sc6mt astore ssl
/crlinw 2.1 def
/crendarw true def
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 49.086243 -16.89856 572 402 0.75 0 0 0.75 109.148041 100.874969 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(vers  le buffer  cache et  le disque ) [8.730011 0 7.992004 0 5.993988 0 7.002014 0 4.5 0 -49.688995 -20.087997 5.003998 0 7.992004 0 4.5 0 8.640015 0 9 0 5.544006 0 5.993988 0 7.992004 0 5.993988 0 4.5 0 -61.812012 -20.087997 7.992004 0 7.992004 0 7.992004 0 9 0 7.992004 0 4.5 0 7.992004 0 5.003998 0 -63.729034 -20.087997 4.5 0 5.003998 0 7.992004 0 4.5 0 9 0 5.003998 0 7.002014 0 9 0 9 0 7.992004 0 0 0] 441.890991 148 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 264.398041 259.124969] dotx
/txtdraw true def
/txlndraw true def
(3   ) [10.007996 0 5.004028 0 5.004028 0 0 0] 590 402 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 51.398041 76.874969] dotx
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 53.993164 -17.179626 566 382 0.75 0 0 0.75 109.148041 100.874969 sc6mt astore ssl
(wr ) [12.996002 0 5.994003 0 0 0] 125 244 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 269.648041 141.374969] dotx
/crlinw 1.9 def
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 70.467621 -62.439667 233 376 0.75 0 0 0.75 109.148041 100.874969 sc6mt astore ssl
0.75 0 0 0.75 109.148041 100.874969 sc4mt astore 0.75 0 0 0.75 109.148041 100.874969 sc5mt astore 69.921539 53.10498 420 302 0.75 0 0 0.75 109.148041 100.874969 sc6mt astore ssl
(2 ) [10.007996 0 0 0] 90 406 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 188.648041 75.374969] dotx
end
grestore
grestore
end end epssave restore
grestore
grestore
end
grestore
grestore
%%EndDocument
 @endspecial 425 1032 a
 currentpoint currentpoint translate 1 0.62177 div 1 0.62177 div scale
neg exch neg exch translate
 425 1032 a 113 1123 a Fq(Fig.)13
b FD(5.2)g({)g Fp(A)o(vant)i(l'ouvertur)n(e,)f(descripteurs)g(standar)n
(d)i(ouverts,)e(puis)h(apr)o(\022)-20 b(es)15 b(l'ouvertur)n(e)f(de)h
("toto".)236 1255 y FB(Le)c(param)o(\022)-18 b(etre)11
b Fx(p)n(erm)p FB(ission)h(n'a)e(de)h(sens)g(qu'\022)-19
b(a)11 b(la)g(cr)o(\023)-18 b(eation)11 b(du)g(\014c)o(hier,)h(il)f(p)q
(ermet)g(de)g(p)q(ositionner)i(les)179 1301 y(v)n(aleurs)f(du)g(c)o
(hamp)g FA(mode)e FB(de)h(l'ino)q(de.)i(Les)e(droits)i(e\013ectiv)o
(emen)o(t)g(p)q(ositionn)o(\023)-18 b(es)14 b(d)o(\023)-18
b(ep)q(enden)o(t)13 b(de)e(la)h(v)n(aleur)179 1347 y(de)j
Fx(umask)p FB(,)e(grace)h(\022)-19 b(a)15 b(la)g(form)o(ule)h
FA(droits)h(=)i(perm)f(&)i(~)f(umask)p FB(.)12 b(La)i(v)n(aleur)i(par)f
(d)o(\023)-18 b(efaut)15 b(de)g FA(umask)e FB(est)179
1392 y(066)g(\(v)n(aleur)h(o)q(ctale\).)179 1438 y(La)j(v)n(aleur)h(de)
g(retour)f(de)g FA(open)f FB(est)h(le)g(n)o(um)o(\023)-18
b(ero)18 b(dans)g(la)g(table)g(de)f(descripteurs)i(du)f(pro)q(cessus)g
(qui)179 1484 y(a)d(\023)-18 b(et)o(\023)g(e)16 b(utilis)o(\023)-18
b(e)18 b(par)f FA(open)p FB(.)d(Ce)h(n)o(um)o(\023)-18
b(ero)17 b(est)f(app)q(el)o(\023)-18 b(e)18 b(descripteur)g(de)e(l'ouv)
o(erture.)h(Ce)f(descripteur)i(est)179 1529 y(utilis)o(\023)-18
b(e)14 b(dans)f(les)g(autres)g(app)q(els)h(syst)o(\022)-18
b(eme)13 b(p)q(our)g(sp)o(\023)-18 b(eci\014er)13 b(l'ouv)o(erture)h
(de)f(\014c)o(hier)g(sur)g(laquelle)i(on)d(v)o(eut)179
1575 y(tra)o(v)n(ailler)331 1559 y Fs(1)351 1575 y FB(,)g(et)h(-1)g(en)
g(cas)g(d')o(\023)-18 b(ec)o(hec)14 b(de)f(l'ouv)o(erture.)179
1686 y Fu(5.1.1)55 b(D)o(\023)-27 b(eroulemen)n(t)16
b(in)n(terne)i(d'un)g(app)r(el)g(de)h Fj(open)219 1755
y FB(1.)i(Le)13 b(syst)o(\022)-18 b(eme)13 b(d)o(\023)-18
b(etermine)15 b(l'ino)q(de)g(du)e(\014c)o(hier)h(r)o(\023)-18
b(ef)o(\023)g(erence)14 b(\()p Fx(namei)p FB(\).)219
1818 y(2.)59 b({)21 b(Soit)14 b(l'ino)q(de)g(est)f(dans)h(la)g(table)g
(des)f(ino)q(des)i(en)e(m)o(\023)-18 b(emoire.)308 1872
y({)21 b(Soit)14 b(il)g(alloue)h(une)e(en)o(tr)o(\023)-18
b(ee)14 b(et)e(recopie)j(l'ino)q(de)f(du)g(disque)g(\()p
Fx(iget)p FB(\).)219 1934 y(3.)21 b(Le)13 b(syst)o(\022)-18
b(eme)13 b(v)o(\023)-18 b(eri\014e)15 b(les)e(droits)h(d'acc)o(\022)-18
b(es)14 b(dans)g(le)f(mo)q(de)h(demand)o(\023)-18 b(e.)219
1996 y(4.)21 b(Il)15 b(alloue)h(une)f(en)o(tr)o(\023)-18
b(ee)15 b(dans)h(la)f(table)g(des)g(\014c)o(hiers)h(ouv)o(erts)f(du)g
(syst)o(\022)-18 b(eme,)15 b(et)f(p)q(ositionne)j(le)f(cur-)270
2042 y(seur)g(de)f(lecture)g(\023)-18 b(ecriture)16 b(dans)g(le)f
(\014c)o(hier)h(\(o\013set)g(=)f(0,)f(sauf)i(dans)f(le)h(cas)f(du)h(mo)
q(de)f FA(O)p 1604 2042 12 2 v 14 w(APPEND)270 2087 y
FB(o\013set=taille)h(du)d(\014c)o(hier\).)219 2150 y(5.)21
b(Le)13 b(syst)o(\022)-18 b(eme)13 b(alloue)i(une)f(place)g(dans)g(la)g
(table)g(des)f(descripteurs)p 1261 2150 V 29 w FA(iob)f
FB(du)h(\014c)o(hier.)219 2212 y(6.)21 b(Il)13 b(ren)o(v)o(oie)h(au)g
(pro)q(cessus)g(le)f(n)o(um)o(\023)-18 b(ero)14 b(de)f(descripteur,)h
(c'est)e(\022)-19 b(a)13 b(dire)h(le)f(n)o(um)o(\023)-18
b(ero)14 b(de)f(l'en)o(tr)o(\023)-18 b(ee)13 b(qu'il)270
2258 y(vien)o(t)h(d'allouer)h(dans)f(le)f(tableau)p 793
2258 V 29 w FA(iob)p FB(.)179 2328 y(Si)h(l'op)o(\023)-18
b(eration)15 b(a)d(\023)-18 b(ec)o(hou)o(\023)g(e)13
b(dans)h(une)g(des)e(\023)-18 b(etap)q(es)14 b(le)f(syst)o(\022)-18
b(eme)14 b(ren)o(v)o(oie)g FA(-1)p FB(.)p 75 2768 705
2 v 120 2806 a Fo(1.)8 b(Un)k(m)o(^)-17 b(eme)10 b(\014c)o(hier)g(p)q
(eut)f(^)-17 b(etre)11 b(ouv)o(ert)f(plusieurs)f(fois.)p
eop
%%Page: 34 42
34 41 bop 75 50 a FD(34)205 b Fz(CHAPITRE)14 b(5.)27
b(APPELS)15 b(SYST)911 39 y(\022)906 50 y(EME)f(DU)g(SYST)1203
39 y(\022)1198 50 y(EME)h(DE)f(GESTION)g(DE)g(FICHIER)179
166 y Fv(5.2)66 b Fm(creat)236 249 y FB(Cr)o(\023)-18
b(eation)14 b(d'un)g(\014c)o(hier)g(et)f(ouv)o(erture)h(en)e(\023)-18
b(ecriture.)179 311 y FA(int)18 b(creat\(char)e(*reference)o(,)g(int)j
(permissio)o(ns\))o(;)219 397 y FB(1.)i(Le)13 b(syst)o(\022)-18
b(eme)13 b(d)o(\023)-18 b(etermine)15 b(l'ino)q(de)g(du)e(catalogue)i
(o)q(\022)-20 b(u)13 b(l'on)h(demande)g(la)f(cr)o(\023)-18
b(eation)15 b(du)e(\014c)o(hier.)278 459 y(\(a\))21 b(Si)14
b(il)g(existe)g(d)o(\023)-18 b(ej\022)f(a)13 b(une)g(ino)q(de)i(p)q
(our)f(le)f(\014c)o(hier)378 512 y({)21 b(Le)9 b(no)o(y)o(au)h(lit)g
(l'ino)q(de)h(en)e(question)i(\(allo)q(cation)h(dans)d(la)h(table)g
(des)f(ino)q(des)i(en)e(m)o(\023)-18 b(emoire\),)418
558 y(v)o(\023)g(eri\014e)21 b(que)e(c'est)g(un)h(\014c)o(hier)g
(ordinaire)h(autoris)o(\023)-18 b(e)21 b(en)d(\023)-18
b(ecriture)20 b(par)g(le)f(propri)o(\023)-18 b(etaire)418
604 y(e\013ectif)14 b(du)g(pro)q(cessus,)g(sinon)f(\023)-18
b(ec)o(hec.)378 657 y({)21 b(Le)13 b(syst)o(\022)-18
b(eme)14 b(lib)o(\022)-18 b(ere)14 b(les)g(blo)q(cs)g(de)g(donn)o(\023)
-18 b(ees)14 b(et)f(r)o(\023)-18 b(eduit)14 b(la)g(taille)h(du)e(\014c)
o(hier)h(\022)-19 b(a)13 b(z)o(\023)-18 b(ero,)13 b(il)h(ne)418
703 y(mo)q(di\014e)h(pas)e(les)h(droits)g(qu'a)o(v)n(ait)g(le)g(\014c)o
(hier)g(an)o(t)o(\023)-18 b(erieuremen)o(t.)276 757 y(\(b\))21
b(Si)14 b(n'existait)g(pas)g(d'ino)q(de)g(p)q(our)g(le)f(\014c)o(hier)
378 810 y({)21 b(Le)13 b(syst)o(\022)-18 b(eme)14 b(teste)f(les)g
(droits)h(en)f(\023)-18 b(ecriture)14 b(sur)f(le)g(catalogue)378
864 y({)21 b(Il)14 b(alloue)h(une)e(nouv)o(elle)i(ino)q(de)g(\()p
Fx(ial)r(lo)n(c)p FB(\))378 918 y({)21 b(Il)14 b(alloue)h(une)e(nouv)o
(elle)i(en)o(tr)o(\023)-18 b(ee)14 b(dans)g(la)f(table)h(des)g(ino)q
(des)g(en)f(m)o(\023)-18 b(emoire.)179 988 y(M)o(^)g(eme)13
b(suite)h(que)f(p)q(our)h FA(open)p FB(.)179 1119 y Fv(5.3)66
b Fm(read)179 1201 y FA(int)18 b(nbcharlus)e(=)k(read\(int)c(d,)j(char)
f(*tampon,)f(int)h(nbalire\))179 1296 y Fg(d)p FC(escripteur)i
FB(en)o(tr)o(\023)-18 b(ee)17 b(de)f(la)h(table)g(des)g(descripteurs)h
(corresp)q(ondan)o(te)g(au)e(\014c)o(hier)i(dans)f(lequel)h(doit)269
1341 y(^)-18 b(etre)13 b(e\013ectu)o(\023)-18 b(ee)14
b(la)g(lecture)f(\(fourni)i(par)e FA(open)p FB(\).)179
1403 y Fg(nb)n(alir)n(e)20 b FB(nom)o(bre)14 b(de)f(caract)o(\022)-18
b(eres)14 b(\022)-19 b(a)13 b(lire)h(dans)g(le)f(\014c)o(hier.)179
1465 y Fg(tamp)n(on)22 b FB(un)13 b(tableau)h(de)f(caract)o(\022)-18
b(eres)13 b(allou)o(\023)-18 b(e)15 b(par)e(l'utilisateur.)j(Les)d
(caract)o(\022)-18 b(eres)13 b(lus)h(son)o(t)f(plac)o(\023)-18
b(es)14 b(dans)270 1510 y(ce)f(tamp)q(on.)179 1572 y
Fg(nb)n(charlus)21 b FB(nom)o(bre)15 b(de)g(caract)o(\022)-18
b(eres)15 b(e\013ectiv)o(emen)o(t)i(lus,)e(ou)g(-1)f(en)h(cas)g(d')o
(\023)-18 b(ec)o(hec)15 b(de)g(l'app)q(el)h(syst)o(\022)-18
b(eme,)270 1618 y(\(droits,)14 b(...\),)e(la)i(\014n)g(de)g(\014c)o
(hier)h(est)e(attein)o(te)i(quand)g(le)f(nom)o(bre)g(de)g(caract)o
(\022)-18 b(eres)14 b(lus)g(est)g(inf)o(\023)-18 b(erieur)270
1663 y(au)13 b(nom)o(bre)h(de)f(caract)o(\022)-18 b(eres)14
b(demand)o(\023)-18 b(es.)179 1733 y(D)o(\023)g(eroulemen)o(t)8
b(:)219 1803 y(1.)21 b(V)o(\023)-18 b(eri\014cation)15
b(du)f(descripteur)g Fr(\000)-6 b(!)13 b FB(acc)o(\022)-18
b(es)13 b(aux)h(tables)g(syst)o(\022)-18 b(eme.)219 1865
y(2.)21 b(Droits)14 b(\(mo)q(de)g(ad)o(\023)-18 b(equat\))219
1927 y(3.)21 b(Gr^)-19 b(ace)13 b(\022)-19 b(a)13 b(l'ino)q(de)i(le)f
(syst)o(\022)-18 b(eme)13 b(obtien)o(t)h(les)g(adresses)g(du)f(\(des\))
g(blo)q(c\(s\))i(con)o(tenan)o(t)f(les)f(donn)o(\023)-18
b(ees)15 b(\022)-19 b(a)270 1973 y(lire.)14 b(Le)f(syst)o(\022)-18
b(eme)13 b(e\013ectue)h(la)g(lecture)g(de)f(ces)g(blo)q(cs.)219
2034 y(4.)21 b(Le)13 b(syst)o(\022)-18 b(eme)13 b(recopie)i(les)e(donn)
o(\023)-18 b(ees)15 b(du)e(bu\013er)h(cac)o(he)g(v)o(ers)f(le)g(tamp)q
(on)h(de)f(l'utilisateu)q(r.)219 2096 y(5.)21 b(Le)13
b(curseur)h(dans)g(le)f(\014c)o(hier)h(est)f(remit)h(\022)-19
b(a)13 b(jour)g(dans)h(l'en)o(tr)o(\023)-18 b(ee)13 b(de)g(la)h(table)g
(des)g(\014c)o(hiers)g(ouv)o(erts.)219 2158 y(6.)21 b(Le)13
b(syst)o(\022)-18 b(eme)13 b(ren)o(v)o(oie)i(le)e(nom)o(bre)h(de)f
(caract)o(\022)-18 b(eres)14 b(e\013ectiv)o(emen)o(t)g(lus.)179
2289 y Fv(5.4)66 b Fm(write)179 2371 y FA(int)18 b(nbcecrits)e(=)k
(write\(int)c(desc,)h(char)h(*tampon,)f(int)h(nbaecrire\);)236
2441 y FB(M)o(^)-18 b(eme)16 b(d)o(\023)-18 b(eroulemen)o(t)18
b(que)e FA(read)d FB(mais)k(a)o(v)o(ec)f(une)g(allo)q(cation)i(\023)-18
b(ev)o(en)o(tuelle)17 b(de)f(blo)q(c-disque)j(dans)d(le)179
2487 y(cas)d(d'un)g(a)r(jout)h(au-del\022)-19 b(a)14
b(de)f(la)h(\014n)g(du)f(\014c)o(hier.)179 2532 y(Dans)f(le)h(cas)f(o)q
(\022)-20 b(u)12 b(l'app)q(el)i(concerne)f(un)f(p)o(\023)-18
b(eriph)o(\023)g(erique)15 b(en)d(mo)q(de)g(caract)o(\022)-18
b(ere)7 b(:)12 b(le)g(syst)o(\022)-18 b(eme)12 b(activ)o(e)h(la)g
(fonc-)179 2578 y(tion)j FA(write)e FB(\(r)o(\023)-18
b(ecipro)q(quemen)o(t)18 b FA(read)c FB(p)q(our)i(une)h(lecture\))f(du)
h(p)o(\023)-18 b(eriph)o(\023)g(erique)18 b(qui)f(utilise)h(directemen)
o(t)179 2624 y(l'adresse)c(du)f(tamp)q(on)h(utilisateur.)179
2669 y(Remarquons)j(ici)g(encore)f(le)h(p)q(olymorphisme)h(de)e(ces)g
(deux)h(app)q(els)g(syst)o(\022)-18 b(eme)16 b(qui)h(p)q(ermet)f(de)g
(lire)h(et)179 2715 y(d')o(\023)-18 b(ecrire)17 b(sur)h(une)f(grande)h
(v)n(ari)o(\023)-18 b(et)o(\023)g(e)17 b(de)h(p)o(\023)-18
b(eriph)o(\023)g(eriques)20 b(en)d(utilisan)o(t)i(une)e(seule)h(syn)o
(taxe.)g(Le)f(co)q(de)g(C)179 2761 y(utilisan)o(t)h(l'app)q(el)g(syst)o
(\022)-18 b(eme)16 b(marc)o(hera)h(donc)f(indi\013)o(\023)-18
b(eremmen)o(t)19 b(sur)d(tous)g(les)h(t)o(yp)q(es)f(de)g(p)o(\023)-18
b(eriph)o(\023)g(erique)q(s)179 2806 y(qui)11 b(son)o(t)g(d)o(\023)-18
b(e\014nis)12 b(dans)f(le)g(syst)o(\022)-18 b(eme)11
b(de)f(\014c)o(hier.)i(P)o(ar)e(exemple,)h(il)h(existe)f(deux)g(p)o
(\023)-18 b(eriph)o(\023)g(eriques)14 b("logiques")p
eop
%%Page: 35 43
35 42 bop 75 50 a Fz(5.5.)26 b Fh(LSEEK)1519 b FD(35)179
166 y FB(qui)14 b(son)o(t)g(/dev/n)o(ull)i(et)d(/dev/z)o(\023)-18
b(ero)14 b(\(que)g(l'on)f(ne)h(trouv)o(e)g(pas)f(sur)h(toutes)f(les)h
(mac)o(hines\).)g(Le)g(premier)179 212 y(est)f(toujours)g(vide)h(en)f
(lecture)h(et)f(les)g(\023)-18 b(ecritures)14 b(n'on)o(t)f(aucun)h
(e\013et)f(\(il)h(est)f(donc)g(p)q(ossible)j(de)d(d)o(\023)-18
b(ev)o(erser)179 258 y(n'imp)q(orte)17 b(quoi)g(sur)f(ce)g(p)o(\023)-18
b(eriph)o(\023)g(erique)q(\).)18 b(Le)e(deuxi)o(\022)-18
b(eme)17 b(fournit)g(en)g(lecture)g(une)f(in\014nit)o(\023)-18
b(e)18 b(de)f(z)o(\023)-18 b(ero)16 b(et)179 303 y(n'accepte)d(pas)h
(l')o(\023)-18 b(ecriture.)179 482 y Fv(5.5)66 b Fm(lseek)179
565 y FA(#include)16 b(<fcntl.h>)179 611 y(off_t)37 b(lseek\(int)16
b(d,)j(off_t)f(offset,)f(int)h(direction\))236 683 y(lseek)c
FB(p)q(ermet)j(de)f(d)o(\023)-18 b(eplacer)17 b(le)g(curseur)g(de)f
(\014c)o(hier)h(dans)g(la)g FC(table)h(des)g(\014c)o(hiers)f(ouv)o
(erts)g FB(du)179 728 y(syst)o(\022)-18 b(eme.)13 b Fx(o\013set)e
FB(un)i(d)o(\023)-18 b(eplacemen)o(t)15 b(en)e(o)q(ctets.)179
774 y Fx(d)26 b FB(le)13 b(descripteur.)179 820 y Fx(dir)n(e)n(ction)24
b FB(une)13 b(des)h(trois)g(macros)f(L)p 733 820 12 2
v 14 w(SET,)f(L)p 869 820 V 14 w(INCR,)g(L)p 1029 820
V 14 w(XTND.)179 929 y FC(L)p 209 929 14 2 v 15 w(SET)20
b FB(la)14 b(nouv)o(elle)h(p)q(osition)g(est)e Fx(o\013set)e
FB(sauf)i(si)h Fx(o\013set)d FB(est)i(sup)o(\023)-18
b(erieur)14 b(\022)-19 b(a)13 b(la)h(taille)h(du)e(\014c)o(hier,)h
(auquel)270 974 y(cas)g(la)g(p)q(osition)i(est)d(\023)-18
b(egale)14 b(\022)-19 b(a)14 b(la)g(taille)i(du)e(\014c)o(hier.)g(Si)h
(l'o\013set)f(est)g(n)o(\023)-18 b(egatif,)14 b(alors)g(la)h(p)q
(osition)h(est)270 1020 y(z)o(\023)-18 b(ero.)179 1083
y FC(L)p 209 1083 V 15 w(INCR)20 b FB(la)10 b(p)q(osition)i(couran)o
(te)f(est)e(incr)o(\023)-18 b(emen)o(t)o(\023)g(ee)11
b(de)f Fx(o\013set)d FB(place)k(\(m)o(^)-18 b(eme)9 b(con)o(train)o(te)
i(sur)f(la)g(p)q(osition)270 1129 y(maxim)o(um)k(et)f(la)h(p)q(osition)
h(minim)o(um\).)179 1192 y FC(L)p 209 1192 V 15 w(XTND)21
b FB(D)o(\023)-18 b(eplacemen)o(t)16 b(par)e(rapp)q(ort)i(\022)-19
b(a)14 b(la)h(\014n)g(du)g(\014c)o(hier,)g(cette)f(option)i(p)q(ermet)f
(d'augmen)o(ter)g(la)270 1237 y(taille)f(du)d(\014c)o(hier)i(\(ne)f
(pas)g(cr)o(\023)-18 b(eer)11 b(de)h(\014c)o(hiers)g(virtuellement)i
(gros)d(a)o(v)o(ec)h(ce)g(m)o(\023)-18 b(ecanisme,)12
b(ils)h(p)q(osen)o(t)270 1283 y(des)g(probl)o(\022)-18
b(emes)15 b(de)e(sauv)o(egarde\).)236 1346 y(La)k(v)n(aleur)h(de)e
(retour)h(de)g(lseek)g(est)g(la)g(nouv)o(elle)i(p)q(osition)g(du)e
(curseur)g(dans)g(le)g(\014c)o(hier)h(ou)f(-1)f(si)179
1392 y(l'app)q(el)f(a)d(\023)-18 b(ec)o(hou)o(\023)g(e.)179
1570 y Fv(5.6)66 b Fm(dup)22 b Fv(et)g Fm(dup2)236 1654
y FB(Les)15 b(app)q(els)h(dup)f(et)f(dup2)h(p)q(ermetten)o(t)g(de)f
(dupliquer)j(des)e(en)o(tr)o(\023)-18 b(ees)14 b(de)h(la)g(table)g(des)
g(descripteurs)179 1699 y(du)e(pro)q(cessus.)179 1809
y FA(int)38 b(descripte)o(ur2)16 b(=)j(dup\(int)e(descripte)o(ur1)o
(\);)219 1898 y FB(1.)k(v)o(\023)-18 b(eri\014cation)16
b(que)d(descripteur)i(est)e(le)g(n)o(um)o(\023)-18 b(ero)14
b(d'une)g(en)o(tr)o(\023)-18 b(ee)13 b(non)h(n)o(ulle.)219
1961 y(2.)21 b(recopie)16 b(dans)e(la)h FC(premi)o(\022)-21
b(ere)16 b(en)o(tr)o(\023)-21 b(ee)15 b FB(libre)h(du)e(tableau)i(des)f
(descripteurs)h(l'en)o(tr)o(\023)-18 b(ee)14 b(corresp)q(on-)270
2007 y(dan)o(t)g(\022)-19 b(a)13 b(descripteur1.)219
2070 y(3.)21 b(le)14 b(compteur)g(de)g(descripteurs)i(de)d(l'en)o(tr)o
(\023)-18 b(ee)14 b(asso)q(ci)o(\023)-18 b(ee)15 b(\022)-19
b(a)14 b(descripteur1)h(dans)g(la)f(table)g(des)g(ouv)o(er-)270
2115 y(tures)f(de)h(\014c)o(hiers)g(est)f(incr)o(\023)-18
b(emen)o(t)o(\023)g(e.)219 2178 y(4.)21 b(ren)o(v)o(oi)14
b(de)g(l'indice)h(dans)f(la)f(table)h(des)g(descripteurs)h(de)e(l'en)o
(tr)o(\023)-18 b(ee)13 b(nouv)o(ellemen)o(t)j(allou)o(\023)-18
b(ee.)236 2250 y(Redirection)16 b(temp)q(oraire)e(de)f(la)h(sortie)g
(standard)g(dans)g(un)f(\014c)o(hier)8 b(:)179 2314 y
FA(tempout)17 b(=)i(open\("sor)o(tie)o(_te)o(mp)o(ora)o(ir)o(e",)o(1\))
o(;)179 2360 y(oldout)e(=)i(dup\(1\);)179 2405 y(close\(1\);)179
2451 y(newout)e(=)i(dup\(tempou)o(t\);)d(/*)j(renvoie)e(1)38
b(*/)179 2497 y(write\(1,")o(xxx)o(x")o(,4\))o(;)16 b(/*)j(ecriture)e
(dans)h(le)h(fichier)e(temporair)o(e)f(*/)179 2542 y(close\(tem)o(pou)o
(t\))o(;)179 2588 y(close\(1\);)179 2634 y(newout)h(=)i(dup\(oldout)o
(\);)179 2679 y(close\(old)o(out)o(\);)236 2743 y FB(Il)14
b(est)f(aussi)h(p)q(ossible)h(de)f(c)o(hoisir)g(le)g(descripteur)h
(cible)f(a)o(v)o(ec)179 2806 y FA(int)k(ok)h(=)g(dup2\(int)e(source,)g
(int)h(destinatio)o(n\);)p eop
%%Page: 36 44
36 43 bop 75 50 a FD(36)205 b Fz(CHAPITRE)14 b(5.)27
b(APPELS)15 b(SYST)911 39 y(\022)906 50 y(EME)f(DU)g(SYST)1203
39 y(\022)1198 50 y(EME)h(DE)f(GESTION)g(DE)g(FICHIER)484
1019 y
 currentpoint currentpoint translate 0.66635 0.66635 scale neg exch
neg exch translate
 484 1019 a 14 w @beginspecial 0 @llx 0 @lly 337
@urx 322 @ury 3370 @rwi @setspecial
%%BeginDocument: eps/dupclose.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 336.1586 321.102478 rectclip
-85.841408 -209 translate
85.841408 209 336.1586 321.102478 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 0 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 47.000004 484.000061 108 -26 0.298611 0 0 0.553847 107.918427 209.47229 sc6mt astore rstroke
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 47.000004 458.000061 108 -26 0.298611 0 0 0.553847 107.918427 209.47229 sc6mt astore rstroke
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 47.000004 432.000061 108 -26 0.298611 0 0 0.553847 107.918427 209.47229 sc6mt astore rstroke
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 47.000004 406.000061 108 -26 0.298611 0 0 0.553847 107.918427 209.47229 sc6mt astore rstroke
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 47.000004 380.000061 108 -26 0.298611 0 0 0.553847 107.918427 209.47229 sc6mt astore rstroke
/crlinw 1.9 def
/usedash true def
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 0.453156 -133.716003 180 504 1 0 0 1 0 0 sc6mt astore ssl
/crlinw 1 def
/usedash false def
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 47.000004 484.000061 108 -26 0.868056 0 0 0.75 154.654556 128.033997 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
<0920322020727720> [0 0 5.003998 0 10.007996 0 5.003998 0 5.003998 0 5.994003 0 12.996002 0 0 0] 49.499985 466.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 160.203156 128.033997] dotx
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 47.000004 458.000061 108 -26 0.868056 0 0 0.75 154.654556 128.033997 sc6mt astore rstroke
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 47.000004 432.000061 108 -26 0.868056 0 0 0.75 154.654556 128.033997 sc6mt astore rstroke
( 1 ) [5.003998 0 10.007996 0 0 0] 49.499985 414.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 160.203156 128.033997] dotx
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 47.000004 406.000061 108 -26 0.868056 0 0 0.75 154.654556 128.033997 sc6mt astore rstroke
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 47.000004 380.000061 108 -26 0.868056 0 0 0.75 154.654556 128.033997 sc6mt astore rstroke
(  ) [5.003998 0 0 0] 49.499985 362.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 160.203156 128.033997] dotx
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 47.000004 484.000061 108 -26 0.75 0 0 0.75 305.703156 123.533974 sc6mt astore rstroke
( 1 ) [5.003998 0 10.007996 0 0 0] 49.5 466.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 305.703156 123.533974] dotx
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 47.000004 458.000061 108 -26 0.75 0 0 0.75 305.703156 123.533974 sc6mt astore rstroke
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 47.000004 432.000061 108 -26 0.75 0 0 0.75 305.703156 123.533974 sc6mt astore rstroke
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 47.000004 406.000061 108 -26 0.75 0 0 0.75 305.703156 123.533974 sc6mt astore rstroke
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 47.000004 380.000061 108 -26 0.75 0 0 0.75 305.703156 123.533974 sc6mt astore rstroke
/crlinw 1.9 def
/crendarw true def
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 62.093567 -35.358826 257 429 0.75 0 0 0.75 -52.796844 151.283997 sc6mt astore ssl
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 57.658203 -5.849396 421 383 0.75 0 0 0.75 -37.796844 156.533997 sc6mt astore ssl
(descripteurs ) [10.007999 0 10.007999 0 9 0 9 0 6.264 0 3.996 0 10.007999 0 5.003998 0 10.007999 0 10.007999 0 5.994003 0 9 0 0 0] -24.148996 258.999939 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 104.703156 294.533997] dotx
/crlinw 1 def
/crendarw false def
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 47.000004 484.000061 108 -26 0.868056 0 0 0.75 154.654556 30.533997 sc6mt astore rstroke
( 1 ) [5.003998 0 10.007996 0 0 0] 49.499985 466.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 160.203156 30.533997] dotx
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 47.000004 484.000061 108 -26 0.298611 0 0 0.553847 107.918427 136.72229 sc6mt astore rstroke
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 47.000004 458.000061 108 -26 0.298611 0 0 0.553847 107.918427 136.72229 sc6mt astore rstroke
/crlinw 0 def
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 0 -155 354 454 0.75 0 0 0.75 -52.796844 151.283997 sc6mt astore ssl
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 0 -155 382 454 0.75 0 0 0.75 -52.796844 151.283997 sc6mt astore ssl
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 0 -155 429 454 0.75 0 0 0.75 -52.796844 151.283997 sc6mt astore ssl
(rd ) [5.994003 0 10.007996 0 0 0] 125 244 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 123.453156 255.533997] dotx
( ) [0 0] 125 244 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 121.953156 217.283997] dotx
(0 ) [10.007996 0 0 0] 169 287 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 -16.796844 251.783997] dotx
(1 ) [10.007996 0 0 0] 90 406 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 40.953156 146.033997] dotx
/crlinw 1.9 def
/crendarw true def
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 56.957825 30.604187 236 401 0.75 0 0 0.75 -37.796844 156.533997 sc6mt astore ssl
/crlinw 0 def
/crendarw false def
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 1 -129 549 447 0.75 0 0 0.75 -52.796844 151.283997 sc6mt astore ssl
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 1 -129 568 447 0.75 0 0 0.75 -52.796844 151.283997 sc6mt astore ssl
(2   ) [10.007996 0 5.004028 0 5.004028 0 0 0] 590 402 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 -95.546844 132.533997] dotx
(wr ) [12.996002 0 5.994003 0 0 0] 125 244 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 122.703156 197.033997] dotx
/crlinw 1.9 def
/crendarw true def
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 70.467621 -62.439667 233 376 0.75 0 0 0.75 -37.796844 156.533997 sc6mt astore ssl
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 69.921539 53.10498 420 302 0.75 0 0 0.75 -37.796844 156.533997 sc6mt astore ssl
(2 ) [10.007996 0 0 0] 90 406 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 41.703156 131.033997] dotx
(fd ) [5.003998 0 10.007996 0 0 0] 90 406 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 39.453156 114.533997] dotx
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 66.554504 60.342743 234 360 0.75 0 0 0.75 -37.796844 156.533997 sc6mt astore ssl
0.75 0 0 0.75 102.203156 92.533997 sc4mt astore 0.75 0 0 0.75 102.203156 92.533997 sc5mt astore 69.669739 -7.741089 424 437 0.75 0 0 0.75 -37.796844 156.533997 sc6mt astore ssl
(dup2\(fd,1\); ) [10.007996 0 10.007996 0 10.007996 0 10.007996 0 5.994003 0 5.003998 0 10.007996 0 5.003998 0 10.007996 0 5.994003 0 5.003998 0 0 0] 154 187 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 -0.046843 375.783997] dotx
/crlinw 1 def
/crendarw false def
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 47.000004 484.000061 108 -26 0.298611 0 0 0.553847 103.611328 44.96331 sc6mt astore rstroke
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 47.000004 458.000061 108 -26 0.298611 0 0 0.553847 103.611328 44.96331 sc6mt astore rstroke
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 47.000004 432.000061 108 -26 0.298611 0 0 0.553847 103.611328 44.96331 sc6mt astore rstroke
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 47.000004 406.000061 108 -26 0.298611 0 0 0.553847 103.611328 44.96331 sc6mt astore rstroke
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 47.000004 380.000061 108 -26 0.298611 0 0 0.553847 103.611328 44.96331 sc6mt astore rstroke
/crlinw 1.9 def
/usedash true def
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 0.146057 -120.224976 176 333 1 0 0 1 0 0 sc6mt astore ssl
/crlinw 1 def
/usedash false def
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 47.000004 484.000061 108 -26 0.868056 0 0 0.75 150.347458 -36.474976 sc6mt astore rstroke
<0920312020727720> [0 0 5.003998 0 10.007996 0 5.003998 0 5.003998 0 5.994003 0 12.996002 0 0 0] 49.499985 466.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 155.896057 -36.474976] dotx
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 47.000004 458.000061 108 -26 0.868056 0 0 0.75 150.347458 -36.474976 sc6mt astore rstroke
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 47.000004 432.000061 108 -26 0.868056 0 0 0.75 150.347458 -36.474976 sc6mt astore rstroke
( 1 ) [5.003998 0 10.007996 0 0 0] 49.499985 414.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 155.896057 -36.474976] dotx
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 47.000004 406.000061 108 -26 0.868056 0 0 0.75 150.347458 -36.474976 sc6mt astore rstroke
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 47.000004 380.000061 108 -26 0.868056 0 0 0.75 150.347458 -36.474976 sc6mt astore rstroke
(  ) [5.003998 0 0 0] 49.499985 362.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 155.896057 -36.474976] dotx
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 47.000004 484.000061 108 -26 0.75 0 0 0.75 301.396057 -40.974998 sc6mt astore rstroke
( 1 ) [5.003998 0 10.007996 0 0 0] 49.5 466.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 301.396057 -40.974998] dotx
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 47.000004 458.000061 108 -26 0.75 0 0 0.75 301.396057 -40.974998 sc6mt astore rstroke
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 47.000004 432.000061 108 -26 0.75 0 0 0.75 301.396057 -40.974998 sc6mt astore rstroke
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 47.000004 406.000061 108 -26 0.75 0 0 0.75 301.396057 -40.974998 sc6mt astore rstroke
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 47.000004 380.000061 108 -26 0.75 0 0 0.75 301.396057 -40.974998 sc6mt astore rstroke
/crlinw 1.9 def
/crendarw true def
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 62.093567 -35.358826 257 429 0.75 0 0 0.75 -57.103943 -13.224976 sc6mt astore ssl
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 57.658203 -5.849396 421 383 0.75 0 0 0.75 -42.103943 -7.974976 sc6mt astore ssl
/crlinw 1 def
/crendarw false def
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 47.000004 484.000061 108 -26 0.868056 0 0 0.75 150.347458 -133.974976 sc6mt astore rstroke
( 1 ) [5.003998 0 10.007996 0 0 0] 49.499985 466.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 155.896057 -133.974976] dotx
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 47.000004 484.000061 108 -26 0.298611 0 0 0.553847 103.611328 -27.78669 sc6mt astore rstroke
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 47.000004 458.000061 108 -26 0.298611 0 0 0.553847 103.611328 -27.78669 sc6mt astore rstroke
/crlinw 0 def
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 0 -155 354 454 0.75 0 0 0.75 -57.103943 -13.224976 sc6mt astore ssl
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 0 -155 382 454 0.75 0 0 0.75 -57.103943 -13.224976 sc6mt astore ssl
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 0 -155 429 454 0.75 0 0 0.75 -57.103943 -13.224976 sc6mt astore ssl
(rd ) [5.994003 0 10.007996 0 0 0] 125 244 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 119.146057 91.025024] dotx
( ) [0 0] 125 244 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 117.646057 52.775024] dotx
(0 ) [10.007996 0 0 0] 169 287 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 -21.103943 87.275024] dotx
(1 ) [10.007996 0 0 0] 90 406 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 36.646057 -18.474976] dotx
/crlinw 1.9 def
/crendarw true def
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 56.957825 30.604187 236 401 0.75 0 0 0.75 -42.103943 -7.974976 sc6mt astore ssl
/crlinw 0 def
/crendarw false def
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 1 -129 549 447 0.75 0 0 0.75 -57.103943 -13.224976 sc6mt astore ssl
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 1 -129 568 447 0.75 0 0 0.75 -57.103943 -13.224976 sc6mt astore ssl
(2   ) [10.007996 0 5.004028 0 5.004028 0 0 0] 590 402 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 -99.853943 -31.974976] dotx
(wr ) [12.996002 0 5.994003 0 0 0] 125 244 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 118.396057 32.525024] dotx
/crlinw 1.9 def
/crendarw true def
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 70.467621 -62.439667 233 376 0.75 0 0 0.75 -42.103943 -7.974976 sc6mt astore ssl
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 69.921539 53.10498 420 302 0.75 0 0 0.75 -42.103943 -7.974976 sc6mt astore ssl
(2 ) [10.007996 0 0 0] 90 406 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 37.396057 -33.474976] dotx
0.75 0 0 0.75 100.396057 91.775024 sc4mt astore 0.75 0 0 0.75 100.396057 91.775024 sc5mt astore 69.669739 -7.741089 424 437 0.75 0 0 0.75 -42.103943 -7.974976 sc6mt astore ssl
(close\(fd\); ) [9 0 3.996002 0 10.007996 0 9 0 10.007996 0 5.994003 0 5.003998 0 10.007996 0 5.994003 0 5.003998 0 0 0] 154 187 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 -8.603941 203.525024] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 1019 a
 currentpoint currentpoint translate 1 0.66635 div 1 0.66635 div scale
neg exch neg exch translate
 484 1019 a 457 1110 a Fq(Fig.)f
FD(5.3)g({)h Fp(R)n(e)n(dir)n(e)n(ction)g(de)h(la)g(sortie)f(standar)n
(d)h(sur)g("toto".)236 1235 y FB(Recopie)g(du)f(descripteur)h
FA(source)10 b FB(dans)k(l'en)o(tr)o(\023)-18 b(ee)14
b FA(destinatio)o(n)c FB(de)j(la)h(table)g(des)g(descripteurs.)h(Si)179
1280 y FA(destinati)o(on)8 b FB(d)o(\023)-18 b(esigne)13
b(le)g(descripteur)g(d'un)f(\014c)o(hier)h(ouv)o(ert,)f(celui-ci)i(est)
d(pr)o(\023)-18 b(ealablemen)o(t)15 b(ferm)o(\023)-18
b(e)11 b(a)o(v)n(an)o(t)179 1326 y(duplication.)20 b(Si)f
FA(destinati)o(on)14 b FB(n'est)j(pas)h(un)g(n)o(um)o(\023)-18
b(ero)19 b(de)e(descripteur)j(v)n(alide,)f(il)f(y)g(a)f(une)i(erreur,)
179 1372 y(retour)13 b(-1.)179 1503 y Fv(5.7)66 b Fm(close)236
1585 y FB(F)m(ermeture)14 b(d'un)f(\014c)o(hier.)179
1648 y FA(int)18 b(ok)h(=)g(close\(desc)o(rip)o(teu)o(r\))o(;)219
1735 y FB(1.)i(si)14 b Fx(descripteur)23 b FB(n'est)13
b(pas)h(un)f(descripteur)i(v)n(alide)g(retour)e(-1)219
1797 y(2.)21 b(l'en)o(tr)o(\023)-18 b(ee)14 b(d'indice)h
FA(descripte)o(ur)9 b FB(de)k(la)h(table)g(est)f(lib)o(\023)-18
b(er)o(\023)g(ee.)219 1859 y(3.)21 b(Le)13 b(compteur)h(de)f(l'en)o(tr)
o(\023)-18 b(ee)13 b(de)g(la)h(table)g(des)f(\014c)o(hiers)h(ouv)o(ert)
g(asso)q(ci)o(\023)-18 b(e)14 b(\022)-19 b(a)13 b FA(descripteu)o(r)c
FB(est)k(d)o(\023)-18 b(ecr)o(\023)g(e-)270 1905 y(men)o(t)o(\023)g(e.)
270 1996 y Fx(Si)13 b(il)g(p)n(asse)f(\022)-20 b(a)14
b(Z)o(\023)-19 b(er)n(o)12 b(alors)219 2059 y FB(4.)21
b(l'en)o(tr)o(\023)-18 b(ee)14 b(de)f(la)g(table)h(des)f(\014c)o(hiers)
i(ouv)o(erts)e(est)g(lib)o(\023)-18 b(er)o(\023)g(ee)15
b(et)d(le)i(compteur)f(des)h(ouv)o(ertures)g(de)f(l'in-)270
2104 y(o)q(de)h(en)f(m)o(\023)-18 b(emoire)14 b(est)f(d)o(\023)-18
b(ecr)o(\023)g(emen)o(t)o(\023)g(e.)270 2196 y Fx(Si)13
b(il)g(p)n(asse)f(\022)-20 b(a)14 b(Z)o(\023)-19 b(er)n(o)12
b(alors)219 2258 y FB(5.)21 b(l'en)o(tr)o(\023)-18 b(ee)14
b(dans)f(la)h(table)g(des)g(ino)q(des)g(en)f(m)o(\023)-18
b(emoire)14 b(est)f(lib)o(\023)-18 b(er)o(\023)g(ee.)270
2349 y Fx(Si)13 b(de)g(plus)g(le)g(c)n(ompteur)f(de)h(liens)f(de)h
(l'ino)n(de)e(est)i(\022)-20 b(a)14 b(0)f(alors)219 2411
y FB(6.)21 b(le)14 b(\014c)o(hier)g(est)f(lib)o(\023)-18
b(er)o(\023)g(e)8 b(:)13 b(r)o(\023)-18 b(ecup)o(\023)g(eration)15
b(de)e(l'ino)q(de)i(et)d(des)i(blo)q(cs.)236 2482 y(Dans)g(le)g(cas)f
(d'une)h(ouv)o(erture)g(en)e(\023)-18 b(ecriture)21 b(:)12
b(le)i(dernier)g(blo)q(c)g(du)g(bu\013er)g(cac)o(he)f(dans)h(lequel)h
(on)f(a)178 2528 y(\023)-18 b(ecrit)13 b(est)g(marqu)o(\023)-18
b(e)14 b(\\a)e(\023)-18 b(ecrire".)p eop
%%Page: 37 45
37 44 bop 1796 50 a FD(37)179 484 y Fw(Chapitre)32 b(6)179
699 y Fy(Les)38 b(pro)s(cessus)179 946 y Fv(6.1)66 b(In)n(tro)r
(duction)24 b(aux)f(pro)r(cessus)236 1041 y FB(Un)c(pro)q(cessus)h(est)
e(un)h(ensem)o(ble)h(d'o)q(ctets)f(\(en)g(langage)h(mac)o(hine\))g(en)e
(cours)h(d'ex)o(\023)-18 b(ecution,)20 b(en)179 1086
y(d'autres)13 b(termes,)g(c'est)g(l'ex)o(\023)-18 b(ecution)15
b(d'un)e(programme.)179 1132 y(Un)g(pro)q(cessus)h(UNIX)e(se)h(d)o
(\023)-18 b(ecomp)q(ose)14 b(en)7 b(:)219 1214 y(1.)21
b(un)14 b(espace)f(d'adressage)h(\(visible)i(par)d(l'utilisateu)q
(r/prog)q(rammeur\))219 1290 y(2.)21 b(Le)13 b(blo)q(c)h(de)f(con)o
(tr^)-19 b(ole)15 b(du)e(pro)q(cessus)h(\(BCP\))f(lui-m)o(^)-18
b(eme)14 b(d)o(\023)-18 b(ecomp)q(os)o(\023)g(e)15 b(en)7
b(:)308 1366 y({)21 b(une)13 b(en)o(tr)o(\023)-18 b(ee)14
b(dans)f(la)h(table)g(des)f(pro)q(cessus)i(du)e(no)o(y)o(au)h
FA(struct)j(proc)348 1412 y FB(d)o(\023)-18 b(e\014nie)14
b(dans)g FA(<sys/proc.)o(h>)p FB(.)308 1472 y({)21 b(une)13
b(structure)h FA(struct)j(user)11 b FB(app)q(el)o(\023)-18
b(ee)15 b FA(zone)j(u)13 b FB(d)o(\023)-18 b(e\014nie)14
b(dans)g FA(<sys/user.)o(h>)236 1570 y FB(Les)f(pro)q(cessus)i(sous)e
(Unix)h(app)q(orten)o(t)8 b(:)230 1698 y({)21 b(La)13
b(m)o(ultiplici)q(t)o(\023)-18 b(e)16 b(des)d(ex)o(\023)-18
b(ecutions)270 1743 y(Plusieurs)15 b(pro)q(cessus)g(p)q(euv)o(en)o(t)e
(^)-18 b(etre)13 b(l'ex)o(\023)-18 b(ecution)15 b(d'un)e(m)o(^)-18
b(eme)13 b(programme.)230 1865 y({)21 b(La)13 b(protection)i(des)e(ex)o
(\023)-18 b(ecutions)270 1910 y(Un)14 b(pro)q(cessus)h(ne)f(p)q(eut)h
(ex)o(\023)-18 b(ecuter)15 b(que)f(ses)g(instructions)j(propres)e(et)e
(ce)h(de)h(fa\030)-17 b(con)14 b(s)o(\023)-18 b(equen)o(tielle;)270
1956 y(il)14 b(ne)f(p)q(eut)h(pas)f(ex)o(\023)-18 b(ecuter)14
b(des)f(instructions)j(appartenan)o(t)f(\022)-19 b(a)13
b(un)g(autre)g(pro)q(cessus.)270 2002 y(Les)g(pro)q(cessus)h(sous)g
(UNIX)d(comm)o(uniquen)o(t)k(en)o(tre)f(eux)f(et)f(a)o(v)o(ec)i(le)f
(reste)g(du)g(monde)h(gr^)-19 b(ace)13 b(aux)270 2047
y(app)q(els)i(syst)o(\022)-18 b(eme.)543 2707 y
 currentpoint currentpoint translate 0.61563 0.61563 scale neg exch
neg exch translate
 543 2707
a 14 w @beginspecial 0 @llx 0 @lly 319 @urx 205 @ury
3190 @rwi @setspecial
%%BeginDocument: eps/tabledesprocessus.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 318.640015 205 rectclip
-151 -446 translate
151 446 318.640015 205 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 0 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 188 650 137 -66 1 0 0 1 0 0 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 188 584 137 -137 1 0 0 1 0 0 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 87 489 9 -10 1.383838 0 0 1 67.606056 105 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 96 489 9 -10 1.383838 0 0 1 67.606056 105 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 105 489 9 -10 1.383838 0 0 1 67.606056 105 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 114 489 9 -10 1.383838 0 0 1 67.606056 105 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 123 489 9 -10 1.383838 0 0 1 67.606056 105 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 132 489 9 -10 1.383838 0 0 1 67.606056 105 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 141 489 9 -10 1.383838 0 0 1 67.606056 105 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 150 489 9 -10 1.383838 0 0 1 67.606056 105 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 159 489 9 -10 1.383838 0 0 1 67.606056 105 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 168 489 9 -10 1.383838 0 0 1 67.606056 105 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 177 489 9 -10 1.383838 0 0 1 67.606056 105 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(table des processus ) [4.447998 0 7.104004 0 8 0 4.447998 0 7.104004 0 4 0 8 0 7.104004 0 6.223999 0 4 0 8 0 5.328003 0 8 0 7.104004 0 7.104004 0 6.223999 0 6.223999 0 8 0 6.223999 0 0 0] 344 591 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 1 -4] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 188 544 137 -23 1 0 0 1 0 0 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 188 489 137 -21 1 0 0 1 0 0 sc6mt astore rstroke
/crendarw true def
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 181.997025 537.000366 182 537 arow
false 1 0 0 1 1 -2 sc5mt astore sstrt
systemdict
begin
128 528 257 592 setbbox
255 590 moveto
255 590 179 576 175 558 curveto
171 540 181 539 181 539 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 179.755844 489.190155 180 489 arow
false 1 0 0 1 -26 2 sc5mt astore sstrt
systemdict
begin
128 481 220 590 setbbox
219 588 moveto
219 590 178 569 177 551 curveto
176 533 198 493 206 487 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
(P1 ) [8.896004 0 7.999992 0 0 0] 114 627 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 78 -27] dotx
(P5 ) [8.896004 0 8 0 0 0] 67 620 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 182 -18] dotx
(P1 ) [8.896004 0 7.999992 0 0 0] 114 627 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 81 -99] dotx
(P5 ) [8.896004 0 8 0 0 0] 67 620 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 132 -147] dotx
/crendarw false def
false 0.400001 0 0 0.242537 245.999893 545.891785 sc5mt astore sstrt
systemdict
begin
192 283 272 430 setbbox
215 421 moveto
233 416 229 397 229 397 curveto
229 326 230 295 230 295 curveto
230 295 239 287 238 287 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
false 0.400001 -2.120328e-08 -3.496915e-08 -0.242537 246.399902 685.078369 sc5mt astore sstrt
systemdict
begin
192 283 272 430 setbbox
215 421 moveto
233 416 229 397 229 397 curveto
229 326 230 295 230 295 curveto
230 295 239 287 238 287 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 -8.742278e-08 -8.742278e-08 -1 3.051758e-05 673.877197 sc6mt astore splstroke
false 0.400001 0 0 0.507463 246.999893 368.358215 sc5mt astore sstrt
systemdict
begin
192 283 272 430 setbbox
215 421 moveto
233 416 229 397 229 397 curveto
229 326 230 295 230 295 curveto
230 295 239 287 238 287 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
false 0.400001 -4.436379e-08 -3.496915e-08 -0.507463 247.399902 659.579468 sc5mt astore sstrt
systemdict
begin
192 283 272 430 setbbox
215 421 moveto
233 416 229 397 229 397 curveto
229 326 230 295 230 295 curveto
230 295 239 287 238 287 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 -8.742278e-08 -8.742278e-08 -1 3.051758e-05 673.877197 sc6mt astore splstroke
/txtdraw true def
/txlndraw true def
(le noyau ) [3.108002 0 7.783997 0 3.891998 0 7.783997 0 7.364014 0 6.720001 0 7.783997 0 7.783997 0 0 0] 383 619 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 -4 -5] dotx
(les processus ) [3.108002 0 7.783997 0 7 0 3.891998 0 7.783997 0 4.661987 0 7.783997 0 7 0 7.783997 0 7 0 7 0 7.783997 0 7 0 0 0] 425 517 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 -54 -5] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 543 2707 a
 currentpoint currentpoint translate 1 0.61563 div 1 0.61563 div scale
neg exch neg exch translate
 543 2707 a 458 2798 a Fq(Fig.)13
b FD(6.1)g({)h Fp(L)n(a)h(table)f(des)i(pr)n(o)n(c)n(essus)e(est)h
(interne)g(au)g(noyau.)p eop
%%Page: 38 46
38 45 bop 75 50 a FD(38)1083 b Fz(CHAPITRE)14 b(6.)27
b(LES)14 b(PR)o(OCESSUS)179 166 y Fu(6.1.1)55 b(Cr)o(\023)-27
b(eation)18 b(d'un)h(pro)r(cessus)f(-)h Fj(fork\(\))236
240 y FB(Sous)14 b(UNIX)e(la)i(cr)o(\023)-18 b(eation)14
b(de)f(pro)q(cessus)i(est)e(r)o(\023)-18 b(ealis)o(\023)g(ee)14
b(par)g(l'app)q(el)h(syst)o(\022)-18 b(eme)7 b(:)395
311 y FA(int)18 b(fork\(void\))o(;)236 380 y FB(T)m(ous)13
b(les)h(pro)q(cessus)g(sauf)g(le)f(pro)q(cessus)h(d'iden)o(ti\014cati)q
(on)i(0,)d(son)o(t)g(cr)o(\023)-18 b(e)o(\023)g(es)13
b(par)g(un)h(app)q(el)g(\022)-19 b(a)13 b Fx(fork)p FB(.)179
425 y(Le)g(pro)q(cessus)h(qui)g(app)q(elle)h(le)f(fork)f(est)g(app)q
(el)o(\023)-18 b(e)14 b(pro)q(cessus)h Fx(p)o(\022)-19
b(er)n(e)p FB(.)179 471 y(Le)13 b(nouv)o(eau)h(pro)q(cessus)g(est)f
(app)q(el)o(\023)-18 b(e)15 b(pro)q(cessus)f Fx(\014ls)p
FB(.)236 565 y(T)m(out)f(pro)q(cessus)h(a)f(un)h(seul)g(pro)q(cessus)g
(p)o(\022)-18 b(ere.)179 610 y(T)m(out)13 b(pro)q(cessus)h(p)q(eut)f(a)
o(v)o(oir)h(z)o(\023)-18 b(ero)14 b(ou)f(plusieurs)i(pro)q(cessus)g
(\014ls.)236 704 y(Chaque)f(pro)q(cessus)g(est)f(iden)o(ti\014)o(\023)
-18 b(e)16 b(par)d(un)g(n)o(um)o(\023)-18 b(ero)14 b(unique,)h(son)e
FC(PID)p FB(.)236 797 y(Le)e(pro)q(cessus)h(de)e(PID=0)h(est)f(cr)o
(\023)-18 b(e)o(\023)g(e)11 b("man)o(uellemen)o(t")i(au)e(d)o(\023)-18
b(emarrage)11 b(de)g(la)g(mac)o(hine,)h(ce)e(pro)q(cessus)179
843 y(a)f(toujours)i(un)f(r^)-19 b(ole)10 b(sp)o(\023)-18
b(ecial)592 827 y Fs(1)621 843 y FB(p)q(our)10 b(le)g(syst)o(\022)-18
b(eme,)10 b(de)g(plus)h(p)q(our)f(le)g(b)q(on)g(fonctionemen)o(t)i(des)
e(programmes)179 889 y(utilisan)o(t)16 b FA(fork\(\))10
b FB(il)15 b(faut)e(que)g(le)h(PID)f(z)o(\023)-18 b(ero)14
b(reste)f(toujours)h(utilis)o(\023)-18 b(e.)15 b(Le)e(pro)q(cessus)i(z)
o(\023)-18 b(ero)13 b(cr)o(\023)-18 b(ee,)13 b(gr^)-19
b(ace)14 b(\022)-19 b(a)179 934 y(un)13 b(app)q(el)i(de)e(fork,)g(le)g
(pro)q(cessus)h(init)h(de)e(PID=1.)236 1028 y(Le)f(pro)q(cessus)h(de)f
(PID=1)f(de)h(nom)g Fx(init)e FB(est)i(l'anc)o(^)-18
b(etre)12 b(de)g(tous)g(les)g(autres)g(pro)q(cessus)h(\(le)f(pro)q
(cessus)179 1073 y(0)g(ne)g(r)o(\023)-18 b(ealisan)o(t)13
b(plus)g(de)g FA(fork\(\))p FB(\),)8 b(c'est)k(lui)h(qui)g(accueille)i
(tous)d(les)g(pro)q(cessus)h(orphelins)i(de)d(p)o(\022)-18
b(ere)12 b(\(ceci)179 1119 y(a)h(\014n)g(de)g(collecter)i(les)f
(information)h(\022)-19 b(a)13 b(la)g(mort)g(de)h(c)o(haque)g(pro)q
(cessus\).)179 1306 y Fv(6.2)66 b(F)-6 b(ormat)23 b(d'un)g(\014c)n
(hier)h(ex)o(\023)-32 b(ecutable)236 1393 y FB(Les)18
b(compilateurs)j(nous)e(p)q(ermetten)o(t)f(de)h(cr)o(\023)-18
b(eer)18 b(des)g(\014c)o(hiers)i(ex)o(\023)-18 b(ecutables.)19
b(Ces)f(\014c)o(hiers)i(on)o(t)e(le)179 1439 y(format)13
b(suiv)n(an)o(t)h(qui)g(p)q(ermet)f(au)h(no)o(y)o(au)g(de)f(les)h
(transformer)f(en)g(pro)q(cessus)8 b(:)230 1507 y({)21
b(Une)13 b(en-t)o(^)-18 b(ete)13 b(qui)h(d)o(\023)-18
b(ecrit)14 b(l'ensem)o(ble)h(du)e(\014c)o(hier,)h(ses)f(attributs)i(et)
d(sa)i(carte)f(des)g(sections.)230 1574 y({)21 b(La)13
b(taille)i(\022)-19 b(a)13 b(allouer)i(p)q(our)f(les)f(v)n(ariables)j
(non)d(initial)q(is)o(\023)-18 b(ees)q(.)230 1641 y({)21
b(Une)13 b(section)h(TEXT)f(qui)h(con)o(tien)o(t)g(le)f(co)q(de)h(\(en)
f(langage)i(mac)o(hine\))230 1707 y({)21 b(Une)13 b(section)h(donn)o
(\023)-18 b(ees)15 b(\(D)o(A)m(T)m(A\))d(co)q(d)o(\023)-18
b(ee)13 b(en)h(langage)g(mac)o(hine)h(qui)f(con)o(tien)o(t)g(les)g
(donn)o(\023)-18 b(ees)14 b(initia-)270 1753 y(lis)o(\023)-18
b(ees.)230 1819 y({)21 b(Ev)o(en)o(tuellemen)o(t)12 b(d'autres)f
(sections)d(:)h(T)m(able)h(des)g(sym)o(b)q(oles)i(p)q(our)e(le)h(d)o
(\023)-18 b(ebugeur,)11 b(Images,)e(ICONS,)270 1865 y(T)m(able)14
b(des)f(c)o(ha)l(^)-15 b(\020nes,)14 b(etc.)236 1934
y(P)o(our)g(plus)g(d'informations)h(se)e(rep)q(orter)h(au)f(man)o(uel)i
(a.out.h)e(sur)g(la)h(mac)o(hine.)179 2076 y Fv(6.3)66
b(Chargemen)n(t/c)n(hangemen)n(t)22 b(d'un)h(ex)o(\023)-32
b(ecutable)236 2162 y FB(L'app)q(el)14 b(syst)o(\022)-18
b(eme)12 b FA(execve)e FB(c)o(hange)j(l'ex)o(\023)-18
b(ecutable)14 b(du)f(pro)q(cessus)h(couran)o(t)f(en)f(c)o(hargean)o(t)h
(un)g(nouv)o(el)179 2208 y(ex)o(\023)-18 b(ecutable.)14
b(Les)f(r)o(\023)-18 b(egions)15 b(asso)q(ci)o(\023)-18
b(ee)14 b(au)g(pro)q(cessus)g(son)o(t)f(pr)o(\023)-18
b(ealablemen)o(t)16 b(lib)o(\023)-18 b(er)o(\023)g(ees)8
b(:)179 2279 y FA(int)18 b(execve\(/*)e(plusieurs)h(formats)f(*/\);)236
2347 y FB(P)o(our)e(c)o(haque)g(section)g(de)f(l'ex)o(\023)-18
b(ecutable)15 b(une)f(r)o(\023)-18 b(egion)14 b(en)f(m)o(\023)-18
b(emoire)14 b(est)f(allou)o(\023)-18 b(ee.)179 2393 y(Soit)14
b(au)f(moins)h(les)g(r)o(\023)-18 b(egions)8 b(:)230
2462 y({)21 b(le)26 b FC(co)q(de)230 2529 y FB({)21 b(les)14
b FC(donn)o(\023)-21 b(ees)12 b FB(initial)q(is)o(\023)-18
b(ees)179 2597 y(Mais)14 b(aussi)g(les)g(r)o(\023)-18
b(egions)8 b(:)230 2666 y({)21 b(des)13 b FC(piles)230
2733 y FB({)21 b(du)14 b FC(tas)p 75 2768 705 2 v 120
2806 a Fo(1.)8 b(sw)o(app)q(eur,gestion)o(na)o(ire)g(de)k(pages)p
eop
%%Page: 39 47
39 46 bop 75 50 a Fz(6.4.)26 b(ZONE)15 b(U)f(ET)g(T)m(ABLE)g(DES)g(PR)o
(OCESSUS)881 b FD(39)425 719 y
 currentpoint currentpoint translate 0.60698 0.60698 scale neg exch
neg exch translate
 425 719 a 14 w @beginspecial
0 @llx 0 @lly 417 @urx 235 @ury 4170 @rwi @setspecial
%%BeginDocument: eps/structureprocessus.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 416.545013 234.18399 rectclip
-114.998993 -168.850006 translate
114.998993 168.850006 416.545013 234.18399 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 0 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 194 383 136 -204 1.227941 0 0 1 -6.220589 -2 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 194 383 136 -25 1.227941 0 0 1 -6.220589 -2 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 194 270 136 -24 1.227941 0 0 1 -6.220589 -2 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Donn\335es non-initialis\335es ) [10.108002 0 7.783997 0 7.783997 0 7.783997 0 7.783997 0 7.783997 0 7 0 3.891998 0 7.783997 0 7.783997 0 7.783997 0 4.661987 0 3.108002 0 7.783997 0 3.108002 0 3.891998 0 3.108002 0 7.783997 0 3.108002 0 3.108002 0 7 0 7.783997 0 7.783997 0 7 0 0 0] 201.248993 255.966003 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 38 -2] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 194 246 136 -28 1.227941 0 0 1 -6.220589 -2 sc6mt astore rstroke
(Donn\335es initialis\335e ) [10.108002 0 7.783997 0 7.783997 0 7.783997 0 7.784012 0 7.783997 0 7 0 3.891998 0 3.108002 0 7.783997 0 3.108002 0 3.891998 0 3.108002 0 7.783997 0 3.108002 0 3.108002 0 7 0 7.783997 0 7.783997 0 0 0] 218.755997 231.966003 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 38 -2] dotx
( ) [0 0] 362 197 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 0 0] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 232 216 167 -39 1 0 0 1 0 0 sc6mt astore rstroke
(Texte ) [6.873993 0 7.363998 0 7 0 3.891998 0 7.784012 0 0 0] 223.542999 202 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 69 -3] dotx
(Adresse Haute = 0xFFFFFFFF ) [9.338001 0 7.784 0 4.661999 0 7.784 0 7 0 7 0 7.784 0 3.892002 0 10.108002 0 7.783997 0 7.783997 0 3.891998 0 7.783997 0 3.891998 0 8.176003 0 3.891998 0 7.784004 0 7 0 8.554001 0 8.554001 0 8.554001 0 8.554001 0 8.554001 0 8.554001 0 8.554001 0 8.554001 0 0 0] 11.113998 381 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 106 7] dotx
(Adresse Basse =0 ) [9.338001 0 7.784004 0 4.662003 0 7.783997 0 7 0 7 0 7.783997 0 3.891998 0 9.337997 0 7.783997 0 7 0 7 0 7.783997 0 3.891998 0 8.175995 0 7.783997 0 0 0] 49.998997 381 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 66 -208] dotx
/usedash true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 140 0 243 332 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 140 0 247 294 1 0 0 1 0 0 sc6mt astore ssl
/usedash false def
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -10 314 332 1 0 0 1 0 0 sc6mt astore ssl
/crendarw false def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -10 313 304 1 0 0 1 0 0 sc6mt astore ssl
(Pile ) [9.337999 0 3.108 0 3.108 0 7.784 0 0 0] 10.330999 313 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 290 -38] dotx
(Tas ) [6.874001 0 7.783997 0 7 0 0 0] 115.170998 327 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 188 12] dotx
(argc,argv,env ) [7.783997 0 4.661987 0 7.783997 0 6.790009 0 3.891998 0 7.783997 0 4.661987 0 7.783997 0 5.880005 0 3.891998 0 7.783997 0 7.503998 0 7 0 0 0] 386.398987 367 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 -112 -3] dotx
/crfrtarw false def
false 0.400001 0 0 0.235074 319.999878 143.03363 sc5mt astore sstrt
systemdict
begin
192 283 272 430 setbbox
215 421 moveto
233 416 229 397 229 397 curveto
229 326 230 295 230 295 curveto
230 295 239 287 238 287 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
false 0.400001 -2.055086e-08 -3.496915e-08 -0.235074 320.399902 277.9375 sc5mt astore sstrt
systemdict
begin
192 283 272 430 setbbox
215 421 moveto
233 416 229 397 229 397 curveto
229 326 230 295 230 295 curveto
230 295 239 287 238 287 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 -8.742278e-08 -8.742278e-08 -1 3.051758e-05 673.877197 sc6mt astore splstroke
/txtdraw true def
/txlndraw true def
(lu par exec ) [4.447998 0 8 0 4 0 8 0 7.104004 0 5.328003 0 4 0 6.864014 0 7.76001 0 7.104004 0 7.104004 0 0 0] 446 211 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 0 0] dotx
(} initialis\335e \325 z\335ro       par exec ) [7.679993 0 4 0 4.447998 0 8 0 4.447998 0 4.447998 0 4.447998 0 7.104004 0 4.447998 0 4.447998 0 6.223999 0 7.104004 0 7.104004 0 4 0 7.104004 0 4 0 7.104004 0 7.104004 0 5.328003 0 8 0 4 0 -120.544006 -17.855988 4 0 4 0 4 0 4 0 4 0 8 0 7.104004 0 5.328003 0 4 0 6.864014 0 7.76001 0 7.104004 0 7.104004 0 0 0] 457 411 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 -48 -158] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 425 719 a
 currentpoint currentpoint translate 1 0.60698 div 1 0.60698 div scale
neg exch neg exch translate
 425 719 a 543 810 a Fq(Fig.)13
b FD(6.2)g({)h Fp(L)n(a)h(structur)n(e)f(interne)g(des)i(pr)n(o)n(c)n
(essus.)179 964 y FB(La)d(r)o(\023)-18 b(egion)14 b(de)f(la)h
FC(pile)5 b FB(:)179 1010 y(C'est)13 b(une)i(pile)h(de)f(structures)g
(de)f(pile)i(qui)f(son)o(t)g(empil)o(\023)-18 b(ees)16
b(et)e(d)o(\023)-18 b(epil)o(\023)g(ees)17 b(lors)e(de)g(l'app)q(el)h
(ou)e(le)h(retour)179 1055 y(de)h(fonction.)h(Le)f(p)q(oin)o(teur)i(de)
e(pile,)h(un)g(des)f(registres)h(de)g(l'unit)o(\023)-18
b(e)17 b(cen)o(trale,)g(indique)h(la)f(profondeur)179
1101 y(couran)o(te)d(de)f(la)h(pile.)179 1147 y(Le)d(co)q(de)g(du)h
(programme)g(g)o(\022)-18 b(ere)11 b(les)h(extensions)h(de)e(pile)i
(\(app)q(el)f(ou)g(retour)f(de)g(fonction\),)h(c'est)f(le)h(no)o(y)o
(au)179 1192 y(qui)j(alloue)h(l'espace)g(n)o(\023)-18
b(ecessaire)15 b(\022)-19 b(a)15 b(ces)f(extensions.)i(Sur)f(certains)g
(syst)o(\022)-18 b(emes)15 b(on)g(trouv)o(e)f(une)h(fonction)179
1238 y FA(alloca\(\))9 b FB(qui)15 b(p)q(ermet)e(de)g(faire)h(des)f
(demandes)h(de)f(m)o(\023)-18 b(emoire)14 b(sur)g(la)f(pile.)179
1284 y(Un)i(pro)q(cessus)h(UNIX)f(p)q(ouv)n(an)o(t)h(s'ex)o(\023)-18
b(ecuter)16 b(en)f(deux)h(mo)q(des)g(\(no)o(y)o(au,)f(utilisateur\),)j
(une)e(pile)g(priv)o(\023)-18 b(ee)179 1329 y(sera)13
b(utilis)o(\023)-18 b(ee)15 b(dans)f(c)o(haque)g(mo)q(de.)179
1375 y(La)f(pile)h(no)o(y)o(au)g(sera)g(vide)g(quand)g(le)f(pro)q
(cessus)i(est)e(en)g(mo)q(de)g(utilisateur.)179 1477
y(Le)g FC(tas)h FB(est)f(une)g(zone)h(o)q(\022)-20 b(u)13
b(est)g(r)o(\023)-18 b(ealis)o(\023)g(ee)15 b(l'allo)q(cation)h
(dynamique)f(a)o(v)o(ec)e(les)h(fonctions)h FA(Xalloc\(\))o
FB(.)179 1705 y Fv(6.4)66 b(zone)22 b(u)h(et)f(table)h(des)f(pro)r
(cessus)236 1806 y FB(T)m(ous)16 b(les)g(pro)q(cessus)h(son)o(t)f(asso)
q(ci)o(\023)-18 b(es)17 b(\022)-19 b(a)16 b(une)g(en)o(tr)o(\023)-18
b(ee)15 b(dans)i(la)f Fx(table)e(des)h(pr)n(o)n(c)n(essus)e
FB(qui)k(est)e(in)o(terne)179 1852 y(au)e(no)o(y)o(au.)h(De)g(plus,)g
(le)f(no)o(y)o(au)i(alloue)g(p)q(our)f(c)o(haque)g(pro)q(cessus)g(une)g
(structure)g(app)q(el)o(\023)-18 b(ee)15 b Fx(zone)d(u)h
FB(,)f(qui)179 1898 y(con)o(tien)o(t)g(des)g(donn)o(\023)-18
b(ees)12 b(priv)o(\023)-18 b(ees)13 b(du)f(pro)q(cessus,)g(uniquemen)o
(t)h(manipulabl)q(es)h(par)e(le)g(no)o(y)o(au.)56 b(La)11
b Fx(table)179 1943 y(des)g(pr)n(o)n(c)n(essus)e FB(nous)k(p)q(ermet)f
(d'acc)o(\023)-18 b(eder)13 b(\022)-19 b(a)12 b(la)g
Fx(table)f(des)h(r)o(\023)-19 b(e)n(gions)11 b(p)n(ar)h(pr)n(o)n(c)n
(essus)d FB(qui)k(p)q(ermet)f(d'acc)o(\023)-18 b(eder)179
1989 y(\022)f(a)13 b(la)g Fx(table)g(des)f(r)o(\023)-19
b(e)n(gions)p FB(.)11 b(Ce)h(double)j(niv)o(eau)g(d'indirection)h(p)q
(ermet)d(de)g(faire)h(partager)g(des)f(r)o(\023)-18 b(egions.)179
2035 y(Dans)14 b(l'organisation)j(a)o(v)o(ec)d(une)g(m)o(\023)-18
b(emoire)14 b(virtuelle,)i(la)e(table)g(des)g(r)o(\023)-18
b(egions)15 b(est)e(mat)o(\023)-18 b(erialis)o(\023)g(ee)17
b(logique-)179 2080 y(men)o(t)c(dans)h(la)f(table)h(de)g(pages.)236
2182 y(Les)f Fx(structur)n(es)e(de)i(r)o(\023)-19 b(e)n(gions)11
b FB(de)i(la)g(table)h(des)f(r)o(\023)-18 b(egions)14
b(con)o(tiennen)o(t)h(des)e(informations)i(sur)e(le)g(t)o(yp)q(e,)179
2228 y(les)g(droits)h(d'acc)o(\022)-18 b(es)13 b(et)f(la)i(lo)q
(calisation)i(\(adresses)d(en)g(m)o(\023)-18 b(emoire)14
b(ou)f(adresses)g(sur)g(disque\))h(de)f(la)h(r)o(\023)-18
b(egion.)236 2284 y(Seule)14 b(la)g FC(zone)g(u)e FB(du)h(pro)q(cessus)
h(couran)o(t)f(est)g(manipulable)j(par)d(le)g(no)o(y)o(au,)h(les)f
(autres)g(son)o(t)g FC(inac-)179 2330 y(cessibles.)g
FB(L'adresse)g(de)g(la)h(zone)f(u)g(est)g(plac)o(\023)-18
b(ee)15 b(dans)e(le)h(mot)f(d')o(\023)-18 b(etat)13 b(du)g(pro)q
(cessus.)179 2558 y Fv(6.5)66 b Fm(fork)21 b Fv(et)i
Fm(exec)e Fv(\(revisit)o(\023)-32 b(es\))236 2659 y FB(Quand)19
b(un)f(pro)q(cessus)g(r)o(\023)-18 b(ealise)19 b(un)f
FA(fork)p FB(,)e(le)i(con)o(ten)o(u)g(de)g(l'en)o(tr)o(\023)-18
b(ee)18 b(de)f(la)h(table)h(des)f(r)o(\023)-18 b(egions)19
b(est)179 2705 y(dupliqu)o(\023)-18 b(e,)15 b(c)o(haque)f(r)o(\023)-18
b(egion)15 b(est)e(ensuite,)h(en)f(fonction)h(de)f(son)h(t)o(yp)q(e,)f
(partag)o(\023)-18 b(ee)14 b(ou)f(copi)o(\023)-18 b(ee.)236
2761 y(Quand)11 b(un)e(pro)q(cessus)i(r)o(\023)-18 b(ealise)11
b(un)f FA(exec)p FB(,)d(il)k(y)e(a)h(lib)o(\023)-18 b(eration)12
b(des)e(r)o(\023)-18 b(egions)11 b(et)e(r)o(\023)-18
b(eallo)q(cation)12 b(de)e(nouv)o(elles)179 2806 y(r)o(\023)-18
b(egions)14 b(en)f(fonction)i(des)e(v)n(aleurs)h(d)o(\023)-18
b(e\014nies)15 b(dans)f(le)g(nouv)o(el)g(ex)o(\023)-18
b(ecutable.)p eop
%%Page: 40 48
40 47 bop 75 50 a FD(40)1083 b Fz(CHAPITRE)14 b(6.)27
b(LES)14 b(PR)o(OCESSUS)484 792 y
 currentpoint currentpoint translate 0.50696 0.50696 scale neg exch
neg exch translate
 484 792 a 14 w @beginspecial
0 @llx 0 @lly 444 @urx 265 @ury 4440 @rwi @setspecial
%%BeginDocument: eps/tabledesregions.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 443.638428 264.227661 rectclip
-78.88063 -448 translate
78.88063 448 443.638428 264.227661 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1.5 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crfrtarw true def
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore -108.282028 -27.764648 241.282028 590.764648 0.8 0 0 0.8 69.280632 144.421219 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore -146.0047 -4.709839 462.0047 599.709839 0.8 0 0 0.8 69.280632 144.421219 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore -149.08551 80.715088 466.08551 514.284912 0.8 0 0 0.8 68.480629 144.421219 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 116.83313 166.630859 366.16687 431.369141 0.8 0 0 0.8 69.280632 144.421219 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore -4.531891 87.012207 504.531891 415.987793 0.8 0 0 0.8 69.280632 144.421219 sc6mt astore ssl
/crlinw 1 def
/crfrtarw false def
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 57 685 70 -24 0.8 0 0 0.8 69.280632 144.421219 sc6mt astore rstroke
/crlinw 5.4 def
/crlinred 1 def /crlingrn 1 def /crlinblu 1 def /strinclr true def
/crfrtarw true def
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore -85.615295 -21.952637 218.615295 584.952637 0.8 0 0 0.8 69.280632 144.421219 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore -122.616852 -3.955383 438.616852 598.955383 0.8 0 0 0.8 69.280632 144.421219 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore -128.507751 69.57428 445.507751 525.42572 0.8 0 0 0.8 68.480629 144.421219 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 103.399353 147.471191 379.600647 450.528809 0.8 0 0 0.8 69.280632 144.421219 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore -3.314789 63.64386 503.314789 439.35614 0.8 0 0 0.8 69.280632 144.421219 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(zone u ) [8.730003 0 10.008003 0 10.007996 0 10.007996 0 5.003998 0 10.007996 0 0 0] 80 626 /Helvetica-Oblique [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 55.680634 178.821213] dotx
/crlinw 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfrtarw false def
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 67 579 92 -24 0.8 0 0 1.6 55.680634 -284.378784 sc6mt astore rstroke
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 55.680634 178.821213 sc6mt astore rstroke
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 67 483 92 -24 0.8 0 0 1.6 55.680634 -188.378799 sc6mt astore rstroke
/crlinw 1.5 def
/crendarw true def
/crfrtarw true def
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 0 -69 91 652 0.8 0 0 0.8 69.280632 144.421219 sc6mt astore ssl
/crlinw 1 def
/crendarw false def
/crfrtarw false def
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 67 579 92 -24 0.8 0 0 1.6 205.28064 -258.778809 sc6mt astore rstroke
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 205.28064 204.421219 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Table des processus  ) [8.837997 0 10.007999 0 9.647999 0 3.996002 0 10.008003 0 5.003998 0 10.007996 0 10.007996 0 9 0 5.003998 0 10.007996 0 5.994003 0 10.007996 0 9 0 10.007996 0 9 0 9 0 10.007996 0 9 0 5.003998 0 0 0] 44 437 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 44.480633 173.221222] dotx
(Table des r\335gions  par processus  ) [8.837999 0 10.007999 0 9.648 0 3.996 0 10.007999 0 5.004 0 10.007999 0 10.008001 0 9 0 5.003998 0 5.993999 0 10.007999 0 10.007996 0 3.996002 0 10.007996 0 10.007996 0 9 0 -131.79599 -20.808014 5.004 0 10.007999 0 10.007999 0 5.993999 0 5.004 0 10.007999 0 5.993999 0 10.007999 0 9 0 10.007999 0 8.999996 0 9 0 10.007996 0 9 0 5.003998 0 0 0] -26.271996 437 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 246.88063 347.621216] dotx
(Table des r\335gions  ) [8.837997 0 10.007999 0 9.647999 0 3.996002 0 10.008003 0 5.003998 0 10.007996 0 10.007996 0 9 0 5.003998 0 5.994003 0 10.007996 0 10.007996 0 3.996002 0 10.007996 0 10.007996 0 9 0 5.003998 0 0 0] 44 437 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 369.28064 342.821228] dotx
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 67 579 92 -24 0.8 0 0 1.6 379.680634 -252.378784 sc6mt astore rstroke
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 379.680634 210.821228 sc6mt astore rstroke
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 67 579 92 -24 0.8 0 0 4.366675 379.680634 -1912.683594 sc6mt astore rstroke
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 67 531 92 -24 0.8 0 0 0.866667 379.680634 98.621193 sc6mt astore rstroke
/crlinw 1.5 def
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 191 438 364 -58 0.8 0 0 0.8 69.280632 144.421219 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(M\335moire Centrale) [10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 0 0] 286 278 /Ohlfs [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 74.080635 241.221222] dotx
/txtdraw true def
/txlndraw true def
(  ) [5.003998 0 0 0] 458.799805 278 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 74.080635 241.221222] dotx
/crlinw 1 def
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 67 531 92 -24 0.8 0 0 2.733333 205.28064 -842.178711 sc6mt astore rstroke
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 205.28064 185.221222 sc6mt astore rstroke
/crlinw 1.5 def
/crfrtarw true def
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore -136.03067 -11.25769 279.03067 602.25769 0.8 0 0 0.8 59.680634 115.621216 sc6mt astore ssl
/crlinw 1 def
/crfrtarw false def
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 205.28064 138.821213 sc6mt astore rstroke
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 379.680634 249.221222 sc6mt astore rstroke
/crlinw 1.5 def
/crendarw true def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 167.737427 72.432068 302 607 0.8 0 0 0.8 59.680634 115.621216 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore 147.654816 -59.629822 316 604 0.8 0 0 0.8 59.680634 115.621216 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore -110.860291 -214.008575 504 685 0.8 0 0 0.8 59.680634 115.621216 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.621216 sc4mt astore 0.8 0 0 0.8 59.680634 115.621216 sc5mt astore -273.374512 -81.430725 508 544 0.8 0 0 0.8 59.680634 115.621216 sc6mt astore ssl
end
grestore
grestore
%%EndDocument
 @endspecial 484 792 a
 currentpoint currentpoint translate 1 0.50696 div 1 0.50696 div scale
neg exch neg exch translate
 484 792 a 413 883 a Fq(Fig.)e
FD(6.3)h({)h Fp(T)m(able)g(des)h(r)o(\023)-20 b(e)n(gions,)15
b(table)f(des)i(r)o(\023)-20 b(e)n(gions)14 b(p)n(ar)h(pr)n(o)n(c)n
(essus)484 1699 y
 currentpoint currentpoint translate 0.50696 0.50696 scale neg exch
neg exch translate
 484 1699 a 14 w @beginspecial 0 @llx
0 @lly 444 @urx 265 @ury 4440 @rwi @setspecial
%%BeginDocument: eps/tabledesregionsfork.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 443.638397 264.225952 rectclip
-85.880951 -88.000015 translate
85.880951 88.000015 443.638397 264.225952 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 0 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1.5 def
/crfrtarw true def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore -108.282028 -27.764648 241.282028 590.764648 0.8 0 0 0.8 76.280945 -215.58049 sc6mt astore ssl
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore -146.0047 -4.709839 462.0047 599.709839 0.8 0 0 0.8 76.280945 -215.58049 sc6mt astore ssl
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore -149.08551 80.715088 466.08551 514.284912 0.8 0 0 0.8 75.480942 -215.58049 sc6mt astore ssl
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 116.83316 166.63089 366.16684 431.36911 0.8 0 0 0.8 76.280945 -215.58049 sc6mt astore ssl
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore -4.531891 87.012177 504.531891 415.987823 0.8 0 0 0.8 76.280945 -215.58049 sc6mt astore ssl
/crlinw 1 def
/usedash true def
/crfrtarw false def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 57 685 70 -24 0.8 0 0 0.8 74.680946 -213.980499 sc6mt astore rstroke
/crlinw 5.4 def
/crlinred 1 def /crlingrn 1 def /crlinblu 1 def /strinclr true def
/usedash false def
/crfrtarw true def
/crfilalph 1 def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore -85.615295 -21.952637 218.615295 584.952637 0.8 0 0 0.8 76.280945 -215.58049 sc6mt astore ssl
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore -122.616852 -3.955383 438.616852 598.955383 0.8 0 0 0.8 76.280945 -215.58049 sc6mt astore ssl
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore -128.507751 69.57428 445.507751 525.42572 0.8 0 0 0.8 75.480942 -215.58049 sc6mt astore ssl
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 103.399353 147.471222 379.600647 450.528778 0.8 0 0 0.8 76.280945 -215.58049 sc6mt astore ssl
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore -3.314789 63.64386 503.314789 439.35614 0.8 0 0 0.8 76.280945 -215.58049 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(zone u ) [8.730003 0 10.008003 0 10.007996 0 10.007996 0 5.003998 0 10.007996 0 0 0] 80 626 /Helvetica-Oblique [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 61.080948 -179.580475] dotx
/crlinw 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfrtarw false def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 67 579 92 -24 0.8 0 0 1.6 62.680946 -644.380493 sc6mt astore rstroke
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 62.680946 -181.180481 sc6mt astore rstroke
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 67 483 92 -24 0.8 0 0 1.6 62.680946 -548.380493 sc6mt astore rstroke
/crlinw 1.5 def
/usedash true def
/crendarw true def
/crfrtarw true def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 0 -69 91 652 0.8 0 0 0.8 76.280945 -215.58049 sc6mt astore ssl
/crlinw 1 def
/usedash false def
/crendarw false def
/crfrtarw false def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 67 579 92 -24 0.8 0 0 1.6 212.280945 -618.780518 sc6mt astore rstroke
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 212.280945 -155.580475 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Table des processus  ) [8.837997 0 10.007999 0 9.647999 0 3.996002 0 10.008003 0 5.003998 0 10.007996 0 10.007996 0 9 0 5.003998 0 10.007996 0 5.994003 0 10.007996 0 9 0 10.007996 0 9 0 9 0 10.007996 0 9 0 5.003998 0 0 0] 44 437 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 51.480949 -186.780487] dotx
(Table des r\335gions  par processus  ) [8.837999 0 10.007999 0 9.648 0 3.996 0 10.007999 0 5.004 0 10.007999 0 10.008001 0 9 0 5.003998 0 5.993999 0 10.007999 0 10.007996 0 3.996002 0 10.007996 0 10.007996 0 9 0 -131.79599 -20.808014 5.004 0 10.007999 0 10.007999 0 5.993999 0 5.004 0 10.007999 0 5.993999 0 10.007999 0 9 0 10.007999 0 8.999996 0 9 0 10.007996 0 9 0 5.003998 0 0 0] -26.271996 437 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 253.880951 -12.380478] dotx
(Table des r\335gions  ) [8.837997 0 10.007999 0 9.647999 0 3.996002 0 10.008003 0 5.003998 0 10.007996 0 10.007996 0 9 0 5.003998 0 5.994003 0 10.007996 0 10.007996 0 3.996002 0 10.007996 0 10.007996 0 9 0 5.003998 0 0 0] 44 437 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 376.280945 -17.180477] dotx
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 67 579 92 -24 0.8 0 0 1.6 386.680969 -612.380493 sc6mt astore rstroke
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 386.680969 -149.180481 sc6mt astore rstroke
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 67 579 92 -24 0.8 0 0 4.366675 386.680969 -2272.685303 sc6mt astore rstroke
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 67 531 92 -24 0.8 0 0 0.866667 386.680969 -261.380524 sc6mt astore rstroke
/crlinw 1.5 def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 191 438 364 -58 0.8 0 0 0.8 76.280945 -215.58049 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(M\335moire Centrale) [10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 0 0] 286 278 /Ohlfs [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 81.080948 -118.780487] dotx
/txtdraw true def
/txlndraw true def
(  ) [5.003998 0 0 0] 458.799805 278 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 81.080948 -118.780487] dotx
/crlinw 1 def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 67 531 92 -24 0.8 0 0 2.733333 212.280945 -1202.18042 sc6mt astore rstroke
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 212.280945 -174.780487 sc6mt astore rstroke
/crlinw 1.5 def
/usedash true def
/crfrtarw true def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore -136.03067 -11.25769 279.03067 602.25769 0.8 0 0 0.8 66.680946 -244.380478 sc6mt astore ssl
/crlinw 1 def
/usedash false def
/crfrtarw false def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 212.280945 -221.180496 sc6mt astore rstroke
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 386.680969 -110.780487 sc6mt astore rstroke
/crlinw 1.5 def
/usedash true def
/crendarw true def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 167.737427 72.432068 302 607 0.8 0 0 0.8 66.680946 -244.380478 sc6mt astore ssl
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 147.654816 -59.629822 316 604 0.8 0 0 0.8 66.680946 -244.380478 sc6mt astore ssl
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore -151.849854 -217.619217 511 325 0.8 0 0 0.8 61.080948 43.619522 sc6mt astore ssl
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore -77.365601 -70.91848 515 184 0.8 0 0 0.8 61.080948 43.619522 sc6mt astore ssl
/crlinw 1 def
/usedash false def
/crendarw false def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 62.680946 -200.380478 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(fork\(\) ) [14.400002 0 14.400002 0 14.400002 0 14.400002 0 14.399994 0 14.399994 0 0 0] 61 101 /Courier-Bold [ 24 1 mul 0 0 24 0 0 ] [0.8 0 0 0.8 57.080948 53.219521] dotx
/crlinw 1.5 def
/crfrtarw true def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore -147.073059 18.855515 287.073059 189.144485 0.8 0 0 0.8 61.080948 43.619522 sc6mt astore ssl
/txtdraw true def
/crtxtred 0.333293 def /crtxtgrn 0.333293 def /crtxtblu 0.333293 def /txtinclr true def
/txlndraw true def
(partag\335e ) [10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 0 0] 393 322 /Ohlfs [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 132.280945 43.619522] dotx
(copi\335e ) [10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 0 0] 393 322 /Ohlfs [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 129.080948 -73.180481] dotx
/crendarw true def
/crfrtarw false def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 158.096313 132.226013 325 183 0.8 0 0 0.8 61.080948 43.619522 sc6mt astore ssl
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 157.078857 84.727386 338 184 0.8 0 0 0.8 61.080948 43.619522 sc6mt astore ssl
(copie ) [10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 0 0] 393 322 /Ohlfs [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 151.480957 4.419521] dotx
/usedash true def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 5.700195 -171.00499 536 273 0.8 0 0 0.8 61.080948 43.619522 sc6mt astore ssl
/usedash false def
/crfrtarw true def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 0 -77 78 301 0.8 0 0 0.8 61.080948 43.619522 sc6mt astore ssl
/crlinw 1 def
/crendarw false def
/crfrtarw false def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 57 685 70 -24 0.8 0 0 0.8 41.880947 -235.58049 sc6mt astore rstroke
/txtdraw true def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txlndraw true def
(zone u ) [8.730003 0 10.008003 0 10.007996 0 10.007996 0 5.003998 0 10.007996 0 0 0] 80 626 /Helvetica-Oblique [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 28.280947 -201.180481] dotx
/txtdraw true def
/txlndraw true def
(p\334re = fils = ) [9 0 7.991997 0 5.994003 0 7.991997 0 4.5 0 10.152 0 -45.629997 -20.087997 5.633999 0 5.004002 0 5.003998 0 7.001999 0 4.5 0 10.152 0 0 0] 50 83 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 61.080948 43.619522] dotx
/crlinw 2 def
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 52 0 103 89 0.8 0 0 0.8 61.080948 43.619522 sc6mt astore ssl
/usedash false def
0.8 0 0 0.8 61.080948 43.619522 sc4mt astore 0.8 0 0 0.8 61.080948 43.619522 sc5mt astore 52 0 100 68 0.8 0 0 0.8 61.080948 43.619522 sc6mt astore ssl
end
grestore
grestore
%%EndDocument
 @endspecial 484 1699 a
 currentpoint currentpoint translate 1 0.50696 div 1 0.50696 div scale
neg exch neg exch translate
 484 1699 a 458 1790 a Fq(Fig.)e
FD(6.4)g({)g Fp(Changement)j(de)f(r)o(\023)-20 b(e)n(gions)15
b(au)g(c)n(ours)g(d'un)g Fh(fork)p Fp(.)484 2600 y
 currentpoint currentpoint translate 0.50696 0.50696 scale neg exch
neg exch translate
 484
2600 a 14 w @beginspecial 0 @llx 0 @lly 444 @urx 262
@ury 4440 @rwi @setspecial
%%BeginDocument: eps/tabledesregionsexec.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 443.638428 261.527527 rectclip
-78.88063 -451 translate
78.88063 451 443.638428 261.527527 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/txtdraw true def
/txlndraw true def
(exec\(\) ) [14.400002 0 14.400002 0 14.400002 0 14.400002 0 14.399994 0 14.399994 0 0 0] 61 101 /Courier-Bold [ 24 1 mul 0 0 24 0 0 ] [0.8 0 0 0.8 65.280632 406.321106] dotx
/crlinw 1.5 def
/crfrtarw true def
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore -108.282028 -27.764648 241.282028 590.764648 0.8 0 0 0.8 69.280632 144.721115 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore -146.0047 -4.709839 462.0047 599.709839 0.8 0 0 0.8 69.280632 144.721115 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore -149.08551 80.715088 466.08551 514.284912 0.8 0 0 0.8 68.480629 144.721115 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 116.83313 166.630859 366.16687 431.369141 0.8 0 0 0.8 69.280632 144.721115 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore -4.531891 87.012207 504.531891 415.987793 0.8 0 0 0.8 69.280632 144.721115 sc6mt astore ssl
/crlinw 1 def
/crfrtarw false def
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 57 685 70 -24 0.8 0 0 0.8 69.280632 144.721115 sc6mt astore rstroke
/crlinw 5.4 def
/crlinred 1 def /crlingrn 1 def /crlinblu 1 def /strinclr true def
/crfrtarw true def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore -85.615295 -21.952637 218.615295 584.952637 0.8 0 0 0.8 69.280632 144.721115 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore -122.616852 -3.955383 438.616852 598.955383 0.8 0 0 0.8 69.280632 144.721115 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore -128.507751 69.57428 445.507751 525.42572 0.8 0 0 0.8 68.480629 144.721115 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 103.399353 147.471191 379.600647 450.528809 0.8 0 0 0.8 69.280632 144.721115 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore -3.314789 63.64386 503.314789 439.35614 0.8 0 0 0.8 69.280632 144.721115 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(zone u ) [8.730003 0 10.008003 0 10.007996 0 10.007996 0 5.003998 0 10.007996 0 0 0] 80 626 /Helvetica-Oblique [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 55.680634 179.121109] dotx
/crlinw 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfrtarw false def
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 67 579 92 -24 0.8 0 0 1.6 55.680634 -284.078918 sc6mt astore rstroke
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 55.680634 179.121109 sc6mt astore rstroke
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 67 483 92 -24 0.8 0 0 1.6 55.680634 -188.078903 sc6mt astore rstroke
/crlinw 1.5 def
/crendarw true def
/crfrtarw true def
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 0 -69 91 652 0.8 0 0 0.8 69.280632 144.721115 sc6mt astore ssl
/crlinw 1 def
/crendarw false def
/crfrtarw false def
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 67 579 92 -24 0.8 0 0 1.6 205.28064 -258.478882 sc6mt astore rstroke
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 205.28064 204.721115 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Table des processus  ) [8.837997 0 10.007999 0 9.647999 0 3.996002 0 10.008003 0 5.003998 0 10.007996 0 10.007996 0 9 0 5.003998 0 10.007996 0 5.994003 0 10.007996 0 9 0 10.007996 0 9 0 9 0 10.007996 0 9 0 5.003998 0 0 0] 44 437 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 44.480633 173.521118] dotx
(Table des r\335gions  par processus  ) [8.837999 0 10.007999 0 9.648 0 3.996 0 10.007999 0 5.004 0 10.007999 0 10.008001 0 9 0 5.003998 0 5.993999 0 10.007999 0 10.007996 0 3.996002 0 10.007996 0 10.007996 0 9 0 -131.79599 -20.808014 5.004 0 10.007999 0 10.007999 0 5.993999 0 5.004 0 10.007999 0 5.993999 0 10.007999 0 9 0 10.007999 0 8.999996 0 9 0 10.007996 0 9 0 5.003998 0 0 0] -26.271996 437 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 246.88063 347.921112] dotx
(Table des r\335gions  ) [8.837997 0 10.007999 0 9.647999 0 3.996002 0 10.008003 0 5.003998 0 10.007996 0 10.007996 0 9 0 5.003998 0 5.994003 0 10.007996 0 10.007996 0 3.996002 0 10.007996 0 10.007996 0 9 0 5.003998 0 0 0] 44 437 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 369.28064 343.121094] dotx
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 67 579 92 -24 0.8 0 0 1.6 379.680634 -252.078888 sc6mt astore rstroke
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 379.680634 211.121124 sc6mt astore rstroke
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 67 579 92 -24 0.8 0 0 4.366675 379.680634 -1912.383789 sc6mt astore rstroke
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 67 531 92 -24 0.8 0 0 0.866667 379.680634 98.921089 sc6mt astore rstroke
/crlinw 1.5 def
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 191 438 364 -58 0.8 0 0 0.8 69.280632 147.121109 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(M\335moire Centrale) [10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 10.799988 0 0 0] 286 278 /Ohlfs [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 74.080635 241.521118] dotx
/txtdraw true def
/txlndraw true def
(  ) [5.003998 0 0 0] 458.799805 278 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 74.080635 241.521118] dotx
/crlinw 1 def
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 67 531 92 -24 0.8 0 0 2.733333 205.28064 -841.878784 sc6mt astore rstroke
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 205.28064 185.521118 sc6mt astore rstroke
/crlinw 1.5 def
/crfrtarw true def
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore -122.448883 40.193115 265.448883 550.806885 0.8 0 0 0.8 59.680634 115.921112 sc6mt astore ssl
/crlinw 1 def
/crfrtarw false def
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 205.28064 139.121109 sc6mt astore rstroke
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 67 531 92 -24 0.8 0 0 0.8 379.680634 249.521118 sc6mt astore rstroke
/crlinw 1.5 def
/crendarw true def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 166.869446 128.508667 319 554 0.8 0 0 0.8 59.680634 115.921112 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 147.151611 -27.355103 328 545 0.8 0 0 0.8 59.680634 115.921112 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore -33.573303 -209.1138 513 683 0.8 0 0 0.8 59.680634 115.921112 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 28.181274 -85.45282 488 513 0.8 0 0 0.8 59.680634 115.921112 sc6mt astore ssl
/crlinw 2 def
/crlinred 0.333293 def /crlingrn 0.333293 def /crlinblu 0.333293 def /strinclr true def
/crendarw false def
/crfrtarw true def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore -105.376053 -27.01947 238.376053 590.01947 0.8 0 0 0.8 69.580246 144.703461 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore -143.006226 -4.613098 459.006226 599.613098 0.8 0 0 0.8 69.580246 144.703461 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore -146.447327 79.286743 463.447327 515.713257 0.8 0 0 0.8 68.780243 144.703461 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore 115.110901 164.174561 367.889099 433.825439 0.8 0 0 0.8 69.580246 144.703461 sc6mt astore ssl
0.8 0 0 0.8 59.680634 115.921112 sc4mt astore 0.8 0 0 0.8 59.680634 115.921112 sc5mt astore -4.375854 84.016235 504.375854 418.983765 0.8 0 0 0.8 69.580246 144.703461 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(ancienne  entr\335e ) [8 0 8.895996 0 7.104004 0 4.447998 0 7.104004 0 8.895996 0 8.895996 0 7.104004 0 -60.447998 -18.447998 4 0 7.104004 0 8.895996 0 5.328003 0 7.104004 0 7.104004 0 7.104004 0 0 0] 269 657 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 54.080635 90.321114] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 2600 a
 currentpoint currentpoint translate 1 0.50696 div 1 0.50696 div scale
neg exch neg exch translate
 484 2600 a 458 2691 a Fq(Fig.)e
FD(6.5)g({)g Fp(Changement)j(de)f(r)o(\023)-20 b(e)n(gions)15
b(au)g(c)n(ours)g(d'un)g Fh(exec)p Fp(.)p eop
%%Page: 41 49
41 48 bop 75 50 a Fz(6.6.)26 b(LE)14 b(CONTEXTE)h(D'UN)e(PR)o(OCESSUS)
939 b FD(41)179 166 y Fv(6.6)66 b(Le)22 b(con)n(texte)h(d'un)g(pro)r
(cessus)236 249 y FB(Le)13 b(con)o(texte)h(d'un)f(pro)q(cessus)h(est)f
(l'ensem)o(ble)i(des)e(donn)o(\023)-18 b(ees)15 b(qui)f(p)q(ermetten)o
(t)f(de)g(reprendre)h(l'ex)o(\023)-18 b(e-)179 295 y(cution)14
b(d'un)g(pro)q(cessus)g(qui)g(a)e(\023)-18 b(et)o(\023)g(e)13
b(in)o(terrompu.)236 340 y(Le)g(con)o(texte)h(d'un)f(pro)q(cessus)i
(est)e(l'ensem)o(ble)h(de)219 403 y(1.)21 b(son)13 b(\023)-18
b(etat)219 465 y(2.)21 b(son)14 b(mot)f(d')o(\023)-18
b(etat)6 b(:)13 b(en)g(particulier)308 527 y({)21 b(La)13
b(v)n(aleur)h(des)f(registres)h(actifs)308 581 y({)21
b(Le)13 b(compteur)g(ordinal)219 643 y(3.)21 b(les)14
b(v)n(aleurs)g(des)g(v)n(ariables)h(globales)g(statiques)g(ou)e
(dynamiques)219 705 y(4.)21 b(son)14 b(en)o(tr)o(\023)-18
b(ee)13 b(dans)h(la)f(table)h(des)g(pro)q(cessus)219
767 y(5.)21 b(sa)13 b(zone)h(u)219 829 y(6.)21 b(Les)13
b(piles)i(user)e(et)g(system)219 892 y(7.)21 b(les)14
b(zones)f(de)h(co)q(de)f(et)g(de)g(donn)o(\023)-18 b(ees.)236
954 y(Le)13 b(no)o(y)o(au)h(et)f(ses)g(v)n(ariables)i(ne)f(fon)o(t)f
(partie)h(du)f(con)o(texte)h(d'aucun)g(pro)q(cessus!)236
999 y(L'ex)o(\023)-18 b(ecution)15 b(d'un)e(pro)q(cessus)i(se)e(fait)g
(dans)h(son)f(con)o(texte.)236 1045 y(Quand)g(il)g(y)g(a)f(c)o
(hangemen)o(t)h(de)f(pro)q(cessus)h(couran)o(t,)g(il)g(y)f(a)g(r)o
(\023)-18 b(ealisation)15 b(d'une)e FC(comm)o(utation)f(de)179
1091 y(mot)i(d')o(\023)-21 b(etat)13 b FB(et)f(d'un)g
FC(c)o(hangemen)o(t)h(de)h(con)o(texte)p FB(.)48 b(Le)12
b(no)o(y)o(au)h(s'ex)o(\023)-18 b(ecute)13 b(alors)g(dans)g(le)g(nouv)o
(eau)179 1136 y(con)o(texte.)179 1267 y Fv(6.7)66 b(Comm)n(utation)23
b(de)f(mot)g(d')o(\023)-32 b(etat)22 b(et)g(in)n(terruptions.)236
1350 y FB(Ces)11 b(fonctions)h(de)g(tr)o(\022)-18 b(es)10
b(bas)i(niv)o(eau)g(son)o(t)g(fondamen)o(tales)g(p)q(our)g(p)q(ouv)o
(oir)h(programmer)f(un)f(syst)o(\022)-18 b(eme)179 1396
y(d'exploitation.)236 1441 y(P)o(our)9 b(^)-18 b(etre)9
b(ex)o(\023)-18 b(ecut)o(\023)g(e)10 b(et)f(donner)i(naissance)g(\022)
-19 b(a)9 b(un)h(pro)q(cessus,)g(un)g(programme)g(et)f(ses)g(donn)o
(\023)-18 b(ees)11 b(doiv)o(en)o(t)178 1487 y(^)-18 b(etre)13
b(c)o(harg)o(\023)-18 b(es)14 b(en)g(m)o(\023)-18 b(emoire)14
b(cen)o(trale.)g(Les)g(instructions)i(du)e(programme)g(son)o(t)g
(transf)o(\023)-18 b(er)o(\023)g(ees)14 b(une)g(\022)-19
b(a)13 b(une)179 1533 y(de)g(la)h(m)o(\023)-18 b(emoire)13
b(cen)o(trale)i(sur)e(l'unit)o(\023)-18 b(e)14 b(cen)o(trale)g(o)q
(\022)-20 b(u)14 b(elles)g(son)o(t)g(ex)o(\023)-18 b(ecut)o(\023)g
(ees.)236 1578 y(L'unit)o(\023)g(e)14 b(cen)o(trale)8
b(:)179 1624 y(Elle)13 b(comprend)g(des)g(circuits)h(logiques)g(et)e
(arithm)o(\023)-18 b(etiques)15 b(qui)e(e\013ectuen)o(t)g(les)g
(instructions)h(mais)f(aussi)179 1670 y(des)g(m)o(\023)-18
b(emoires)14 b(app)q(el)o(\023)-18 b(ees)15 b(registres.)236
1715 y(Certains)g(de)e(ces)g(registres)i(son)o(t)e(sp)o(\023)-18
b(ecialis)o(\023)g(es)17 b(directemen)o(t)d(par)g(les)g(constructeurs)g
(de)g(l'unit)o(\023)-18 b(e)14 b(cen-)179 1761 y(trale,)f(d'autres)h
(le)f(son)o(t)h(par)f(le)g(programmeur)i(du)e(no)o(y)o(au.)h(Quelques)g
(registres)g(sp)o(\023)-18 b(ecialis)o(\023)g(es)10 b(:)179
1823 y FC(L'accum)o(ulateur)19 b FB(qui)d(re\030)-17
b(coit)17 b(le)f(r)o(\023)-18 b(esultat)16 b(d'une)g(instruction;)i
(sur)e(les)g(mac)o(hines)h(\022)-19 b(a)15 b(registres)i(m)o(ul-)270
1869 y(tiples,)10 b(le)f(jeu)g(d'instructions)i(p)q(ermet)e(souv)o(en)o
(t)h(d'utiliser)h(n'imp)q(orte)f(lequel)h(des)e(registres)g(comme)270
1915 y(accum)o(ulateur.)179 1977 y FC(le)14 b(registre)i(d'instruction)
j FB(\(qui)14 b(con)o(tien)o(t)g(l'instruction)h(en)f(cours\))179
2039 y FC(le)g(compteur)g(ordinal)20 b FB(\(adresse)14
b(de)g(l'instruction)i(en)e(m)o(\023)-18 b(emoire\))28
b(Ce)14 b(compteur)g(c)o(hange)h(au)f(cours)270 2085
y(de)j(la)h(r)o(\023)-18 b(ealisation)20 b(d'une)d(instruction)j(p)q
(our)d(p)q(oin)o(ter)i(sur)e(la)h(pro)q(c)o(haine)h(instruction)g(\022)
-19 b(a)17 b(ex)o(\023)-18 b(ecu-)270 2130 y(ter,)17
b(la)h(ma)r(jorit)o(\023)-18 b(e)18 b(des)f(instructions)j(ne)d(fon)o
(t)g(qu'incr)o(\023)-18 b(emen)o(ter)19 b(ce)e(compteur,)h(les)g
(instructions)270 2176 y(de)f(branc)o(hemen)o(t)h(r)o(\023)-18
b(ealisen)o(t)18 b(des)f(op)o(\023)-18 b(erations)19
b(plus)e(complexes)i(sur)e(ce)f(compteur:)h(a\013ectation,)270
2222 y(incr)o(\023)-18 b(emen)o(tation)16 b(ou)d(d)o(\023)-18
b(ecr)o(\023)g(emen)o(tation)15 b(plus)f(imp)q(ortan)o(tes.)179
2284 y FC(le)g(registre)i(d'adresse)179 2346 y(les)f(registres)h(de)e
(donn)o(\023)-21 b(ees)21 b FB(qui)e(son)o(t)g(utilis)o(\023)-18
b(es)21 b(p)q(our)e(lire)h(ou)e(\023)-18 b(ecrire)19
b(une)g(donn)o(\023)-18 b(ee)19 b(\022)-19 b(a)19 b(une)g(adresse)270
2392 y(sp)o(\023)-18 b(eci\014)o(\023)g(ee)15 b(en)e(m)o(\023)-18
b(emoire.)179 2454 y FC(les)15 b(registres)h(d')o(\023)-21
b(etat)22 b FB(du)11 b(pro)q(cesseur)d(:)i(\(actif,)h(mo)q(de)h
(\(user/system\),)g(reten)o(ue,)f(v)o(ecteur)g(d'in)o(terrup-)270
2499 y(tions,)j(etc\))179 2562 y FC(les)h(registres)h(d')o(\023)-21
b(etat)15 b(du)f(pro)q(cessus)22 b FB(droits,)14 b(adresses,)f(priorit)
o(\023)-18 b(es,)15 b(etc)179 2624 y(Ces)g(registres)h(formen)o(t)f(le)
h(con)o(texte)f FC(d'unit)o(\023)-21 b(e)16 b(cen)o(trale)h(d'un)f(pro)
q(cessus)p FB(.)31 b(A)15 b(tout)g(momen)o(t,)g(un)179
2669 y(pro)q(cessus)j(est)f(caract)o(\023)-18 b(eris)o(\023)g(e)18
b(par)f(ces)g(deux)h(con)o(textes)7 b(:)17 b(le)g(con)o(texte)h(d'unit)
o(\023)-18 b(e)18 b(cen)o(trale)g(qui)g(est)f(com-)179
2715 y(p)q(os)o(\023)-18 b(e)15 b(des)g(m)o(^)-18 b(emes)15
b(donn)o(\023)-18 b(ees)15 b(p)q(our)h(tous)f(les)g(pro)q(cessus)h(et)e
(le)h(con)o(texte)h(qui)f(d)o(\023)-18 b(ep)q(end)16
b(du)f(co)q(de)g(du)g(pro-)179 2761 y(gramme)e(ex)o(\023)-18
b(ecut)o(\023)g(e.)14 b(P)o(our)f(p)q(ouv)o(oir)i(ex)o(\023)-18
b(ecuter)14 b(un)f(nouv)o(eau)i(pro)q(cessus,)f(il)g(faut)f(p)q(ouv)o
(oir)i FC(sauv)o(egarder)179 2806 y FB(le)g(con)o(texte)f(d'unit)o
(\023)-18 b(e)16 b(cen)o(trale)f(du)g(pro)q(cessus)g(couran)o(t)g
(\(mot)f(d')o(\023)-18 b(etat\),)14 b(puis)h(c)o(harger)g(le)g(nouv)o
(eau)h(mot)p eop
%%Page: 42 50
42 49 bop 75 50 a FD(42)1083 b Fz(CHAPITRE)14 b(6.)27
b(LES)14 b(PR)o(OCESSUS)484 575 y
 currentpoint currentpoint translate 0.53194 0.53194 scale neg exch
neg exch translate
 484 575 a 14 w @beginspecial
0 @llx 0 @lly 423 @urx 203 @ury 4230 @rwi @setspecial
%%BeginDocument: eps/niveauinterruptions.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 423 203 rectclip
-95 -295 translate
95 295 423 203 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 0.329997 def
/crfilred 0.836695 def /crfilgrn 0.836695 def /crfilblu 0.836695 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
1 0 0 1 0 0 sc5mt astore 95.5 295.5 421 201 1 0 0 1 0 -3.814697e-06 sc6mt astore rfill
gsave clpmt currentmatrix pop newpath
1 0 0 1 0 -3.814697e-06 sc5mt astore pop false {
    sc5mt dodrawctm 95.5 295.5 421 201 0 rfpath unpagectm
} {
    421 201 95.5 295.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 0 0] dodrawctm
95.5 295.5 translate

%Version: 2.0
%Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/setcmykcolor{
	1.0 exch sub dup dup 6 -1 roll
	sub dup 0 lt{pop 0}if 5 1 roll
	4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll
	exch sub dup 0 lt{pop 0}if setrgbcolor
}__NXbdef
/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def   
/_NXfstr 128 string dup 0 (_NX) putinterval def   
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {//findfont exec}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {//findfont exec dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXProcArray 5 array __NXdef
/_NXChannels 0 __NXdef
/_NXTotalBytes 0 __NXdef
/_NXDoImageOp{
	1 index{dup}{1}ifelse /_NXChannels exch store
	_NXChannels 2 add 2 roll _NXProcArray 0 _NXChannels getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /_NXTotalBytes exch store pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{	0 1 _NXChannels 1 sub{
			_NXProcArray exch get exec
			length _NXTotalBytes exch sub /_NXTotalBytes exch store}for
		_NXTotalBytes 0 le{exit}if
	}loop /_NXProcArray 5 array def
}__NXbdef
/colorimage{_NXDoImageOp}__NXbdef
/alphaimage{1 add _NXDoImageOp}def

gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/dpHighlight1 {
    aload pop 12 compositerect
} bind def /dpHighlight2 {
    aload pop 12 compositerect 12 compositerect
} bind def /dpHighlight4 {
    aload pop 12 compositerect 12 compositerect 12 compositerect 12 compositerect
} bind def /dpHighlight8 {
    aload pop 12 compositerect 12 compositerect 12 compositerect 12 compositerect 12 compositerect 12 compositerect 12 compositerect 12 compositerect
} bind def /dpShowAt {
    moveto show
} bind def /dpXShow {
    moveto xshow
} bind def /dpXYShow {
    moveto xyshow
} bind def /dpClipShowAt {
    gsave rectclip moveto show grestore
} bind def
gsave
0 0 420.299988 200.300003 rectclip
[1 0 0 -1 0 200.300003] concat
0 0 420.299988 200.300003 rectclip
gsave
31.15 25.15 389 175 rectclip
31.15 25.15 translate
/Times-Roman findfont 18 scalefont [1 0 0 -1 0 0] makefont
76
exch
defineuserobject
76 execuserobject setfont
0 setgray
(horloge) 71 24 dpShowAt
(clockintr) 261 24 dpShowAt
(disques) 72 53 dpShowAt
(diskintr) 265 53 dpShowAt
(console) 71 82 dpShowAt
(ttyintr) 270 82 dpShowAt
(autres peripheriques) 26 111 dpShowAt
(devintr) 267 111 dpShowAt
(appel system) 52 140 dpShowAt
(sottintr) 267 140 dpShowAt
(autre interruption) 36 168 dpShowAt
(otherintr) 262 168 dpShowAt
0 setgray
0.15 setlinewidth
[] 0 setdash
gsave
newpath
systemdict
begin
0 0 389 175 setbbox
0 28.925001 moveto
389 28.925001 lineto
0 57.924999 moveto
389 57.924999 lineto
0 86.924995 moveto
389 86.924995 lineto
0 115.924995 moveto
389 115.924995 lineto
0 144.925003 moveto
389 144.925003 lineto
197.925003 0 moveto
197.925003 175 lineto
end
stroke
grestore
grestore
gsave
31.15 0.15 389 25 rectclip
31.15 0.15 translate
1 setgray
0 0 389 25 rectfill
0.333333 setgray
76 execuserobject setfont
0 setgray
(Nature de l'interruption) 13 20 dpShowAt
(fonction de traitement) 213 20 dpShowAt
0 setgray
0.15 setlinewidth
[] 0 setdash
gsave
newpath
systemdict
begin
0 0 389 25 setbbox
0 24.925001 moveto
389 24.925001 lineto
197.925003 0 moveto
197.925003 25 lineto
end
stroke
grestore
grestore
gsave
0.15 25.15 31 175 rectclip
0.15 25.15 translate
1 setgray
0 0 31 175 rectfill
0.333333 setgray
76 execuserobject setfont
0 setgray
(0) 11 24 dpShowAt
(1) 11 53 dpShowAt
(2) 11 82 dpShowAt
(3) 11 111 dpShowAt
(4) 11 140 dpShowAt
(5) 11 168 dpShowAt
0 setgray
0.15 setlinewidth
[] 0 setdash
gsave
newpath
systemdict
begin
0 0 31 175 setbbox
30.925001 0 moveto
30.925001 175 lineto
0 28.925001 moveto
31 28.925001 lineto
0 57.924999 moveto
31 57.924999 lineto
0 86.924995 moveto
31 86.924995 lineto
0 115.924995 moveto
31 115.924995 lineto
0 144.925003 moveto
31 144.925003 lineto
end
stroke
grestore
grestore
gsave
0 0 420.299988 200.300003 rectclip
newpath
0.15 setlinewidth
0 setgray
31.075001 0.15 moveto
0 25 rlineto
0.15 25.075001 moveto
31 0 rlineto
0.15 0.075 moveto
420 0 rlineto
0.15 200.074997 moveto
420 0 rlineto
0.15 0.075 moveto
0 200 rlineto
420.075012 0.15 moveto
0 200 rlineto
stroke
grestore
grestore
end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 95.5 295.5 421 201 1 0 0 1 0 -3.814697e-06 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 484 575 a
 currentpoint currentpoint translate 1 0.53194 div 1 0.53194 div scale
neg exch neg exch translate
 484 575 a 310 666 a Fq(Fig.)f
FD(6.6)g({)h Fp(Sous)h(UNIX,)f(on)i(tr)n(ouver)n(a)e(en)h(g)o(\023)-20
b(en)o(\023)g(er)n(al)15 b(6)g(nive)n(aux)h(d'interruption)179
799 y FB(d')o(\023)-18 b(etat)15 b(du)h(pro)q(cessus)g(\022)-19
b(a)15 b(ex)o(\023)-18 b(ecuter.)16 b(Cette)f(op)o(\023)-18
b(eration)17 b(d)o(\023)-18 b(elicate)17 b(r)o(\023)-18
b(ealis)o(\023)g(ee)17 b(de)e(fa\030)-17 b(con)16 b(mat)o(\023)-18
b(erielle)17 b(est)e(ap-)179 845 y(p)q(el)o(\023)-18
b(ee)17 b FC(comm)o(utation)f(de)i(mot)g(d')o(\023)-21
b(etat.)17 b FB(Elle)g(doit)g(se)f(faire)h(de)f(fa\030)-17
b(con)16 b(non)g(in)o(terruptibl)q(e)9 b(!)31 b(Cette)179
890 y("Sup)q(er)14 b(instruction")i(utilise)f(2)e(adresses)h(qui)g(son)
o(t)f(resp)q(ectiv)o(emen)o(t)c(:)179 936 y(l'adresse)14
b(de)f(sauv)o(egarde)i(du)e(mot)g(d')o(\023)-18 b(etat)179
982 y(l'adresse)14 b(de)f(lecture)h(du)g(nouv)o(eau)g(mot)f(d')o(\023)
-18 b(etat)236 1073 y(Le)18 b(compteur)g(ordinal)h(faisan)o(t)f(partie)
h(du)f(mot)f(d')o(\023)-18 b(etat,)17 b(ce)g(c)o(hangemen)o(t)i(pro)o
(v)o(o)q(que)f(l'ex)o(\023)-18 b(ecution)179 1119 y(dans)14
b(le)f(nouv)o(eau)i(pro)q(cessus.)236 1165 y(C'est)c(le)h(nouv)o(eau)h
(pro)q(cessus)g(qui)g(devra)f(r)o(\023)-18 b(ealiser)13
b(la)g(sauv)o(egarde)g(du)f(con)o(texte)g(global.)h(En)f(g)o(\023)-18
b(en)o(\023)g(eral)179 1211 y(c'est)12 b(le)i(no)o(y)o(au)g(qui)g(r)o
(\023)-18 b(ealise)15 b(cette)e(sauv)o(egarde,)h(le)f(no)o(y)o(au)h
(n'a)o(y)o(an)o(t)g(pas)f(un)h(con)o(texte)f(du)h(m)o(^)-18
b(eme)13 b(t)o(yp)q(e.)236 1256 y(Le)g(pro)q(cessus)i(in)o(terrompu)f
(p)q(ourra)g(ainsi)h(reprendre)f(exactemen)o(t)g(o)q(\022)-20
b(u)13 b(il)h(a)o(v)n(ait)g(abandonn)o(\023)-18 b(e.)236
1302 y(Les)17 b(fonctions)h FA(setjmp)p FB(/)p FA(longj)o(mp)13
b FB(p)q(ermetten)o(t)18 b(de)f(sauv)o(egarder)h(et)f(de)g(r)o(\023)-18
b(einitiali)q(ser)20 b(le)d(con)o(texte)179 1348 y(d'unit)o(\023)-18
b(e)14 b(cen)o(tral)g(du)f(pro)q(cessus)i(couran)o(t,)e(en)g
(particulier)j(le)e(p)q(oin)o(teur)g(de)g(pile.)179 1480
y Fv(6.8)66 b(Les)22 b(in)n(terruptions)236 1563 y Fx(Une)14
b(interruption)d(est)j(une)f(c)n(ommutation)f(de)i(mot)g(d')o(\023)-19
b(etat)13 b(pr)n(ovo)n(qu)o(\023)-19 b(e)n(e)11 b(p)n(ar)j(un)g(signal)
f(pr)n(o)n(duit)f(p)n(ar)179 1609 y(le)h(mat)o(\023)-19
b(eriel.)179 1654 y FB(Ce)15 b(signal)h(\023)-18 b(etan)o(t)15
b(la)h(cons)o(\023)-18 b(equence)17 b(d'un)d(\023)-18
b(ev)o(\023)g(enemen)o(t)16 b(ext)o(\023)-18 b(erieur)17
b(ou)e(in)o(t)o(\023)-18 b(erieur,)17 b(il)f(mo)q(di\014e)h(l')o(\023)
-18 b(etat)15 b(d'un)179 1700 y(indicateur)g(qui)f(est)f(r)o(\023)-18
b(eguli)o(\022)g(eremen)o(t)15 b(test)o(\023)-18 b(e)13
b(par)h(l'unit)o(\023)-18 b(e)14 b(cen)o(trale.)179 1746
y(Une)g(fois)h(que)f(le)h(signal)h(est)e(d)o(\023)-18
b(etect)o(\023)g(e,)15 b(il)g(faut)f(d)o(\023)-18 b(eterminer)16
b(la)f(cause)f(de)h(l'in)o(terruption.)i(P)o(our)d(cela)h(on)179
1791 y(utilise)e(un)e(indicateur,)h(p)q(our)g(les)f(di\013)o(\023)-18
b(eren)o(tes)13 b(causes,)e(On)f(parle)i(alors)g(du)f
FC(v)o(ecteur)h(d'in)o(terruptions)p FB(.)192 1837 y(T)m(rois)h(grands)
h(t)o(yp)q(es)g(d'in)o(terruptions)9 b(:)230 1900 y({)21
b FC(externes)15 b FB(\(ind)o(\023)-18 b(ep)q(endan)o(tes)15
b(du)f(pro)q(cessus\))g(in)o(terv)o(en)o(tions)i(de)d(l'op)o(\023)-18
b(erateur,)14 b(pannes,etc)230 1963 y({)21 b FC(d)o(\023)-21
b(eroutemen)o(ts)11 b FB(erreur)h(in)o(terne)g(du)g(pro)q(cesseur,)g(d)
o(\023)-18 b(eb)q(ordemen)o(t,)12 b(division)j(par)c(z)o(\023)-18
b(ero,)11 b(page)h(fault)270 2008 y(etc)i(\(causes)h(qui)h(en)o(traine)
g(la)f(r)o(\023)-18 b(ealisation)17 b(d'une)e(sauv)o(egarde)h(sur)e
(disque)i(de)f(l'image)h(m)o(\023)-18 b(emoire)270 2054
y("core)13 b(dump)q(ed")i(en)e(g)o(\023)-18 b(en)o(\023)g(eral\))230
2117 y({)21 b FC(app)q(els)15 b(syst)o(\022)-21 b(emes)15
b FB(demande)f(d'en)o(tr)o(\023)-18 b(ee-sortie)14 b(par)f(exemple.)236
2180 y(Suiv)n(an)o(t)19 b(les)g(mac)o(hines)g(et)e(les)h(syst)o(\022)
-18 b(emes)18 b(un)g(nom)o(bre)g(v)n(ariable)i(de)d(niv)o(eaux)j(d'in)o
(terruption)g(est)179 2225 y(utilis)o(\023)-18 b(e.)236
2271 y(Ces)15 b(di\013)o(\023)-18 b(eren)o(tes)17 b(in)o(terruptions)g
(ne)e(r)o(\023)-18 b(ealisen)o(t)17 b(pas)e(n)o(\023)-18
b(ecessairemen)o(t)17 b(un)e(c)o(hangemen)o(t)h(de)f(con)o(texte)179
2317 y(complet)f(du)f(pro)q(cessus)i(couran)o(t.)236
2363 y(Il)i(est)f(p)q(ossible)j(que)e(plusieurs)i(niv)o(eaux)f(d'in)o
(terruption)h(soien)o(t)e(p)q(ositionn)o(\023)-18 b(es)20
b(quand)d(le)g(syst)o(\022)-18 b(eme)179 2408 y(les)19
b(consulte.)g(C'est)f(le)h(niv)o(eau)h(des)e(di\013)o(\023)-18
b(eren)o(tes)20 b(in)o(terruptions)h(qui)f(v)n(a)e(p)q(ermettre)h(au)g
(syst)o(\022)-18 b(eme)18 b(de)179 2454 y(s)o(\023)-18
b(electionner)15 b(l'in)o(terruption)h(\022)-19 b(a)13
b(traiter)h(en)f(priorit)o(\023)-18 b(e.)236 2500 y(L'horloge)15
b(est)d(l'in)o(terruption)k(la)e(plus)g(prioritaire)i(sur)d(un)h(syst)o
(\022)-18 b(eme)13 b(Unix.)179 2632 y Fv(6.9)66 b(Le)22
b(probl)o(\022)-32 b(eme)23 b(des)f(cascades)e(d'in)n(terrupti)q(ons)
236 2715 y FB(Si)13 b(p)q(endan)o(t)g(le)g(traitemen)o(t)f(d'une)h(in)o
(terruption,)h(une)e(autre)g(in)o(terruption)j(se)d(pro)q(duit,)h(et)f
(que)g(ceci)179 2761 y(se)g(r)o(\023)-18 b(ep)o(\022)g(ete)13
b(p)q(endan)o(t)h(le)f(traitemen)o(t)g(de)f(la)h(nouv)o(elle)i(in)o
(terruption,)g(le)e(syst)o(\022)-18 b(eme)13 b(ne)f(fait)h(plus)g
(progresser)179 2806 y(les)g(pro)q(cessus)i(ni)f(les)f(in)o
(terruptions)j(en)d(cours)h(de)f(traitemen)o(t)h(...)p
eop
%%Page: 43 51
43 50 bop 75 50 a Fz(6.9.)26 b(LE)14 b(PR)o(OBL)385 39
y(\022)380 50 y(EME)h(DES)f(CASCADES)g(D'INTERR)o(UPTIONS)569
b FD(43)484 760 y
 currentpoint currentpoint translate 0.57077 0.57077 scale neg exch
neg exch translate
 484 760 a 14 w @beginspecial 0 @llx
0 @lly 394 @urx 267 @ury 3940 @rwi @setspecial
%%BeginDocument: eps/traitementinterruption.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 393.262421 266.563232 rectclip
-82.570885 -265.5354 translate
82.570885 265.5354 393.262421 266.563232 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1.5 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash true def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
0.8 0 0 0.8 55.767685 79.874634 sc4mt astore 0.8 0 0 0.8 55.767685 79.874634 sc5mt astore 0 -309 212 562 0.8 0 0 0.8 55.767685 79.874634 sc6mt astore ssl
0.8 0 0 0.8 55.767685 79.874634 sc4mt astore 0.8 0 0 0.8 55.767685 79.874634 sc5mt astore 0 -312 408 560 0.8 0 0 0.8 55.767685 79.874634 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(Syst\334me ) [10.007999 0 9 0 7.001999 0 5.993999 0 7.991997 0 14.993996 0 7.991997 0 0 0] 30.259003 568 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 79.767685 62.274635] dotx
/txtdraw true def
/txlndraw true def
( traitement  d'interruption ) [-72.485992 -20.088013 5.004 0 5.994001 0 7.992001 0 5.003998 0 5.003998 0 7.992001 0 14.004002 0 7.991997 0 9 0 5.003998 0 4.5 0 -88.73999 -20.088013 9 0 5.993999 0 5.003998 0 9 0 5.003998 0 7.992001 0 5.993999 0 5.994003 0 9 0 9 0 5.003998 0 5.003998 0 9 0 9 0 0 0] 97.74099 568 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 79.767685 62.274635] dotx
/txtdraw true def
/txlndraw true def
(Processus 1 ) [10.997999 0 7.668001 0 9 0 7.992001 0 7.992001 0 7.002003 0 7.001999 0 10.007996 0 7.001999 0 4.5 0 9 0 0 0] 19.918003 568 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 251.767685 62.634644] dotx
(Processus 2 ) [10.997999 0 7.668001 0 9 0 7.992001 0 7.992001 0 7.002003 0 7.001999 0 10.007996 0 7.001999 0 4.5 0 9 0 0 0] 19.918003 568 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 387.7677 62.634644] dotx
/txtdraw true def
/txlndraw true def
(interruption ) [5.004 0 8.999998 0 5.003998 0 7.992001 0 5.993999 0 5.993999 0 8.999996 0 9 0 5.003998 0 5.003998 0 9 0 9 0 0 0] 21.501999 568 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 248.567688 26.274632] dotx
/strdsh [2 2] def /dshpatoff 0 def
/crendarw true def
0.8 0 0 0.8 55.767685 79.874634 sc4mt astore 0.8 0 0 0.8 55.767685 79.874634 sc5mt astore -133.207092 -29.080414 290 494 0.8 0 0 0.8 55.767685 79.874634 sc6mt astore ssl
(Commutations d'\335tat  ) [12.005997 0 9 0 14.003998 0 14.003998 0 9 0 5.003998 0 7.992004 0 5.003998 0 5.003998 0 9 0 9 0 7.001999 0 4.5 0 9 0 5.993988 0 7.992004 0 5.003998 0 7.992004 0 5.003998 0 4.5 0 0 0] 145.997009 468 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 38.167686 -104.925369] dotx
(Sauvegarde du contexte du Processus 1  traitement  Chargement du contexte du processus 2 ) [10.007999 0 7.992001 0 9 0 8.730003 0 7.722 0 8.910004 0 7.991997 0 5.994003 0 9 0 7.992004 0 -83.277008 -20.088013 9 0 9.000004 0 4.5 0 7.991997 0 9 0 9 0 5.003998 0 7.722 0 9 0 5.003998 0 7.991997 0 -95.102997 -20.088013 9 0 9 0 4.5 0 10.007999 0 5.994003 0 9 0 7.991997 0 7.991997 0 7.001999 0 7.001999 0 9 0 7.001999 0 4.500008 0 9 0 -53.496002 -20.088013 -36.494999 -20.088013 5.004002 0 5.993999 0 7.992001 0 5.003998 0 5.003998 0 7.991997 0 14.003998 0 7.991997 0 9 0 5.003998 0 -36.494987 -20.088013 -43.829998 -20.088013 12.006001 0 9 0 7.991997 0 5.669998 0 9 0 7.991997 0 14.003998 0 7.991997 0 9 0 5.003998 0 -85.436981 -20.088013 9 0 9.000004 0 4.5 0 7.991997 0 9 0 9 0 5.003998 0 7.722 0 9 0 5.003998 0 7.991997 0 -94.598999 -20.088013 9 0 9 0 4.5 0 8.999996 0 5.994003 0 9 0 7.991997 0 7.991997 0 7.001999 0 7.001999 0 9 0 7.001999 0 4.5 0 9 0 0 0] 46.330002 442 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 55.767685 97.474632] dotx
(Acquittement ) [12.995998 0 7.992001 0 9 0 9 0 5.004002 0 5.003998 0 5.003998 0 7.991997 0 14.003998 0 7.991997 0 9 0 5.003998 0 0 0] 15.004002 568 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 244.567688 -123.325363] dotx
0.8 0 0 0.8 55.767685 79.874634 sc4mt astore 0.8 0 0 0.8 55.767685 79.874634 sc5mt astore 287.022583 -20.363098 156 308 0.8 0 0 0.8 69.367683 87.874634 sc6mt astore ssl
/crlinw 2 def
/crlinred 0.665044 def /crlingrn 0.665044 def /crlinblu 0.665044 def /strinclr true def
/usedash false def
/crendarw false def
/crfrtarw true def
/crfilred 0.665044 def /crfilgrn 0.665044 def /crfilblu 0.665044 def /filinclr true def
0.8 0 0 0.8 55.767685 79.874634 sc4mt astore 0.8 0 0 0.8 55.767685 79.874634 sc5mt astore -12.251465 -196.023376 187.251465 451.023376 0.8 0 0 0.8 55.767685 79.874634 sc6mt astore ssl
0.8 0 0 0.8 55.767685 79.874634 sc4mt astore 0.8 0 0 0.8 55.767685 79.874634 sc5mt astore -42.679443 -44.353149 226.679443 302.353149 0.8 0 0 0.8 55.767685 79.874634 sc6mt astore ssl
end
grestore
grestore
%%EndDocument
 @endspecial 484 760 a
 currentpoint currentpoint translate 1 0.57077 div 1 0.57077 div scale
neg exch neg exch translate
 484 760 a 556 851 a Fq(Fig.)13
b FD(6.7)f({)i Fp(L)n(e)h(tr)n(aitement)f(d'une)h(interruption.)236
988 y FB(Il)10 b(est)f(donc)h(n)o(\023)-18 b(ecessaire)11
b(de)f(p)q(ouv)o(oir)h(retarder)f(ou)f(ann)o(uler)i(la)f(prise)h(en)e
(compte)h(d'un)g(ou)f(plusieurs)j(si-)179 1034 y(gnaux)f(d'in)o
(terruptions.)h(C'est)d(le)i(r^)-19 b(ole)10 b(des)h(deux)f(m)o(\023)
-18 b(ecanismes)12 b(de)19 b FC(masquage)12 b FB(et)d(de)20
b FC(d)o(\023)-21 b(esarmemen)o(t)179 1080 y FB(d'un)13
b(niv)o(eau)i(d'in)o(terruption.)g(Masquer,)f(c'est)e(ignorer)j(temp)q
(orairemen)o(t)f(un)g(niv)o(eau)h(d'in)o(terruption.)236
1128 y(Si)i(ce)e(masquage)i(est)e(fait)h(dans)g(le)h(mot)e(d')o(\023)
-18 b(etat)15 b(d'un)h(traitemen)o(t)h(d'in)o(terruption,)g(\022)-19
b(a)16 b(la)g(nouv)o(elle)179 1173 y(comm)o(utation)f(d')o(\023)-18
b(etat,)13 b(le)i(masquage)f(dispara)l(^)-15 b(\020t;)16
b(les)f(in)o(terruptions)h(p)q(euv)o(en)o(t)f(de)f(nouv)o(eau)g(^)-18
b(etre)13 b(prises)179 1219 y(en)i(compte.)g(D)o(\023)-18
b(esarmer,)16 b(c'est)f(rendre)g(le)h(p)q(ositionnemen)o(t)i(de)d(l'in)
o(terruption)j(caduque.)f(\(Il)e(est)g(clair)179 1265
y(que)e(ceci)h(ne)f(p)q(eut)h(s'appliquer)h(aux)f(d)o(\023)-18
b(eroutemen)o(ts\).)179 1387 y Fu(6.9.1)74 b(Etats)18
b(et)g(transitions)g(d'un)h(pro)r(cessus)236 1461 y FB(Nous)14
b(nous)f(pla\030)-17 b(cons)15 b(dans)f(le)f(cas)g(d'un)g(syst)o(\022)
-18 b(eme)14 b(qui)g(utilise)h(un)e(m)o(\023)-18 b(ecanisme)15
b(de)e(sw)o(ap)g(p)q(our)g(g)o(\023)-18 b(erer)179 1506
y(la)12 b(m)o(\023)-18 b(emoire;)12 b(nous)g(\023)-18
b(etudierons)14 b(ensuite)f(le)f(cas)g(des)g(syst)o(\022)-18
b(emes)12 b(de)g(gestion)i(pagin)o(\023)-18 b(ee)13 b(de)f(la)g(m)o
(\023)-18 b(emoire)13 b(\(les)179 1552 y(couples)h(d')o(\023)-18
b(etats)13 b(3,5)g(et)g(4,6)g(y)g(son)o(t)g(fusionn)o(\023)-18
b(es\).)179 1674 y Fu(6.9.2)55 b(Listes)17 b(des)h(\023)-27
b(etats)18 b(d'un)h(pro)r(cessus)219 1748 y FB(1.)i(le)14
b(pro)q(cessus)g(s'ex)o(\023)-18 b(ecute)13 b(en)h(mo)q(de)f
(utilisateur)219 1815 y(2.)21 b(le)14 b(pro)q(cessus)g(s'ex)o(\023)-18
b(ecute)13 b(en)h(mo)q(de)f(no)o(y)o(au)219 1882 y(3.)21
b(le)14 b(pro)q(cessus)g(ne)f(s'ex)o(\023)-18 b(ecute)14
b(pas)f(mais)h(est)e(\023)-18 b(eligible)16 b(\(pr)o(^)-18
b(et)13 b(\022)-19 b(a)13 b(s'ex)o(\023)-18 b(ecuter\))219
1949 y(4.)21 b(le)14 b(pro)q(cessus)g(est)f(endormi)h(en)g(m)o(\023)-18
b(emoire)13 b(cen)o(trale)219 2016 y(5.)21 b(le)c(pro)q(cessus)h(est)e
(pr)o(^)-18 b(et)16 b(mais)i(le)f(sw)o(app)q(eur)g(doit)g(le)g(transf)o
(\023)-18 b(erer)17 b(en)f(m)o(\023)-18 b(emoire)17 b(cen)o(trale)h(p)q
(our)f(le)270 2061 y(rendre)c(\023)-18 b(eligible.)16
b(\(ce)c(mo)q(de)i(est)f(di\013)o(\023)-18 b(eren)o(t)14
b(dans)g(un)g(syst)o(\022)-18 b(eme)13 b(\022)-19 b(a)13
b(pagination\).)219 2128 y(6.)21 b(le)14 b(pro)q(cessus)g(est)f
(endormi)h(en)g(zone)f(de)g(sw)o(ap)g(\(sur)h(disque)g(par)g
(exemple\).)219 2195 y(7.)21 b(le)13 b(pro)q(cessus)h(passe)g(du)f(mo)q
(de)g(no)o(y)o(au)h(au)f(mo)q(de)g(utilisateur)j(mais)d(est)g(pr)o
(\023)-18 b(eempt)o(\023)g(e)1500 2179 y Fs(2)1531 2195
y FB(et)12 b(a)h(e\013ectu)o(\023)-18 b(e)270 2241 y(un)14
b(c)o(hangemen)o(t)g(de)f(con)o(texte)h(p)q(our)e(\023)-18
b(elire)15 b(un)e(autre)g(pro)q(cessus.)219 2308 y(8.)21
b(naissance)16 b(d'un)e(pro)q(cessus,)g(ce)g(pro)q(cessus)h(n'est)e
(pas)h(encore)g(pr)o(^)-18 b(et)14 b(et)g(n'est)f(pas)h(endormi,)h
(c'est)270 2354 y(l')o(\023)-18 b(etat)13 b(initial)j(de)e(tous)f(pro)q
(cessus)h(sauf)f(le)h Fx(swapp)n(eur)p FB(.)219 2421
y(9.)21 b Fx(zombie)27 b FB(le)14 b(pro)q(cessus)h(vien)o(t)g(de)f(r)o
(\023)-18 b(ealiser)16 b(un)e(exit,)g(il)h(appara)l(^)-15
b(\020t)15 b(uniquemen)o(t)h(dans)f(la)f(table)h(des)270
2466 y(pro)q(cessus)i(o)q(\022)-20 b(u)16 b(il)g(est)g(conserv)o(\023)
-18 b(e)16 b(le)g(temps)g(p)q(our)g(son)g(pro)q(cessus)h(p)o(\022)-18
b(ere)15 b(de)h(r)o(\023)-18 b(ecup)o(\022)g(erer)16
b(le)g(co)q(de)g(de)270 2512 y(retour)e(et)g(d'autres)g(informations)h
(de)f(gestion)h(\(co)q(^)-20 b(ut)14 b(de)g(l'ex)o(\023)-18
b(ecution)16 b(sous)e(forme)f(de)h(temps,)g(et)270 2558
y(d'utilisatio)q(n)i(des)d(ressources)h(\).)179 2638
y(L')o(\023)-18 b(etat)12 b Fx(zombie)g FB(est)h(l')o(\023)-18
b(etat)13 b(\014nal)h(des)g(pro)q(cessus,)g(les)f(pro)q(cessus)i
(resten)o(t)e(dans)h(cet)e(\023)-18 b(etat)13 b(jusqu'\022)-19
b(a)13 b(ce)g(que)179 2683 y(leur)h(p)o(\022)-18 b(ere)13
b(lise)h(leur)g(v)n(aleur)g(de)g(retour)f(\(exit)h(status\).)p
75 2729 705 2 v 120 2767 a Fo(2.)8 b(Bien)13 b(que)g(le)h(pro)q(cessus)
e(soit)h(pr)o(^)-17 b(et,)13 b(il)h(est)f(retir)o(\023)-17
b(e)13 b(de)g(l'unit)o(\023)-17 b(e)12 b(de)i(traitemen)o(t)d(p)q(our)i
(que)g(les)g(autres)g(pro)q(cessus)f(puissen)o(t)75 2806
y(a)o(v)n(ancer.)p eop
%%Page: 44 52
44 51 bop 75 50 a FD(44)1083 b Fz(CHAPITRE)14 b(6.)27
b(LES)14 b(PR)o(OCESSUS)425 1297 y
 currentpoint currentpoint translate 0.55183 0.55183 scale neg exch
neg exch translate
 425 1297 a 14 w @beginspecial
0 @llx 0 @lly 459 @urx 510 @ury 4590 @rwi @setspecial
%%BeginDocument: eps/etats.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /estroke {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /efill {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath unpagectm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /apstroke {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc pie chord or {
        closepath
    } if crlinalph setalpha pie not chord not and {
        crfrtarw {
            2 copy crlinw exch gsave newpath angle1 1 add cos radius mul radius add angle1 1 add sin radius mul radius add moveto angle1 cos radius mul radius add angle1 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if crendarw {
            2 copy crlinw exch gsave newpath angle2 1 sub cos radius mul radius add angle2 1 sub sin radius mul radius add moveto angle2 cos radius mul radius add angle2 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if
    } if crlincp setlinecap crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /apfill {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup 5 -2 roll arc pie chord or {
        closepath
    } if 1 xscale div 1 yscale div scale crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /mkepath {
    dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def /closed exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc closed pie or chord or {
        closepath
    } if unpagectm
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 459 509.646027 rectclip
-77 -158 translate
77 158 459 509.646027 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 3 def
/crlinalph 1 def
/crlinred 0.666662 def /crlingrn 0.666662 def /crlinblu 0.666662 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1.5 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore 33.034058 1 -1 181 625 0.484348 0 0 0.435914 14.43499 168.135941 sc5mt astore estroke
/txtdraw true def
/txlndraw true def
(9 ) [9 0 0 0] 197 602 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 -43.497952 -59.417969] dotx
/crlinw 2.1 def
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore 33.034058 1 -1 181 625 0.484348 0 0 0.435914 201.634979 356.935974 sc5mt astore estroke
(1 ) [9 0 0 0] 197 602 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 143.702057 129.38205] dotx
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore 33.034058 1 -1 181 625 0.484348 0 0 0.435914 148.834991 266.53595 sc5mt astore estroke
(2 ) [9 0 0 0] 197 602 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 90.902046 38.982033] dotx
/crlinw 1.5 def
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore 33.034058 1 -1 181 625 0.484348 0 0 0.435914 236.834991 121.735939 sc5mt astore estroke
(3 ) [9 0 0 0] 197 602 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 178.902054 -105.81797] dotx
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore 33.034058 1 -1 181 625 0.484348 0 0 0.435914 72.034988 84.94635 sc5mt astore estroke
/txtdraw true def
/txlndraw true def
(4 ) [9 0 0 0] 197 602 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 14.102049 -142.607559] dotx
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore 33.034058 1 -1 181 625 0.484348 0 0 0.435914 244.834991 -69.464066 sc5mt astore estroke
/txtdraw true def
/txlndraw true def
(5 ) [9 0 0 0] 197 602 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 186.902054 -297.017975] dotx
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore 33.034058 1 -1 181 625 0.484348 0 0 0.435914 94.43499 -68.664047 sc5mt astore estroke
(6 ) [9 0 0 0] 197 602 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 36.502045 -296.217957] dotx
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore 33.034058 1 -1 181 625 0.484348 0 0 0.435914 318.434998 207.335938 sc5mt astore estroke
(7 ) [9 0 0 0] 197 602 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 260.502045 -20.217964] dotx
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore 33.034058 1 -1 181 625 0.484348 0 0 0.435914 342.434967 25.735947 sc5mt astore estroke
(8 ) [9 0 0 0] 197 602 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 284.502045 -201.817963] dotx
/txtdraw true def
/crtxtred 0.334956 def /crtxtgrn 0.334956 def /crtxtblu 0.334956 def /txtinclr true def
/txlndraw true def
(Ex\335cution en mode utilisateur ) [12.005997 0 8.999985 0 7.992004 0 7.992004 0 10.007996 0 5.993988 0 5.003998 0 9 0 10.007996 0 -77.003967 -20.754028 7.992004 0 10.007996 0 4.5 0 14.993988 0 9 0 10.007996 0 7.992004 0 4.5 0 10.007996 0 5.993988 0 5.003998 0 5.003998 0 5.003998 0 7.002014 0 9 0 5.993988 0 7.992004 0 10.007996 0 7.992004 0 0 0] 238 697 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 84.502045 94.98204] dotx
/txtdraw true def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txlndraw true def
(Retour au mode utilisateur ) [12.006012 0 7.992004 0 5.003998 0 9 0 9 0 5.993988 0 4.5 0 7.992004 0 9 0 -70.488007 -20.088013 14.003998 0 9 0 9 0 7.992004 0 4.5 0 9 0 5.003998 0 5.003998 0 5.003998 0 5.003998 0 7.002014 0 7.992004 0 5.003998 0 7.992004 0 9 0 5.993988 0 0 0] 395 634 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 50.902046 69.382034] dotx
(Appel system interruption ) [12.996002 0 9 0 9 0 7.992004 0 5.003998 0 4.5 0 7.001999 0 9 0 7.001999 0 5.003998 0 7.992004 0 14.003998 0 -98.496002 -20.088013 5.003998 0 9 0 5.003998 0 7.992004 0 5.994003 0 5.994003 0 9 0 9 0 5.003998 0 5.003998 0 9 0 9 0 0 0] 167 653 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 74.902046 78.98204] dotx
/crendarw true def
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore -42.483109 -73.215576 292 654 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore 38.654968 70.118347 257 567 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
/crendarw false def
/crfrtarw true def
0.8 0 0 0.8 61.302048 82.182037 sc5mt astore crlinw 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore 233.132141 514.014526 233.302048 514.182007 arow
false 0.8 0 0 0.8 49.302048 47.782036 sc5mt astore sstrt
systemdict
begin
134 536 261 646 setbbox
230 583 moveto
223 576 208 571 198 570 curveto
188 569 173 569 169 582 curveto
165 595 176 608 190 611 curveto
204 614 223 605 233 597 curveto
end
/nspans 4 def 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore splstroke
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore 117.405548 -147.950073 326.594452 645.950073 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
/crendarw true def
/crfrtarw false def
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore 162.62027 -63.716705 261 548 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
/txtdraw true def
/crtxtred 0.334956 def /crtxtgrn 0.334956 def /crtxtblu 0.334956 def /txtinclr true def
/txlndraw true def
(Pr\335empt\335 ) [10.997986 0 7.992004 0 7.992004 0 7.992004 0 14.993988 0 10.007996 0 5.993988 0 7.992004 0 0 0] 446 532 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 86.102051 35.782036] dotx
(Pr\336t et en m\335moire ) [10.997986 0 7.992004 0 7.992004 0 5.993988 0 4.5 0 7.992004 0 5.993988 0 4.5 0 7.992004 0 10.007996 0 4.5 0 14.994019 0 7.992004 0 14.994019 0 9 0 5.004028 0 7.66803 0 7.992004 0 0 0] 434 422 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 17.302048 34.182037] dotx
(zombie ) [7.992001 0 9 0 14.993999 0 10.008003 0 5.003998 0 7.991997 0 0 0] 41 533 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 56.502048 23.782036] dotx
(Endormi  en m\335moire ) [12.005997 0 10.007996 0 10.007996 0 9 0 7.992004 0 14.994003 0 5.003998 0 4.5 0 -73.511993 -20.753998 7.991997 0 10.008003 0 4.5 0 14.994003 0 7.992004 0 14.994003 0 9 0 5.003998 0 7.667999 0 7.992004 0 0 0] 114 332 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 -6.697952 80.582031] dotx
(Endormi  en zone de swap ) [12.005997 0 10.007996 0 10.007996 0 9 0 7.992004 0 14.994003 0 5.003998 0 4.5 0 -73.511993 -20.753998 7.991997 0 10.008003 0 4.5 0 7.992004 0 9 0 10.007996 0 7.992004 0 4.5 0 10.007996 0 7.992004 0 4.5 0 7.001999 0 12.996002 0 9 0 10.007996 0 0 0] 114 332 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 -5.897957 -77.01796] dotx
(Pr\336t  en zone de swap ) [10.998001 0 7.992004 0 7.992004 0 5.994003 0 4.5 0 -37.476013 -20.753998 7.991997 0 10.008003 0 4.5 0 7.992004 0 9 0 10.007996 0 7.992004 0 4.5 0 10.007996 0 7.992004 0 4.5 0 7.001999 0 12.996002 0 9 0 10.007996 0 0 0] 114 332 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 282.902039 -73.817963] dotx
/crlinred 0.334956 def /crlingrn 0.334956 def /crlinblu 0.334956 def /strinclr true def
/crendarw false def
false 0.8 0 0 0.8 61.302048 53.382034 sc5mt astore sstrt
systemdict
begin
-119.757019 73.567383 696.61731 313.336456 setbbox
20 265 moveto
20 265 204 257 242 258 curveto
280 259 451 219 485 204 curveto
519 189 593 132 593 132 curveto
end
/nspans 3 def 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore splstroke
/crlinw 2.1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfrtarw true def
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore 79.669556 -137.105713 259.330444 526.105713 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
(Ex\335cution en mode noyau ) [12.005997 0 9 0 7.991989 0 7.992004 0 10.007996 0 5.993988 0 5.003998 0 9 0 10.007996 0 -77.003967 -20.754028 7.992004 0 10.007996 0 4.5 0 14.993988 0 9 0 10.007996 0 7.992004 0 4.5 0 10.007996 0 9 0 9 0 9 0 10.007996 0 0 0] 228 555 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 -39.497955 116.582039] dotx
/crendarw true def
/crfrtarw false def
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore -84.090454 -84.090454 467 239 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
(Cr\335ation ) [12.995972 0 7.992004 0 7.992004 0 9 0 5.994019 0 5.004028 0 9 0 10.007996 0 0 0] 512 296 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 24.502048 66.98204] dotx
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore -79.400024 0 593 253 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
/txtdraw true def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txlndraw true def
(fork ) [5.994019 0 9 0 5.994019 0 9 0 0 0] 530 300 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 63.702049 50.182037] dotx
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore -133.248657 -81.429718 230 531 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
(exit ) [7.722 0 9 0 5.003998 0 5.003998 0 0 0] 141 541 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 41.302048 35.782036] dotx
(gestion interruption ) [9 0 7.991997 0 7.001999 0 5.003998 0 5.003998 0 9 0 9 0 -68.498993 -20.088013 5.003998 0 9 0 5.003998 0 7.991997 0 5.994003 0 5.994003 0 9 0 9 0 5.003998 0 5.004005 0 9 0 9 0 0 0] 77.999001 623 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 66.102051 22.982037] dotx
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore -84.58284 -177.623962 235 533 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
(sleep ) [7.001999 0 5.003998 0 7.992004 0 7.992004 0 9 0 0 0] 134.505005 451 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 61.302048 53.382034] dotx
(wakeup ) [12.815994 0 7.992004 0 8.820007 0 7.992004 0 9 0 9 0 0 0] 179.190002 368 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 82.102051 67.782036] dotx
(wakeup ) [12.815994 0 7.992004 0 8.820007 0 7.992004 0 9 0 9 0 0 0] 179.190002 368 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 102.902054 -94.617966] dotx
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore 151.741821 36.084961 166 325 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore 21.184952 -145.531403 145 310 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore 132.400024 0 192 132 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore 7.498901 -188.409958 341 354 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore -8.436371 188.412598 364 152 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
/crendarw false def
/crfrtarw true def
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore 91.912323 -88.272217 374.087677 353.272217 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
(pr\335emption ) [9 0 5.993988 0 7.992004 0 7.992004 0 14.003998 0 9 0 5.003998 0 5.003998 0 9 0 9 0 0 0] 258.005005 590 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 94.902054 39.782036] dotx
/crlinw 3 def
/crlinred 0.334956 def /crlingrn 0.334956 def /crlinblu 0.334956 def /strinclr true def
/usedash true def
/crfrtarw false def
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore -93 -99 433 488 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
(ordonancement du processus ) [9 0 5.993988 0 9 0 9 0 9 0 7.992004 0 9 0 7.992004 0 7.992004 0 14.003998 0 7.992004 0 9 0 5.003998 0 -101.72702 -20.088013 9 0 9 0 4.5 0 9 0 5.993988 0 9 0 7.992004 0 7.992004 0 7.002014 0 7.002014 0 9 0 7.002014 0 0 0] 280.515015 462 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 84.502045 66.98204] dotx
/txtdraw true def
/crtxtred 0.334956 def /crtxtgrn 0.334956 def /crtxtblu 0.334956 def /txtinclr true def
/txlndraw true def
(centrale ) [8.896001 0 8.896001 0 9.776001 0 5.327999 0 6.223999 0 8.896 0 4.448002 0 8.896 0 0 0] 0.319998 288 /Helvetica-Bold [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 84.502045 42.182037] dotx
(swap ) [8.656 0 12.448 0 8.896 0 9.776001 0 0 0] 14.112 247 /Helvetica-Bold [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 74.902046 53.382034] dotx
/txtdraw true def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txlndraw true def
(swapout ) [7.001999 0 12.815994 0 7.992004 0 9 0 9 0 9 0 5.003998 0 0 0] 140.093002 298 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 74.102051 64.582039] dotx
(swapout ) [7.001999 0 12.815994 0 7.992004 0 9 0 9 0 9 0 5.003998 0 0 0] 140.093002 298 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 173.302048 68.582039] dotx
(swapin ) [7.001999 0 12.815994 0 7.992004 0 9 0 5.003998 0 9 0 0 0] 144.593002 298 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 238.902054 51.782036] dotx
(m\335moire suffisante ) [14.003998 0 7.992004 0 14.003998 0 9 0 5.003998 0 5.993988 0 7.992004 0 -66.582001 -20.088013 7.002014 0 9 0 5.544006 0 5.634003 0 5.003998 0 7.002014 0 7.992004 0 9 0 5.003998 0 7.992004 0 0 0] 376.005005 375 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 101.302048 42.982037] dotx
(m\335moire insuffisante ) [14.003998 0 7.992004 0 14.003998 0 9 0 5.003998 0 5.993988 0 7.992004 0 -73.583984 -20.088013 5.003998 0 9 0 7.002014 0 9 0 5.544006 0 5.634003 0 5.003998 0 7.002014 0 7.992004 0 9 0 5.003998 0 7.992004 0 0 0] 376.005005 375 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 118.902054 -52.217972] dotx
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore -108 -114 467 471 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
gsave /offs [12.006012 0 9 0 9 0 14.993988 0 5.003998 0 10.007996 0 7.992004 0 7.992004 0 -75.996002 -20.754028 5.003998 0 7.992004 0 7.002014 0 4.5 0 7.002014 0 5.003998 0 9 0 10.007996 0 9 0 10.007996 0 9 0 0 0] def /nof 0 def [0.8 0 0 0.8 -117.897949 -48.217972] concat /Times-Bold [ 18 1 mul 0 0 18 0 0 ] selectfont 0.5 setlinewidth newpath 436 567 moveto 1 1 (Examiner les signaux ) length {
    gsave 1 sub (Examiner les signaux ) exch 1 getinterval txtdraw {
        dup txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha currentpoint 3 -1 roll show moveto
    } if txlndraw {
        dup false charpath txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha stroke
    } if pop grestore offs nof 2 getinterval aload pop rmoveto /nof nof 2 add def
} for grestore
gsave /offs [12.006012 0 9 0 9 0 14.993988 0 5.003998 0 10.007996 0 7.992004 0 7.992004 0 -75.996002 -20.754028 7.992004 0 5.993988 0 4.5 0 5.993988 0 7.992004 0 9 0 5.003998 0 5.993988 0 7.992004 0 7.992004 0 -68.453979 -20.754028 5.003998 0 7.992004 0 7.002014 0 4.5 0 7.002014 0 5.003998 0 9 0 10.007996 0 9 0 10.007996 0 9 0 0 0] def /nof 0 def [0.8 0 0 0.8 74.902046 194.182037] concat /Times-Bold [ 18 1 mul 0 0 18 0 0 ] selectfont 0.5 setlinewidth newpath 436 567 moveto 1 1 (Examiner et traiter les signaux ) length {
    gsave 1 sub (Examiner et traiter les signaux ) exch 1 getinterval txtdraw {
        dup txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha currentpoint 3 -1 roll show moveto
    } if txlndraw {
        dup false charpath txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha stroke
    } if pop grestore offs nof 2 getinterval aload pop rmoveto /nof nof 2 add def
} for grestore
/crlinred 0.666662 def /crlingrn 0.666662 def /crlinblu 0.666662 def /strinclr true def
/usedash false def
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore -55 26 249 422 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore 49 35 247 422 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore -158 -55 447 677 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
0.8 0 0 0.8 61.302048 82.182037 sc4mt astore 0.8 0 0 0.8 61.302048 82.182037 sc5mt astore -98 -49 447 676 0.8 0 0 0.8 61.302048 82.182037 sc6mt astore ssl
end
grestore
grestore
%%EndDocument
 @endspecial 425 1297 a
 currentpoint currentpoint translate 1 0.55183 div 1 0.55183 div scale
neg exch neg exch translate
 425 1297 a 569 1389 a Fq(Fig.)f
FD(6.8)g({)h Fp(Diagr)n(amme)g(d')o(\023)-20 b(etat)15
b(des)g(pr)n(o)n(c)n(essus)179 1549 y Fv(6.10)66 b(Lecture)23
b(du)g(diagramme)f(d')o(\023)-32 b(etat.)236 1656 y FB(Le)12
b(diagramme)i(des)e(transitions)j(d')o(\023)-18 b(etat)12
b(p)q(ermet)g(de)h(d)o(\023)-18 b(ecrire)13 b(l'ensem)o(ble)h(des)d
(\023)-18 b(etats)12 b(p)q(ossibles)j(d'un)179 1701 y(pro)q(cessus.)d
(Il)h(est)e(clair)i(que)g(tout)e(pro)q(cessus)i(ne)f(passera)h(pas)f(n)
o(\023)-18 b(ecessairemen)o(t)14 b(par)e(tous)g(ces)g(di\013)o(\023)-18
b(eren)o(ts)178 1747 y(\023)g(etats.)236 1806 y(La)16
b(naissance)h(d'un)f(pro)q(cessus)h(a)e(lieu)i(dans)f(l')o(\023)-18
b(etat)16 b(8)f(apr)o(\022)-18 b(es)16 b(l'app)q(el)i(syst)o(\022)-18
b(eme)15 b FA(fork)f FB(ex)o(\023)-18 b(ecut)o(\023)g(e)16
b(par)179 1852 y(un)e(autre)h(pro)q(cessus.)g(Il)f(devien)o(t)i(au)e(b)
q(out)h(d'un)f(certain)h(temps)g("pr)o(^)-18 b(et)14
b(\022)-19 b(a)14 b(s'ex)o(\023)-18 b(ecuter".)14 b(Il)h(passe)f(alors)
179 1898 y(dans)g(l')o(\023)-18 b(etat)13 b("ex)o(\023)-18
b(ecut)o(\023)g(e)14 b(en)f(mo)q(de)g(no)o(y)o(au")h(o)q(\022)-20
b(u)14 b(il)g(termine)g(sa)f(partie)h(de)f(l'app)q(el)i(syst)o(\022)-18
b(eme)13 b FA(fork)p FB(.)e(Puis)j(le)179 1943 y(pro)q(cessus)h
(termine)f(l'app)q(el)i(syst)o(\022)-18 b(eme)14 b(et)g(passe)g(dans)h
(l')o(\023)-18 b(etat)14 b("ex)o(\023)-18 b(ecut)o(\023)g(e)14
b(en)g(mo)q(de)g(utilisateur".)30 b(P)o(ass)o(\023)-18
b(e)179 1989 y(une)12 b(certaine)h(p)o(\023)-18 b(erio)q(de)13
b(de)f(temps)h(\(v)n(ariable)g(d'un)g(syst)o(\022)-18
b(eme)12 b(\022)-19 b(a)12 b(l'autre\),)g(l'horloge)h(p)q(eut)g
Fk(in)o(terrompre)g FB(le)179 2035 y(pro)q(cesseur.)i(Le)f(pro)q
(cessus)i(ren)o(tre)e(alors)i(en)e(mo)q(de)h(no)o(y)o(au,)g(l'in)o
(terruption)i(est)d(alors)h(r)o(\023)-18 b(ealis)o(\023)g(ee)16
b(a)o(v)o(ec)f(le)179 2080 y(pro)q(cessus)f(en)f(mo)q(de)h(no)o(y)o
(au.)236 2140 y(Au)d(retour)g(de)g(l'in)o(terruption,)i(le)e(pro)q
(cessus)h(p)q(eut)e(^)-18 b(etre)10 b FA(pr\023)-20 b(eempt\023)g(e)7
b FB(\()o(\023)-18 b(etan)o(t)11 b(rest)o(\023)-18 b(e)11
b(tout)f(son)h(quan)o(tum)179 2185 y(de)19 b(temps)g(sur)g(le)g(cpu\),)
g(c'est)g(\022)-19 b(a)19 b(dire,)g(il)h(reste)f(pr)o(^)-18
b(et)19 b(\022)-19 b(a)19 b(s'ex)o(\023)-18 b(ecuter)19
b(mais)h(un)f(autre)g(pro)q(cessus)i(est)178 2231 y(\023)-18
b(elu.)16 b(Cet)d(\023)-18 b(etat)16 b(7)f(est)g(logiquemen)o(t)i(\023)
-18 b(equiv)n(alen)o(t)18 b(\022)-19 b(a)15 b(l')o(\023)-18
b(etat)16 b(3,)f(mais)h(il)g(existe)h(p)q(our)f(mat)o(\023)-18
b(erialiser)17 b(le)f(fait)179 2277 y(qu'un)k(pro)q(cessus)g(ne)f(p)q
(eut)g(^)-18 b(etre)19 b(pr)o(\023)-18 b(eempt)o(\023)g(e)20
b(qu'au)f(momen)o(t)h(o)q(\022)-20 b(u)19 b(il)h(retourne)g(du)g(mo)q
(de)f(no)o(y)o(au)h(au)179 2322 y(mo)q(de)c(utilisateur.)i(Quand)f(un)f
(pro)q(cessus)h(pr)o(\023)-18 b(eempt)o(\023)g(e)16 b(est)g(r)o(\023)
-18 b(e)o(\023)g(elu,)16 b(il)h(retourne)f(directemen)o(t)h(en)f(mo)q
(de)179 2368 y(utilisateur.)236 2427 y(Un)h(app)q(el)h(syst)o(\022)-18
b(eme)17 b(ne)g(p)q(eut)g(^)-18 b(etre)16 b(pr)o(\023)-18
b(eempt)o(\023)g(e.)17 b(On)g(p)q(eut)g(d)o(\023)-18
b(etecter)17 b(en)g(pratique)h(cette)f(r)o(\022)-18 b(egle,)17
b(en)179 2473 y(e\013et)e(on)g(constate)h(un)f(ralen)o(tissemen)o(t)i
(du)f(d)o(\023)-18 b(ebit)16 b(de)f(la)g(mac)o(hine)h(p)q(endan)o(t)h
(la)e(r)o(\023)-18 b(ealisation)18 b(d'un)d(core)179
2519 y(de)e(grande)h(taille.)236 2578 y(Quand)g(un)f(pro)q(cessus)h(ex)
o(\023)-18 b(ecute)14 b(un)f(app)q(el)h(syst)o(\022)-18
b(eme,)13 b(il)h(passe)f(du)g(mo)q(de)h(utilisateur)h(au)e(mo)q(de)g
(sys-)179 2624 y(t)o(\022)-18 b(eme.)10 b(Supp)q(osons)k(que)d(l'app)q
(el)i(syst)o(\022)-18 b(eme)12 b(r)o(\023)-18 b(ealise)12
b(une)g(en)o(tr)o(\023)-18 b(ee-sortie)12 b(sur)g(le)f(disque)i(et)e
(que)h(le)f(pro)q(cessus)179 2669 y(doiv)o(e)j(attendre)g(la)f(\014n)g
(de)h(l'en)o(tr)o(\023)-18 b(ee-sortie.)14 b(Le)e(pro)q(cessus)j(est)d
(mis)i(en)f(sommeil)i(\(sleep\))e(et)g(passe)h(dans)179
2715 y(l')o(\023)-18 b(etat)14 b(endormi)h(en)f(m)o(\023)-18
b(emoire.)14 b(Quand)h(l'en)o(tr)o(\023)-18 b(ee-sortie)15
b(se)e(termine,)i(une)f(in)o(terruption)i(a)e(lieu,)h(le)f(trai-)179
2761 y(temen)o(t)f(de)g(l'in)o(terruption)j(consistan)o(t)f(\022)-19
b(a)13 b(faire)g(passer)h(le)g(pro)q(cessus)g(dans)g(le)f(mo)q(de)h(pr)
o(^)-18 b(et)13 b(\022)-19 b(a)13 b(s'ex)o(\023)-18 b(ecuter)179
2806 y(\(en)13 b(m)o(\023)-18 b(emoire\).)p eop
%%Page: 45 53
45 52 bop 75 50 a Fz(6.11.)26 b(UN)14 b(EXEMPLE)h(D'EX)594
39 y(\023)589 50 y(ECUTION)1010 b FD(45)179 166 y Fv(6.11)66
b(Un)22 b(exemple)h(d'ex)o(\023)-32 b(ecution)236 258
y FB(Pla\030)-17 b(cons-nous)21 b(dans)e(la)g(situation)i(suiv)n(an)o
(te)8 b(:)17 b(l'ensem)o(ble)j(de)f(la)g(m)o(\023)-18
b(emoire)19 b(est)f(o)q(ccup)o(\023)-18 b(e)20 b(par)e(des)179
304 y(pro)q(cessus,)e(mais,)f(le)h(pro)q(cessus)g(le)g(plus)g
(prioritaire)i(est)d(un)h(pro)q(cessus)g(dans)g(l')o(\023)-18
b(etat)15 b(5,)g(soit)8 b(:)14 b("pr)o(^)-18 b(et)16
b(\022)-19 b(a)179 350 y(s'ex)o(\023)h(ecuter)13 b(en)h(zone)f(de)h(sw)
o(ap".)f(P)o(our)h(p)q(ouv)o(oir)h(ex)o(\023)-18 b(ecuter)13
b(ce)h(pro)q(cessus,)g(il)g(faut)f(le)h(placer)g(dans)g(l')o(\023)-18
b(etat)179 395 y(3,)11 b(soit)d(:)j("pr)o(^)-18 b(et)12
b(\022)-19 b(a)12 b(s'ex)o(\023)-18 b(ecuter)13 b(en)f(m)o(\023)-18
b(emoire".)12 b(P)o(our)h(cela)f(le)h(syst)o(\022)-18
b(eme)12 b(doit)h(lib)o(\023)-18 b(erer)14 b(de)e(la)g(m)o(\023)-18
b(emoire)13 b(\(faire)179 441 y(de)f(la)h(place\),)g(en)g(faisan)o(t)g
(passer)g(des)f(pro)q(cessus)i(des)e(\023)-18 b(etats)12
b(3)g(ou)h(4)f(en)g(zone)h(de)g(sw)o(ap)f(\(sw)o(ap)q(out\))h(donc)179
487 y(les)g(faire)h(passer)g(dans)f(les)g(\023)-18 b(etats)13
b(5)g(et)g(6.)179 538 y(C'est)f(au)h(sw)o(app)q(eur)h(de)g(r)o(\023)-18
b(ealiser)14 b(les)g(deux)g(op)o(\023)-18 b(erations)8
b(:)230 616 y({)21 b(S)o(\023)-18 b(electionner)13 b(une)d(victime)i
(\(le)e(pro)q(cessus)h(le)g(plus)g(appropri)o(\023)-18
b(e\),)12 b(p)q(our)f(un)f(transfert)g(hors)h(m)o(\023)-18
b(emoire)270 661 y(cen)o(trale)14 b(\(sw)o(ap)q(out\).)230
734 y({)21 b(r)o(\023)-18 b(ealiser)15 b(ce)e(transfert.)230
807 y({)21 b(une)15 b(fois)h(qu'une)f(place)h(su\016san)o(te)g(est)f
(lib)o(\023)-18 b(er)o(\023)g(ee,)16 b(le)g(pro)q(cessus)g(qui)g(a)e
(pro)o(v)o(o)q(qu)o(\023)-18 b(e)17 b(le)e(sw)o(ap)q(out)h(est)270
853 y(c)o(harg)o(\023)-18 b(e)14 b(en)f(m)o(\023)-18
b(emoire)14 b(\(sw)o(apin\).)236 931 y(Le)j(pro)q(cessus)h(a)f(un)g
(con)o(tr^)-19 b(ole)18 b(sur)f(un)g(nom)o(bre)g(r)o(\023)-18
b(eduit)18 b(de)f(transitions)9 b(:)16 b(il)i(p)q(eut)f(faire)g(un)g
(app)q(el)179 976 y(syst)o(\022)-18 b(eme,)17 b(r)o(\023)-18
b(ealiser)20 b(un)e FA(exit)p FB(,)d(r)o(\023)-18 b(ealiser)19
b(un)f FA(sleep)p FB(,)d(les)k(autres)f(transitions)h(lui)g(son)o(t)f
(dict)o(\023)-18 b(ees)19 b(par)f(les)179 1022 y(circonstances.)236
1073 y(L'app)q(el)e(\022)-19 b(a)15 b FA(exit\(\))e FB(fait)i(passer)g
(dans)h(l')o(\023)-18 b(etat)15 b(zom)o(bie,)h(il)g(est)f(p)q(ossible)i
(de)e(passer)g(\022)-19 b(a)15 b(l')o(\023)-18 b(etat)15
b(zom)o(bie)179 1119 y(sans)e(que)h(le)f(pro)q(cessus)h(ait)f
(explicitement)i(app)q(el)o(\023)-18 b(e)14 b FA(exit\(\))d
FB(\(\022)-19 b(a)13 b(la)g(r)o(\023)-18 b(eception)14
b(de)f(certains)h(signaux)h(par)179 1164 y(exemple\).)21
b(T)m(outes)11 b(les)g(autres)f(transitions)j(d')o(\023)-18
b(etat)10 b(son)o(t)h(s)o(\023)-18 b(electionn)o(\023)g(ees)13
b(et)d(r)o(\023)-18 b(ealis)o(\023)g(ees)12 b(par)f(le)g(no)o(y)o(au)g
(selon)179 1210 y(des)h(r)o(\022)-18 b(egles)13 b(bien)h(pr)o(\023)-18
b(ecises.)13 b(Une)f(de)g(ces)h(r)o(\022)-18 b(egles)13
b(est)f(par)g(exemple)i(qu'un)f(pro)q(cessus)g(en)g(mo)q(de)f(no)o(y)o
(au)h(ne)179 1256 y(p)q(eut)e(^)-18 b(etre)12 b(pr)o(\023)-18
b(eempt)o(\023)g(e)502 1240 y Fs(3)520 1256 y FB(.)11
b(Certaines)i(de)f(ces)g(r)o(\022)-18 b(egles)13 b(son)o(t)f(d)o(\023)
-18 b(e\014nies)14 b(par)e(l'algorithme)i(d'ordonnancemen)o(t)179
1301 y(utilis)o(\023)-18 b(e.)179 1458 y Fv(6.12)66 b(La)22
b(table)h(des)f(pro)r(cessus)236 1550 y FB(La)14 b(table)g(des)f(pro)q
(cessus)i(est)e(dans)h(la)g(m)o(\023)-18 b(emoire)14
b(du)f(no)o(y)o(au.)h(C'est)f(un)g(tableau)i(de)e(structure)h(pro)q(c)
179 1596 y(\()p FA(<sys/proc)o(.h)o(>)p FB(\).)6 b(Cette)j(structure)i
(con)o(tien)o(t)g(les)f(informations)i(qui)f(doiv)o(en)o(t)g(toujours)f
(^)-18 b(etre)9 b(accessibles)179 1641 y(par)k(le)h(no)o(y)o(au.)178
1720 y FC(\023)-21 b(etat)22 b FB(se)13 b(rep)q(orter)i(au)f
(diagramme,)g(ce)g(c)o(hamp)g(p)q(ermet)g(au)g(no)o(y)o(au)h(de)f
(prendre)h(des)f(d)o(\023)-18 b(ecisions)16 b(sur)e(les)270
1765 y(c)o(hangemen)o(ts)g(d')o(\023)-18 b(etat)13 b(\022)-19
b(a)13 b(e\013ectuer)h(sur)f(le)h(pro)q(cessus.)179 1838
y FC(adresse)i(de)f(la)f(zone)h(u)179 1911 y(adresses)23
b FB(taille)11 b(et)e(lo)q(calisation)j(en)e(m)o(\023)-18
b(emoire)10 b(\(cen)o(trale,)f(secondaire\).)i(Ces)e(informations)i(p)q
(ermetten)o(t)270 1957 y(de)i(transf)o(\023)-18 b(erer)14
b(un)f(pro)q(cessus)h(en)g(ou)f(hors)g(m)o(\023)-18 b(emoire)14
b(cen)o(trale.)179 2029 y FC(UID)20 b FB(propri)o(\023)-18
b(etaire)18 b(du)e(pro)q(cessus,)g(p)q(ermet)g(de)g(sa)o(v)o(oir)g(si)g
(le)g(pro)q(cessus)h(est)f(autoris)o(\023)-18 b(e)16
b(\022)-19 b(a)16 b(en)o(v)o(o)o(y)o(er)g(des)270 2075
y(signaux)f(et)e(\022)-19 b(a)13 b(qui)h(il)g(p)q(eut)g(les)f(en)o(v)o
(o)o(y)o(er.)179 2148 y FC(PID,PPID)20 b FB(l'iden)o(ti\014cateu)q(r)f
(du)e(pro)q(cessus)h(et)f(de)g(son)g(p)o(\022)-18 b(ere.)16
b(Ces)h(deux)g(v)n(aleurs)h(son)o(t)f(initial)q(is)o(\023)-17
b(ees)270 2193 y(dans)14 b(l')o(\023)-18 b(etat)13 b(8,)g(cr)o(\023)-18
b(eation)14 b(p)q(endan)o(t)g(l'app)q(el)h(syst)o(\022)-18
b(eme)14 b FA(fork)p FB(.)178 2266 y FC(\023)-21 b(ev)o(\022)g(enemen)o
(t)21 b FB(un)c(descripteur)i(de)f(l')o(\023)-18 b(ev)o(\022)g(enemen)o
(t)18 b(attendu)g(quand)g(le)g(pro)q(cessus)h(est)e(dans)g(un)h(mo)q
(de)270 2312 y(endormi.)179 2385 y FC(Priorit)o(\023)-21
b(es)21 b FB(Plusieurs)13 b(param)o(\022)-18 b(etres)11
b(son)o(t)g(utilis)o(\023)-18 b(es)13 b(par)e(l'ordonnanceur)i(p)q(our)
f(s)o(\023)-18 b(electionner)13 b(l')o(\023)-18 b(elu)12
b(parmi)270 2430 y(les)i(pro)q(cessus)g(pr)o(^)-18 b(ets.)179
2503 y FC(v)o(ecteur)15 b(d'in)o(terruption)d(du)i(pro)q(cessus)22
b FB(ensem)o(ble)17 b(des)f(signaux)i(re\030)-17 b(cus)16
b(par)g(le)h(pro)q(cessus)g(mais)270 2549 y(pas)d(encore)f(trait)o
(\023)-18 b(es.)179 2622 y FC(div)o(ers)20 b FB(des)c(compteurs)g
(utilis)o(\023)-18 b(es)17 b(p)q(our)f(la)f(comptabilit)o(\023)-18
b(e)18 b(\(p)q(our)d(faire)h(pa)o(y)o(er)f(le)h(temps)f(CPU)f(utilis)o
(\023)-18 b(e\))270 2667 y(et)15 b(que)h(l'on)f(p)q(eut)h(manipuler)h
(par)f(la)f(commande)i FA(alarm)p FB(,)12 b(des)k(donn)o(\023)-18
b(ees)16 b(utilis)o(\023)-18 b(ees)17 b(par)f(l'impl)o(\023)-18
b(e-)270 2713 y(men)o(tation)15 b(e\013ectiv)o(e)f(du)f(syst)o(\022)-18
b(eme,)13 b(etc.)p 75 2768 705 2 v 120 2806 a Fo(3.)8
b(Exercice)t(:)j(Donner)f(un)h(exemple.)p eop
%%Page: 46 54
46 53 bop 75 50 a FD(46)1083 b Fz(CHAPITRE)14 b(6.)27
b(LES)14 b(PR)o(OCESSUS)179 166 y Fv(6.13)66 b(La)22
b(zone)g(u)236 252 y FB(La)14 b(zone)h(u)f(de)g(t)o(yp)q(e)h
FA(struct)i(user)12 b FB(d)o(\023)-18 b(e\014nie)16 b(dans)f
FA(<sys/user)o(.h>)10 b FB(est)k(la)h(zone)f(utilis)o(\023)-18
b(ee)17 b(quand)e(un)179 297 y(pro)q(cessus)i(s'ex)o(\023)-18
b(ecute)16 b(que)g(ce)f(soit)i(en)e(mo)q(de)h(no)o(y)o(au)h(ou)f(mo)q
(de)g(utilisateur.)i(Une)d(unique)j(zone)e(u)g(est)179
343 y(accessible)c(\022)-19 b(a)10 b(la)h(fois)17 b(:)10
b(celle)h(de)g(l'unique)h(pro)q(cessus)f(en)g(cours)f(d'ex)o(\023)-18
b(ecution)12 b(\(dans)f(un)g(des)e(\023)-18 b(etats)10
b(1)g(ou)h(2\).)236 436 y(Con)o(ten)o(u)j(de)f(la)h(zone)f(u)7
b(:)179 502 y FC(p)q(oin)o(teur)19 b FB(sur)14 b(la)f(structure)h(de)f
(pro)q(cessus)h(de)g(la)f(table)h(des)g(pro)q(cessus.)179
568 y FC(uid)f(r)o(\023)-21 b(eel)15 b(et)g(e\013ectif)20
b FB(de)13 b(l'utilisateu)q(r)j(qui)e(d)o(\023)-18 b(etermine)15
b(les)f(div)o(ers)h(privil)o(\022)-18 b(eges)16 b(donn)o(\023)-18
b(es)15 b(au)f(pro)q(cessus,)270 613 y(tels)g(que)f(les)h(droits)g
(d'acc)o(\022)-18 b(es)13 b(\022)-19 b(a)13 b(un)h(\014c)o(hier,)g(les)
f(c)o(hangemen)o(ts)i(de)e(priorit)o(\023)-18 b(e,)14
b(etc.)179 679 y FC(Compteurs)h(des)g(temps)21 b FB(\(users)13
b(et)g(system\))g(consomm)o(\023)-18 b(es)14 b(par)g(le)f(pro)q(cessus)
179 744 y FC(Masque)j(de)e(signaux)21 b FB(Sur)13 b(syst)o(\022)-18
b(eme)14 b(V)e(sous)i(BSD)f(dans)h(la)g(structure)g(pro)q(c)179
809 y FC(T)l(erminal)20 b FB(terminal)14 b(de)f(con)o(tr^)-19
b(ole)15 b(du)e(pro)q(cessus)h(si)g(celui-ci)h(existe.)179
874 y FC(erreur)21 b FB(sto)q(c)o(k)n(age)14 b(de)f(la)h(derni)o(\022)
-18 b(ere)14 b(erreur)g(rencon)o(tr)o(\023)-18 b(ee)14
b(p)q(endan)o(t)g(un)f(app)q(el)i(syst)o(\022)-18 b(eme.)179
939 y FC(retour)21 b FB(sto)q(c)o(k)n(age)14 b(de)f(v)n(aleur)h(de)g
(retour)f(du)g(dernier)i(app)q(el)f(syst)o(\022)-18 b(eme.)179
1005 y FC(E/S)20 b FB(les)d(structures)g(asso)q(ci)o(\023)-18
b(ees)17 b(aux)g(en)o(tr)o(\023)-18 b(ees-sorties,)17
b(les)g(param)o(\022)-18 b(etres)16 b(utilis)o(\023)-18
b(es)19 b(par)d(la)h(biblioth)o(\022)-18 b(equ)q(e)270
1050 y(standard,)14 b(adresses)g(des)f(bu\013ers,)h(tailles)h(et)e
(adresses)h(de)f(zones)h(\022)-19 b(a)13 b(copier,)h(etc.)179
1115 y FC(".")h(et)g("/")36 b FB(le)13 b(r)o(\023)-18
b(ep)q(ertoire)15 b(couran)o(t)f(et)e(la)i(racine)g(couran)o(te)g
(\(c.f.)e(c)o(hro)q(ot\(\)\))179 1181 y FC(la)i(table)h(des)g
(descripteurs)20 b FB(p)q(osition)c(v)n(ariable)f(d'un)e(impl)o(\023)
-18 b(emen)o(tation)16 b(\022)-19 b(a)13 b(l'autre.)179
1246 y FC(limites)19 b FB(de)e(la)g(taille)h(des)f(\014c)o(hiers)h(de)e
(la)h(m)o(\023)-18 b(emoire)17 b(utilisabl)q(e)i(etc)d(\(c.f.)g
Fx(ulimit)f FB(en)h(Bourne)i(shell)g(et)270 1292 y Fx(limit)12
b FB(en)i(Csh)f(\).)179 1357 y FC(umask)21 b FB(masque)14
b(de)f(cr)o(\023)-18 b(eation)15 b(de)e(\014c)o(hiers.)179
1515 y Fv(6.14)66 b(Acc)o(\022)-32 b(es)18 b(aux)j(structures)g
Fm(proc)f Fv(et)g Fm(user)g Fv(du)h(pro)r(cessus)179
1589 y(couran)n(t)236 1675 y FB(Les)16 b(informations)i(de)e(la)g
(table)h(des)f(pro)q(cessus)h(p)q(euv)o(en)o(t)f(^)-18
b(etre)15 b(lues)i(gr^)-19 b(ace)16 b(\022)-19 b(a)16
b(la)g(commande)h(shell)179 1720 y FA(ps)p FB(.)11 b(Ou)h(par)h(des)g
(app)q(els)h(syst)o(\022)-18 b(eme.)13 b(P)o(ar)f(con)o(tre,)h(les)g
(informations)i(con)o(ten)o(ues)e(dans)h(la)f(zone)g(u)f(ne)h(son)o(t)
179 1766 y(accessibles)k(que)d(par)h(une)g(r)o(\023)-18
b(ep)q(onse)16 b(du)e(pro)q(cessus)i(lui-m)o(^)-18 b(eme)16
b(\(en)e(progammation)j(ob)r(jet,)d(on)h(dit)g(que)179
1812 y(ce)e(son)o(t)g(des)g(v)n(ariables)j(d'instances)e(priv)o(\023)
-18 b(ees\),)14 b(d'o)q(\022)-20 b(u)14 b(les)f(app)q(els)i(syst)o
(\022)-18 b(eme)13 b(suiv)n(an)o(ts)c(:)179 1857 y FA(times,)17
b(chroot,)g(chdir,)g(fchdir,)g(getuid,)g(getgid,)g(...,)h(setuid,)f
(...,)h(ulimit,)f(nice,)h(brk,)179 1903 y(sbrk)p FB(.)179
1948 y(Qui)13 b(p)q(ermetten)o(t)h(de)f(lire)h(ou)g(de)f(c)o(hanger)h
(le)f(con)o(ten)o(u)h(des)g(deux)g(structures.)179 2066
y Fu(6.14.1)55 b(Les)18 b(informations)f(temp)r(orell)o(es.)179
2138 y FA(#include)f(<sys/times)o(.h>)179 2184 y(clock_t)h(times\(str)o
(uc)o(t)g(tms)h(*buffer\);)236 2261 y Fx(times)12 b FB(remplit)h(la)g
(structure)g(p)q(oin)o(t)o(\023)-18 b(ee)14 b(par)f FA(buffer)c
FB(a)o(v)o(ec)k(des)g(informations)h(sur)f(le)g(temps)f(mac)o(hine)179
2306 y(utilis)o(\023)-18 b(e)15 b(dans)f(les)f(\023)-18
b(etat)13 b(1)g(et)f(2.)179 2352 y(La)h(structure)7 b(:)179
2466 y FA(struct)17 b(tms)i({)316 2511 y(clock_t)76 b(tms_utime)o(;)115
b(/*)18 b(user)h(time)f(*/)316 2557 y(clock_t)76 b(tms_stime)o(;)115
b(/*)18 b(system)g(time)g(*/)316 2603 y(clock_t)76 b(tms_cutim)o(e;)95
b(/*)18 b(user)h(time,)e(children)g(*/)316 2648 y(clock_t)76
b(tms_cstim)o(e;)95 b(/*)18 b(system)g(time,)f(children)g(*/)296
2694 y(};)236 2761 y FB(con)o(tien)o(t)f(des)e(temps)g(indiqu)o(\023)
-18 b(es)17 b(en)d(microsecondes)i(10-6)e(secondes,)h(la)f(pr)o(\023)
-18 b(ecision)17 b(de)d(l'horloge)i(est)179 2806 y(par)d(defaut)h(sur)f
(les)h(HP9000)f(700/800)h(de)f(10)h(microsecondes.)p
eop
%%Page: 47 55
47 54 bop 75 50 a Fz(6.15.)26 b(T)m(AILLES)14 b(LIMITES)g(D'UN)f(PR)o
(OCESSUS)862 b FD(47)179 166 y Fu(6.14.2)55 b(Changemen)n(t)18
b(du)h(r)o(\023)-27 b(ep)r(ertoire)16 b(racine)i(p)r(our)g(un)h(pro)r
(cessus.)179 236 y FA(#include)d(<unistd.h>)179 282 y(int)i
(chroot\(con)o(st)e(char)i(*path\);)236 346 y FB(p)q(ermet)d(de)f(d)o
(\023)-18 b(e\014nir)16 b(un)f(nouv)o(eau)h(p)q(oin)o(t)f(de)g(d)o
(\023)-18 b(epart)15 b(p)q(our)g(les)g(r)o(\023)-18 b(ef)o(\023)g
(erences)14 b(absolues)j(\(commen\030)-17 b(can)o(t)179
392 y(par)11 b(/\).)f(La)g(r)o(\023)-18 b(ef)o(\023)g(erence)11
b(..)f(de)h(ce)f(r)o(\023)-18 b(ep)q(ertoire)12 b(racine)g(est)e(asso)q
(ci)o(\023)-18 b(ee)12 b(\022)-19 b(a)11 b(lui-m)o(^)-18
b(eme,)12 b(il)f(n'est)g(donc)g(pas)g(p)q(ossible)179
437 y(de)h(sortir)i(du)e(sous-arbre)i(d)o(\023)-18 b(e\014ni)14
b(par)f FA(chroot)p FB(.)c(Cet)j(app)q(el)i(est)e(utilis)o(\023)-18
b(e)15 b(p)q(our)e(rsh)g(et)f(ftp,)g(et)g(les)h(comptes)179
483 y(p)q(our)h(in)o(vit)o(\023)-18 b(es.)236 529 y(Les)12
b(app)q(els)i(suiv)n(an)o(ts)f(p)q(ermetten)o(t)g(de)f(c)o(hanger)h(le)
f(r)o(\023)-18 b(ep)q(ertoire)13 b(de)g(tra)o(v)n(ail)g(de)f(r)o(\023)
-18 b(ef)o(\023)g(erence)12 b(\\.")g(et)g(donc)179 574
y(l'in)o(terpr)o(\023)-18 b(etation)16 b(des)d(r)o(\023)-18
b(ef)o(\023)g(erences)13 b(relativ)o(es)c(:)179 633 y
FA(int)18 b(chdir\(char)e(*ref\);)179 678 y(int)i(fchdir\(int)e
(descripteu)o(r\))o(;)179 800 y Fu(6.14.3)55 b(R)o(\023)-27
b(ecup)o(\023)g(eration)17 b(du)i(PID)g(d'un)g(pro)r(cessus)179
869 y FA(#include)d(<unistd.h>)179 915 y(pid_t)57 b(getpid\(vo)o(id)o
(\);)179 961 y(pid_t)g(getpgrp\(v)o(oi)o(d\);)179 1006
y(pid_t)g(getppid\(v)o(oi)o(d\);)179 1052 y(pid_t)g(getpgrp2\()o(pi)o
(d_t)16 b(pid\);)179 1116 y FB(L'app)q(el)f FA(getpid\(\))c
FB(retourne)k(le)f(PID)h(du)f(pro)q(cessus)i(couran)o(t,)e
FA(getppid)e FB(le)i(PID)g(du)h(pro)q(cessus)h(p)o(\022)-18
b(ere,)179 1162 y FA(getpgrp)12 b FB(le)17 b(PID)e(du)h(group)q(e)h(du)
f(pro)q(cessus)h(couran)o(t,)f FA(getpgrp2)c FB(le)k(PID)g(du)g(group)q
(e)g(du)g(pro)q(cessus)179 1208 y(pid)e(\(si)f(pid=0)i(alors)e(\023)-18
b(equiv)n(alen)o(t)15 b(\022)-19 b(a)13 b FA(getpgrp)p
FB(\).)179 1316 y Fu(6.14.4)55 b(P)n(ositionemen)n(t)17
b(de)h(l'euid,)f(ruid)h(et)g(suid)236 1386 y FB(L'uid)13
b(d'un)f(pro)q(cessus)i(est)d(l'iden)o(ti\014cati)q(on)k(de)d
(l'utilisateur)j(ex)o(\023)-18 b(ecutan)o(t)13 b(le)f(pro)q(cessus.)h
(Le)f(syst)o(\022)-18 b(eme)179 1432 y(utilise)15 b(trois)f(uid)g(qui)g
(son)o(t)7 b(:)179 1498 y FC(euid)19 b FB(uid)14 b(e\013ectiv)o(e)h
(utilis)o(\023)-18 b(e)15 b(p)q(our)f(les)f(tests)g(d'acc)o(\022)-18
b(es.)179 1556 y FC(ruid)19 b FB(uid)14 b(r)o(\023)-18
b(eelle,)14 b(uid)g(\022)-19 b(a)13 b(qui)i(est)e(factur)o(\023)-18
b(e)13 b(le)g(temps)g(de)h(calcul.)179 1615 y FC(suid)19
b FB(uid)c(sauv)o(egard)o(\023)-18 b(ee,)14 b(p)q(our)g(p)q(ouv)o(oir)g
(rev)o(enir)h(en)e(arri)o(\022)-18 b(ere)14 b(apr)o(\022)-18
b(es)13 b(un)h(setuid.)179 1681 y FA(#include)i(<unistd.h>)179
1727 y(int)i(setuid\(uid)o(_t)e(uid\);)179 1772 y(int)i(setgid\(gid)o
(_t)e(gid\);)236 1837 y FB(F)m(onctionnemen)o(t)9 b(:)179
1882 y(si)k(euid)i(==)d(0)h(\(euid)h(de)f(ro)q(ot\))h(les)f(trois)h
(uid)g(son)o(t)g(p)q(ositionn)o(\023)-18 b(es)15 b(\022)-19
b(a)13 b(la)h(v)n(aleur)g(de)g(uid)179 1928 y(sinon)g(si)f(uid)g(est)f
(\023)-18 b(egal)13 b(\022)-19 b(a)12 b(ruid)i(ou)f(suid)h(alors)f
(euid)h(devien)o(t)f(uid.)h(ruid)f(et)g(suid)g(ne)g(c)o(hangen)o(t)g
(pas.)g(sinon)179 1974 y(rien!)g(pas)h(de)f(c)o(hangemen)o(ts.)179
2019 y(Syn)o(taxe)h(iden)o(tique)h(p)q(our)f(setgid)g(et)f(gid.)236
2065 y(La)f(commande)g Fx(setr)n(euid\(\))c FB(p)q(ermet)k(de)g(c)o
(hanger)g(le)g(propi)o(\023)-18 b(etaire)13 b(r)o(\023)-18
b(eel)12 b(du)g(pro)q(cessus,)g(elle)h(est)e(utilis)o(\023)-18
b(e)179 2111 y(p)q(endan)o(t)14 b(le)g(login,)g(seul)g(le)g(sup)q(er)g
(utilisateur)h(p)q(eut)f(l'ex)o(\023)-18 b(ecuter)14
b(a)o(v)o(ec)f(succ)o(\022)-18 b(es.)179 2240 y Fv(6.15)66
b(T)-6 b(ailles)23 b(limites)h(d'un)f(pro)r(cessus)179
2323 y FA(#include)16 b(<ulimit.h>)179 2368 y(long)i(ulimit\(in)o(t)f
(cmd,...\);)236 2433 y FB(La)c(commande)h Fx(cmd)f FB(est)179
2493 y FC(UL)p 243 2493 14 2 v 15 w(GETFSIZE)19 b FB(retourne)14
b(le)g(taille)h(maxim)o(um)f(des)f(\014c)o(hiers)i(en)e(blo)q(cs.)179
2551 y FC(UL)p 243 2551 V 15 w(SETFSIZE)19 b FB(p)q(ositionne)d(cette)d
(v)n(aleur)h(a)o(v)o(ec)f(le)h(deuxi)o(\022)-18 b(eme)15
b(argumen)o(t.)179 2609 y FC(UL)p 243 2609 V 15 w(GETMAXBRK)21
b FB(v)n(aleur)f(maximale)g(p)q(our)f(l'app)q(el)h(d'allo)q(cation)h
(dynamique)f(de)f(m)o(\023)-18 b(emoire)7 b(:)270 2655
y(brk.)179 2715 y(Ces)13 b(v)n(aleurs)h(son)o(t)f(h)o(\023)-18
b(erit)o(\023)g(ees)14 b(du)g(pro)q(cessus)g(p)o(\022)-18
b(ere.)236 2761 y(La)14 b(v)n(aleur)h(FSIZE)f(\(taille)i(maxim)o(um)f
(des)f(\014c)o(hiers)h(sur)f(disques)h(en)f(blo)q(cs\))h(p)q(eut)e(^)
-18 b(etre)14 b(c)o(hang)o(\023)-18 b(ee)14 b(en)179
2806 y(ksh)f(a)o(v)o(ec)h(ulimit)h([n].)p eop
%%Page: 48 56
48 55 bop 75 50 a FD(48)1083 b Fz(CHAPITRE)14 b(6.)27
b(LES)14 b(PR)o(OCESSUS)179 166 y Fu(6.15.1)55 b(Manipulation)18
b(de)h(la)f(taille)f(d'un)i(pro)r(cessus.)179 236 y FA(#include)d
(<unistd.h>)179 282 y(int)i(brk\(const)e(void)i(*endds\);)179
327 y(void)g(*sbrk\(int)e(incr\);)236 395 y FB(Les)h(deux)g(app)q(els)i
(p)q(ermetten)o(t)e(de)g(c)o(hanger)g(la)h(taille)g(du)f(pro)q(cessus.)
h(L'adresse)f(manipul)o(\023)-18 b(ee)19 b(par)179 441
y(les)d(deux)g(app)q(els)h(est)e(la)h(premi)o(\022)-18
b(ere)16 b(adresse)g(qui)g(est)g(en)f(dehors)h(du)g(pro)q(cessus.)g
(Ainsi)h(on)e(r)o(\023)-18 b(ealise)17 b(des)179 486
y(augmen)o(tations)k(de)e(la)g(taille)i(du)e(pro)q(cessus)i(a)o(v)o(ec)
e(des)g(app)q(els)h(\022)-19 b(a)19 b FA(sbrk)e FB(et)i(on)g(utilise)i
(les)f(adresses)179 532 y(retourn)o(\023)-18 b(ees)13
b(par)g FA(sbrk)e FB(p)q(our)j(les)f(app)q(els)h(\022)-19
b(a)13 b FA(brk)e FB(p)q(our)j(r)o(\023)-18 b(eduire)14
b(la)f(taille)i(du)e(pro)q(cessus.)g(On)g(utilisera)i(de)179
578 y(pr)o(\023)-18 b(ef)o(\023)g(erence)16 b(p)q(our)g(les)g(app)q
(els)g(\022)-19 b(a)16 b FA(sbrk)d FB(des)j(v)n(aleurs)g(de)g
FA(incr)d FB(qui)k(son)o(t)e(des)h(m)o(ultiples)i(de)d(la)h(taille)h
(de)179 623 y(page.)d(Le)g(syst)o(\022)-18 b(eme)14 b(r)o(\023)-18
b(ealisan)o(t)16 b(des)e(d)o(\023)-18 b(eplacemen)o(t)15
b(du)g(p)q(oin)o(t)g(de)f(rupture)g(par)h(nom)o(bre)f(en)o(tier)h(de)f
(pages)179 669 y(\(ce)d(qui)i(est)e(logique)j(dans)e(un)g(syst)o(\022)
-18 b(eme)12 b(de)f(m)o(\023)-18 b(emoire)12 b(pagin)o(\023)-18
b(e\).)13 b(A)e(ne)h(pas)g(utiliser)h(en)f(conjonction)h(a)o(v)o(ec)179
715 y(les)g(fonctions)i(d'allo)q(cation)h(standard)e
FA(malloc,)j(calloc,)g(realloc,)f(free)p FB(.)179 824
y Fu(6.15.2)55 b(Manipulation)18 b(de)h(la)f(v)m(aleur)g(nice)236
894 y FB(P)o(ermet)11 b(de)h(c)o(hanger)f(la)h(v)n(aleur)g(de)g
Fx(nic)n(e)d FB(utilis)o(\023)-18 b(ee)13 b(par)f(le)f(pro)q(cessus.)h
(Si)g(l'on)g(a)f(des)g(droits)h(privil)o(\023)-18 b(egi)o(\023)h(es)179
940 y(la)13 b(v)n(aleur)i(p)q(eut)d(^)-18 b(etre)13 b(n)o(\023)-18
b(egativ)o(e.)14 b(La)f(v)n(aleur)h(de)g(nice)g(est)f(toujours)g
(comprise)i(en)o(tre)e(0)g(et)g(39.)179 1000 y FA(#include)j
(<unistd.h>)179 1046 y(int)38 b(nice\(int)16 b(valeur\);)236
1106 y FB(La)d(commande)h(shell)h FA(renice)c FB(p)q(ermet)i(de)g(c)o
(hanger)h(le)g(nice)g(d'un)f(pro)q(cessus)h(actif.)179
1216 y Fu(6.15.3)55 b(Manipulation)18 b(de)h(la)f(v)m(aleur)g(umask)236
1286 y FB(L'app)q(el)f FA(umask)32 b FB(p)q(ermet)15
b(de)g(sp)o(\023)-18 b(eci\014er)17 b(quels)f(droits)g(doiv)o(en)o(t)g
(^)-18 b(etre)15 b(in)o(terdits)i(en)e(cas)g(de)g(cr)o(\023)-18
b(eation)179 1331 y(de)13 b(\014c)o(hier.)h(cf.)e(5.1)179
1392 y FA(#include)k(<sys/stat.)o(h>)179 1437 y(mode_t)h(umask\(mode)o
(_t)f(mask\);)236 1498 y FB(la)e(v)n(aleur)g(retourn)o(\023)-18
b(ee)14 b(est)f(l'ancienne)i(v)n(aleur.)179 1628 y Fv(6.16)66
b(L'app)r(el)23 b(syst)o(\022)-32 b(eme)20 b Fm(fork)236
1711 y FB(l'app)q(el)15 b(syst)o(\022)-18 b(eme)14 b
FA(fork)d FB(p)q(ermet)i(le)h(cr)o(\023)-18 b(eation)14
b(d'un)f(pro)q(cessus)i(cl^)-19 b(one)14 b(du)f(pro)q(cessus)i(courran)
o(t.)179 1771 y FA(pid_t)37 b(fork\(void\))o(;)236 1831
y FC(DEUX)13 b FB(v)n(aleurs)i(de)e(retour)g(en)h(cas)f(de)g(succ)o
(\022)-18 b(es)7 b(:)230 1893 y({)21 b(Dans)14 b(le)f(pro)q(cessus)i(p)
o(\022)-18 b(ere)13 b(v)n(aleur)h(de)g(retour)f(=)g(le)g(PID)g(du)h
(\014ls,)230 1953 y({)21 b(Dans)14 b(le)f(pro)q(cessus)i(\014ls)f(v)n
(aleur)g(de)f(retour)h(=)e(z)o(\023)-18 b(ero.)179 2014
y(Sinon)230 2076 y({)21 b(Dans)14 b(le)f(pro)q(cessus)i(p)o(\022)-18
b(ere)13 b(v)n(aleur)h(de)g(retour)f(=)g(-1.)236 2137
y(Les)g FA(PID)f FB(et)h FA(PPID)e FB(son)o(t)i(les)h(seules)g
(informations)i(di\013)o(\023)-18 b(eren)o(tes)14 b(en)o(tre)g(les)f
(deux)h(pro)q(cessus.)179 2267 y Fv(6.17)66 b(L'app)r(el)23
b(syst)o(\022)-32 b(eme)20 b Fm(exec)179 2350 y FA(#include)c
(<unistd.h>)179 2395 y(extern)h(char)h(**environ;)179
2487 y(int)g(execl\()g(const)f(char)h(*path,)g(const)f(char)h(*arg0,)g
(...,NULL\))o(;)179 2532 y(int)g(execv\(cons)o(t)f(char)h(*path,)f
(char)h(*)h(const)f(argv[]\);)179 2578 y(int)g(execle\()f(const)h(char)
g(*path,)f(const)h(char)g(*arg0,)f(...,NULL,)36 b(char)18
b(*)h(const)f(envp[]\);)179 2669 y(int)g(execve\(con)o(st)e(char)i
(*file,)g(char)g(*)h(const)f(argv[],)e(char)j(*)g(const)e(envp[]\);)179
2715 y(int)h(execlp\()f(const)h(char)g(*file,con)o(st)e(char)i(*arg0,)g
(...)g(,)h(NULL)f(\);)179 2761 y(int)g(execvp\(con)o(st)e(char)i
(*file,)g(char)g(*)h(const)f(argv[]\);)p eop
%%Page: 49 57
49 56 bop 75 50 a Fz(6.17.)26 b(L'APPEL)14 b(SYST)493
39 y(\022)488 50 y(EME)h Fh(EXEC)1111 b FD(49)236 166
y FB(Informations)18 b(conserv)o(\023)-18 b(ees)18 b(par)e(le)h(pro)q
(cessus)8 b(:)16 b(PID)g(PPID)h(PGID)f(ruid)i(suid)f(\(p)q(our)g
(l'euid)h(cf)e(le)179 212 y FA(setuidbit)30 b FB(de)15
b FA(chmod)j FB(\),)13 b(nice,)i(group)q(e)h(d'acc)o(\022)-18
b(es,)14 b(catalogue)j(couran)o(t,)e(catalogue)h(\\/",)e(terminal)i(de)
179 258 y(con)o(tr^)-19 b(ole,)12 b(utilisati)q(on)j(et)c(limites)j
(des)e(ressources)h(\(temps)f(mac)o(hine,)h(m)o(\023)-18
b(emoire,)12 b(etc\),)f(umask,)i(masques)179 303 y(des)g(signaux,)i
(signaux)g(en)e(atten)o(te,)g(table)h(des)f(descripteurs)i(de)e(\014c)o
(hiers,)h(v)o(errous,)g(session.)236 349 y(Quand)g(le)g(pro)q(cessus)g
(ex)o(\023)-18 b(ecute)14 b(dans)g(le)f(nouv)o(el)i(ex)o(\023)-18
b(ecutable)15 b(la)e(fonction)8 b(:)198 411 y FA(main\(int)17
b(argc,)h(char)g(**argv,ch)o(ar)e(**envp\))236 474 y
Fx(ar)n(gv)c FB(et)h Fx(env)f FB(son)o(t)h(ceux)h(qui)g(on)o(t)e(\023)
-18 b(et)o(\023)g(e)13 b(utilis)o(\023)-18 b(es)15 b(dans)f(l'app)q(el)
h(de)e FA(execve)p FB(.)236 565 y(Les)g(di\013)o(\023)-18
b(eren)o(ts)15 b(noms)f(des)f(fonction)h FA(exec)d FB(son)o(t)j(des)f
(mn)o(\023)-18 b(emoniques)9 b(:)179 627 y FA(l)20 b
FB(liste)14 b(d'argumen)o(ts)179 689 y FA(v)20 b FB(argumen)o(ts)14
b(son)o(t)f(forme)g(d'un)h(v)o(ecteur.)179 752 y FA(p)20
b FB(rec)o(herc)o(he)14 b(du)f(\014c)o(hier)i(a)o(v)o(ec)e(la)h(v)n
(ariable)h(d'en)o(vironnemen)o(t)g FA(PATH)p FB(.)179
814 y FA(e)20 b FB(transmission)e(d'un)f(en)o(vironnemen)o(t)h(en)d
(dernier)i(param)o(\022)-18 b(etre,)16 b(en)g(remplacemen)o(t)h(de)f
(l'en)o(vironne-)270 860 y(men)o(t)d(couran)o(t.)p eop
%%Page: 50 58
50 57 bop 75 50 a FD(50)1083 b Fz(CHAPITRE)14 b(6.)27
b(LES)14 b(PR)o(OCESSUS)p eop
%%Page: 51 59
51 58 bop 1796 50 a FD(51)179 478 y Fw(Chapitre)32 b(7)179
686 y Fy(L'ordonnancemen)m(t)k(des)179 810 y(pro)s(cessus)236
1026 y FB(La)12 b(s)o(\023)-18 b(election)14 b(dans)e(le)g(temps)g(des)
g(pro)q(cessus)h(p)q(ouv)n(an)o(t)g(acc)o(\022)-18 b(eder)13
b(\022)-19 b(a)11 b(une)i(ressource)f(est)g(un)g(probl)o(\022)-18
b(eme)179 1072 y(dit)14 b(d'ordonnancemen)o(t.)g(Nous)g(pr)o(\023)-18
b(esen)o(tons)14 b(ici)8 b(:)230 1135 y({)21 b(le)14
b(cas)f(g)o(\023)-18 b(en)o(\023)g(eral)230 1197 y({)21
b(les)14 b(b)q(esoins)h(et)d(les)i(probl)o(\022)-18 b(emes)179
1260 y(et)12 b(nous)g(d)o(\023)-18 b(ecrirons)14 b(des)e(solutions)j
(que)d(l'on)h(trouv)o(e)f(sous)h(UNIX)e(p)q(our)i(di\013)o(\023)-18
b(eren)o(ts)13 b(probl)o(\022)-18 b(emes)14 b(d'ordon-)179
1306 y(nancemen)o(t.)236 1352 y(Les)e(algorithmes)h(d'ordonnancemen)o
(t)h(r)o(\023)-18 b(ealisen)o(t)13 b(la)f(s)o(\023)-18
b(election)13 b(parmi)g(les)f(pro)q(cessus)g(actifs)g(de)g(celui)179
1397 y(qui)f(v)n(a)f(obtenir)i(l'utilisation)h(d'une)e(ressource,)g
(que)f(ce)g(soit)h(l'unit)o(\023)-18 b(e)12 b(cen)o(trale,)e(ou)h(bien)
g(un)g(p)o(\023)-18 b(eriph)o(\023)g(erique)179 1443
y(d'en)o(tr)o(\023)g(ee-sortie.)236 1489 y(P)o(our)14
b(l'unit)o(\023)-18 b(e)14 b(cen)o(trale)g(notre)g(but)f(est)g(de)g
(maximiser)i(d)o(\023)-18 b(ebit)14 b(et)f(taux)h(utile)g(de)f(l'unit)o
(\023)-18 b(e)15 b(cen)o(trale)7 b(:)179 1552 y FC(le)14
b(d)o(\023)-21 b(ebit)20 b FB(est)13 b(le)g(nom)o(bre)h(mo)o(y)o(en)f
(de)h(pro)q(cessus)g(ex)o(\023)-18 b(ecut)o(\023)g(es)14
b(en)f(un)g(temps)h(donn)o(\023)-18 b(e.)179 1614 y FC(le)14
b(taux)h(utile)20 b FB(est)f(la)g(prop)q(ortion)i(de)e(temps)g(r)o
(\023)-18 b(eellemen)o(t)21 b(utilis)o(\023)-18 b(ee)21
b(p)q(our)e(ex)o(\023)-18 b(ecuter)20 b(des)f(pro)q(cessus)270
1660 y(utilisateurs.)179 1723 y(Un)13 b(exemple)8 b(:)179
1768 y(Soien)o(t)14 b(2)f(pro)q(cessus)h(A)f(et)g(B)g(de)g(m)o(^)-18
b(eme)13 b(comp)q(ortemen)o(t)h(30)f(p)o(\023)-18 b(erio)q(des)15
b(de)e(deux)h(seconde)7 b(:)236 1814 y(1)13 b(seconde)h(d'activit)o
(\023)-18 b(e)236 1860 y(1)13 b(seconde)h(d'inactivit)o(\023)-18
b(e)179 1968 y FA(AIAIAIAIA)o(IAI)o(AI)o(AIA)o(IA)o(IAI)o(AIA)o(IA)o
(IAI)o(AI)o(AIA)o(IA)o(I)236 2031 y FB(Si)13 b(l'on)g(ex)o(\023)-18
b(ecute)13 b(les)f(deux)h(pro)q(cessus)h(cons)o(\023)-18
b(ecutiv)o(emen)o(t)14 b(on)e(obtien)o(t)i(un)e(d)o(\023)-18
b(ebit)13 b(de)g(1)f(pro)q(cessus)h(par)179 2077 y(min)o(ute,)i(et)g
(un)h(taux)f(utile)i(de)e(50\045.)g(Si)g(l'on)h(en)o(trelace)g(les)g(p)
o(\023)-18 b(erio)q(des)17 b(activ)o(es)f(et)e(inactiv)o(es)j(des)f
(deux)179 2122 y(pro)q(cessus)e(on)f(obtien)o(t)i(un)e(d)o(\023)-18
b(ebit)14 b(de)f(2)g(pro)q(cessus)i(par)e(min)o(ute)h(et)f(un)g(taux)h
(d'utilisation)j(de)c(100\045.)236 2168 y(P)o(our)h(une)f(autre)h
(ressource)g(d'autres)f(crit)o(\022)-18 b(eres)14 b(seron)o(t)f(utilis)
o(\023)-18 b(es.)179 2300 y Fv(7.1)66 b(Le)22 b(partage)h(de)f(l'unit)o
(\023)-32 b(e)23 b(cen)n(trale)236 2383 y FB(Ce)11 b(partage)h(doit)g
(^)-18 b(etre)11 b(fait)h(non)g(seulemen)o(t)g(en)o(tre)g(les)g(pro)q
(cessus)g(utilisateurs)j(mais)d(aussi)g(en)o(tre)g(les)179
2428 y(di\013)o(\023)-18 b(eren)o(tes)15 b(t^)-19 b(ac)o(hes)13
b(du)h(syst)o(\022)-18 b(eme,)13 b(sc)o(heduler,)h(en)o(tr)o(\023)-18
b(ees-sorties,)14 b(gestion)g(des)g(in)o(terruptions,)h(etc.)236
2474 y(Nous)h(demandons)i(de)e(plus)h(\022)-19 b(a)16
b(l'algorithme)i(d'ordonnancemen)o(t)g(de)e(nous)g(assurer)h
FC(l'exclusion)179 2520 y(m)o(utuelle)e FB(et)j FC(l'absence)i(de)g
(famine)p FB(,)c(qui)i(son)o(t)g(les)h(p)q(oin)o(ts-clefs)g(de)f(la)h
(plupart)g(des)f(probl)o(\022)-18 b(emes)179 2566 y(d'ordonnancemen)o
(t.)33 b(L'in)o(v)o(en)o(tion)17 b(d'un)f(algorithme)i(d'ordonnancemen)
o(t)g(se)d(base)h(en)g(g)o(\023)-18 b(en)o(\023)g(erale)17
b(sur)179 2611 y(des)c(remarques)h(statistique)h(sur)e(le)h(comp)q
(ortemen)o(t)g(des)f(pro)q(cessus)8 b(:)230 2674 y({)21
b(Le)16 b(couple)i(UC/ES)e(\(cpu/io\),)h(les)g(pro)q(cessus)h(on)o(t)e
(tendance)h(\022)-19 b(a)16 b(basculer)i(constammen)o(t)f(en)o(tre)270
2720 y(des)c(phases)h(d'en)o(tr)o(\023)-18 b(ees-sorties)15
b(et)e(des)g(phases)h(de)f(calcul)i(sur)e(l'unit)o(\023)-18
b(e)15 b(cen)o(trale.)230 2782 y({)21 b(Les)13 b(pro)q(cessus)h
(consomman)o(t)h(de)e(longues)i(p)o(\023)-18 b(erio)q(des)14
b(d'U.C.)e(son)o(t)h(prop)q(ortionnel)q(lement)i(rares.)p
eop
%%Page: 52 60
52 59 bop 75 50 a FD(52)589 b Fz(CHAPITRE)14 b(7.)27
b(L'ORDONNANCEMENT)14 b(DES)g(PR)o(OCESSUS)129 939 y
 currentpoint currentpoint translate 0.96252 0.96252 scale neg exch
neg exch translate

129 939 a 14 w @beginspecial 0 @llx 0 @lly 409 @urx 203
@ury 4090 @rwi @setspecial
%%BeginDocument: eps/histogramme.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 409 203 rectclip
-97.5 -246.5 translate
97.5 246.5 409 203 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 0.329997 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1 -4 -48 sc5mt astore pop false {
    sc5mt dodrawctm 101.5 294.5 409 203 0 rfpath unpagectm
} {
    409 203 101.5 294.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -4 -48] dodrawctm
2.5 -208.5 translate

%Version: 2.0
%Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/setcmykcolor{
	1.0 exch sub dup dup 6 -1 roll
	sub dup 0 lt{pop 0}if 5 1 roll
	4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll
	exch sub dup 0 lt{pop 0}if setrgbcolor
}__NXbdef
/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def   
/_NXfstr 128 string dup 0 (_NX) putinterval def   
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {//findfont exec}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {//findfont exec dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXProcArray 5 array __NXdef
/_NXChannels 0 __NXdef
/_NXTotalBytes 0 __NXdef
/_NXDoImageOp{
	1 index{dup}{1}ifelse /_NXChannels exch store
	_NXChannels 2 add 2 roll _NXProcArray 0 _NXChannels getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /_NXTotalBytes exch store pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{	0 1 _NXChannels 1 sub{
			_NXProcArray exch get exec
			length _NXTotalBytes exch sub /_NXTotalBytes exch store}for
		_NXTotalBytes 0 le{exit}if
	}loop /_NXProcArray 5 array def
}__NXbdef
/colorimage{_NXDoImageOp}__NXbdef
/alphaimage{1 add _NXDoImageOp}def

gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/drawwedge {
    newpath 0 0 moveto arc closepath 1.415 setmiterlimit gsave fill grestore gsave setgray stroke grestore
} bind def [[] [4] [2] [2 2 4 4]] /dasharray exch def /elp {
    translate scale newpath 0 exch 0 exch 0 360 arc
} bind def /c {
    gsave translate scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
} bind def /frc {
    gsave translate scale newpath 0.5 0.5 0.5 0 360 arc stroke grestore
} bind def /ffrc {
    gsave /lg exch def 4 copy c gsave lg setgray translate scale newpath 0.5 0.5 0.5 0 360 arc stroke grestore grestore
} bind def /ffrr {
    gsave /lg exch def 4 copy gsave rectfill grestore lg setgray rectstroke grestore
} bind def /ffrr3d {
    gsave /sgray exch def /egray exch def /lg exch def 7 7 translate 1 1 7 {
        sgray egray sub 7 div mul sgray exch sub setgray 4 copy rectfill -1 -1 translate
    } for egray setgray 4 copy rectfill lg setgray rectstroke grestore
} bind def /fr3d {
    gsave /sgray exch def /egray exch def 7 7 translate 1 1 7 {
        sgray egray sub 7 div mul sgray exch sub setgray 4 copy gsave rectfill grestore -1 -1 translate
    } for grestore
} bind def /l {
    moveto lineto stroke
} bind def /arrow {
    /t_y2 exch def /t_x2 exch def /t_y1 exch def /t_x1 exch def t_y2 t_y1 sub t_x2 t_x1 sub atan /t_deg exch def currentlinewidth 1 gt {
        /t_sc currentlinewidth def
    } {
        /t_sc 1 def
    } ifelse t_x2 t_y2 moveto t_deg rotate t_sc dup scale -7 0 rmoveto 0 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath 1 t_sc div dup scale t_deg neg rotate t_x1 t_y1 currentpoint fill
} bind def /pline {
    /yarray exch def /xarray exch def newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for fill
} bind def /ffrpline {
    /yarray exch def /xarray exch def /lg exch def newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for gsave fill grestore lg setgray stroke
} bind def /frpline {
    /yarray exch def /xarray exch def /lg exch def newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for gsave lg setgray stroke grestore
} bind def /colorfrpline {
    /yarray exch def /xarray exch def gsave setrgbcolor newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for stroke grestore
} bind def /frpline3d {
    /sgray exch def /egray exch def /yarray exch def /xarray exch def newpath gsave 7 -7 translate sgray egray sgray sub 7 div egray {
        setgray xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
            dup xarray exch get exch yarray exch get lineto
        } for stroke -1 1 translate
    } for grestore
} bind def /arrowhead {
    gsave currentpoint 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 gt {
        dup scale
    } {
        pop
    } ifelse -7 0 rmoveto 0 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath fill grestore newpath
} bind def /rl^ {
    currentlinewidth currentpoint 5 3 roll rlineto currentpoint stroke moveto arrowhead
} bind def /rl2^ {
    /h exch def /w exch def currentpoint /prevy exch def /prevx exch def w h rl^ prevx w add prevy h add moveto w -1 mul h -1 mul currentlinewidth currentpoint 5 3 roll rmoveto currentpoint moveto arrowhead
} bind def /setup {
    setgray dasharray exch get 0 setdash setlinewidth setlinecap setlinejoin gsave
} bind def /setup1 {
    setgray dasharray exch get 0 setdash setlinewidth gsave
} bind def /setup2 {
    setgray dasharray exch get 0 setdash setlinewidth
} bind def /rshow {
    /st exch def /ang exch def gsave currentpoint translate ang rotate currentpoint -1 mul -1 mul exch translate st show grestore
} bind def /rcshow {
    /st exch def /ang exch def gsave currentpoint exch st stringwidth pop add exch translate ang rotate currentpoint exch st stringwidth pop add exch -1 mul -1 mul exch translate st show grestore
} bind def /sbox {
    /ingray exch def /lgray exch def gsave 4 copy 5 -5 translate lgray setgray rectfill grestore ingray setgray 4 copy rectfill gsave lgray setgray rectstroke grestore
} bind def
/definepattern {
    7 dict begin /FontDict 9 dict def FontDict begin /cache exch def /key exch def /proc exch cvx def /mtx exch matrix invertmatrix def /height exch def /width exch def /ctm matrix currentmatrix def /ptm matrix identmatrix def /str (12345678901234567890123456789012) def end /FontBBox [ 0 0 FontDict /width get FontDict /height get ] def /FontMatrix FontDict /mtx get def /Encoding StandardEncoding def /FontType 3 def /BuildChar {
        pop begin FontDict begin width 0 cache {
            0 0 width height setcachedevice
        } {
            setcharwidth
        } ifelse 0 0 moveto width 0 lineto width height lineto 0 height lineto closepath clip newpath gsave proc grestore end end
    } def FontDict /key get currentdict definefont end
} bind def /patternpath {
    dup type /dicttype eq {
        begin FontDict /ctm get setmatrix
    } {
        exch begin FontDict /ctm get setmatrix concat
    } ifelse currentdict setfont FontDict begin FontMatrix concat width 0 dtransform round width div exch round width div exch 0 height dtransform round height div exch round height div exch 0 0 transform round exch round exch ptm astore setmatrix pathbbox height div ceiling height mul 4 1 roll width div ceiling width mul 4 1 roll height div floor height mul 4 1 roll width div floor width mul 4 1 roll 2 index sub height div ceiling cvi exch 3 index sub width div ceiling cvi exch 4 2 roll moveto FontMatrix ptm invertmatrix pop {
        gsave ptm concat dup str length idiv {
            str show
        } repeat dup str length mod str exch 0 exch getinterval show grestore 0 height rmoveto
    } repeat pop end end
} bind def /patternfill {
    gsave clip patternpath grestore newpath
} bind def /setpat {
    patternarray exch get findfont
} bind def /patrect {
    gsave moveto dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath setpat gsave 1 setgray fill grestore patternfill grestore
} bind def /patcirc {
    gsave translate scale newpath 0.5 0.5 0.5 0 360 arc gsave 1 setgray fill grestore 0 setgray setpat patternfill grestore
} bind def /patpline {
    gsave /yarray exch def /xarray exch def /patnum exch def xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave 1 setgray fill grestore 0 setgray patnum setpat patternfill grestore
} bind def /patpline3D {
    gsave /yarray exch def /xarray exch def /patnum exch def /gr exch def xarray 0 get yarray 0 get moveto 1 1 3 {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave gr 0 eq {
        1 setgray
    } {
        0.8 setgray
    } ifelse fill grestore 0 setgray patnum setpat patternfill grestore
} bind def /patfrpline {
    gsave /yarray exch def /xarray exch def /patnum exch def xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave 1 setgray fill grestore gsave 0 setgray patnum setpat patternfill grestore setgray stroke grestore
} bind def /colorpatfrpline {
    gsave /yarray exch def /xarray exch def /patnum exch def xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave 1 setgray fill grestore gsave 0 setgray patnum setpat patternfill grestore setrgbcolor stroke grestore
} bind def /drawpatwedge {
    newpath 0 0 moveto arc closepath 1.415 setmiterlimit gsave 1 setgray fill grestore gsave 0 setgray setpat patternfill grestore setgray stroke
} bind def 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /RightDiag true definepattern pop 15 15 [ 200 72 div 0 0 200 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LightRightDiag true definepattern pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LeftDiag true definepattern pop 15 15 [ 200 72 div 0 0 200 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LightLeftDiag true definepattern pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 0 7.5 moveto 15 7.5 lineto 2 setlinewidth stroke
} bind /Horiz true definepattern pop 15 15 [ 400 72 div 0 0 400 72 div 0 0 ] {
    2 setlinecap 0 7.5 moveto 15 7.5 lineto 2 setlinewidth stroke
} bind /LightHoriz true definepattern pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /Vert true definepattern pop 15 15 [ 400 72 div 0 0 400 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LightVert true definepattern pop 30 30 [ 200 36 div 0 0 200 36 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 0.5 setlinewidth stroke
} bind /Crosshatch true definepattern pop 30 30 [ 400 36 div 0 0 400 36 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 0.5 setlinewidth stroke
} bind /Crosshatch2 true definepattern pop [/RightDiag /LightRightDiag /LeftDiag /LightLeftDiag /Vert /LightVert /Horiz /LightHoriz /Crosshatch /Crosshatch2] /patternarray exch def
0 0 508 706 rectclip
99 503 409 203 rectclip
99 503 409 203 rectclip
0 0 1 setup2
gsave
gsave 0.333333 setgray 104 508 399 193 rectstroke grestore
gsave
0.333333 setgray
503 503 5 193 rectfill
109 503 399 5 rectfill
grestore
0.333333 setgray
109 503 399 5 rectfill
503 503 5 193 rectfill
grestore
1 0 1 setup2
gsave 0.666667 setgray 132 527 341 143 rectstroke grestore
gsave
132 527 341 143 rectclip
0 0 0 setup2
0 0 0 setup2
0 setgray
gsave
newpath
systemdict
begin
-1000 -1000 10000 10000 setbbox
188.833328 527 moveto
0 143 rlineto
245.666656 527 moveto
0 143 rlineto
302.5 527 moveto
0 143 rlineto
359.333313 527 moveto
0 143 rlineto
416.166656 527 moveto
0 143 rlineto
end
stroke
grestore
gsave
newpath
systemdict
begin
-1000 -10000 10000 100000 setbbox
132 562.75 moveto
341 0 rlineto
132 598.5 moveto
341 0 rlineto
132 634.25 moveto
341 0 rlineto
end
stroke
grestore
2 0 0 setup2
2 0 0 setup2
2 0 0 setup2
0 setgray
gsave
newpath
systemdict
begin
-1000 -1000 10000 10000 setbbox
132 591.349976 moveto
160.416672 655.700012 lineto
188.833328 591.349976 lineto
217.25 559.174988 lineto
245.666656 548.450012 lineto
274.083344 543.087524 lineto
302.5 539.869995 lineto
330.916656 537.724976 lineto
359.333313 536.192871 lineto
387.75 535.043762 lineto
416.166656 534.150024 lineto
444.583313 533.434998 lineto
473 532.849976 lineto
end
stroke
grestore
grestore
0 0 1 setup2
0 setgray
gsave 132 527 132 341 add 527 0 add l grestore
0 setgray
0 setlinewidth
0 0 1 setup2
0 0 1 setup2
gsave
117 508 29 19 rectclip
gsave
[1 0 0 -1 122 522] concat
/Helvetica findfont 9 scalefont [1 0 0 -1 0 0] makefont
226
exch
defineuserobject
226 execuserobject setfont
0 setgray
6 9 moveto (1) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
173 508 30 19 rectclip
gsave
[1 0 0 -1 178 522] concat
226 execuserobject setfont
0 setgray
7 9 moveto (4) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
231 508 29 19 rectclip
gsave
[1 0 0 -1 236 522] concat
226 execuserobject setfont
0 setgray
6 9 moveto (8) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
285 508 34 19 rectclip
gsave
[1 0 0 -1 290 522] concat
226 execuserobject setfont
0 setgray
6 9 moveto (12) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
342 508 34 19 rectclip
gsave
[1 0 0 -1 347 522] concat
226 execuserobject setfont
0 setgray
6 9 moveto (16) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
399 508 34 19 rectclip
gsave
[1 0 0 -1 404 522] concat
226 execuserobject setfont
0 setgray
6 9 moveto (20) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
455 508 35 19 rectclip
gsave
[1 0 0 -1 460 522] concat
226 execuserobject setfont
0 setgray
7 9 moveto (24) show
grestore
grestore
0 setgray
0 0 1 setup2
0 setgray
gsave 132 527 132 0 add 527 143 add l grestore
/Helvetica 9 selectfont
0 setgray
0 0 1 setup2
0 0 1 setup2
gsave
110 516 21 22 rectclip
gsave
[1 0 0 -1 115 533] concat
226 execuserobject setfont
0 setgray
2 9 moveto (0) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
105 551 26 22 rectclip
gsave
[1 0 0 -1 110 568] concat
226 execuserobject setfont
0 setgray
2 9 moveto (50) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
104 587 27 22 rectclip
gsave
[1 0 0 -1 105 604] concat
226 execuserobject setfont
0 setgray
2 9 moveto (100) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
104 623 27 22 rectclip
gsave
[1 0 0 -1 105 640] concat
226 execuserobject setfont
0 setgray
2 9 moveto (150) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
104 659 27 22 rectclip
gsave
[1 0 0 -1 105 676] concat
226 execuserobject setfont
0 setgray
2 9 moveto (200) show
grestore
grestore
0 setgray
0 setlinewidth
gsave
newpath
systemdict
begin
-1000 -1000 10000 10000 setbbox
127 527 moveto
5 0 rlineto
127 562.75 moveto
5 0 rlineto
127 598.5 moveto
5 0 rlineto
127 634.25 moveto
5 0 rlineto
127 670 moveto
5 0 rlineto
end
stroke
grestore
0 setgray
gsave
0 0 508 706 rectclip
[1 0 0 -1 0 706] concat
0.333333 setgray
grestore
end end epssave restore
grestore
grestore
end
grestore
grestore
%%EndDocument
 @endspecial 129 939 a
 currentpoint currentpoint translate 1 0.96252 div 1 0.96252 div scale
neg exch neg exch translate
 129 939 a 94 1030 a Fq(Fig.)f
FD(7.1)f({)i Fp(Histo)n(gr)n(amme)g(de)h(r)o(\023)-20
b(ep)n(artition)14 b(de)h(la)g(dur)o(\023)-20 b(e)n(e)15
b(de)g(la)g(p)o(\023)-20 b(erio)n(de)14 b(d'utilisation)h(de)g(l'unit)o
(\023)-20 b(e)14 b(c)n(entr)n(ale)484 1557 y
 currentpoint currentpoint translate 0.53952 0.53952 scale neg exch
neg exch translate
 484 1557
a 14 w @beginspecial 0 @llx 0 @lly 417 @urx 206 @ury
4170 @rwi @setspecial
%%BeginDocument: eps/courlong.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /estroke {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /efill {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath unpagectm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /apstroke {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc pie chord or {
        closepath
    } if crlinalph setalpha pie not chord not and {
        crfrtarw {
            2 copy crlinw exch gsave newpath angle1 1 add cos radius mul radius add angle1 1 add sin radius mul radius add moveto angle1 cos radius mul radius add angle1 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if crendarw {
            2 copy crlinw exch gsave newpath angle2 1 sub cos radius mul radius add angle2 1 sub sin radius mul radius add moveto angle2 cos radius mul radius add angle2 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if
    } if crlincp setlinecap crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /apfill {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup 5 -2 roll arc pie chord or {
        closepath
    } if 1 xscale div 1 yscale div scale crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /mkepath {
    dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def /closed exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc closed pie or chord or {
        closepath
    } if unpagectm
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 417 206 rectclip
-39 -535 translate
39 535 417 206 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1.9 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 0.329997 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw true def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinred 0.666662 def /crlingrn 0.666662 def /crlinblu 0.666662 def /strinclr true def
/usedash true def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 134 553 276 -204 1 0 0 1 -3 187 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(A court terme ) [9.337997 0 3.891998 0 7 0 7.783997 0 7.783997 0 5.222 0 3.891998 0 3.891998 0 3.891998 0 7.783997 0 5.011993 0 11.661987 0 7.783997 0 0 0] 193 566 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 -27 152] dotx
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/usedash false def
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 109.600006 0 45 476 1 0 0 1 -3 187 sc6mt astore ssl
(A long terme ) [9.338001 0 3.892002 0 3.108002 0 7.784 0 7.784 0 7.784 0 3.892002 0 3.891998 0 7.784004 0 5.012001 0 11.662003 0 7.784004 0 0 0] 24 510 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 16 209] dotx
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 182 498 129 -32 1 0 0 1 -20 182 sc6mt astore rstroke
<dd6c696769626c657320706f7572206c27552e432e20> [7.783997 0 3.108002 0 3.108002 0 7.783997 0 3.108002 0 7.503998 0 3.108002 0 7.783997 0 7 0 3.891998 0 7.783997 0 7.783997 0 7.783997 0 4.661987 0 3.891998 0 3.108002 0 3.108002 0 9.548004 0 3.891998 0 9.687988 0 3.891998 0 0 0] 186 479 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 -20 180] dotx
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55.599976 0 292 476 1 0 0 1 -3 187 sc6mt astore ssl
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 24.005203 1 -1 377 494 1 0 0 1 -23 194 sc5mt astore estroke
(U.C. ) [9.548004 0 3.891998 0 9.687988 0 3.891998 0 0 0] 332 339 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 33 320] dotx
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 40.600006 0 407 476 1 0 0 1 -3 187 sc6mt astore ssl
1 0 0 1 0 0 sc5mt astore crlinw 1 0 0 1 0 0 sc6mt astore 362.004211 576 362 576 arow
false 1 0 0 1 -2 187 sc5mt astore sstrt
systemdict
begin
340 343 378 453 setbbox
378 453 moveto
378 453 378 389 378 389 curveto
378 389 364 389 364 389 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 256 425 76 -76 1.5 0 0 0.855263 -147.999939 247.513168 sc6mt astore rstroke
(Files \(FIFO\) des p\335riph\335riques  d'entr\335es/sorties ) [8.553986 0 3.108002 0 3.108002 0 7.783997 0 7 0 3.891998 0 4.661987 0 8.553986 0 3.891998 0 8.553986 0 10.891998 0 4.661987 0 3.891998 0 7.783997 0 7.783997 0 7 0 -101.121918 -16.18399 7.783997 0 7.783997 0 4.872009 0 3.108002 0 7.783997 0 7.783997 0 7.783997 0 4.872009 0 3.108002 0 7.783997 0 7.783997 0 7.783997 0 7 0 3.891998 0 -89.123993 -16.18399 7.783997 0 3.108002 0 7.783997 0 7.783997 0 3.891998 0 4.661987 0 7.783997 0 7.783997 0 7 0 3.891998 0 7 0 7.783997 0 5.222015 0 3.891998 0 3.108002 0 7.783997 0 7 0 0 0] 258.950012 410.966003 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 -20 186] dotx
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -19.600006 0 237 392 1 0 0 1 -3 187 sc6mt astore ssl
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 24.005203 1 -1 377 494 1 0 0 1 -222 109 sc5mt astore estroke
(E/S ) [9.338013 0 3.891998 0 9.338013 0 0 0] 332 339 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 -166 235] dotx
/crendarw true def
-1 -8.742278e-08 8.742278e-08 -1 288.566895 720 sc5mt astore crlinw -1 -8.742278e-08 8.742278e-08 -1 288.566895 720 sc6mt astore 149.562714 653.999878 149.566925 653.999939 arow
false -1 -8.742278e-08 9.22131e-08 -1.054795 513.566895 1064.315186 sc5mt astore sstrt
systemdict
begin
340 343 379.566925 497.999939 setbbox
359.566925 461.999939 moveto
359.566925 461.999939 377.566925 461.999939 377.566925 461.999939 curveto
377.566925 461.999939 378 389 378 389 curveto
378 389 364 389 364 389 curveto
end
/nspans 3 def -1 -8.742278e-08 8.742278e-08 -1 288.566895 720 sc5mt astore -1 -8.742278e-08 8.742278e-08 -1 288.566895 720 sc6mt astore splstroke
end
grestore
grestore
%%EndDocument
 @endspecial 484 1557 a
 currentpoint currentpoint translate 1 0.53952 div 1 0.53952 div scale
neg exch neg exch translate
 484 1557 a 534 1648 a Fq(Fig.)f
FD(7.2)g({)g Fp(Str)n(at)o(\023)-20 b(e)n(gie)15 b(glob)n(ale)f(d'or)n
(donnanc)n(ement.)179 1786 y Fu(7.1.1)55 b(F)-5 b(amine)236
1861 y FB(Notre)10 b(premi)o(\022)-18 b(ere)11 b(t^)-19
b(ac)o(he)10 b(est)g(d'a\013ecter)g(une)g(ressource)h(\(l'UC)e(par)i
(exemple\))g(\022)-19 b(a)9 b(un)i(unique)g(pro)q(cessus)179
1907 y(\022)-19 b(a)13 b(la)g(fois)h(\(exclusion)h(m)o(utuelle\))g(et)e
(s'assurer)h(de)f(l'absence)h(de)f(famine.)179 1955 y
FC(famine)5 b FB(:)12 b(un)i(pro)q(cessus)g(p)q(eut)f(se)g(v)o(oir)h
(refuser)f(l'acc)o(\022)-18 b(es)13 b(\022)-19 b(a)13
b(une)g(ressource)h(p)q(endan)o(t)g(un)f(temps)g(ind)o(\023)-18
b(eter-)179 2001 y(min)o(\023)g(e,)13 b(il)h(est)f(dit)h(alors)g(que)g
(le)f(pro)q(cessus)i(est)d(en)i(famine.)236 2049 y(Un)e(syst)o(\022)-18
b(eme)12 b(qui)g(ne)g(cr)o(\023)-18 b(ee)12 b(pas)g(de)g(cas)f(de)h
(famine)c(:)j(fournira)h(toujours)h(la)f(ressource)g(demand)o(\023)-18
b(ee)13 b(par)179 2095 y(un)g(pro)q(cessus,)h(au)g(b)q(out)f(d'un)h
(temps)f(\014ni.)236 2143 y(Si)h(on)g(prend)g(le)g(cas)g(des)f(p)o
(\023)-18 b(eriph)o(\023)g(eriques)17 b(\(tels)c(que)h(les)g(disques\))
h(l'ordonnancemen)o(t)h(p)q(eut)e(se)f(faire)179 2189
y(de)g(fa\030)-17 b(con)13 b(simple)i(a)o(v)o(ec)e(par)h(exemple)g(une)
f(\014le)h(d'atten)o(te)g(\(FIF)o(O\).)236 2237 y(P)o(our)j(l'unit)o
(\023)-18 b(e)17 b(cen)o(trale)g(on)f(v)n(a)f(dev)o(oir)i(utiliser)i
(des)d(structures)g(de)g(donn)o(\023)-18 b(ees)17 b(plus)g(complexes)g
(car)179 2283 y(nous)h(allons)h(a)o(v)o(oir)g(b)q(esoin)g(de)e(g)o
(\023)-18 b(erer)18 b(des)g(priorit)o(\023)-18 b(es.)19
b(C'est)d(par)i(exemple,)g(autoriser)h(l'existence)g(de)179
2328 y(pro)q(cessus)13 b(qui)f(\023)-18 b(eviten)o(t)13
b(la)g(\014le)g(d'atten)o(te.)e(La)h(structure)h(de)f(donn)o(\023)-18
b(ees)14 b(utilis)o(\023)-18 b(ee)14 b(p)q(eut)e(parfaitemen)o(t)h(^)
-18 b(etre)179 2374 y(une)15 b(\014le,)f(une)h(liste,)g(un)g(arbre)f
(ou)h(un)g(tas,)f(ceci)g(en)h(fonction)g(de)g(l')o(\023)-18
b(el)o(\023)g(emen)o(t-clef)15 b(de)g(notre)f(algorithme)179
2420 y(de)f(s)o(\023)-18 b(election)15 b(\(^)-19 b(age,)13
b(priorit)o(\023)-18 b(e)15 b(simple,)f(priorit)o(\023)-18
b(e)15 b(\022)-19 b(a)13 b(plusieurs)i(niv)o(eaux,)g(etc\).)236
2468 y(Cette)f(structure)g(de)h(donn)o(\023)-18 b(ees)15
b(doit)g(nous)f(p)q(ermettre)h(d'acc)o(\023)-18 b(eder)14
b(\022)-19 b(a)14 b(tous)g(les)h(pro)q(cessus)g(pr)o(^)-18
b(ets)15 b(\()o(\023)-18 b(eli-)179 2514 y(gibles\).)179
2638 y Fu(7.1.2)55 b(Strat)o(\023)-27 b(egie)17 b(globale)236
2712 y FB(On)c(p)q(eut)h(repr)o(\023)-18 b(esen)o(ter)14
b(l'ordonnancemen)o(t)h(global)g(a)o(v)o(ec)f(le)f(sc)o(h)o(\023)-18
b(ema)14 b(7.2)236 2761 y(Les)g(ordonnancemen)o(ts)h(\022)-19
b(a)14 b(court)g(terme)f(doiv)o(en)o(t)h(^)-18 b(etre)13
b(tr)o(\022)-18 b(es)13 b(rapides,)i(en)f(e\013et)f(le)h(pro)q(cessus)g
(\023)-18 b(elu)14 b(ne)179 2806 y(v)n(a)i(utiliser)h(l'unit)o(\023)-18
b(e)18 b(cen)o(trale)e(que)g(p)q(endan)o(t)h(un)g(tr)o(\022)-18
b(es)15 b(court)h(laps)h(de)f(temps)g(\()f(10)h(milli-second)q(es)i
(par)p eop
%%Page: 53 61
53 60 bop 75 50 a Fz(7.2.)26 b(ORDONNANCEMENT)15 b(SANS)f(PR)804
39 y(\023)799 50 y(EEMPTION.)755 b FD(53)179 166 y FB(exemple\).)13
b(Si)h(on)e(utilise)j(trop)e(de)g(temps)g(\(1)f(milli-second)q(e\))j(p)
q(our)e(s)o(\023)-18 b(electionner)15 b(cet)d(\023)-18
b(elu,)13 b(le)g(taux)g(utile)179 212 y(d)o(\023)-18
b(ecro)l(^)j(\020t)14 b(tr)o(\022)-18 b(es)13 b(rapidemen)o(t)i(\(ici)f
(on)f(p)q(erd)h(9\045)f(du)g(temps)g(d'unit)o(\023)-18
b(e)15 b(cen)o(trale\).)236 260 y(P)o(ar)f(con)o(tre)f(l'ordonnancemen)
o(t)j(\022)-19 b(a)13 b(long)i(terme)e(p)q(eut)g(^)-18
b(etre)13 b(plus)h(long)h(car)e(il)h(a)f(lieu)i(moins)g(souv)o(en)o(t)
179 305 y(\(toutes)i(les)h(secondes)g(par)f(exemple\).)h(La)f
(conception)i(de)e(l'ordonnanceur)i(\022)-19 b(a)17 b(long)h(terme)f
(est)g(faite)179 351 y(dans)d(l'optique)h(d'obtenir)f(un)f
(ordonnanceur)j(\022)-19 b(a)13 b(court)g(terme)g(rapide.)179
472 y Fu(7.1.3)55 b(Crit)o(\022)-27 b(eres)18 b(de)g(p)r(erformance)236
546 y FC(Les)d(crit)o(\022)-21 b(eres)16 b(de)e(p)q(erformance)h(des)g
(algorithmes)g(d'ordonnancemen)o(t)230 615 y FB({)21
b(T)m(aux)13 b(d'utilisatio)q(n)j(de)d(l'unit)o(\023)-18
b(e)14 b(cen)o(trale)230 681 y({)21 b(D)o(\023)-18 b(ebit)230
748 y({)21 b(T)m(emps)13 b(r)o(\023)-18 b(eel)14 b(d'ex)o(\023)-18
b(ecution)230 814 y({)21 b(T)m(emps)13 b(d'atten)o(te)230
881 y({)21 b(T)m(emps)13 b(de)g(r)o(\023)-18 b(ep)q(onse)236
950 y FC(Ces)16 b(cinq)d(crit)o(\022)-21 b(eres)16 b(son)o(t)e(plus)g
(ou)g(moins)g(m)o(utuellemen)o(t)f(exclusifs.)236 998
y FB(Les)g(comparaisons)j(des)d(di\013)o(\023)-18 b(eren)o(ts)15
b(algorithmes)g(se)e(fait)g(donc)h(sur)f(une)h(s)o(\023)-18
b(election)15 b(de)e(ces)g(crit)o(\022)-18 b(eres.)179
1139 y Fv(7.2)66 b(Ordonnancemen)n(t)23 b(sans)f(pr)o(\023)-32
b(eemption.)230 1226 y FB({)21 b(F)o(CFS)7 b(:)12 b(First)i(Come)f
(First)g(serv)o(ed)270 1271 y(F)m(acile)h(\022)-19 b(a)12
b(\023)-18 b(ecrire)14 b(et)f(\022)-19 b(a)13 b(comprendre,)h(p)q(eu)g
(e\016cace)f(...)230 1338 y({)21 b(SJF)7 b(:)12 b(Shortest)i(Job)f
(First)270 1384 y(le)h(plus)g(p)q(etit)g(en)f(premier.)270
1429 y(Optimal)i(p)q(our)e(le)h(temps)f(d'atten)o(te)g(mo)o(y)o(en)h
(...)230 1496 y({)21 b(A)13 b(priorit)o(\023)-18 b(e)8
b(:)270 1542 y(L'utilisateur)17 b(donne)e(des)f(priorit)o(\023)-18
b(es)16 b(aux)f(di\013)o(\023)-18 b(eren)o(ts)16 b(pro)q(cessus)f(et)f
(ils)h(son)o(t)g(activ)o(\023)-18 b(es)15 b(en)f(fonction)270
1587 y(de)f(cette)g(priorit)o(\023)-18 b(e.)270 1689
y(probl)o(\022)g(eme)15 b Fr(\000)-7 b(!)13 b FB(famine)h(p)q(ossible)i
(des)d(pro)q(cessus)h(p)q(eu)g(prioritaires)270 1791
y(Solution)i Fr(\000)-7 b(!)13 b FB(faire)h(augmen)o(ter)g(la)f
(priorit)o(\023)-18 b(e)15 b(a)o(v)o(ec)e(le)h(temps)f(d'atten)o(te)7
b(:)270 1837 y(plus)14 b(un)f(pro)q(cessus)h(attend,)f(plus)h(sa)f
(priorit)o(\023)-18 b(e)14 b(augmen)o(te)g(ainsi)g(au)f(b)q(out)g(d'un)
g(certain)h(temps)f(le)270 1882 y(pro)q(cessus)h(devien)o(t)h(n)o(\023)
-18 b(ecessairemen)o(t)15 b(le)e(plus)i(prioritaire.)270
1938 y(re-probl)o(\022)-18 b(eme)18 b Fr(\000)-7 b(!)16
b FB(si)h(le)g(pro)q(cessus)g(en)f(question)i(\(le)f(tr)o(\022)-18
b(es)16 b(vieux)h(tr)o(\022)-18 b(es)16 b(gros\))h(est)f(ex)o(\023)-18
b(ecut)o(\023)g(e)16 b(alors)270 1984 y(que)d(de)g(nom)o(breux)g
(utilisateurs)i(son)o(t)e(en)g(mo)q(de)g(in)o(teractif)g(c)o(h)o(ute)g
(catastrophique)i(du)e(temps)f(de)270 2030 y(r)o(\023)-18
b(ep)q(onse)14 b(et)f(du)g(d)o(\023)-18 b(ebit)270 2132
y(solution)15 b Fr(\000)-6 b(!)13 b FB(pr)o(\023)-18
b(eemption.)179 2256 y(La)13 b FC(pr)o(\023)-21 b(eemption)12
b FB(est)i(la)g(p)q(ossibili)q(t)o(\023)-18 b(e)16 b(qu'a)e(le)g(syst)o
(\022)-18 b(eme)13 b(de)h(reprendre)h(une)f(ressource)g(\022)-19
b(a)13 b(un)h(pro)q(cessus)179 2302 y(sans)f(que)h(celui-ci)h(ait)f
(lib)o(\023)-18 b(er)o(\023)g(e)14 b(cette)f(ressource.)179
2348 y(Ceci)g(est)g(imp)q(ossible)j(sur)d(b)q(on)h(nom)o(bre)g(de)f
(ressources.)h(Lesquelles)s(?)179 2489 y Fv(7.3)66 b(Les)22
b(algorithmes)h(pr)o(\023)-32 b(eemptifs)236 2576 y FB(F)o(CFS)13
b(ne)h(p)q(eut)e(^)-18 b(etre)13 b(pr)o(\023)-18 b(eemptif)14
b(...)179 2622 y(SJF)c(p)q(eut)g(^)-18 b(etre)10 b(pr)o(\023)-18
b(eemptif)7 b(:)j(si)h(un)g(pro)q(cessus)g(plus)h(court)e(que)h(le)g
(pro)q(cessus)g(actif)g(arriv)o(e)g(dans)g(la)g(queue,)179
2667 y(le)i(pro)q(cessus)i(actif)e(est)g(pr)o(\023)-18
b(eempt)o(\023)g(e.)236 2715 y(Dans)16 b(des)g(syst)o(\022)-18
b(emes)16 b(in)o(teractifs)h(en)e(temps)h(partag)o(\023)-18
b(e)16 b(un)f(des)h(crit)o(\022)-18 b(eres)16 b(est)f(le)h(temps)f(de)h
(r)o(\023)-18 b(ep)q(onse,)179 2761 y(c'est)15 b(\022)-19
b(a)16 b(dire)g(que)g(c)o(haque)h(utilisateur)h(disp)q(ose)f(de)f
(l'unit)o(\023)-18 b(e)17 b(cen)o(trale)g(r)o(\023)-18
b(eguli)o(\022)g(eremen)o(t.)17 b(Heureusemen)o(t,)179
2806 y(les)c(pro)q(cessus)i(in)o(teractifs)f(utilisen)o(t)i(l'UC)c(p)q
(endan)o(t)j(de)e(tr)o(\022)-18 b(es)13 b(courts)g(in)o(terv)n(alles)j
(\022)-19 b(a)13 b(c)o(haque)h(fois.)p eop
%%Page: 54 62
54 61 bop 75 50 a FD(54)589 b Fz(CHAPITRE)14 b(7.)27
b(L'ORDONNANCEMENT)14 b(DES)g(PR)o(OCESSUS)179 166 y
Fu(7.3.1)55 b(Round)19 b(Robin)f(\(tourniquet\))236 236
y FB(Cet)13 b(algorithme)i(est)e(sp)o(\023)-18 b(ecialemen)o(t)15
b(adapt)o(\023)-18 b(e)14 b(aux)g(syst)o(\022)-18 b(emes)13
b(en)h(temps)f(partag)o(\023)-18 b(e.)179 282 y(On)13
b(d)o(\023)-18 b(e\014nit)14 b(un)g FC(quan)o(tum)g(de)g(temps)f
FB(\(time)h(quan)o(tum\))g(d'utilisation)i(de)e(l'unit)o(\023)-18
b(e)14 b(cen)o(trale.)179 327 y(La)f(\014le)h(d'atten)o(te)f(des)g(pro)
q(cessus)h(\023)-18 b(eligibles)16 b(est)d(vue)g(comme)g(une)h(queue)g
(circulaire)h(\(\014fo)e(circulaire\).)179 373 y(T)m(out)g(nouv)o(eau)h
(pro)q(cessus)g(est)f(plac)o(\023)-18 b(e)14 b(\022)-19
b(a)13 b(la)h(\014n)g(de)f(la)g(liste.)236 419 y(De)e(deux)g(c)o(hoses)
h(l'une,)f(soit)g(le)g(pro)q(cessus)h(actif)f(rend)g(l'Unit)o(\023)-18
b(e)11 b(Cen)o(trale)g(a)o(v)n(an)o(t)g(la)h(\014n)e(de)h(sa)g(tranc)o
(he)179 464 y(de)k(temps)f(\(p)q(our)h(cause)h(d'en)o(tr)o(\023)-18
b(ee/sortie\))16 b(soit)f(il)g(est)g(pr)o(\023)-18 b(eempt)o(\023)g(e,)
15 b(et)f(dans)h(les)h(deux)f(cas)g(plac)o(\023)-18 b(e)15
b(en)g(\014n)179 510 y(de)e(liste.)236 556 y(Un)h(pro)q(cessus)g
(obtiendra)h(le)f(pro)q(cesseur)h(au)e(b)q(out)h(de)g(\(n)f(-1\)*q)g
(secondes)i(au)e(plus)i(\(n)e(nom)o(bre)h(de)179 601
y(pro)q(cessus)g(et)f(q)g(longueur)i(du)e(quan)o(tum)i(de)e(temps\),)g
(la)g(famine)h(est)f(donc)h(assur)o(\023)-18 b(emen)o(t)13
b(\023)-18 b(evit)o(\023)g(ee.)236 647 y(Remarquons)17
b(que)e(si)g(le)g(quan)o(tum)h(de)f(temps)g(est)g(trop)g(grand,)g
(round-robin)i(devien)o(t)e(\023)-18 b(equiv)n(alen)o(t)179
693 y(\022)f(a)12 b(F)o(CFS.)h(De)g(l'autre)g(cot)o(\023)-18
b(e)13 b(si)g(le)g(quan)o(tum)h(de)f(temps)g(est)g(tr)o(\022)-18
b(es)13 b(court,)f(nous)i(a)o(v)o(ons)f(th)o(\023)-18
b(eoriquemen)o(t)15 b(un)179 738 y(pro)q(cesseur)f(n)f(fois)h(moins)g
(rapide)g(p)q(our)g(c)o(haque)g(pro)q(cessus)g(\(n)f(nom)o(bre)h(de)f
(pro)q(cessus\).)236 784 y(Malheureusemen)o(t)g(si)e(le)g(quan)o(tum)g
(de)g(temps)g(est)f(court,)g(le)h(nom)o(bre)g(de)g(c)o(hangemen)o(ts)g
(de)g(con)o(texte)179 830 y(d)q(^)-20 b(us)15 b(\022)-19
b(a)15 b(la)h(pr)o(\023)-18 b(eemption)17 b(grandit,)f(d'o)q(\022)-20
b(u)16 b(une)f(dimin)o(ution)j(du)e(taux)f(utile,)i(d'o)q(\022)-20
b(u)15 b(un)g(pro)q(cesseur)i(virtuel)179 875 y(tr)o(\022)-18
b(es)13 b(len)o(t.)236 921 y(Une)h(r)o(\022)-18 b(egle)14
b(empirique)i(est)e(d'utiliser)h(un)f(quan)o(tum)h(de)f(temps)g(tel)g
(que)g(80\045)f(des)h(pro)q(cessus)h(in)o(ter-)179 967
y(romp)q(en)o(t)g(naturellemen)o(t)j(leur)d(utilisati)q(on)j(de)d
(l'unit)o(\023)-18 b(e)16 b(cen)o(trale)g(a)o(v)n(an)o(t)f
(l'expiration)j(du)d(quan)o(tum)h(de)179 1012 y(temps.)179
1122 y Fu(7.3.2)55 b(Les)18 b(algorithmes)e(\022)-28
b(a)19 b(queues)f(m)n(ultiples)236 1192 y FB(Nous)c(supp)q(osons)g(que)
g(nous)f(a)o(v)o(ons)h(un)f(mo)o(y)o(en)h(de)f(di\013)o(\023)-18
b(erencier)15 b(facilemen)o(t)g(les)e(pro)q(cessus)i(en)e(plu-)179
1238 y(sieurs)18 b(classes)g(de)g(priorit)o(\023)-18
b(e)18 b(di\013)o(\023)-18 b(eren)o(tes)19 b(\(c'est)e(le)h(cas)f(sous)
h(UNIX)e(o)q(\022)-20 b(u)17 b(nous)h(allons)h(di\013)o(\023)-18
b(erencier)20 b(les)179 1283 y(t^)-19 b(ac)o(hes)13 b(syst)o(\022)-18
b(eme,)13 b(comme)h(le)f(sw)o(app)q(eur,)h(des)f(autres)h(t^)-19
b(ac)o(hes\).)236 1329 y(P)o(our)21 b(s)o(\023)-18 b(electionner)23
b(un)e(pro)q(cessus,)g(le)g(sc)o(heduler)h(parcourt)g(successiv)o(emen)
o(t)g(les)f(queues)h(dans)179 1375 y(l'ordre)14 b(d)o(\023)-18
b(ecroissan)o(t)14 b(des)g(priorit)o(\023)-18 b(es.)236
1466 y(Un)13 b(exemple)i(de)e(queues)h(organis)o(\023)-18
b(ees)15 b(en)e(fonction)h(du)g(con)o(ten)o(u)g(des)f(pro)q(cessus)8
b(:)230 1528 y({)21 b(les)14 b(pro)q(cessus)g(syst)o(\022)-18
b(emes)230 1589 y({)21 b(les)14 b(pro)q(cessus)g(in)o(teractifs)230
1650 y({)21 b(les)14 b(pro)q(cessus)f(\023)-18 b(edition)230
1711 y({)21 b(les)14 b(pro)q(cessus)g(gros)f(calcul)230
1772 y({)21 b(les)14 b(pro)q(cessus)g(des)e(\023)-18
b(etudian)o(ts)179 1834 y(p)q(our)14 b(qu'un)h(pro)q(cessus)f(\023)-18
b(etudian)o(t)16 b(soit)f(ex)o(\023)-18 b(ecut)o(\023)g(e)14
b(il)h(faut)f(que)h(toutes)f(les)h(autres)f(\014les)h(d'atten)o(te)f
(soien)o(t)179 1880 y(vides)g(...)236 1971 y(Une)f(autre)h(p)q
(ossibili)q(t)o(\023)-18 b(e)15 b(est)e(de)h(partager)f(les)h(quan)o
(tums)g(de)g(temps)f(sur)g(les)h(di\013)o(\023)-18 b(eren)o(tes)15
b(queues.)236 2062 y(Il)20 b(est)f(aussi)i(p)q(ossible)g(de)f(r)o(\023)
-18 b(ealiser)20 b(di\013)o(\023)-18 b(eren)o(ts)21 b(algorithmes)h(de)
d(sc)o(heduling)j(sur)e(les)g(di\013)o(\023)-18 b(eren)o(tes)179
2108 y(queues)7 b(:)230 2170 y({)21 b(Round)14 b(Robin)h(sur)e(les)h
(pro)q(cessus)g(in)o(teractifs)230 2231 y({)21 b(F)o(CFS)13
b(sur)g(les)h(gros)f(calculs)i(en)f(t^)-19 b(ac)o(he)13
b(de)g(fond.)179 2361 y Fv(7.4)66 b(Multi-lev)n(el-)q(feedbac)n(k)25
b(round)f(robin)g(Queues)236 2444 y FB(Le)16 b(syst)o(\022)-18
b(eme)15 b(d'ordonnancemen)o(t)j(des)e(pro)q(cessus)g(sous)h(UNIX)d
(\(BSD)i(4.3)f(et)g(system)h(V4\))f(utilise)179 2490
y(plusieurs)g(\014les)e(d'atten)o(te)f(qui)i(v)o(on)o(t)e(mat)o(\023)
-18 b(erialiser)15 b(des)e(niv)o(eaux)h(de)e(priorit)o(\023)-18
b(e)14 b(di\013)o(\023)-18 b(eren)o(ts)14 b(et)e(\022)-19
b(a)12 b(l'in)o(t)o(\023)-18 b(erieur)179 2535 y(de)13
b(ces)g(di\013)o(\023)-18 b(eren)o(ts)15 b(niv)o(eaux)g(de)e(priorit)o
(\023)-18 b(e,)14 b(un)g(syst)o(\022)-18 b(eme)13 b(de)g(tourniquet.)
179 2645 y Fu(7.4.1)55 b(Les)18 b(niv)n(eaux)g(de)g(priorit)o(\023)-27
b(e)236 2715 y FB(Le)19 b(sc)o(heduler)h(parcourt)g(les)f(listes)i(une)
e(par)g(une)g(de)g(haut)g(en)g(bas)h(jusqu'\022)-19 b(a)19
b(trouv)o(er)g(une)g(liste)179 2761 y(con)o(tenan)o(t)d(un)f(pro)q
(cessus)g(\023)-18 b(eligible.)18 b(Ainsi)e(tan)o(t)f(qu'il)h(y)f(a)g
(des)g(pro)q(cessus)h(de)f(cat)o(\023)-18 b(egorie)16
b(sup)o(\023)-18 b(erieure)17 b(\022)-19 b(a)179 2806
y(ex)o(\023)h(ecuter)13 b(les)h(autres)g(pro)q(cessus)g(son)o(t)f(en)h
(atten)o(te)f(de)g(l'unit)o(\023)-18 b(e)14 b(cen)o(trale.)p
eop
%%Page: 55 63
55 62 bop 75 50 a Fz(7.4.)26 b(MUL)m(TI-LEVEL-FEEDBA)o(CK)15
b(R)o(OUND)e(R)o(OBIN)h(QUEUES)581 b FD(55)484 1037 y
 currentpoint currentpoint translate 0.45969 0.45969 scale neg exch
neg exch translate

484 1037 a 14 w @beginspecial 0 @llx 0 @lly 490 @urx
476 @ury 4900 @rwi @setspecial
%%BeginDocument: eps/multilevel.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /estroke {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /efill {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath unpagectm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /apstroke {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc pie chord or {
        closepath
    } if crlinalph setalpha pie not chord not and {
        crfrtarw {
            2 copy crlinw exch gsave newpath angle1 1 add cos radius mul radius add angle1 1 add sin radius mul radius add moveto angle1 cos radius mul radius add angle1 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if crendarw {
            2 copy crlinw exch gsave newpath angle2 1 sub cos radius mul radius add angle2 1 sub sin radius mul radius add moveto angle2 cos radius mul radius add angle2 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if
    } if crlincp setlinecap crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /apfill {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup 5 -2 roll arc pie chord or {
        closepath
    } if 1 xscale div 1 yscale div scale crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /mkepath {
    dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def /closed exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc closed pie or chord or {
        closepath
    } if unpagectm
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 490 475.033997 rectclip
-15 -217.000015 translate
15 217.000015 490 475.033997 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 234 632 118 -28 1 0 0 1 0 0 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 234 604 118 -28 1 0 0 1 0 0 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 234 576 118 -28 1 0 0 1 0 0 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 234 548 118 -28 1 0 0 1 0 0 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 234 520 118 -28 1 0 0 1 0 0 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 234 492 118 -28 1 0 0 1 0 0 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 234 464 118 -28 1 0 0 1 0 0 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 234 436 118 -12 1 0 0 1 0 0 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 234 424 118 -32 1 0 0 1 0 0 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 234 246 118 -28 1 0 0 1 0 0 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 234 323 118 55 1 0 0 2.636364 0 -604.545532 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(swapper ) [7.001999 0 12.815994 0 7.992004 0 9 0 9 0 7.992004 0 5.994003 0 0 0] 125 733 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 138 -118] dotx
(Disk I/O ) [12.995998 0 5.004002 0 7.001999 0 9 0 4.5 0 5.994003 0 5.003998 0 12.996002 0 0 0] 26 708 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 238.168976 -123] dotx
/txtdraw true def
/txlndraw true def
( ) [0 0] 16 677 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 0 0] dotx
/txtdraw true def
/txlndraw true def
(Buffer ) [12.006001 0 8.999996 0 5.543999 0 5.994003 0 7.991997 0 5.994003 0 0 0] 50 680 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 219.377975 -124] dotx
(Inode ) [5.994003 0 9 0 9 0 9 0 7.991997 0 0 0] 77 629 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 194.483994 -101] dotx
(tty input ) [5.003998 0 5.003998 0 9 0 4.5 0 5.003998 0 9 0 9 0 9 0 5.003998 0 0 0] 40 603 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 224.889984 -104] dotx
(tty output ) [5.003998 0 5.003998 0 9 0 4.5 0 9 0 9 0 5.003998 0 9 0 9 0 5.003998 0 0 0] 58 578 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 202.605988 -104] dotx
(enfants ) [7.991997 0 9 0 5.814003 0 7.991997 0 9 0 5.003998 0 7.001999 0 0 0] 75 639 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 191.576996 -194] dotx
/crendarw true def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -88 184 620 1 0 0 1 0 0 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
save txtdraw {
    /trips [-90 66 627 -90 66 623.107971 -90 66 619.215942] def /nt 0 def /Helvetica 14 selectfont txtinclr {
        crtxtred crtxtgrn crtxtblu setrgbcolor
    } {
        crtxtgry setgray
    } ifelse crtxtalph setalpha txtwpat {
        crtxtpat findfont /filpat exch def
    } if [1 0 0 1 118 -1] concat 1 1 (  \015) length {
        gsave trips nt 3 getinterval aload pop translate rotate 0 0 moveto 1 sub (  \015) exch 1 getinterval txtwpat {
            true charpath filpat txtwittrans {
                trpatfil
            } {
                oppatfil
            } ifelse
        } {
            show
        } ifelse grestore /nt nt 3 add def
    } for
} if restore
/txtdraw true def
/txlndraw true def
(Interne au Noyau ) [5.994003 0 9 0 5.003998 0 7.992004 0 5.994003 0 9 0 7.992004 0 4.5 0 7.992004 0 9 0 4.5 0 12.996002 0 8.820007 0 9 0 7.992004 0 9 0 0 0] 143 679 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [-4.371139e-08 1 -1 -4.371139e-08 721.37793 347.795288] dotx
(non interruptibles ) [9 0 9 0 9 0 -27 -20.088013 5.003998 0 9 0 5.003998 0 7.992004 0 5.994003 0 5.994003 0 9 0 9 0 5.003998 0 5.003998 0 9 0 5.003998 0 7.992004 0 7.001999 0 0 0] 105 741 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -26 -136] dotx
(interruptibles ) [5.003998 0 9 0 5.003998 0 7.991997 0 5.994003 0 5.994003 0 9 0 9 0 5.003998 0 5.003998 0 9 0 5.004005 0 7.992004 0 7.001999 0 0 0] 52 707 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 23 -213] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -172 58 625 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0.833344 -60.00116 132.083328 640.00061 1 0 0 1 51 -126 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
save txtdraw {
    /trips [-89.204323 66 627 -89.204323 66.054047 623.108398 -89.204277 66.108093 619.216797] def /nt 0 def /Helvetica 14 selectfont txtinclr {
        crtxtred crtxtgrn crtxtblu setrgbcolor
    } {
        crtxtgry setgray
    } ifelse crtxtalph setalpha txtwpat {
        crtxtpat findfont /filpat exch def
    } if [1 0 0 1 117 -107] concat 1 1 (  \015) length {
        gsave trips nt 3 getinterval aload pop translate rotate 0 0 moveto 1 sub (  \015) exch 1 getinterval txtwpat {
            true charpath filpat txtwittrans {
                trpatfil
            } {
                oppatfil
            } ifelse
        } {
            show
        } ifelse grestore /nt nt 3 add def
    } for
} if restore
/txtdraw true def
/txlndraw true def
(Attentes de :  ) [12.996002 0 5.003998 0 5.003998 0 7.991997 0 9 0 5.003998 0 7.991997 0 7.001999 0 4.5 0 9 0 7.992004 0 4.5 0 5.003998 0 4.5 0 0 0] 82 731 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [-4.371139e-08 1 -1 -4.371139e-08 955.700806 387.315002] dotx
/crfrtarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 43.001251 -0.877563 171 425 1 0 0 1 0 0 sc6mt astore ssl
(priorit\335 limite ) [9 0 5.993999 0 5.004002 0 9 0 5.994003 0 5.003998 0 5.003998 0 7.991997 0 4.5 0 5.003998 0 5.003998 0 14.004005 0 5.003998 0 5.003998 0 7.992004 0 0 0] 49 748 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 16 -328] dotx
(niveau 0 ) [9 0 4.554001 0 8.729996 0 7.992004 0 7.992004 0 9 0 4.5 0 9 0 0 0] 108 223 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 152.41098 181] dotx
(niveau N ) [9 0 4.554001 0 8.729996 0 7.992004 0 7.992004 0 9 0 4.5 0 12.996002 0 0 0] 108 223 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 150.41098 5] dotx
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -172 58 408 1 0 0 1 0 0 sc6mt astore ssl
(Utilisateurs ) [12.996002 0 5.003998 0 5.003998 0 5.003998 0 5.003998 0 7.001999 0 7.992004 0 5.003998 0 7.992004 0 9 0 5.994003 0 7.001999 0 0 0] 93 725 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [-4.371139e-08 1 -1 -4.371139e-08 773.417297 192.692932] dotx
/crendarw false def
/crfrtarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 12.379417 1 -1.000001 144 715 1 0 0 1 234 -114 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 1 118 703 1 0 0 1 234 -114 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 12.379417 1 -1.000001 144 715 1 0 0 1 234 -84 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 1 118 703 1 0 0 1 234 -84 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 12.379417 1 -1.000001 144 715 1 0 0 1 284 -114 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 1 118 703 1 0 0 1 284 -114 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 12.379417 1 -1.000001 144 715 1 0 0 1 333 -113 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 1 118 703 1 0 0 1 333 -113 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 12.379417 1 -1.000001 144 715 1 0 0 1 234 -143 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 1 118 703 1 0 0 1 234 -143 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 12.379417 1 -1.000001 144 715 1 0 0 1 234 -172 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 1 118 703 1 0 0 1 234 -172 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 12.379417 1 -1.000001 144 715 1 0 0 1 234 -200 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 1 118 703 1 0 0 1 234 -200 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 12.379417 1 -1.000001 144 715 1 0 0 1 237 -226 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 1 118 703 1 0 0 1 237 -226 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 12.379417 1 -1.000001 144 715 1 0 0 1 288 -226 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 1 118 703 1 0 0 1 288 -226 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 12.379417 1 -1.000001 144 715 1 0 0 1 235 -256 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 1 118 703 1 0 0 1 235 -256 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 12.379417 1 -1.000001 144 715 1 0 0 1 234 -299 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 1 118 703 1 0 0 1 234 -299 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 12.379417 1 -1.000001 144 715 1 0 0 1 236 -332 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 1 118 703 1 0 0 1 236 -332 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 12.379417 1 -1.000001 144 715 1 0 0 1 286 -333 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 1 118 703 1 0 0 1 286 -333 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 12.379417 1 -1.000001 144 715 1 0 0 1 336 -333 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 1 118 703 1 0 0 1 336 -333 sc6mt astore ssl
/usedash true def
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -74.253052 22.275909 482 379 1 0 0 1 0 0 sc6mt astore ssl
/usedash false def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 234 424 118 -32 1 0 0 1 0 -32 sc6mt astore rstroke
(niveau 1 ) [9 0 4.554001 0 8.729996 0 7.992004 0 7.992004 0 9 0 4.5 0 9 0 0 0] 108 223 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 151.41098 148] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 1037 a
 currentpoint currentpoint translate 1 0.45969 div 1 0.45969 div scale
neg exch neg exch translate
 484 1037 a 537 1128 a Fq(Fig.)13
b FD(7.3)f({)i Fp(L)n(es)h(queues)g(multiples)g(en)g(tourniquet)236
1257 y FB(Dans)e(les)f(listes)h(in)o(ternes)f(au)g(no)o(y)o(au,)g(de)g
(simples)h(\014les)g(d'atten)o(te)e(son)o(t)h(utilis)o(\023)-18
b(ees)14 b(a)o(v)o(ec)e(la)g(p)q(ossibili)q(t)o(\023)-18
b(e)179 1303 y(de)14 b(doubler)i(les)f(pro)q(cessus)h(endormis)g(de)f
(la)g(m)o(^)-18 b(eme)14 b(liste)i(\(en)e(e\013et)h(seul)g(le)g(pro)q
(cessus)h(r)o(\023)-18 b(ev)o(eill)o(\023)g(e)16 b(par)f(la)179
1348 y(\014n)e(de)g(son)h(en)o(tr)o(\023)-18 b(ee/sortie)14
b(est)e(\023)-18 b(eligibl)q(e\).)236 1394 y(P)o(our)13
b(les)g(pro)q(cessus)g(utilisateurs)q(,)h(la)f(m)o(^)-18
b(eme)12 b(r)o(\022)-18 b(egle)13 b(est)g(utilis)o(\023)-18
b(ee)14 b(mais)f(a)o(v)o(ec)g(pr)o(\023)-18 b(eemption)14
b(et)e(la)h(r)o(\022)-18 b(egle)179 1440 y(du)13 b(tourniquet.)236
1485 y(C'est)h(\022)-19 b(a)15 b(dire,)g(on)g(calcul)h(une)f(priorit)o
(\023)-18 b(e)16 b(de)f(base)g(qui)h(est)e(utilis)o(\023)-18
b(ee)17 b(p)q(our)e(placer)h(le)f(pro)q(cessus)h(dans)179
1531 y(la)d(b)q(onne)i(\014le)e(d'atten)o(te.)236 1577
y(Un)g(pro)q(cessus)i(qui)f(utilise)h(l'unit)o(\023)-18
b(e)14 b(cen)o(trale)h(v)o(oit)e(augmen)o(ter)h(sa)f(priorit)o(\023)-18
b(e.)179 1622 y(Un)13 b(pro)q(cessus)h(qui)g(lib)o(\022)-18
b(ere)15 b(l'unit)o(\023)-18 b(e)14 b(cen)o(trale)g(p)q(our)g(demander)
g(une)g(en)o(tr)o(\023)-18 b(ee/sortie)14 b(ne)f(v)o(oit)h(pas)g(sa)f
(prio-)179 1668 y(rit)o(\023)-18 b(e)13 b(c)o(hanger.)179
1714 y(Un)e(pro)q(cessus)i(qui)g(utilise)h(tout)e(son)o(t)g(quan)o(tum)
h(de)f(temps)g(est)g(pr)o(\023)-18 b(eempt)o(\023)g(e)12
b(et)g(plac)o(\023)-18 b(e)12 b(dans)h(une)f(nouv)o(elle)179
1759 y(\014le)i(d'atten)o(te.)236 1850 y FC(A)o(tten)o(tion)7
b(:)15 b(plus)f(la)g(priorit)o(\023)-21 b(e)14 b(est)i(grande)f(moins)f
(le)g(pro)q(cessus)i(est)f(prioritaire.)179 1960 y Fu(7.4.2)55
b(Ev)n(olution)18 b(de)g(la)h(priorit)o(\023)-27 b(e)236
2030 y FB(Regardons)17 b(la)f(priorit)o(\023)-18 b(e)17
b(et)e(l')o(\023)-18 b(ev)o(olution)18 b(de)d(la)h(priorit)o(\023)-18
b(e)17 b(d'un)e(pro)q(cessus)i(utilisateur)h(au)d(cours)h(du)179
2076 y(temps.)d(Les)g(fonctions)h(suiv)n(an)o(tes)h(son)o(t)e(utilis)o
(\023)-18 b(ees)16 b(dans)e(une)f(impl)o(\023)-18 b(emen)o(tation)16
b(BSD.)236 2121 y(P)o(our)d(calculer)i(la)e(priorit)o(\023)-18
b(e)14 b(d'un)f(pro)q(cessus)h(utilisateur,)h(le)e(sc)o(heduler)h
(utilise)h(l')o(\023)-18 b(equation)15 b(suiv)n(an)o(te)179
2167 y(qui)f(est)f(calcul)o(\023)-18 b(ee)15 b(tous)e(les)h(4)f(clic)o
(ks)h(horloge)h(\(v)n(aleur)f(pratique)h(empirique\))8
b(:)627 2263 y Ft(P)662 2270 y Ff(usrpri)760 2263 y FB(=)j(PUSER)e(+)
983 2238 y Ft(P)1019 2242 y Ff(cpu)p 983 2254 90 2 v
1018 2288 a FB(4)1086 2263 y(+)g(2)f Fr(\002)h Ft(P)1226
2270 y Ff(nice)236 2350 y FB(cette)h(v)n(aleur)g(est)f(tronqu)o(\023)
-18 b(ee)11 b(\022)-19 b(a)9 b(l'in)o(terv)n(alle)j(PUSER..127.)d(En)h
(fonction)g(de)g(cette)f(v)n(aleur)h(le)g(pro)q(cessus)179
2395 y(est)j(plac)o(\023)-18 b(e)14 b(dans)g(une)f(des)h(listes)g
(corresp)q(ondan)o(t)h(\022)-19 b(a)13 b(son)g(niv)o(eau)i(couran)o(t)f
(de)f(priorit)o(\023)-18 b(e.)236 2441 y(Ceci)11 b(nous)f(donne)h(une)f
(priorit)o(\023)-18 b(e)12 b(qui)f(dimin)o(ue)h(lin)o(\023)-18
b(eairemen)o(t)12 b(en)e(fonction)h(de)f(l'utilisati)q(on)j(de)d
(l'unit)o(\023)-18 b(e)179 2487 y(cen)o(trale)13 b(\(il)h(advien)o(t)g
(donc)f(un)g(momen)o(t)g(o)q(\022)-20 b(u)13 b(le)g(pro)q(cessus)h
(devien)o(t)g(le)f(pro)q(cessus)h(le)f(plus)h(prioritaire!\).)236
2532 y Ft(P)272 2539 y Ff(nice)343 2532 y FB(est)e(une)g(v)n(aleur)h
(sp)o(\023)-18 b(eci\014)o(\023)g(ee)14 b(par)e(le)g(programmeur)i(gr^)
-19 b(ace)12 b(\022)-19 b(a)12 b(l'app)q(el)h(syst)o(\022)-18
b(eme)13 b FA(nice)p FB(.)c(Elle)14 b(v)n(arie)179 2578
y(en)o(tre)f(-20)g(et)g(+20)g(et)g(seul)h(le)f(sup)q(er)h(utilisateur)i
(p)q(eut)d(sp)o(\023)-18 b(eci\014er)15 b(une)e(v)n(aleur)i(n)o(\023)
-18 b(egativ)o(e.)236 2624 y Ft(P)272 2628 y Ff(cpu)336
2624 y FB(donne)11 b(une)g(estimation)h(du)f(temps)g(pass)o(\023)-18
b(e)11 b(par)g(un)f(pro)q(cessus)i(sur)f(l'unit)o(\023)-18
b(e)11 b(cen)o(trale.)h(A)e(c)o(haque)179 2669 y(clic)o(k)k(d'horloge,)
h(la)e(v)n(ariable)j FA(p)p 653 2669 12 2 v 13 w(cpu)c
FB(du)i(pro)q(cessus)g(actif)g(est)f(incr)o(\023)-18
b(emen)o(t)o(\023)g(ee.)14 b(Ce)f(qui)h(p)q(ermet)f(de)h(mat)o(\023)-18
b(e-)179 2715 y(rialiser)15 b(la)f(consommation)h(d'unit)o(\023)-18
b(e)14 b(cen)o(tral)g(du)f(pro)q(cessus.)h(P)o(our)f(que)h(cette)f(v)n
(aleur)h(ne)f(devienne)i(pas)179 2761 y(trop)e(p)o(\023)-18
b(enalisan)o(te)16 b(sur)d(le)g(long)h(terme)f(\(comme)g(p)q(our)h(un)f
(shell\))i(elle)f(est)f(att)o(\023)-18 b(en)o(u)o(\023)g(ee)14
b(toute)f(les)g(secondes)179 2806 y(gr^)-19 b(ace)13
b(\022)-19 b(a)13 b(la)h(form)o(ule)g(suiv)n(an)o(te)8
b(:)p eop
%%Page: 56 64
56 63 bop 75 50 a FD(56)589 b Fz(CHAPITRE)14 b(7.)27
b(L'ORDONNANCEMENT)14 b(DES)g(PR)o(OCESSUS)641 256 y
Ft(P)676 260 y Ff(cpu)741 256 y FB(=)819 232 y(2)9 b
Fr(\002)f FB(load)p 786 247 203 2 v 786 281 a(2)h Fr(\002)f
FB(load)i(+)f(1)1002 256 y Fr(\002)g Ft(P)1076 260 y
Ff(cpu)1138 256 y FB(+)g Ft(P)1212 263 y Ff(nice)236
352 y FB(la)14 b(v)n(aleur)h(de)e FA(load)e FB(\(la)j(c)o(harge\))g
(est)f(calcul)o(\023)-18 b(ee)15 b(sur)f(une)f(mo)o(y)o(enne)i(du)e
(nom)o(bre)h(de)f(pro)q(cessus)i(actifs)179 398 y(p)q(endan)o(t)f(une)g
(min)o(ute.)236 443 y(P)o(our)i(ne)f(pas)h(utiliser)i(trop)d(de)h
(ressources,)g(les)g(pro)q(cessus)g(qui)g(son)o(t)g(en)f(sommeil)i
(\(sleep\))f(v)o(oien)o(t)179 489 y(leur)e Ft(P)291 493
y Ff(cpu)358 489 y FB(recalcul)o(\023)-18 b(e)15 b(uniquemen)o(t)g
(\022)-19 b(a)13 b(la)g(\014n)h(de)f(leur)h(p)o(\023)-18
b(erio)q(de)15 b(de)e(sommeil)h(gr^)-19 b(ace)14 b(\022)-19
b(a)13 b(la)g(form)o(ule)8 b(:)607 598 y Ft(P)643 602
y Ff(cpu)707 598 y FB(=)747 553 y Fe(\020)810 574 y FB(2)h
Fr(\002)f FB(load)p 777 590 V 777 624 a(2)h Fr(\002)f
FB(load)i(+)f(1)985 553 y Fe(\021)1021 559 y Ff(sleep)p
1093 559 10 2 v 12 w(time)1178 598 y Fr(\002)f Ft(P)1252
602 y Ff(cpu)236 693 y FB(la)14 b(v)n(ariable)h FA(sleep)p
525 693 12 2 v 12 w(time)c FB(\023)-18 b(etan)o(t)13
b(initiali)q(s)o(\023)-18 b(ee)16 b(\022)-19 b(a)13 b(z)o(\023)-18
b(ero)13 b(puis)h(incr)o(\023)-18 b(emen)o(t)o(\023)g(ee)15
b(une)e(fois)h(par)f(seconde.)179 803 y Fu(7.4.3)55 b(Les)18
b(classes)g(de)h(priorit)o(\023)-27 b(e)236 873 y FC(La)15
b(priorit)o(\023)-21 b(e)14 b(des)h(pro)q(cessus)h(en)e(mo)q(de)h(syst)
o(\022)-21 b(eme)17 b(d)o(\023)-21 b(ep)q(end)13 b(de)i(l'action)f
(\022)-22 b(a)15 b(r)o(\023)-21 b(ealiser.)179 964 y
FB(PSW)l(AP)13 b(0)g(priorit)o(\023)-18 b(e)15 b(en)e(cours)h(de)f(sw)o
(ap)179 1010 y(PINOD)g(10)g(priorit)o(\023)-18 b(e)14
b(en)g(attendan)o(t)g(une)f(lecture)h(d'information)h(sur)f(le)f(syst)o
(\022)-18 b(eme)14 b(de)f(\014c)o(hiers)179 1055 y(PRIBIO)g(20)g
(priorit)o(\023)-18 b(e)15 b(en)e(atten)o(te)g(d'une)h(lecture/)o(\023)
-18 b(ecriture)15 b(sur)e(disque)179 1101 y(PZER)o(O)g(25)h(priorit)o
(\023)-18 b(e)14 b(limite)179 1147 y(PW)l(AIT)e(30)h(priorit)o(\023)-18
b(e)15 b(d'atten)o(te)e(de)h(base)179 1192 y(PLOCK)e(35)h(priorit)o
(\023)-18 b(e)15 b(d'atten)o(te)e(sur)h(un)f(v)o(errou)179
1238 y(PSLEP)g(40)g(priorit)o(\023)-18 b(e)15 b(d'atten)o(te)e(d'un)g
(\023)-18 b(ev)o(\022)g(enemen)o(t)179 1284 y(PUSER)13
b(50)g(priorit)o(\023)-18 b(e)15 b(de)e(base)h(p)q(our)g(les)f(pro)q
(cessus)i(en)e(mo)q(de)g(utilisateur)236 1375 y(Le)k(c)o(hoix)i(de)e
(l'ordre)h(de)g(ces)f(priorit)o(\023)-18 b(es)19 b(est)e(tr)o(\022)-18
b(es)17 b(imp)q(ortan)o(t,)h(en)g(e\013et)f(un)h(mauv)n(ais)h(c)o(hoix)
f(p)q(eut)179 1421 y(en)o(tra)l(^)-15 b(\020ner)14 b(une)g(dimin)o
(ution)i(imp)q(ortan)o(te)e(des)g(p)q(erformances)g(du)f(syst)o(\022)
-18 b(eme.)236 1466 y(Il)19 b(v)n(aut)f(mieux)h(que)g(les)g(pro)q
(cessus)g(en)f(atten)o(te)h(d'un)f(disque)i(soien)o(t)f(plus)g
(prioritaires)i(que)e(les)179 1512 y(pro)q(cessus)14
b(en)f(atten)o(te)g(d'un)g(bu\013er,)g(car)g(les)h(premiers)f(risquen)o
(t)i(fort)d(de)h(lib)o(\023)-18 b(erer)14 b(un)g(bu\013er)f(apr)o(\022)
-18 b(es)14 b(leur)179 1558 y(acc)o(\022)-18 b(es)13
b(disque)i(\(de)e(plus)h(il)g(est)f(p)q(ossible)i(que)f(ce)f(soit)g
(exactemen)o(t)h(le)f(bu\013er)h(attendu)g(par)f(le)h(deuxi)o(\022)-18
b(eme)179 1603 y(pro)q(cessus\).)15 b(Si)g(la)g(priorit)o(\023)-18
b(e)15 b(\023)-18 b(etait)15 b(in)o(v)o(erse,)g(il)g(deviendrait)i(p)q
(ossible)g(d'a)o(v)o(oir)e(un)g(in)o(terblo)q(cage)h(ou)f(une)179
1649 y(atten)o(te)e(tr)o(\022)-18 b(es)13 b(longue)i(si)e(le)h(syst)o
(\022)-18 b(eme)13 b(est)g(blo)q(qu)o(\023)-18 b(e)15
b(par)e(ailleurs.)236 1695 y(De)f(la)h(m)o(^)-18 b(eme)12
b(fa\030)-17 b(cons,)12 b(le)g(sw)o(app)q(eur)h(doit)f(^)-18
b(etre)12 b(le)g(plus)h(prioritaire)i(et)c(non)i(in)o(terruptible)i
Fr(\000)-7 b(!)12 b FB(Si)h(un)179 1740 y(pro)q(cessus)h(est)f(plus)h
(prioritaire)i(que)d(le)h(sw)o(app)q(eur)g(et)f(qu'il)h(doit)f(^)-18
b(etre)13 b(sw)o(app)o(\023)-18 b(e)14 b(en)f(m)o(\023)-18
b(emoire)14 b(...)179 1786 y(En)f(Demand-P)o(aging)i(le)e(sw)o(app)q
(eur)g(est)g(aussi)h(le)f(pro)q(cessus)g(qui)h(r)o(\023)-18
b(ealise)14 b(les)f(c)o(hargemen)o(ts)h(de)f(page,)g(ce)179
1832 y(pro)q(cessus)h(doit)f(^)-18 b(etre)13 b(le)g(plus)i
(prioritaire.)p eop
%%Page: 57 65
57 64 bop 1796 50 a FD(57)179 480 y Fw(Chapitre)32 b(8)179
690 y Fy(La)39 b(m)m(\023)-56 b(emoire)179 916 y Fu(8.0.4)55
b(les)18 b(m)o(\023)-27 b(emoi)o(res)236 990 y FB(La)13
b(m)o(\023)-18 b(emoire)14 b(d'un)f(ordinateur)i(se)e(d)o(\023)-18
b(ecomp)q(ose)14 b(en)f(plusieurs)h(\023)-18 b(el)o(\023)g(emen)o(ts,)
14 b(don)o(t)f(le)g(prix)h(et)f(le)g(temps)179 1036 y(d'acc)o(\022)-18
b(es)12 b(son)o(t)g(tr)o(\022)-18 b(es)12 b(v)n(ariables,)i(cf)e
(\014gure)h(8.1.)e(Nous)h(d)o(\023)-18 b(ev)o(elopp)q(erons)15
b(dans)e(ce)f(c)o(hapitre)h(et)f(le)g(suiv)n(an)o(t)i(les)179
1081 y(questions)h(et)d(solutions)k(relativ)o(es)f(\022)-19
b(a)13 b(la)g(m)o(\023)-18 b(emoire)14 b(cen)o(trale.)236
1129 y(L'imp)q(ortance)19 b(de)e(la)g(gestion)h(de)f(la)h(m)o(\023)-18
b(emoire)17 b(cen)o(trale)h(vien)o(t)g(de)f(son)g(co)q(^)-20
b(ut)17 b(et)g(du)g(co)q(^)-20 b(ut)17 b(relatif)179
1175 y(des)d(autres)h(formes)f(de)g(sto)q(c)o(k)n(age,)h(la)f(\014gure)
h(8.2)f(donne)h(une)g(id)o(\023)-18 b(ee)15 b(des)g(caract)o(\023)-18
b(eristiques)16 b(relativ)o(es)g(des)179 1221 y(di\013)o(\023)-18
b(eren)o(ts)14 b(t)o(yp)q(es)g(de)f(sto)q(c)o(k)n(age.)179
1342 y Fu(8.0.5)55 b(La)19 b(m)o(\023)-27 b(emoi)o(re)15
b(cen)n(trale)236 1416 y FB(La)d(m)o(\023)-18 b(emoire)12
b(est)f(un)h(tableau)h(\022)-19 b(a)12 b(une)g(dimension)i(de)d(mots)h
(mac)o(hines)h(\(ou)e(d'o)q(ctets\),)h(c)o(hacun)g(a)o(y)o(an)o(t)179
1462 y(une)j(adresse)h(propre.)g(Les)e(\023)-18 b(ec)o(hanges)16
b(a)o(v)o(ec)g(l'ext)o(\023)-18 b(erieur)16 b(se)g(fon)o(t)f(en)g(g)o
(\023)-18 b(en)o(\023)g(eral)17 b(par)e(des)g(lectures)i(ou)e(des)178
1507 y(\023)-18 b(ecritures)14 b(\022)-19 b(a)13 b(des)g(adresses)h(sp)
o(\023)-18 b(eci\014ques.)236 1555 y(Le)12 b(syst)o(\022)-18
b(eme)13 b(Unix)f(est)g(m)o(ulti-t^)-19 b(ac)o(he,ceci)14
b(p)q(our)f(maximiser)h(l'utilisatio)q(n)h(du)d(cpu.)g(Cette)g(tec)o
(hnique)179 1601 y(p)q(ose)j(comme)f(condition)k(obligatoire)f(que)e
(la)g(m)o(\023)-18 b(emoire)15 b(cen)o(trale)h(soit)f(utilis)o(\023)-18
b(ee)17 b(et/ou)e(partag)o(\023)-18 b(ee)15 b(en)o(tre)179
1647 y(les)e(di\013)o(\023)-18 b(eren)o(tes)15 b(t^)-19
b(ac)o(hes.)236 1695 y(Les)19 b(solutions)j(de)d(gestion)i(de)e(la)h(m)
o(\023)-18 b(emoire)19 b(son)o(t)h(tr)o(\022)-18 b(es)19
b(d)o(\023)-18 b(ep)q(endan)o(tes)21 b(du)e(mat)o(\023)-18
b(eriel)21 b(et)e(on)o(t)g(mis)179 1740 y(longtemps)h(\022)-19
b(a)18 b(\023)-18 b(ev)o(oluer)20 b(v)o(ers)f(les)h(solutions)h
(actuelles.)f(Nous)f(allons)i(v)o(oir)f(plusieurs)h(appro)q(c)o(hes)f
(qui)179 1786 y(p)q(euv)o(en)o(t)14 b(servir)g(dans)g(des)f(situations)
i(particuli)o(\022)-18 b(eres)16 b(.)236 1834 y(La)g(m)o(\023)-18
b(emoire)17 b(est)f(le)g(p)q(oin)o(t)h(cen)o(tral)g(dans)f(un)h(syst)o
(\022)-18 b(eme)16 b(d'exploitation,)j(c'est)c(\022)-19
b(a)16 b(tra)o(v)o(ers)g(elle)h(que)179 1880 y(l'unit)o(\023)-18
b(e)14 b(cen)o(trale)g(comm)o(unique)h(a)o(v)o(ec)f(l'ext)o(\023)-18
b(erieur.)179 2022 y Fv(8.1)66 b(Allo)r(cation)23 b(con)n(tigu)o(\177)
-32 b(e)179 2121 y Fu(8.1.1)55 b(P)n(as)20 b(de)e(gestion)g(de)g(la)h
(m)o(\023)-27 b(emoi)o(re)236 2195 y FB(P)o(as)16 b(de)f(gestion)i(de)e
(la)h(m)o(\023)-18 b(emoire)7 b(!)15 b(Cette)g(m)o(\023)-18
b(etho)q(de,)15 b(qui)i(a)e(l'a)o(v)n(an)o(tage)h(de)f(la)h(simplici)q
(t)o(\023)-18 b(e)18 b(et)c(de)i(la)179 2240 y(rapidit)o(\023)-18
b(e,)19 b(p)q(ermet)f(toute)g(lib)q(ert)o(\023)-18 b(e)20
b(quand)f(\022)-19 b(a)18 b(l'utilisation)j(de)d(la)h(m)o(\023)-18
b(emoire.)18 b(En)g(e\013et,)g(toute)g(adresse)484 2715
y
 currentpoint currentpoint translate 0.53319 0.53319 scale neg exch
neg exch translate
 484 2715 a 14 w @beginspecial 0 @llx 0 @lly 422 @urx
171 @ury 4220 @rwi @setspecial
%%BeginDocument: eps/hierarchie.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 421.500854 170.700073 rectclip
-83.555481 -610 translate
83.555481 610 421.500854 170.700073 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 5 def
/crlinalph 1 def
/crlinred 0.666707 def /crlingrn 0.666707 def /crlinblu 0.666707 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
0.8 0 0 0.8 58.80188 136.700134 sc4mt astore 0.8 0 0 0.8 58.80188 136.700134 sc5mt astore -79 -185 234 766 1.24557 0 0 0.731183 -39.861431 186.214066 sc6mt astore ssl
0.8 0 0 0.8 58.80188 136.700134 sc4mt astore -0.8 0 0 0.8 398.80188 136.700134 sc5mt astore -79 -185 252 748 -1.24557 0 0 0.731183 565.485474 198.64418 sc6mt astore ssl
/crlinw 5 def
/crlinred 0.666707 def /crlingrn 0.666707 def /crlinblu 0.666707 def /strinclr true def
/crfrtarw true def
0.8 0 0 0.8 58.80188 136.700134 sc4mt astore 0.8 0 0 0.8 58.80188 136.700134 sc5mt astore 0 -169 457 775 0.8 0 0 0.8 58.80188 136.700134 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(Co\364t par bit croissant vitesse d'acc\334s croissant  capacit\335 de stockage d\335croissante ) [12.996002 0 9 0 10.007996 0 5.993988 0 4.5 0 10.007996 0 9 0 7.992004 0 4.5 0 10.007996 0 5.003998 0 5.993988 0 4.5 0 7.992004 0 7.667999 0 9 0 5.003998 0 7.002014 0 7.002014 0 9 0 10.007996 0 5.993988 0 -175.904968 -20.753998 9 0 5.003998 0 5.993988 0 7.992004 0 7.002014 0 7.002014 0 7.992004 0 4.5 0 10.007996 0 5.993988 0 9 0 7.992004 0 7.992004 0 7.992004 0 7.002014 0 4.5 0 7.992004 0 7.667999 0 9 0 5.003998 0 7.002014 0 7.002014 0 9 0 10.007996 0 5.993988 0 -91.818054 -20.753998 -77.984985 -20.753998 7.992004 0 9 0 10.007996 0 9 0 7.992004 0 5.003998 0 5.993988 0 7.992004 0 4.5 0 10.007996 0 7.992004 0 4.5 0 7.002014 0 5.993988 0 9 0 7.992004 0 10.007996 0 9 0 9 0 7.992004 0 -125.31601 -20.753998 10.007996 0 7.992004 0 7.992004 0 7.667999 0 9 0 5.003998 0 7.002014 0 7.002014 0 9 0 10.007996 0 5.993988 0 7.992004 0 0 0] 261.912994 490 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 153.201874 327.900146] dotx
(Registres  ) [12.995998 0 7.992001 0 9 0 5.003998 0 7.001999 0 5.994003 0 7.667999 0 7.991997 0 7.001999 0 4.5 0 0 0] 23.425003 777 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 66.80188 106.300133] dotx
/crlinw 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfrtarw false def
0.8 0 0 0.8 58.80188 136.700134 sc4mt astore 0.8 0 0 0.8 58.80188 136.700134 sc5mt astore 36 0 286 752 0.8 0 0 0.8 8.401877 125.50013 sc6mt astore ssl
0.8 0 0 0.8 58.80188 136.700134 sc4mt astore 0.8 0 0 0.8 58.80188 136.700134 sc5mt astore 71 0 267 728 0.8 0 0 0.8 9.201878 122.300133 sc6mt astore ssl
(M\335moire cache ) [16.991999 0 7.992 0 14.993999 0 8.999999 0 5.004 0 7.668001 0 7.992001 0 4.5 0 7.992001 0 8.999996 0 7.991997 0 10.008003 0 7.991997 0 0 0] -24.562996 743 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 104.401886 115.100136] dotx
(M\335moire centrale ) [16.991999 0 7.992 0 14.993999 0 9 0 5.004001 0 7.667999 0 7.992001 0 4.5 0 7.992001 0 7.992001 0 10.008003 0 5.994003 0 7.991997 0 9 0 5.003998 0 7.991997 0 0 0] -34.057999 743 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 111.601883 97.500137] dotx
0.8 0 0 0.8 58.80188 136.700134 sc4mt astore 0.8 0 0 0.8 58.80188 136.700134 sc5mt astore 115 -1 244 700 0.8 0 0 0.8 9.201878 122.300133 sc6mt astore ssl
0.8 0 0 0.8 58.80188 136.700134 sc4mt astore 0.8 0 0 0.8 58.80188 136.700134 sc5mt astore 167 1 224 623 0.8 0 0 0.8 6.001881 154.30014 sc6mt astore ssl
(Disques ) [12.996 0 5.004 0 7.002001 0 10.007999 0 10.007999 0 7.992001 0 7.002003 0 0 0] 3.994001 743 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 217.201889 67.900131] dotx
(Bandes magn\335tiques ) [12.006001 0 9 0 10.007999 0 10.007999 0 7.992 0 7.002 0 4.5 0 14.993999 0 9 0 9 0 10.007999 0 7.991997 0 5.994003 0 5.003998 0 10.008003 0 10.007996 0 7.991997 0 7.001999 0 0 0] -44.758995 743 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 216.401886 31.900131] dotx
0.8 0 0 0.8 58.80188 136.700134 sc4mt astore 0.8 0 0 0.8 58.80188 136.700134 sc5mt astore 246 0 180 610 0.8 0 0 0.8 9.201878 122.300133 sc6mt astore ssl
/usedash true def
false 0.8 0 0 0.8 9.201878 122.300133 sc5mt astore sstrt
systemdict
begin
302 700 363 780 setbbox
302 780 moveto
302 780 359 779 359 779 curveto
359 779 359 700 360 700 curveto
end
/nspans 2 def 0.8 0 0 0.8 58.80188 136.700134 sc5mt astore 0.8 0 0 0.8 58.80188 136.700134 sc6mt astore splstroke
false 0.8 0 0 0.8 61.201881 51.900131 sc5mt astore sstrt
systemdict
begin
294 700 363 788 setbbox
294 787 moveto
294 787 361 787 361 787 curveto
361 787 359 700 360 700 curveto
end
/nspans 2 def 0.8 0 0 0.8 58.80188 136.700134 sc5mt astore 0.8 0 0 0.8 58.80188 136.700134 sc6mt astore splstroke
/txtdraw true def
/txlndraw true def
(M\335moire volatile ) [10.667999 0 5.328003 0 9.335999 0 6 0 3.335999 0 3.996002 0 5.328003 0 -39.876007 -13.392029 5.76001 0 6 0 3.335999 0 5.328003 0 3.335999 0 3.335999 0 3.335999 0 5.328003 0 0 0] 348.003998 766 /Times-Roman [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 22.001881 123.900131] dotx
(M\335moire permanente ) [10.667999 0 5.328003 0 9.335999 0 6 0 3.335999 0 3.996002 0 5.328003 0 -49.985992 -13.392029 6 0 5.328003 0 3.996002 0 9.335999 0 5.328003 0 6 0 5.328003 0 6 0 3.335999 0 5.328003 0 0 0] 348.003998 766 /Times-Roman [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 79.601883 25.500179] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 2715 a
 currentpoint currentpoint translate 1 0.53319 div 1 0.53319 div scale
neg exch neg exch translate
 484 2715 a 643 2806 a Fq(Fig.)13
b FD(8.1)g({)g Fp(Hi)o(\023)-20 b(er)n(ar)n(chie)14 b(de)h(m)o(\023)-20
b(emoir)n(es)p eop
%%Page: 58 66
58 65 bop 75 50 a FD(58)1141 b Fz(CHAPITRE)14 b(8.)27
b(LA)14 b(M)1670 39 y(\023)1665 50 y(EMOIRE)484 971 y
 currentpoint currentpoint translate 0.41585 0.41585 scale neg exch
neg exch translate

484 971 a 14 w @beginspecial 0 @llx 0 @lly 542 @urx 337
@ury 5420 @rwi @setspecial
%%BeginDocument: eps/caracteristiques.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 542 337 rectclip
-35 -227.5 translate
35 227.5 542 337 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 5 def
/crlinalph 1 def
/crlinred 0.666707 def /crlingrn 0.666707 def /crlinblu 0.666707 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1 0 0 sc5mt astore pop false {
    sc5mt dodrawctm 35 227.5 542 337 0 rfpath unpagectm
} {
    542 337 35 227.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 0 0] dodrawctm
35 227.5 translate

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
0 0 542 338 rectclip
-40.512554 -347.373596 translate
40.512554 347.373596 541.101196 336.6604 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 658 135 -60 1 0 0 1 -14 -70 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 190 658 135 -60 1 0 0 1 -14 -70 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 658 135 -60 1 0 0 1 256 -70 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 190 658 135 -60 1 0 0 1 256 -70 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 658 135 -60 1 0 0 1 -14 -130 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 190 658 135 -60 1 0 0 1 -14 -130 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 658 135 -60 1 0 0 1 256 -130 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 190 658 135 -60 1 0 0 1 256 -130 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 658 135 -60 1 0 0 1 -14 -190 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 190 658 135 -60 1 0 0 1 -14 -190 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 658 135 -60 1 0 0 1 256 -190 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 190 658 135 -60 1 0 0 1 256 -190 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 658 135 -60 1 0 0 1 -14 -250 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 190 658 135 -60 1 0 0 1 -14 -250 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 658 135 -60 1 0 0 1 256 -250 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 190 658 135 -60 1 0 0 1 256 -250 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 658 135 -60 1 0 0 0.866667 -13.346011 68.800293 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 658 135 -60 1 0 0 0.866667 121 69.733276 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 658 135 -60 1 0 0 0.866667 256 69.733276 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 55 658 135 -60 1 0 0 0.866667 391 69.733276 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(TYPE DE MEMOIRE ) [8.554001 0 9.337997 0 9.337997 0 9.337997 0 3.891998 0 10.108002 0 9.337997 0 -63.398991 -16.18399 11.661999 0 9.337997 0 11.662003 0 10.891998 0 3.891998 0 10.108002 0 9.337997 0 0 0] 47.046997 298 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 32 319.265991] dotx
(TAILLE \(Octets\) ) [6.873993 0 9.337997 0 3.891998 0 7.783997 0 7.783997 0 9.337997 0 -47.396973 -16.184021 4.662003 0 10.891998 0 7 0 3.891998 0 7.783997 0 3.891998 0 7 0 4.662003 0 0 0] 182.494995 697 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 31 -79.734009] dotx
(TEMPS D'ACCES  \(secondes\) ) [8.553986 0 9.338013 0 11.661987 0 9.338013 0 9.338013 0 3.891998 0 10.108002 0 3.108002 0 8.917999 0 10.108002 0 10.108002 0 9.338013 0 9.338013 0 -93.142029 -16.184021 3.891998 0 4.661987 0 7 0 7.783997 0 7 0 7.783997 0 7.783997 0 7.783997 0 7.783997 0 7 0 4.661987 0 0 0] 276.425995 695 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 44 -78] dotx
(COUT RELATIF PAR BIT ) [10.108002 0 10.891998 0 10.108002 0 8.553986 0 3.891998 0 10.108002 0 9.338013 0 7.783997 0 7.65799 0 8.553986 0 3.891998 0 8.553986 0 -76.110962 -16.184021 7.65799 0 9.338013 0 10.108002 0 3.891998 0 9.338013 0 3.891998 0 8.553986 0 0 0] 416.278992 695 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 45 -78] dotx
(CACHE ) [10.108002 0 8.917999 0 10.108002 0 10.108002 0 9.337997 0 0 0] 44.709999 629 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 38 -74.400024] dotx
(MEMOIRE CENTRALE ) [11.661999 0 9.337997 0 11.662003 0 10.891998 0 3.891998 0 10.108002 0 9.337997 0 -70.783997 -16.184021 10.107998 0 9.337997 0 10.108002 0 8.554001 0 10.108002 0 9.337997 0 7.784004 0 9.337997 0 0 0] 59.553997 563 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 21 -60.549988] dotx
(DISQUE ) [10.108002 0 3.892002 0 9.337997 0 10.751999 0 10.108002 0 9.337997 0 0 0] 49.231998 515 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 34.581146 -83.481995] dotx
(BANDE ) [9.338001 0 9.338001 0 10.107998 0 10.108002 0 9.337997 0 0 0] 44.884998 450 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 46 -81.265991] dotx
(10) [7.783997 0 0 0] 171.317001 633 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 43 -78.400024] dotx
/txtdraw true def
/txlndraw true def
(3) [0 0] 186.884995 638.599976 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 43 -78.400024] dotx
/txtdraw true def
/txlndraw true def
(-10) [4.662003 0 7.783997 0 0 0] 194.668991 633 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 43 -78.400024] dotx
/txtdraw true def
/txlndraw true def
(4 ) [7.783997 0 0 0] 214.898987 638.599976 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 43 -78.400024] dotx
/txtdraw true def
/txlndraw true def
(10) [7.783997 0 0 0] 171.317001 633 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 49 -146.734009] dotx
/txtdraw true def
/txlndraw true def
(6) [0 0] 186.884995 638.599976 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 49 -146.734009] dotx
/txtdraw true def
/txlndraw true def
(-10) [4.662003 0 7.783997 0 0 0] 194.668991 633 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 49 -146.734009] dotx
/txtdraw true def
/txlndraw true def
(7 ) [7.783997 0 0 0] 214.898987 638.599976 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 49 -146.734009] dotx
/txtdraw true def
/txlndraw true def
(10) [7.783997 0 0 0] 171.317001 633 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 44.581146 -202] dotx
/txtdraw true def
/txlndraw true def
(8) [0 0] 186.884995 638.599976 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 44.581146 -202] dotx
/txtdraw true def
/txlndraw true def
(-10) [4.662003 0 7.783997 0 0 0] 194.668991 633 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 44.581146 -202] dotx
/txtdraw true def
/txlndraw true def
(9 ) [7.783997 0 0 0] 214.898987 638.599976 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 44.581146 -202] dotx
/txtdraw true def
/txlndraw true def
(10-10) [7.783997 0 7.783997 0 4.662003 0 7.783997 0 0 0] 175.209 633 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 184 -264] dotx
/txtdraw true def
/txlndraw true def
(2 ) [7.783997 0 0 0] 211.006989 638.599976 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 184 -264] dotx
/txtdraw true def
/txlndraw true def
(10) [7.783997 0 0 0] 166.654999 633 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 183.581161 -202] dotx
/txtdraw true def
/txlndraw true def
(-3) [4.662003 0 0 0] 182.222992 638.599976 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 183.581161 -202] dotx
/txtdraw true def
/txlndraw true def
(-10) [4.662003 0 7.783997 0 0 0] 194.668991 633 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 183.581161 -202] dotx
/txtdraw true def
/txlndraw true def
(-2 ) [4.662003 0 7.783997 0 0 0] 214.898987 638.599976 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 183.581161 -202] dotx
/txtdraw true def
/txlndraw true def
(10) [7.783997 0 0 0] 171.317001 633 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 46 -264] dotx
/txtdraw true def
/txlndraw true def
(8) [0 0] 186.884995 638.599976 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 46 -264] dotx
/txtdraw true def
/txlndraw true def
(-10) [4.662003 0 7.783997 0 0 0] 194.668991 633 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 46 -264] dotx
/txtdraw true def
/txlndraw true def
(9 ) [7.783997 0 0 0] 214.898987 638.599976 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 46 -264] dotx
/txtdraw true def
/txlndraw true def
(10) [7.783997 0 0 0] 327.993011 638 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 33 -151.734009] dotx
/txtdraw true def
/txlndraw true def
(-7 ) [4.661987 0 7.783997 0 0 0] 343.561005 643.599976 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 33 -151.734009] dotx
/txtdraw true def
/txlndraw true def
(10) [7.783997 0 0 0] 327.993011 638 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 33 -83.400024] dotx
/txtdraw true def
/txlndraw true def
(-8 ) [4.661987 0 7.783997 0 0 0] 343.561005 643.599976 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 33 -83.400024] dotx
(10 ) [7.783997 0 7.783997 0 0 0] 467.216003 630.599976 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 31 -76] dotx
/txtdraw true def
/txlndraw true def
(10) [7.783997 0 0 0] 166.654999 633 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 314 -202] dotx
/txtdraw true def
/txlndraw true def
(-2) [4.662003 0 0 0] 182.222992 638.599976 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 314 -202] dotx
/txtdraw true def
/txlndraw true def
(-10) [4.662003 0 7.783997 0 0 0] 194.668991 633 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 314 -202] dotx
/txtdraw true def
/txlndraw true def
(-3 ) [4.662003 0 7.783997 0 0 0] 214.898987 638.599976 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 314 -202] dotx
/txtdraw true def
/txlndraw true def
(1) [0 0] 338.108002 638 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 160 -152] dotx
/txtdraw true def
/txlndraw true def
( ) [0 0] 345.891998 643.599976 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 160 -152] dotx
/txtdraw true def
/txlndraw true def
(10) [7.783997 0 0 0] 327.993011 638 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 168 -269] dotx
/txtdraw true def
/txlndraw true def
(-4 ) [4.661987 0 7.783997 0 0 0] 343.561005 643.599976 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 168 -269] dotx
/txtdraw true def
/txlndraw true def
(CARACTERISTIQUES DES TYPES DE MEMOIRES ) [10.108001 0 9.338 0 10.108 0 8.918001 0 10.108 0 8.554001 0 9.338001 0 10.107998 0 3.891998 0 9.337997 0 8.554001 0 3.891998 0 10.751999 0 10.108002 0 9.337997 0 9.337997 0 3.891998 0 10.108002 0 9.337997 0 9.337997 0 3.192001 0 8.554001 0 9.337997 0 9.337997 0 9.337997 0 9.337997 0 3.891998 0 10.108002 0 9.337997 0 3.891998 0 11.662003 0 9.338013 0 11.661987 0 10.891998 0 3.891998 0 10.108002 0 9.338013 0 9.338013 0 0 0] -9.513 702 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 131 -33] dotx
end
grestore
end end epssave restore
grestore
grestore
end
grestore
grestore
%%EndDocument
 @endspecial 484 971 a
 currentpoint currentpoint translate 1 0.41585 div 1 0.41585 div scale
neg exch neg exch translate
 484 971 a 495 1062 a Fq(Fig.)f
FD(8.2)g({)g Fp(Car)n(act)o(\023)-20 b(eristiques)14
b(r)n(elatives)f(des)j(m)o(\023)-20 b(emoir)n(es.)720
2445 y
 currentpoint currentpoint translate 0.67365 0.67365 scale neg exch
neg exch translate
 720 2445 a 14 w @beginspecial 0 @llx 0 @lly 165
@urx 291 @ury 1650 @rwi @setspecial
%%BeginDocument: eps/mem1.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 164.793549 290.203247 rectclip
-210.490082 -365.001282 translate
210.490082 365.001282 164.793549 290.203247 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
0.8 0 0 0.8 58.490082 101.740479 sc4mt astore 0.8 0 0 0.8 58.490082 101.740479 sc5mt astore 201 665 137 -333 0.8 0 0 0.8 58.490082 101.740479 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(0 ) [9 0 0 0] 191 673 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 58.490082 101.740479] dotx
(FFFF ) [10.997986 0 10.997986 0 10.997986 0 10.997986 0 0 0] 350 334 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 58.490082 101.740479] dotx
(64Kilos octets utilisateurs  ) [9 0 9 0 14.003998 0 5.003998 0 5.003998 0 9 0 7.001999 0 4.5 0 9 0 7.992004 0 5.994003 0 7.992004 0 5.994003 0 7.002014 0 -98.496017 -20.754028 10.007996 0 5.994003 0 5.003998 0 5.003998 0 5.003998 0 7.001999 0 9 0 5.994003 0 7.992004 0 10.007996 0 7.992004 0 7.001999 0 4.500015 0 0 0] 160.755997 557 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 104.090088 104.940475] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 720 2445 a
 currentpoint currentpoint translate 1 0.67365 div 1 0.67365 div scale
neg exch neg exch translate
 720 2445 a 563 2536 a Fq(Fig.)13
b FD(8.3)g({)g Fp(Une)i(m)o(\023)-20 b(emoir)n(e)15 b(de)g(64)g(Kilo)f
(Octets.)p eop
%%Page: 59 67
59 66 bop 75 50 a Fz(8.1.)26 b(ALLOCA)m(TION)14 b(CONTIGU)669
39 y(\177)664 50 y(E)1104 b FD(59)602 866 y
 currentpoint currentpoint translate 0.6111 0.6111 scale neg exch neg
exch translate
 602 866 a
14 w @beginspecial 0 @llx 0 @lly 275 @urx 291 @ury 2750
@rwi @setspecial
%%BeginDocument: eps/mem2.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 274.442352 290.203247 rectclip
-130 -443.904663 translate
130 443.904663 274.442352 290.203247 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0.666662 def /crfilgrn 0.666662 def /crfilblu 0.666662 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
0.8 0 0 0.8 53.24881 117.443848 sc4mt astore 0.8 0 0 0.8 53.24881 117.443848 sc5mt astore 243 743 137 -333 0.8 0 0 0.8 54.048809 117.443848 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(0 ) [9 0 0 0] 191 673 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 87.648811 180.643845] dotx
(FFFF ) [10.997986 0 10.997986 0 10.997986 0 10.997986 0 0 0] 350 334 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 87.648811 180.643845] dotx
(un programme  utilisateur  ) [10.007996 0 10.007996 0 4.5 0 10.007996 0 7.667999 0 9 0 9 0 7.992004 0 9 0 14.994003 0 14.994003 0 7.992004 0 4.5 0 -101.583008 -20.754028 10.007996 0 5.994003 0 5.003998 0 5.003998 0 5.003998 0 7.001999 0 9 0 5.994003 0 7.992004 0 10.007996 0 7.992004 0 4.5 0 0 0] 154.167999 557 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 132.448807 120.643845] dotx
(le noyau \(moniteur\) ) [5.003998 0 7.992004 0 4.5 0 10.007996 0 9 0 9 0 9 0 10.007996 0 -73.745987 -20.754028 5.994003 0 14.994003 0 9 0 10.007996 0 5.003998 0 5.994003 0 7.992004 0 10.007996 0 7.992004 0 5.994003 0 0 0] 181.744003 557 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 133.24881 241.443848] dotx
/crendarw true def
0.8 0 0 0.8 53.24881 117.443848 sc4mt astore 0.8 0 0 0.8 53.24881 117.443848 sc5mt astore 46.001114 0.884644 187 656 0.8 0 0 0.8 54.048809 117.443848 sc6mt astore ssl
/crendarw false def
0.8 0 0 0.8 53.24881 117.443848 sc4mt astore 0.8 0 0 0.8 53.24881 117.443848 sc5mt astore 138 0 201 589 0.8 0 0 0.8 87.648811 171.043854 sc6mt astore ssl
0.8 0 0 0.8 53.24881 117.443848 sc4mt astore 0.8 0 0 0.8 53.24881 117.443848 sc5mt astore 95 670 114 -24 0.8 0 0 0.8 54.048809 117.443848 sc6mt astore rstroke
(Registre  Barri\334re ) [12.995998 0 7.992001 0 9 0 5.003998 0 7.001999 0 5.994003 0 7.667999 0 7.991997 0 4.5 0 -66.896996 -20.754028 12.006001 0 9 0 7.992001 0 7.991997 0 5.003998 0 7.991997 0 7.667999 0 7.991997 0 0 0] 31.926003 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 109.24881 183.043854] dotx
0.8 0 0 0.8 53.24881 117.443848 sc5mt astore 243 410 137 49 0.8 0 0 0.8 54.048809 117.443848 sc6mt astore rfill
0.8 0 0 0.8 53.24881 117.443848 sc4mt astore 0.8 0 0 0.8 53.24881 117.443848 sc5mt astore 243 410 137 49 0.8 0 0 0.8 54.048809 117.443848 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 602 866 a
 currentpoint currentpoint translate 1 0.6111 div 1 0.6111 div scale
neg exch neg exch translate
 602 866 a 424 957 a Fq(Fig.)13
b FD(8.4)g({)g Fp(Pr)n(ote)n(ction)i(du)g(moniteur)g(p)n(ar)g(un)g(r)n
(e)n(gistr)n(e)e(b)n(arri)o(\022)-20 b(er)n(e.)484 1524
y
 currentpoint currentpoint translate 0.55537 0.55537 scale neg exch
neg exch translate
 484 1524 a 14 w @beginspecial 0 @llx 0 @lly 405 @urx
213 @ury 4050 @rwi @setspecial
%%BeginDocument: eps/mem3.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 405 212.603226 rectclip
-86 -63.137333 translate
86 63.137333 405 212.603226 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
0.8 0 0 0.8 57.730392 33.476532 sc4mt astore 0.8 0 0 0.8 57.730392 33.476532 sc5mt astore 224 251 114 -24 0.8 0 0 0.8 57.730392 33.476532 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Registre  Barri\334re ) [12.995998 0 7.992001 0 9 0 5.003998 0 7.001999 0 5.994003 0 7.667999 0 7.991997 0 4.5 0 -66.896996 -20.754028 12.006001 0 9 0 7.992001 0 7.991997 0 5.003998 0 7.991997 0 7.667999 0 7.991997 0 0 0] 31.926003 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 229.730392 -232.923462] dotx
/crlinw 2 def
/crendarw true def
0.8 0 0 0.8 57.730392 33.476532 sc4mt astore 0.8 0 0 0.8 57.730392 33.476532 sc5mt astore 0 -61.000977 280 232 0.8 0 0 0.8 57.730392 33.476532 sc6mt astore ssl
(A < Barri\334re) [12.995998 0 4.5 0 10.259998 0 4.5 0 12.005997 0 9 0 7.991997 0 7.991997 0 5.003998 0 7.991997 0 7.667999 0 0 0] 41.049004 251 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 211.330399 -70.523468] dotx
/txtdraw true def
/txlndraw true def
( ) [0 0] 138.950989 251 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 211.330399 -70.523468] dotx
/crlinw 1 def
/crendarw false def
0.8 0 0 0.8 57.730392 33.476532 sc4mt astore 0.8 0 0 0.8 57.730392 33.476532 sc5mt astore 217 154 132 -52 0.8 0 0 0.8 57.730392 33.476532 sc6mt astore rstroke
0.8 0 0 0.8 57.730392 33.476532 sc4mt astore 0.8 0 0 0.8 57.730392 33.476532 sc5mt astore 36 160 80 -60 0.8 0 0 0.8 57.730392 33.476532 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 40 148 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 57.730392 33.476532] dotx
(unit\335 centrale ) [10.008003 0 10.007996 0 5.003998 0 5.994003 0 7.991997 0 -50.489998 -20.753998 7.992001 0 7.992001 0 10.008003 0 5.994003 0 7.991997 0 9 0 5.003998 0 7.991997 0 0 0] 61.497002 479 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 53.730392 -240.923462] dotx
0.8 0 0 0.8 57.730392 33.476532 sc4mt astore 0.8 0 0 0.8 57.730392 33.476532 sc5mt astore 427.304535 241 114 -190 0.8 0 0 0.8 57.730392 33.476532 sc6mt astore rstroke
/crlinw 2 def
/crendarw true def
0.8 0 0 0.8 57.730392 33.476532 sc4mt astore 0.8 0 0 0.8 57.730392 33.476532 sc5mt astore 84.000046 0 116 130 0.8 0 0 0.8 57.730392 33.476532 sc6mt astore ssl
0.8 0 0 0.8 57.730392 33.476532 sc4mt astore 0.8 0 0 0.8 57.730392 33.476532 sc5mt astore 0 -35 281 111 0.8 0 0 0.8 57.730392 33.476532 sc6mt astore ssl
(Int\335ruption ) [7.001999 0 10.007996 0 5.994003 0 7.992004 0 7.992004 0 10.007996 0 10.007996 0 5.994003 0 5.004013 0 9 0 10.007996 0 0 0] 186.494995 48 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 97.730392 28.676533] dotx
(oui ) [9 0 10.007996 0 5.003998 0 0 0] 225.994003 87 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 57.730392 33.476532] dotx
0.8 0 0 0.8 57.730392 33.476532 sc4mt astore 0.8 0 0 0.8 57.730392 33.476532 sc5mt astore 62.000031 0 350 127 0.8 0 0 0.8 57.730392 33.476532 sc6mt astore ssl
(non ) [10.007996 0 9 0 10.007996 0 0 0] 223.492004 87 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 172.930389 70.276535] dotx
(m\335moire ) [14.994003 0 7.992004 0 14.994003 0 9 0 5.003998 0 7.667999 0 7.992004 0 0 0] 204.178009 87 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 252.130402 77.476532] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 1524 a
 currentpoint currentpoint translate 1 0.55537 div 1 0.55537 div scale
neg exch neg exch translate
 484 1524 a 525 1616 a Fq(Fig.)13
b FD(8.5)g({)g Fp(Impl)o(\023)-20 b(ementation)15 b(du)h(r)n(e)n(gistr)
n(e)d(Barri)o(\022)-20 b(er)n(e.)179 1765 y FB(est)18
b(accessible,)i(et)e(p)q(eut)g(^)-18 b(etre)18 b(utilis)o(\023)-18
b(ee)21 b(p)q(our)e(n'imp)q(orte)g(quelle)h(t^)-19 b(ac)o(he.)18
b(Le)h(d)o(\023)-18 b(esa)o(v)n(an)o(tage)26 b(:)17 b(aucune)179
1810 y(fonctionnalit)o(\023)-18 b(e,)14 b(tout)e(doit)f(^)-18
b(etre)12 b(reprogramm)o(\023)-18 b(e,)12 b(t)o(ypiquemen)o(t)h(il)g
(n'y)e(pas)h(de)g(syst)o(\022)-18 b(eme)12 b(d'exploitation)e(!)179
1961 y Fu(8.1.2)55 b(Le)18 b(moniteur)e(r)o(\023)-27
b(esidan)n(t)236 2045 y FB(On)12 b(c)o(herc)o(he)g(\022)-19
b(a)11 b(prot)o(\023)-18 b(eger)13 b(le)f(no)o(y)o(au)g(des)g(in)o
(terf)o(\023)-18 b(erences)13 b(p)q(ossibles)h(de)d(la)h(part)g(des)g
(utilisateurs.)i(P)o(our)179 2091 y(cela,)i(toute)g(adresse)g
(d'instruction)i(ou)f(de)e(donn)o(\023)-18 b(ee)17 b(manipul)o(\023)-18
b(ee)18 b(par)e(un)h(programme)f(utilisateur)j(est)179
2136 y(compar)o(\023)-18 b(ee)14 b(\022)-19 b(a)13 b(un)g(registre)h
(barri)o(\022)-18 b(ere)14 b(\(fence)f(register\).)236
2190 y(T)m(an)o(t)g(que)h(l'adresse)g(est)f(sup)o(\023)-18
b(erieure)15 b(\022)-19 b(a)13 b(la)h(barri)o(\022)-18
b(ere,)14 b(l'adresse)g(est)g(l)o(\023)-18 b(egale,)14
b(sinon)h(l'adresse)f(est)f(une)179 2236 y(r)o(\023)-18
b(ef)o(\023)g(erence)13 b(ill)o(\023)-18 b(egale)16 b(au)d(moniteur)i
(et)e(une)g(in)o(terruption)j(est)c(\023)-18 b(emise)13
b(\(in)o(v)n(alid)j(adress\).)236 2290 y(Cette)e(m)o(\023)-18
b(etho)q(de)14 b(demande)h(que)f(p)q(our)h(tout)f(acc)o(\022)-18
b(es)14 b(\022)-19 b(a)14 b(la)g(m)o(\023)-18 b(emoire)15
b(une)f(v)o(\023)-18 b(eri\014cation)17 b(de)d(la)g(v)n(alidit)o(\023)
-18 b(e)179 2335 y(de)14 b(l'adresse)h(soit)g(r)o(\023)-18
b(ealis)o(\023)g(ee.)15 b(Ceci)f(ralen)o(tit)i(toute)e(ex)o(\023)-18
b(ecution)16 b(d'un)e(acc)o(\022)-18 b(es)14 b(m)o(\023)-18
b(emoire.)15 b(\(P)o(aterson)f(donne)179 2381 y(comme)j(exemple)h(de)g
(ralen)o(tissemen)o(t)h(des)e(temps)h(de)f(980)h(nanosecondes)h(sans)f
(v)o(\023)-18 b(eri\014cation)19 b(et)e(995)179 2427
y(nanosecondes)e(a)o(v)o(ec)e(v)o(\023)-18 b(eri\014cation\).)15
b(Globalemen)o(t)h(ce)d(temps)g(suppl)o(\023)-18 b(emen)o(taire)16
b(p)q(eut)c(^)-18 b(etre)13 b(oubli)o(\023)-18 b(e.)179
2577 y Fu(8.1.3)55 b(Le)18 b(registre)f(barri)o(\022)-27
b(ere)236 2661 y FB(L'impl)o(\023)-18 b(emen)o(tation)16
b(d'un)e(tel)f(m)o(\023)-18 b(ecanisme)14 b(doit)f(^)-18
b(etre)13 b(r)o(\023)-18 b(ealis)o(\023)g(ee)15 b(de)e(fa\030)-17
b(con)14 b(mat)o(\023)-18 b(erielle.)236 2715 y(La)17
b(v)n(aleur)g(du)g(registre)g(barri)o(\022)-18 b(ere)18
b(est)e(parfois)i(r)o(\023)-18 b(ealis)o(\023)g(ee)18
b(de)f(fa\030)-17 b(con)16 b(\014xe)h(sur)g(une)g(mac)o(hine,)g(ce)f
(qui)179 2761 y(p)q(ose)e(des)f(probl)o(\022)-18 b(emes)15
b(d)o(\022)-18 b(es)14 b(que)g(l'on)g(v)o(eut)f(c)o(hanger)i(le)e(no)o
(y)o(au)i(et/ou)f(prot)o(\023)-18 b(eger)13 b(plus)i(de)f(m)o(\023)-18
b(emoire)14 b(\(v)o(oir)179 2806 y(DOS\).)p eop
%%Page: 60 68
60 67 bop 75 50 a FD(60)1141 b Fz(CHAPITRE)14 b(8.)27
b(LA)14 b(M)1670 39 y(\023)1665 50 y(EMOIRE)484 521 y
 currentpoint currentpoint translate 0.55537 0.55537 scale neg exch
neg exch translate

484 521 a 14 w @beginspecial 0 @llx 0 @lly 405 @urx 171
@ury 4050 @rwi @setspecial
%%BeginDocument: eps/mem5.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /estroke {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /efill {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath unpagectm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /apstroke {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc pie chord or {
        closepath
    } if crlinalph setalpha pie not chord not and {
        crfrtarw {
            2 copy crlinw exch gsave newpath angle1 1 add cos radius mul radius add angle1 1 add sin radius mul radius add moveto angle1 cos radius mul radius add angle1 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if crendarw {
            2 copy crlinw exch gsave newpath angle2 1 sub cos radius mul radius add angle2 1 sub sin radius mul radius add moveto angle2 cos radius mul radius add angle2 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if
    } if crlincp setlinecap crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /apfill {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup 5 -2 roll arc pie chord or {
        closepath
    } if 1 xscale div 1 yscale div scale crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /mkepath {
    dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def /closed exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc closed pie or chord or {
        closepath
    } if unpagectm
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 405 170.909363 rectclip
-86 -111 translate
86 111 405 170.909363 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
0.8 0 0 0.8 57.730392 38.845352 sc4mt astore 0.8 0 0 0.8 57.730392 38.845352 sc5mt astore 224 251 114 -24 0.8 0 0 0.8 57.730392 38.845352 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Registre  Base ) [12.995998 0 7.992001 0 9 0 5.003998 0 7.001999 0 5.994003 0 7.667999 0 7.991997 0 4.5 0 -52.073997 -20.754028 12.006001 0 8.999996 0 7.001999 0 7.991997 0 0 0] 31.926003 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 230.530396 -226.754654] dotx
/crlinw 2 def
/crendarw true def
0.8 0 0 0.8 57.730392 38.845352 sc4mt astore 0.8 0 0 0.8 57.730392 38.845352 sc5mt astore 0 -71 280 232 0.8 0 0 0.8 57.730392 38.845352 sc6mt astore ssl
/crlinw 1 def
/crendarw false def
0.8 0 0 0.8 57.730392 38.845352 sc4mt astore 0.8 0 0 0.8 57.730392 38.845352 sc5mt astore 36 160 80 -60 0.8 0 0 0.8 57.730392 38.845352 sc6mt astore rstroke
( ) [0 0] 40 148 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 57.730392 38.845352] dotx
(unit\335 centrale ) [10.008003 0 10.007996 0 5.003998 0 5.994003 0 7.991997 0 -50.489998 -20.753998 7.992001 0 7.992001 0 10.008003 0 5.994003 0 7.991997 0 9 0 5.003998 0 7.991997 0 0 0] 61.497002 479 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 53.730392 -235.554642] dotx
0.8 0 0 0.8 57.730392 38.845352 sc4mt astore 0.8 0 0 0.8 57.730392 38.845352 sc5mt astore 427.304535 241 114 -190 0.8 0 0 0.631579 57.730392 79.434814 sc6mt astore rstroke
/crlinw 2 def
/crendarw true def
0.8 0 0 0.8 57.730392 38.845352 sc4mt astore 0.8 0 0 0.8 57.730392 38.845352 sc5mt astore 137.000061 0 113 132 0.8 0 0 0.8 57.730392 38.845352 sc6mt astore ssl
0.8 0 0 0.8 57.730392 38.845352 sc4mt astore 0.8 0 0 0.8 57.730392 38.845352 sc5mt astore 106.000061 0 307 131 0.8 0 0 0.8 57.730392 38.845352 sc6mt astore ssl
(m\335moire ) [14.994003 0 7.992004 0 14.994003 0 9 0 5.003998 0 7.667999 0 7.992004 0 0 0] 204.178009 87 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 252.130402 82.845352] dotx
/crlinw 1 def
/crendarw false def
0.8 0 0 0.8 57.730392 38.845352 sc4mt astore 0.8 0 0 0.8 57.730392 38.845352 sc6mt astore 19.830532 1 -1 260 141 0.685811 0 0 0.645469 91.419525 65.434174 sc5mt astore estroke
(+ ) [10.26001 0 0 0] 257 57 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 72.930389 94.045349] dotx
(1400 ) [9 0 9 0 9 0 9 0 0 0] 235 238 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 56.930393 34.845352] dotx
(0346 ) [9 0 9 0 9 0 9 0 0 0] 126 214 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 95.330399 -45.154648] dotx
(1746 ) [9 0 9 0 9 0 9 0 0 0] 126 214 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 234.530396 -47.554649] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 521 a
 currentpoint currentpoint translate 1 0.55537 div 1 0.55537 div scale
neg exch neg exch translate
 484 521 a 530 612 a Fq(Fig.)f
FD(8.6)g({)g Fp(Impl)o(\023)-20 b(ementation)15 b(du)h(r)n(e)n(gistr)n
(e)d(de)i(Base.)602 1412 y
 currentpoint currentpoint translate 0.6111 0.6111 scale neg exch neg
exch translate
 602 1412 a 14 w @beginspecial
0 @llx 0 @lly 275 @urx 291 @ury 2750 @rwi @setspecial
%%BeginDocument: eps/mem4.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 274.542603 290.203247 rectclip
-129 -442.999207 translate
129 442.999207 274.542603 290.203247 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0.666662 def /crfilgrn 0.666662 def /crfilblu 0.666662 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
0.8 0 0 0.8 53.149033 117.338409 sc4mt astore 0.8 0 0 0.8 53.149033 117.338409 sc5mt astore 243 743 137 -333 0.8 0 0 0.8 53.149033 117.338409 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(0 ) [9 0 0 0] 191 673 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 86.749039 179.738403] dotx
(FFFF ) [10.997986 0 10.997986 0 10.997986 0 10.997986 0 0 0] 350 334 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 86.749039 179.738403] dotx
(un programme  utilisateur  ) [10.007996 0 10.007996 0 4.5 0 10.007996 0 7.667999 0 9 0 9 0 7.992004 0 9 0 14.994003 0 14.994003 0 7.992004 0 4.5 0 -101.583008 -20.754028 10.007996 0 5.994003 0 5.003998 0 5.003998 0 5.003998 0 7.001999 0 9 0 5.994003 0 7.992004 0 10.007996 0 7.992004 0 4.5 0 0 0] 154.167999 557 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 135.549042 79.738403] dotx
(le noyau \(moniteur\) ) [5.003998 0 7.992004 0 4.5 0 10.007996 0 9 0 9 0 9 0 10.007996 0 -73.745987 -20.754028 5.994003 0 14.994003 0 9 0 10.007996 0 5.003998 0 5.994003 0 7.992004 0 10.007996 0 7.992004 0 5.994003 0 0 0] 181.744003 557 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 132.34903 240.538422] dotx
/crendarw true def
0.8 0 0 0.8 53.149033 117.338409 sc4mt astore 0.8 0 0 0.8 53.149033 117.338409 sc5mt astore 46.001114 0.884644 188 565 0.8 0 0 0.8 53.149033 117.338409 sc6mt astore ssl
/crendarw false def
0.8 0 0 0.8 53.149033 117.338409 sc4mt astore 0.8 0 0 0.8 53.149033 117.338409 sc5mt astore 138 0 201 589 0.8 0 0 0.8 86.749039 170.138412 sc6mt astore ssl
0.8 0 0 0.8 53.149033 117.338409 sc4mt astore 0.8 0 0 0.8 53.149033 117.338409 sc5mt astore 96 579 114 -24 0.8 0 0 0.8 53.149033 117.338409 sc6mt astore rstroke
(Registre  Barri\334re ) [12.995998 0 7.992001 0 9 0 5.003998 0 7.001999 0 5.994003 0 7.667999 0 7.991997 0 4.5 0 -66.896996 -20.754028 12.006001 0 9 0 7.992001 0 7.991997 0 5.003998 0 7.991997 0 7.667999 0 7.991997 0 0 0] 31.926003 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 109.149033 110.138412] dotx
0.8 0 0 0.8 53.149033 117.338409 sc5mt astore 243 655 137 -88 0.8 0 0 0.8 53.149033 117.338409 sc6mt astore rfill
0.8 0 0 0.8 53.149033 117.338409 sc4mt astore 0.8 0 0 0.8 53.149033 117.338409 sc5mt astore 243 655 137 -88 0.8 0 0 0.8 53.149033 117.338409 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 602 1412 a
 currentpoint currentpoint translate 1 0.6111 div 1 0.6111 div scale
neg exch neg exch translate
 602 1412 a 356 1503 a Fq(Fig.)e
FD(8.7)f({)i Fp(Positionnement)i(d'un)f(pr)n(o)n(c)n(essus)g(p)n(ar)g
(un)g(r)n(e)n(gistr)n(e)e(de)i(Base.)179 1637 y Fu(8.1.4)55
b(Le)18 b(registre)f(base)236 1707 y FB(Le)d(m)o(\023)-18
b(ecanisme)15 b(suiv)n(an)o(t)g(est)f(une)g(notion)i(plus)f(utile)g(et)
e(plus)i(ergonomique)h(p)q(our)f(d)o(\023)-18 b(ecrire)15
b(la)f(zone)179 1753 y(d'adressage)19 b(d'un)f(programme,)h(et)f(utile)
h(p)q(our)g(r)o(\023)-18 b(esoudre)19 b(le)f(probl)o(\022)-18
b(eme)20 b(de)e(d)o(\023)-18 b(eplacemen)o(t)20 b(des)e(pro-)179
1799 y(grammes)13 b(en)g(m)o(\023)-18 b(emoire)14 b(\(relo)q(cation\).)
236 1845 y(En)c(e\013et,)f(du)h(fait)f(que)h(l'on)g(utilise)i(un)d
(registre)i(barri)o(\022)-18 b(ere,)10 b(les)g(adresses)g(utilisabl)q
(es)i(de)d(la)h(m)o(\023)-18 b(emoire)10 b(ne)179 1890
y(commencen)o(t)j(plus)g(\022)-19 b(a)13 b(0000,)f(alors)h(que)g
(l'utilisateur)i(v)o(eut)e(con)o(tin)o(uer)h(\022)-19
b(a)12 b(utiliser)i(des)f(adresses)g(logiques)179 1936
y(qui)h(commencen)o(t)g(\022)-19 b(a)13 b(0000.)236 1982
y(P)o(our)h(con)o(tin)o(uer)h(\022)-19 b(a)13 b(fournir)h(cette)f(p)q
(ossibili)q(t)o(\023)-18 b(e)16 b(le)d(registre)h(barri)o(\022)-18
b(ere)14 b(est)f(transform)o(\023)-18 b(e)14 b(en)f(registre)h(de)179
2028 y(base)d(\(relo)q(cation\))h(.)e(A)g(c)o(haque)i(utilisation)i
(d'une)d(adresse)g(logique)i(du)e(programme,)g(on)f(a)r(joute)h(\022)
-19 b(a)11 b(cette)179 2074 y(adresse)i(la)g(v)n(aleur)h(du)f(registre)
g(de)g(base)g(p)q(our)g(trouv)o(er)g(l'adresse)h(ph)o(ysique.)g
(L'utilisateur)h(ne)e(conna)l(^)-15 b(\020t)179 2119
y(plus)14 b(les)g(adresses)g(ph)o(ysiques.)h(Il)e(tra)o(v)n(aille)i
(uniquemen)o(t)g(a)o(v)o(ec)f(des)f(adresses)h(logiques)h(\(xdb\).)236
2165 y(Le)c(moniteur)g(a)e(\023)-18 b(evidemmen)o(t)12
b(une)f(v)n(aleur)g(n)o(ulle)i(p)q(our)e(son)f(registre)i(de)e(base)h
(et)f(donc)h(p)q(eut)g(adresser)179 2211 y(toute)h(la)h(m)o(\023)-18
b(emoire.)12 b(Le)g(c)o(hangemen)o(t)i(de)e(la)h(v)n(aleur)g(du)f
(registre)h(de)g(base)f(se)g(fait)h(de)f(fa\030)-17 b(con)13
b(prot)o(\023)-18 b(eg)o(\023)g(ee)12 b(en)179 2257 y(mo)q(de)h
(moniteur.)236 2303 y(Ces)i(deux)h(syst)o(\022)-18 b(emes)15
b(de)g(protection)i(de)e(la)g(m)o(\023)-18 b(emoire)16
b(son)o(t)f(clairemen)o(t)i(mono-pro)q(cessus.)f(Seul)g(le)179
2348 y(moniteur)d(p)q(eut)e(^)-18 b(etre)12 b(prot)o(\023)-18
b(eg)o(\023)g(e)12 b(par)g(ces)g(m)o(\023)-18 b(ecanismes,)13
b(il)g(n'est)f(pas)g(p)q(ossible)i(de)e(prot)o(\023)-18
b(eger)13 b(les)f(pro)q(cessus)179 2394 y(en)o(tre)h(eux.)179
2507 y Fu(8.1.5)55 b(Le)18 b(sw)n(ap)236 2578 y FB(Il)11
b(est)f(p)q(ossible)j(a)o(v)o(ec)e(les)f(registres)i(barri)o(\022)-18
b(ere)11 b(ou)g(les)g(registres)g(de)g(base)g(d')o(\023)-18
b(ecrire)11 b(des)f(syst)o(\022)-18 b(emes)11 b(temps)179
2623 y(partag)o(\023)-18 b(e,)13 b(en)g(utilisan)o(t)j(le)e(m)o(\023)
-18 b(ecanisme)14 b(de)f(sw)o(ap)g(\()o(\023)-18 b(ec)o(hange\).)236
2715 y FC(Sw)o(app)q(er)p FB(,)10 b(c'est)f(\023)-18
b(ec)o(hanger)12 b(le)f(con)o(ten)o(u)h(de)f(la)g(m)o(\023)-18
b(emoire)11 b(cen)o(trale)h(a)o(v)o(ec)f(le)g(con)o(ten)o(u)h(d'une)f
(m)o(\023)-18 b(emoire)179 2761 y(secondaire.)16 b(P)o(ar)f(extension)h
(sw)o(app)q(er)g(devien)o(t)g(l'action)g(de)f(d)o(\023)-18
b(eplacer)16 b(une)f(zone)g(m)o(\023)-18 b(emoire)16
b(de)f(la)g(m)o(\023)-18 b(e-)179 2806 y(moire)14 b(v)o(ers)g(le)h
(supp)q(ort)g(de)f(sw)o(ap)g(\(en)g(g)o(\023)-18 b(en)o(\023)g(eral)15
b(un)f(disque\))i(ou)e(r)o(\023)-18 b(ecipro)q(quemen)o(t)16
b(du)e(p)o(\023)-18 b(eriph)o(\023)g(eriqu)q(e)16 b(de)p
eop
%%Page: 61 69
61 68 bop 75 50 a Fz(8.1.)26 b(ALLOCA)m(TION)14 b(CONTIGU)669
39 y(\177)664 50 y(E)1104 b FD(61)484 791 y
 currentpoint currentpoint translate 0.62418 0.62418 scale neg exch
neg exch translate
 484 791 a
14 w @beginspecial 0 @llx 0 @lly 360 @urx 256 @ury 3600
@rwi @setspecial
%%BeginDocument: eps/mem.swap.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /estroke {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /efill {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath unpagectm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /apstroke {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc pie chord or {
        closepath
    } if crlinalph setalpha pie not chord not and {
        crfrtarw {
            2 copy crlinw exch gsave newpath angle1 1 add cos radius mul radius add angle1 1 add sin radius mul radius add moveto angle1 cos radius mul radius add angle1 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if crendarw {
            2 copy crlinw exch gsave newpath angle2 1 sub cos radius mul radius add angle2 1 sub sin radius mul radius add moveto angle2 cos radius mul radius add angle2 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if
    } if crlincp setlinecap crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /apfill {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup 5 -2 roll arc pie chord or {
        closepath
    } if 1 xscale div 1 yscale div scale crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /mkepath {
    dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def /closed exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc closed pie or chord or {
        closepath
    } if unpagectm
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 360 256 rectclip
-118 -397 translate
118 397 360 256 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
0.8 0 0 0.8 59.58992 105.000305 sc4mt astore 0.8 0 0 0.8 59.58992 105.000305 sc5mt astore 60 681 127 -318 0.8 0 0 0.8 70.789917 107.400307 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Barri\334re ) [9.338001 0 7 0 6.216 0 6.216 0 3.892002 0 6.216003 0 5.963997 0 6.216003 0 0 0] 26 627 /Times-Bold [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 109.189926 101.800308] dotx
0.8 0 0 0.8 59.58992 105.000305 sc4mt astore 0.8 0 0 0.8 59.58992 105.000305 sc5mt astore 127 0 74 619 0.8 0 0 0.8 59.58992 105.800308 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(Moniteur ) [16.991997 0 9 0 10.008003 0 5.003998 0 5.994003 0 7.992004 0 10.007996 0 7.992004 0 0 0] 98 662 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 59.58992 105.800308] dotx
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
0.8 0 0 0.8 59.58992 105.000305 sc6mt astore 88.392578 1 -1 352 636 0.8 0 0 0.135758 53.989922 360.258209 sc5mt astore efill
0.8 0 0 0.8 59.58992 105.000305 sc4mt astore 0.8 0 0 0.8 59.58992 105.000305 sc6mt astore 88.392578 1 -1 352 636 0.8 0 0 0.135758 53.989922 360.258209 sc5mt astore estroke
0.8 0 0 0.8 59.58992 105.000305 sc5mt astore 352 622 176 -213 0.8 0 0 0.8 53.989922 107.400307 sc6mt astore rfill
0.8 0 0 0.8 59.58992 105.000305 sc4mt astore 0.8 0 0 0.8 59.58992 105.000305 sc5mt astore 352 622 176 -213 0.8 0 0 0.8 53.989922 107.400307 sc6mt astore rstroke
0.8 0 0 0.8 59.58992 105.000305 sc6mt astore 88.392578 1 -1 352 636 0.778346 0 0 0.135758 62.412163 361.858215 sc5mt astore efill
0.8 0 0 0.8 59.58992 105.000305 sc6mt astore 88.392578 1 -1 352 636 0.8 0 0 0.135758 53.989922 529.858215 sc5mt astore efill
0.8 0 0 0.8 59.58992 105.000305 sc4mt astore 0.8 0 0 0.8 59.58992 105.000305 sc6mt astore 88.392578 1 -1 352 636 0.8 0 0 0.135758 53.989922 529.858215 sc5mt astore estroke
0.8 0 0 0.8 59.58992 105.000305 sc4mt astore 0.8 0 0 0.8 59.58992 105.000305 sc5mt astore 367 589 70 -65 0.8 0 0 0.8 59.58992 105.800308 sc6mt astore rstroke
0.8 0 0 0.8 59.58992 105.000305 sc4mt astore 0.8 0 0 0.8 59.58992 105.000305 sc5mt astore 423 495 70 -65 0.8 0 0 0.8 59.58992 105.800308 sc6mt astore rstroke
(P1 ) [10.997986 0 9 0 0 0] 285 552 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 143.58992 105.800308] dotx
(P2 ) [10.998001 0 9 0 0 0] 232 640 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 231.58992 -40.599701] dotx
/crlinw 2 def
/crendarw true def
0.8 0 0 0.8 59.58992 105.000305 sc5mt astore crlinw 0.8 0 0 0.8 59.58992 105.000305 sc6mt astore 361.180115 548.994629 361.189941 549.000305 arow
false 0.8 0 0 0.8 59.58992 105.800308 sc5mt astore sstrt
systemdict
begin
167 530 377 570 setbbox
167 570 moveto
167 570 206 538 271 534 curveto
336 530 377 554 377 554 curveto
end
/nspans 2 def 0.8 0 0 0.8 59.58992 105.000305 sc5mt astore 0.8 0 0 0.8 59.58992 105.000305 sc6mt astore splstroke
/crendarw false def
/crfrtarw true def
0.8 0 0 0.8 59.58992 105.000305 sc5mt astore crlinw 0.8 0 0 0.8 59.58992 105.000305 sc6mt astore 193.999512 484.992004 193.989929 485.000305 arow
false 0.8 0 0 0.8 59.58992 105.800308 sc5mt astore sstrt
systemdict
begin
153.447983 422 446.40274 478.981995 setbbox
168 474 moveto
168 474 208 439 279 436 curveto
350 433 427 458 427 458 curveto
end
/nspans 2 def 0.8 0 0 0.8 59.58992 105.000305 sc5mt astore 0.8 0 0 0.8 59.58992 105.000305 sc6mt astore splstroke
(1  swap out  ) [9 0 4.5 0 4.5 0 7.002014 0 12.996002 0 9 0 10.007996 0 4.5 0 9 0 10.007996 0 5.993988 0 4.5 0 0 0] 237 558 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 59.58992 105.800308] dotx
(2  swap in ) [9 0 4.5 0 4.5 0 7.002014 0 12.996002 0 9 0 10.007996 0 4.5 0 5.003998 0 10.007996 0 0 0] 237 558 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 66.789917 -10.999695] dotx
(   Zone  utilisateur ) [4.5 0 4.5 0 4.5 0 12.005997 0 9 0 10.007996 0 7.992004 0 4.5 0 -57.005997 -20.753998 10.007996 0 5.994003 0 5.003998 0 5.003998 0 5.003998 0 7.001999 0 9 0 5.994003 0 7.992004 0 10.007996 0 7.992004 0 0 0] 107 528 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 52.389919 101.800308] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 791 a
 currentpoint currentpoint translate 1 0.62418 div 1 0.62418 div scale
neg exch neg exch translate
 484 791 a 296 882 a Fq(Fig.)12
b FD(8.8)h({)h Fp(Un)h(syst)o(\022)-20 b(eme)15 b(de)g(swap)g
(utilisant)f(uniquement)i(un)f(r)n(e)n(gistr)n(e)f(b)n(arri)o(\022)-20
b(er)n(e.)179 1028 y FB(sw)o(ap)13 b(v)o(ers)g(la)h(m)o(\023)-18
b(emoire.)236 1081 y(Le)10 b(syst)o(\022)-18 b(eme)11
b(v)n(a)g(r)o(\023)-18 b(ealiser)11 b(cet)f(\023)-18
b(ec)o(hange)11 b(\022)-19 b(a)10 b(c)o(haque)h(c)o(hangemen)o(t)h(de)e
(con)o(texte.)h(Les)f(syst)o(\022)-18 b(emes)11 b(de)f(sw)o(ap)179
1126 y(utilisen)o(t)17 b(une)f(m)o(\023)-18 b(emoire)16
b(secondaire)h(qui)f(est)f(en)h(g)o(\023)-18 b(en)o(\023)g(eral)16
b(un)g(disque)h(mais)f(on)f(p)q(eut)h(utiliser)h(d'autre)179
1172 y(supp)q(orts)f(secondaires)g(plus)g(len)o(ts)g(ou)f(plus)h
(rapides)g(comme)f(des)g(bandes)h(ou)f(m)o(\023)-18 b(emoires)15
b(secondaires)179 1218 y(\(non)e(accessibles)j(par)d(l'unit)o(\023)-18
b(e)15 b(de)e(traitemen)o(t\).)179 1362 y Fu(8.1.6)55
b(Le)18 b(co)r(^)-30 b(ut)18 b(du)h(sw)n(ap)236 1444
y FB(Sur)e(un)g(tel)g(syst)o(\022)-18 b(eme,)17 b(le)g(temps)f(de)h
(comm)o(utation)h(de)f(t^)-19 b(ac)o(hes)16 b(est)h(tr)o(\022)-18
b(es)16 b(imp)q(ortan)o(t.)i(Il)e(est)h(donc)179 1489
y(n)o(\023)-18 b(ecessaire)15 b(que)e(c)o(haque)i(pro)q(cessus)f(reste)
f(p)q(ossesseur)i(de)f(l'unit)o(\023)-18 b(e)14 b(de)g(traitemen)o(t)g
(un)g(temps)f(su\016sam-)179 1535 y(men)o(t)g(long)i(p)q(our)g(que)f
(le)g(ralen)o(tissemen)o(t)i(d)q(^)-20 b(u)14 b(au)g(sw)o(ap)g(ne)g
(soit)g(pas)g(trop)g(sensible.)i(Que)d(ce)h(passe-t-il)179
1581 y(sinon)t(?)i(Le)f(syst)o(\022)-18 b(eme)15 b(utilise)h(la)g(ma)r
(jeure)f(partie)g(de)g(ses)g(ressources)g(\022)-19 b(a)15
b(d)o(\023)-18 b(eplacer)16 b(des)f(pro)q(cessus)h(en)f(et)179
1626 y(hors)e(m)o(\023)-18 b(emoire)14 b(cen)o(trale.)g(L'unit)o(\023)
-18 b(e)14 b(de)f(traitemen)o(t)h(n'est)f(plus)h(utilis)o(\023)-18
b(ee)15 b(au)f(maxim)o(um)g(...)179 1770 y Fu(8.1.7)55
b(Utilisation)17 b(de)h(la)h(taille)e(des)h(pro)r(cessus)236
1852 y FB(P)o(our)11 b(am)o(\023)-18 b(eliorer)13 b(les)e(m)o(\023)-18
b(ecanismes)12 b(de)f(sw)o(ap,)g(on)g(remarque)g(que)g(le)g(temps)g(de)
g(sw)o(ap)g(est)g(prop)q(ortion-)179 1898 y(nel)h(\022)-19
b(a)12 b(la)g(taille)i(des)e(donn)o(\023)-18 b(ees)13
b(\022)-19 b(a)12 b(d)o(\023)-18 b(eplacer.)13 b(P)o(our)f(am)o(\023)
-18 b(eliorer)13 b(les)g(p)q(erformances,)f(il)h(faut)f(donc)g(in)o
(tro)q(duire)179 1944 y(la)f(notion)h(de)f(taille)h(e\013ectiv)o(e)g
(d'un)f(pro)q(cessus,)h(ce)e(qui)i(p)q(ermet)f(d'am)o(\023)-18
b(eliorer)12 b(le)f(d)o(\023)-18 b(ebit)12 b(mais)f(cela)g(imp)q(ose)
179 1989 y(que)i(toutes)g(les)g(augmen)o(tations)i(ou)e(r)o(\023)-18
b(eductions)14 b(de)f(taille)i(d'un)e(pro)q(cessus)h(utilisateur)h
(soien)o(t)f(r)o(\023)-18 b(ealis)o(\023)g(ee)179 2035
y(par)16 b(un)h(app)q(el)h(syst)o(\022)-18 b(eme)17 b(\()p
FA(sbrk)p FB(\))d(a\014n)j(que)g(le)g(no)o(y)o(au)g(connaisse)i(\022)
-19 b(a)16 b(tout)h(momen)o(t)f(la)h(taille)i(r)o(\023)-18
b(eelle)17 b(de)179 2081 y(c)o(haque)d(pro)q(cessus.)179
2225 y Fu(8.1.8)55 b(Sw)n(ap)20 b(et)e(ex)o(\023)-27
b(ecutions)17 b(concurren)n(tes)236 2307 y FB(Une)g(autre)g(appro)q(c)o
(he)h(tr)o(\022)-18 b(es)17 b(e\016cace)g(est)g(de)g(r)o(\023)-18
b(ealiser)18 b(le)f(sw)o(ap)g(p)q(endan)o(t)h(l'ex)o(\023)-18
b(ecution)19 b(d'un)e(autre)179 2352 y(pro)q(cessus.)i(Mais)h(a)o(v)o
(ec)f(le)g(syst)o(\022)-18 b(eme)20 b(de)f(registres)g(de)g(relo)q
(cation)i(c'est)e(dangereux.)h(En)f(e\013et)g(nous)179
2398 y(ne)c(p)q(ouv)o(ons)h(pas)f(assurer)h(qu'un)f(pro)q(cessus)h
(utilisateur)i(donn)o(\023)-18 b(e)15 b(ne)g(v)n(a)g(pas)f(\023)-18
b(ecrire)16 b(dans)f(les)h(adresses)179 2444 y(r)o(\023)-18
b(eserv)o(\023)g(ees)13 b(\022)-19 b(a)13 b(un)h(autre)f(pro)q(cessus.)
179 2587 y Fu(8.1.9)55 b(Con)n(train)n(tes)236 2669 y
FB(Le)12 b(sw)o(ap)g(in)o(tro)q(duit)h(d'autres)g(con)o(train)o(tes)8
b(:)j(un)h(pro)q(cessus)h(doit)f(^)-18 b(etre)11 b(en)h(pr)o(\023)-18
b(eempt)o(\023)g(e)12 b(actif)g(p)q(our)g(^)-18 b(etre)179
2715 y(sw)o(app)o(\023)g(e,)12 b(c'est)f(\022)-19 b(a)11
b(dire)i(n')o(^)-18 b(etre)11 b(en)h(atten)o(te)f(d'aucune)i(en)o(tr)o
(\023)-18 b(ee-sortie.)12 b(En)g(e\013et,)g(si)g(P1)f(demande)i(une)f
(E/S)179 2761 y(et)g(p)q(endan)o(t)h(cette)f(demande)h(il)g(y)f(a)f
(\023)-18 b(ec)o(hange)13 b(de)f(P1)g(et)g(P2,)g(alors)h(la)f(lecture)h
(demand)o(\023)-18 b(ee)14 b(par)e(P1)g(a)g(lieu)179
2806 y(dans)i(les)f(donn)o(\023)-18 b(ees)15 b(de)e(P2.)p
eop
%%Page: 62 70
62 69 bop 75 50 a FD(62)1141 b Fz(CHAPITRE)14 b(8.)27
b(LA)14 b(M)1670 39 y(\023)1665 50 y(EMOIRE)484 508 y
 currentpoint currentpoint translate 0.52821 0.52821 scale neg exch
neg exch translate

484 508 a 14 w @beginspecial 0 @llx 0 @lly 426 @urx 174
@ury 4260 @rwi @setspecial
%%BeginDocument: eps/mem6.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 426 173.539246 rectclip
-82 -521.791748 translate
82 521.791748 426 173.539246 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
0.8 0 0 0.8 59.000305 121.730957 sc4mt astore 0.8 0 0 0.8 59.000305 121.730957 sc5mt astore 173 713 114 -24 0.329825 0 0 0.8 140.340668 124.130959 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Bas  ) [12.005997 0 9 0 7.001999 0 4.5 0 0 0] 175.5 695.169983 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 59.000305 124.130959] dotx
/crlinw 2 def
/crendarw true def
0.8 0 0 0.8 59.000305 121.730957 sc4mt astore 0.8 0 0 0.8 59.000305 121.730957 sc5mt astore 0 -61 225 690 0.8 0 0 0.8 32.600304 124.130959 sc6mt astore ssl
(A < Bas) [12.995998 0 4.5 0 10.260002 0 4.5 0 12.005997 0 9 0 0 0] 59.868 251 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 134.200302 395.330963] dotx
/txtdraw true def
/txlndraw true def
( ) [0 0] 120.131996 251 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 134.200302 395.330963] dotx
/crlinw 1 def
/crendarw false def
0.8 0 0 0.8 59.000305 121.730957 sc4mt astore 0.8 0 0 0.8 59.000305 121.730957 sc5mt astore 178 620 99 -52 0.8 0 0 0.8 32.600304 124.130959 sc6mt astore rstroke
0.8 0 0 0.8 59.000305 121.730957 sc4mt astore 0.8 0 0 0.8 59.000305 121.730957 sc5mt astore 29 625 80 -60 0.8 0 0 0.8 59.000305 121.730957 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 40 148 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 53.400307 493.730957] dotx
(unit\335 centrale ) [10.008003 0 10.007996 0 5.003998 0 5.994003 0 7.991997 0 -50.489998 -20.753998 7.992001 0 7.992001 0 10.008003 0 5.994003 0 7.991997 0 9 0 5.003998 0 7.991997 0 0 0] 61.497002 479 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 49.400307 219.330963] dotx
0.8 0 0 0.8 59.000305 121.730957 sc4mt astore 0.8 0 0 0.8 59.000305 121.730957 sc5mt astore 435.304535 703 114 -190 0.72067 0 0 0.8 111.933144 112.930954 sc6mt astore rstroke
/crlinw 2 def
/crendarw true def
0.8 0 0 0.8 59.000305 121.730957 sc4mt astore 0.8 0 0 0.8 59.000305 121.730957 sc5mt astore 24 0 109 595 0.8 0 0 0.8 59.000305 121.730957 sc6mt astore ssl
0.8 0 0 0.8 59.000305 121.730957 sc4mt astore 0.8 0 0 0.8 59.000305 121.730957 sc5mt astore 0 -35 208 568 0.8 0 0 0.8 32.600304 124.130959 sc6mt astore ssl
(Interruption ) [7.001999 0 10.007996 0 5.994003 0 7.992004 0 7.992004 0 7.992004 0 10.007996 0 10.007996 0 5.994003 0 5.004013 0 9 0 10.007996 0 0 0] 182.498993 48 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 17.400303 490.530945] dotx
(oui ) [9 0 10.007996 0 5.003998 0 0 0] 225.994003 87 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 24.600304 489.730957] dotx
0.8 0 0 0.8 59.000305 121.730957 sc4mt astore 0.8 0 0 0.8 59.000305 121.730957 sc5mt astore 44 0 393 589 0.8 0 0 0.8 66.200302 127.330956 sc6mt astore ssl
(non ) [10.007996 0 9 0 10.007996 0 0 0] 223.492004 87 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 207.800308 533.730957] dotx
(m\335moire ) [14.994003 0 7.992004 0 14.994003 0 9 0 5.003998 0 7.667999 0 7.992004 0 0 0] 204.178009 87 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 270.200317 525.730957] dotx
/crlinw 1 def
/crendarw false def
0.8 0 0 0.8 59.000305 121.730957 sc4mt astore 0.8 0 0 0.8 59.000305 121.730957 sc5mt astore 173 713 114 -24 0.329825 0 0 0.8 264.340668 122.53096 sc6mt astore rstroke
(Haut) [14.003998 0 9 0 10.007996 0 0 0] 175.5 695.169983 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 183.000305 122.53096] dotx
/crlinw 2 def
/crendarw true def
0.8 0 0 0.8 59.000305 121.730957 sc4mt astore 0.8 0 0 0.8 59.000305 121.730957 sc5mt astore 0 -61 347 691 0.8 0 0 0.8 59.000305 121.730957 sc6mt astore ssl
(A > Haut) [12.995998 0 4.5 0 10.260002 0 4.5 0 14.003998 0 9 0 10.007996 0 0 0] 54.368999 251 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 258.200317 393.730957] dotx
/txtdraw true def
/txlndraw true def
( ) [0 0] 125.630997 251 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 258.200317 393.730957] dotx
/crlinw 1 def
/crendarw false def
0.8 0 0 0.8 59.000305 121.730957 sc4mt astore 0.8 0 0 0.8 59.000305 121.730957 sc5mt astore 300 621 99 -52 0.8 0 0 0.8 59.000305 121.730957 sc6mt astore rstroke
/crlinw 2 def
/crendarw true def
0.8 0 0 0.8 59.000305 121.730957 sc4mt astore 0.8 0 0 0.8 59.000305 121.730957 sc5mt astore 0 -35 330 569 0.8 0 0 0.8 59.000305 121.730957 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(Interruption ) [7.001999 0 10.007996 0 5.994003 0 7.992004 0 7.992004 0 7.992004 0 10.007996 0 10.007996 0 5.994003 0 5.004013 0 9 0 10.007996 0 0 0] 182.498993 48 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 145.400299 487.330963] dotx
(oui ) [9 0 10.007996 0 5.003998 0 0 0] 225.994003 87 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 148.600311 488.130951] dotx
0.8 0 0 0.8 59.000305 121.730957 sc4mt astore 0.8 0 0 0.8 59.000305 121.730957 sc5mt astore 44 0 393 589 0.8 0 0 0.8 -59.399696 127.330956 sc6mt astore ssl
(non ) [10.007996 0 9 0 10.007996 0 0 0] 223.492004 87 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 82.20031 533.730957] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 508 a
 currentpoint currentpoint translate 1 0.52821 div 1 0.52821 div scale
neg exch neg exch translate
 484 508 a 640 599 a Fq(Fig.)f
FD(8.9)g({)g Fp(Double)j(r)n(e)n(gistr)n(e)d(b)n(arri)o(\022)-20
b(er)n(e.)484 1072 y
 currentpoint currentpoint translate 0.546 0.546 scale neg exch neg
exch translate
 484 1072 a 14 w @beginspecial 0
@llx 0 @lly 412 @urx 182 @ury 4120 @rwi @setspecial
%%BeginDocument: eps/mem7.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /estroke {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /efill {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath unpagectm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /apstroke {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc pie chord or {
        closepath
    } if crlinalph setalpha pie not chord not and {
        crfrtarw {
            2 copy crlinw exch gsave newpath angle1 1 add cos radius mul radius add angle1 1 add sin radius mul radius add moveto angle1 cos radius mul radius add angle1 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if crendarw {
            2 copy crlinw exch gsave newpath angle2 1 sub cos radius mul radius add angle2 1 sub sin radius mul radius add moveto angle2 cos radius mul radius add angle2 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if
    } if crlincp setlinecap crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /apfill {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup 5 -2 roll arc pie chord or {
        closepath
    } if 1 xscale div 1 yscale div scale crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /mkepath {
    dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def /closed exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc closed pie or chord or {
        closepath
    } if unpagectm
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 411.341858 181.206284 rectclip
-90.658142 -195.793716 translate
90.658142 195.793716 411.341858 181.206284 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
0.8 0 0 0.8 59.346146 57.332916 sc4mt astore 0.8 0 0 0.8 59.346146 57.332916 sc5mt astore 173 713 114 -24 0.421053 0 0 0.8 128.904053 -198.667084 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(limite  ) [5.003998 0 5.003998 0 14.994003 0 5.003998 0 5.994003 0 7.992004 0 4.5 0 0 0] 175.5 695.169983 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 63.346146 -198.667084] dotx
/crlinw 2 def
/crendarw true def
0.8 0 0 0.8 59.346146 57.332916 sc4mt astore 0.8 0 0 0.8 59.346146 57.332916 sc5mt astore 0 -61 225 690 0.8 0 0 0.8 42.546143 -199.467102 sc6mt astore ssl
(A > limite) [12.995998 0 4.5 0 10.260002 0 4.5 0 5.003998 0 5.003998 0 14.994003 0 5.003998 0 5.994003 0 0 0] 51.876003 251 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 151.346146 70.932915] dotx
/txtdraw true def
/txlndraw true def
( ) [0 0] 128.124008 251 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 151.346146 70.932915] dotx
/crlinw 1 def
/crendarw false def
0.8 0 0 0.8 59.346146 57.332916 sc4mt astore 0.8 0 0 0.8 59.346146 57.332916 sc5mt astore 178 620 99 -52 0.8 0 0 0.8 42.546143 -199.467102 sc6mt astore rstroke
0.8 0 0 0.8 59.346146 57.332916 sc4mt astore 0.8 0 0 0.8 59.346146 57.332916 sc5mt astore 41 301 80 -60 0.8 0 0 0.8 59.346146 57.332916 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 35.139999 148 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 63.346146 170.132919] dotx
(unit\335 centrale ) [10.008003 0 10.007996 0 5.003998 0 5.994003 0 7.991997 0 -50.489998 -20.753998 7.992001 0 7.992001 0 10.008003 0 5.994003 0 7.991997 0 9 0 5.003998 0 7.991997 0 0 0] 61.497002 479 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 59.346146 -104.26709] dotx
/crlinw 2 def
/crendarw true def
0.8 0 0 0.8 59.346146 57.332916 sc4mt astore 0.8 0 0 0.8 59.346146 57.332916 sc5mt astore 24 0 121 271 0.8 0 0 0.8 59.346146 57.332916 sc6mt astore ssl
0.8 0 0 0.8 59.346146 57.332916 sc4mt astore 0.8 0 0 0.8 59.346146 57.332916 sc5mt astore 0 -35 208 568 0.8 0 0 0.8 42.546143 -199.467102 sc6mt astore ssl
(Interruption ) [7.001999 0 10.007996 0 5.994003 0 7.992004 0 7.992004 0 7.992004 0 10.007996 0 10.007996 0 5.994003 0 5.004013 0 9 0 10.007996 0 0 0] 182.498993 48 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 33.746147 161.332916] dotx
(oui ) [9 0 10.007996 0 5.003998 0 0 0] 225.994003 87 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 34.546143 166.132919] dotx
/crlinw 1 def
/crendarw false def
0.8 0 0 0.8 59.346146 57.332916 sc4mt astore 0.8 0 0 0.8 59.346146 57.332916 sc5mt astore 337 399 47 -24 0.8 0 0 0.8 59.346146 57.332916 sc6mt astore rstroke
(Base ) [12.006001 0 8.999996 0 7.001999 0 7.991997 0 0 0] 48 617 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 295.34613 -132.26709] dotx
/crlinw 2 def
/crendarw true def
0.8 0 0 0.8 59.346146 57.332916 sc4mt astore 0.8 0 0 0.8 59.346146 57.332916 sc5mt astore 0 -71 360 376 0.8 0 0 0.8 59.346146 57.332916 sc6mt astore ssl
/crlinw 1 def
/crendarw false def
0.8 0 0 0.8 59.346146 57.332916 sc4mt astore 0.8 0 0 0.8 59.346146 57.332916 sc6mt astore 19.830532 1 -1 260 141 0.685811 0 0 0.645469 157.035278 199.121735 sc5mt astore estroke
(+ ) [10.26001 0 0 0] 257 57 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 138.546143 227.732925] dotx
/crlinw 2 def
/crendarw true def
0.8 0 0 0.8 59.346146 57.332916 sc4mt astore 0.8 0 0 0.8 59.346146 57.332916 sc5mt astore 74 0 258 276 0.8 0 0 0.8 59.346146 57.332916 sc6mt astore ssl
(non ) [10.007996 0 9 0 10.007996 0 0 0] 223.492004 87 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 92.946152 213.332916] dotx
/crlinw 1 def
/crendarw false def
0.8 0 0 0.8 59.346146 57.332916 sc4mt astore 0.8 0 0 0.8 59.346146 57.332916 sc5mt astore 435.304535 703 114 -190 0.8 0 0 0.8 62.546146 -208.26709 sc6mt astore rstroke
/crlinw 2 def
/crendarw true def
0.8 0 0 0.8 59.346146 57.332916 sc4mt astore 0.8 0 0 0.8 59.346146 57.332916 sc5mt astore 44 0 393 589 0.8 0 0 0.8 49.746147 -192.26709 sc6mt astore ssl
( ) [0 0] 238 87 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 191.346161 214.132904] dotx
(m\335moire ) [14.994003 0 7.992004 0 14.994003 0 9 0 5.003998 0 7.667999 0 7.992004 0 0 0] 204.178009 87 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 263.346161 205.332916] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 1072 a
 currentpoint currentpoint translate 1 0.546 div 1 0.546 div scale
neg exch neg exch translate
 484 1072 a 707 1163 a Fq(Fig.)13
b FD(8.10)g({)g Fp(Base)j(et)e(Limite.)179 1288 y Fu(8.1.10)55
b(Deux)18 b(solutions)g(existen)n(t)236 1358 y FB(Soit)f(ne)f(jamais)g
(sw)o(app)q(er)g(de)g(pro)q(cessus)h(en)f(atten)o(te)f(d'en)o(tr)o
(\023)-18 b(ees-sorties.)17 b(Soit)g(r)o(\023)-18 b(ealiser)17
b(toutes)f(les)179 1404 y(en)o(tr)o(\023)-18 b(ees-sorties)13
b(dans)f(des)g(bu\013ers)h(in)o(ternes)g(au)e(no)o(y)o(au)i(\(solution)
h(UNIX\),)c(ce)h(qui)i(a)f(p)q(our)g(co)q(^)-20 b(ut)12
b(une)g(re-)179 1450 y(copie)f(m)o(\023)-18 b(emoire)10
b(\022)-19 b(a)10 b(m)o(\023)-18 b(emoire)11 b(suppl)o(\023)-18
b(emen)o(taire)12 b(par)e(E/S.)g(Les)g(transferts)g(en)o(tre)g(le)h(no)
o(y)o(au)f(et)g(le)g(pro)q(cessus)179 1495 y(a)o(y)o(an)o(t)j(lieu)i
(uniquemen)o(t)g(quand)f(le)g(pro)q(cessus)g(est)f(en)g(m)o(\023)-18
b(emoire.)179 1607 y Fu(8.1.11)55 b(Les)18 b(probl)o(\022)-27
b(emes)16 b(de)j(protection)236 1677 y FB(Nous)f(v)o(enons)h(d'ap)q
(ercev)o(oir)h(des)e(probl)o(\022)-18 b(emes)19 b(de)f(protection)h(en)
o(tre)f(un)g(pro)q(cessus)h(et)f(le)g(no)o(y)o(au.)179
1723 y(Si)g(l'on)g(autorise)g(plusieurs)i(pro)q(cessus)f(\022)-19
b(a)17 b(r)o(\023)-18 b(esider)18 b(en)g(m)o(\023)-18
b(emoire)18 b(en)f(m)o(^)-18 b(eme)17 b(temps,)g(il)i(nous)f(faut)f(un)
179 1769 y(m)o(\023)-18 b(ecanisme)14 b(de)f(protection)i(in)o(ter-pro)
q(cessus.)179 1814 y(Deux)g(m)o(\023)-18 b(etho)q(des)15
b(son)o(t)g(courammen)o(t)g(utilis)o(\023)-18 b(ees)9
b(:)14 b(les)h(extensions)h(du)f(registre)g(barri)o(\022)-18
b(ere)16 b(et)e(du)h(registre)179 1860 y(de)e(base)h(\(relo)q
(cation\).)179 1972 y Fu(8.1.12)55 b(Les)18 b(registres)f(doubles)236
2042 y FB(Deux)d(registres)g(Barri)o(\022)-18 b(ere)14
b(Bas)g(et)e(Haut)179 2088 y(Si)i(Adresse)f Ft(<)g FB(Bas)g
Fr(\000)-7 b(!)14 b FB(lev)o(er)f(une)h(exception)h(erreur)e(d'adresse)
179 2134 y(Si)h(Adresse)f Ft(>)p FB(=)f(Haut)i Fr(\000)-7
b(!)13 b FB(lev)o(er)h(une)g(exception)g(erreur)g(d'adresse)179
2179 y(Sinon)g(adresse)g(correcte.)236 2271 y(Deux)i(registres)g(de)f
(relo)q(cation)i Fx(Base)d FB(et)h Fx(Limit)p FB(,)f(on)h(tra)o(v)n
(aille)i(a)o(v)o(ec)f(des)f(adresses)h(logiques)h Fx(Limit)179
2317 y FB(donne)h(la)g(v)n(aleur)g(maximale)h(d'une)f(adresse)g
(logique)h(et)e Fx(Base)f FB(donne)i(la)g(p)q(osition)h(en)e(m)o(\023)
-18 b(emoire)18 b(de)179 2362 y(l'adresse)c(logique)h(z)o(\023)-18
b(ero.)236 2454 y(Si)14 b(Adresse)g Ft(>)p FB(=)e Fx(Limit)h
Fr(\000)-7 b(!)13 b FB(lev)o(er)h(une)g(exception)g(erreur)g(d'adresse)
179 2499 y(sinon)g(utiliser)i(l'adresse)e(ph)o(ysique)h(Adresse+)p
Fx(Base)p FB(.)179 2678 y Fv(8.2)66 b(Ordonnancemen)n(t)23
b(en)f(m)o(\023)-32 b(emoire)22 b(des)g(pro)r(cessus)236
2761 y FB(Les)13 b(c)o(hoix)g(de)g(l'impl)o(\023)-18
b(emen)o(tation)15 b(des)e(m)o(\023)-18 b(ecanismes)14
b(d'adressage)f(in\015uence)g(\023)-18 b(enorm)o(\023)g(emen)o(t)14
b(l'ordon-)179 2806 y(nancemen)o(t)g(des)f(pro)q(cessus.)p
eop
%%Page: 63 71
63 70 bop 75 50 a Fz(8.3.)26 b(ALLOCA)m(TION)14 b(NON-CONTIGU)777
39 y(\177)772 50 y(E)996 b FD(63)484 747 y
 currentpoint currentpoint translate 0.51855 0.51855 scale neg exch
neg exch translate
 484 747 a
14 w @beginspecial 0 @llx 0 @lly 434 @urx 288 @ury 4340
@rwi @setspecial
%%BeginDocument: eps/mem.ordo.1.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 433.749603 287.769531 rectclip
-75.250389 -389.501221 translate
75.250389 389.501221 433.749603 287.769531 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 704 68 -293 0.8 0 0 0.775427 58.450394 123.876091 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 38 699 /Courier-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 64.850395 102.576385] dotx
/txtdraw true def
/txlndraw true def
(300k ) [8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 52.850395 77.776382] dotx
(Moniteur ) [14.223999 0 8 0 8 0 4.447998 0 4.447998 0 7.104004 0 8 0 5.328003 0 0 0] 176 674 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 -19.949608 115.376389] dotx
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 640 68 28 0.8 0 0 0.8 58.450394 106.576385 sc6mt astore rstroke
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 618 68 22 0.8 0 0 0.8 58.450394 106.576385 sc6mt astore rstroke
(p1 ) [8 0 8 0 0 0] 274 643 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 -80.749603 112.976387] dotx
(p2 ) [8 0 8 0 0 0] 418 550 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 -194.349609 168.176392] dotx
(500k ) [8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 52.850395 56.976383] dotx
(600k ) [8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 52.850395 43.376385] dotx
(1000k ) [8 0 8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 46.450394 -12.623619] dotx
(1200k ) [8 0 8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 46.450394 -30.223618] dotx
(1500k ) [8 0 8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 46.450394 -60.623611] dotx
(1900k ) [8 0 8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 46.450394 -85.423615] dotx
(2100k ) [8 0 8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 45.650391 -119.023621] dotx
(0 ) [8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 64.850395 102.576385] dotx
(p3 ) [8 0 8 0 0 0] 418 550 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 -195.149612 96.976387] dotx
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 530 68 28 0.8 0 0 0.8 58.450394 106.576385 sc6mt astore rstroke
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 496 68 -43 0.8 0 0 0.874419 58.450394 69.664764 sc6mt astore rstroke
/crfilred 0.666662 def /crfilgrn 0.666662 def /crfilblu 0.666662 def /filinclr true def
0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 453 68 -42 0.8 0 0 0.590476 58.450394 198.290634 sc6mt astore rfill
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 453 68 -42 0.8 0 0 0.590476 58.450394 198.290634 sc6mt astore rstroke
0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 530 68 -34 0.8 0 0 0.8 58.450394 106.576385 sc6mt astore rfill
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 530 68 -34 0.8 0 0 0.8 58.450394 106.576385 sc6mt astore rstroke
0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 618 68 -60 0.8 0 0 0.8 58.450394 106.576385 sc6mt astore rfill
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 618 68 -60 0.8 0 0 0.8 58.450394 106.576385 sc6mt astore rstroke
(p4 ) [8 0 8 0 0 0] 418 550 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 -195.949615 41.776382] dotx
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 704 68 -293 0.8 0 0 0.775427 171.250397 121.476044 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 38 699 /Courier-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 177.650391 100.176384] dotx
/txtdraw true def
/txlndraw true def
(300k ) [8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 165.650391 75.376389] dotx
(Moniteur ) [14.223999 0 8 0 8 0 4.447998 0 4.447998 0 7.104004 0 8 0 5.328003 0 0 0] 176 674 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 92.850395 112.976387] dotx
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 640 68 28 0.8 0 0 0.8 171.250397 104.176384 sc6mt astore rstroke
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 618 68 22 0.8 0 0 0.8 171.250397 104.176384 sc6mt astore rstroke
(p1 ) [8 0 8 0 0 0] 274 643 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 32.050392 110.576385] dotx
(p2 ) [8 0 8 0 0 0] 418 550 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 -81.549606 165.776382] dotx
(500k ) [8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 165.650391 54.576385] dotx
(600k ) [8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 165.650391 40.976387] dotx
(800k ) [8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 165.650391 12.976387] dotx
(1200k ) [8 0 8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 159.250397 -19.023613] dotx
(2100k ) [8 0 8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 159.250397 -120.623611] dotx
(0 ) [8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 177.650391 100.176384] dotx
(p3 ) [8 0 8 0 0 0] 418 550 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 -81.549606 141.776382] dotx
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 530 68 28 0.8 0 0 0.8 171.250397 152.176392 sc6mt astore rstroke
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 496 68 -43 0.8 0 0 0.8 171.250397 179.376389 sc6mt astore rstroke
0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 618 68 -60 0.8 0 0 1.719999 171.250397 -521.182739 sc6mt astore rfill
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 618 68 -60 0.8 0 0 1.719999 171.250397 -521.182739 sc6mt astore rstroke
(p4 ) [8 0 8 0 0 0] 418 550 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 -83.149612 117.776382] dotx
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 704 68 -293 0.8 0 0 0.775427 285.650391 123.876091 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 38 699 /Courier-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 292.050415 102.576385] dotx
/txtdraw true def
/txlndraw true def
(300k ) [8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 280.050415 77.776382] dotx
(Moniteur ) [14.223999 0 8 0 8 0 4.447998 0 4.447998 0 7.104004 0 8 0 5.328003 0 0 0] 176 674 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 207.250397 115.376389] dotx
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 640 68 28 0.8 0 0 0.8 285.650391 106.576385 sc6mt astore rstroke
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 618 68 22 0.8 0 0 0.8 285.650391 106.576385 sc6mt astore rstroke
(p1 ) [8 0 8 0 0 0] 274 643 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 146.450394 112.976387] dotx
(p2 ) [8 0 8 0 0 0] 418 550 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 32.850395 168.176392] dotx
(500k ) [8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 280.050415 56.976383] dotx
(600k ) [8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 280.050415 43.376385] dotx
(1000k ) [8 0 8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 272.850403 -3.823616] dotx
(1200k ) [8 0 8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 272.850403 -26.223618] dotx
(2100k ) [8 0 8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 272.850403 -119.023621] dotx
(0 ) [8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 292.050415 102.576385] dotx
(p3 ) [8 0 8 0 0 0] 418 550 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 31.250393 105.776382] dotx
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 530 68 28 0.8 0 0 0.8 285.650391 114.576385 sc6mt astore rstroke
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 496 68 -43 0.8 0 0 0.874419 285.650391 69.664764 sc6mt astore rstroke
0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 453 68 -42 0.8 0 0 0.590476 285.650391 198.290634 sc6mt astore rfill
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 453 68 -42 0.8 0 0 0.590476 285.650391 198.290634 sc6mt astore rstroke
0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 530 68 -34 0.8 0 0 3.011765 285.650391 -1057.658813 sc6mt astore rfill
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 530 68 -34 0.8 0 0 3.011765 285.650391 -1057.658813 sc6mt astore rstroke
(p4 ) [8 0 8 0 0 0] 418 550 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 30.450394 138.576385] dotx
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 704 68 -293 0.8 0 0 0.783618 395.250427 113.309471 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( ) [0 0] 38 699 /Courier-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 402.450378 104.976387] dotx
/txtdraw true def
/txlndraw true def
(300k ) [8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 390.450378 80.176384] dotx
(Moniteur ) [14.223999 0 8 0 8 0 4.447998 0 4.447998 0 7.104004 0 8 0 5.328003 0 0 0] 176 674 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 316.850403 110.576385] dotx
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 640 68 28 0.8 0 0 0.8 395.250427 101.776382 sc6mt astore rstroke
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 618 68 22 0.8 0 0 0.8 395.250427 101.776382 sc6mt astore rstroke
(p1 ) [8 0 8 0 0 0] 274 643 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 256.050415 108.176384] dotx
(p2 ) [8 0 8 0 0 0] 418 550 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 142.450394 163.376389] dotx
(500k ) [8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 390.450378 59.376385] dotx
(600k ) [8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 390.450378 45.776386] dotx
(1500k ) [8 0 8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 384.050415 -58.223618] dotx
(2100k ) [8 0 8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 384.050415 -118.223618] dotx
(0 ) [8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 402.450378 104.976387] dotx
(p3 ) [8 0 8 0 0 0] 418 550 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 140.850403 5.776382] dotx
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 530 68 28 0.8 0 0 0.914286 395.250427 -49.195099 sc6mt astore rstroke
0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 530 68 -34 0.8 0 0 2.800003 395.250427 -886.224976 sc6mt astore rfill
0.8 0 0 0.8 58.450394 106.576385 sc4mt astore 0.8 0 0 0.8 58.450394 106.576385 sc5mt astore 73 530 68 -34 0.8 0 0 2.800003 395.250427 -886.224976 sc6mt astore rstroke
(p4 ) [8 0 8 0 0 0] 418 550 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 140.050385 38.576385] dotx
(1900k ) [8 0 8 0 8 0 8 0 8 0 0 0] 38 699 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 384.050415 -92.623611] dotx
(Initial ) [5.327999 0 8 0 4.448002 0 4.447998 0 4.447998 0 7.104004 0 4.447998 0 0 0] 44 377 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 58.450394 106.576385] dotx
(D\335placement :      600k  ) [11.552002 0 7.104004 0 8 0 4.447998 0 7.104004 0 7.104004 0 7.104004 0 12.447998 0 7.104004 0 8 0 4.447998 0 4 0 4.447998 0 -92.864014 -17.855988 4 0 4 0 4 0 4 0 4 0 8 0 8 0 8 0 8 0 4 0 0 0] 184 377 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 58.450394 106.576385] dotx
(D\335placement :      400k  ) [11.552002 0 7.104004 0 8 0 4.447998 0 7.104004 0 7.104004 0 7.104004 0 12.447998 0 7.104004 0 8 0 4.447998 0 4 0 4.447998 0 -92.864014 -17.855988 4 0 4 0 4 0 4 0 4 0 8 0 8 0 8 0 8 0 4 0 0 0] 184 377 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 177.650391 105.776382] dotx
(D\335placement :      200k  ) [11.552002 0 7.104004 0 8 0 4.447998 0 7.104004 0 7.104004 0 7.104004 0 12.447998 0 7.104004 0 8 0 4.447998 0 4 0 4.447998 0 -92.864014 -17.855988 4 0 4 0 4 0 4 0 4 0 8 0 8 0 8 0 8 0 4 0 0 0] 184 377 /Times-Roman [ 16 1 mul 0 0 16 0 0 ] [0.8 0 0 0.8 285.650391 106.576385] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 747 a
 currentpoint currentpoint translate 1 0.51855 div 1 0.51855 div scale
neg exch neg exch translate
 484 747 a 314 838 a Fq(Fig.)13
b FD(8.11)f({)i Fp(Une)h(situation)g(d'or)n(donnanc)n(ement)h(de)f(pr)n
(o)n(c)n(essus)g(en)h(m)o(\023)-20 b(emoir)n(e.)484 1534
y
 currentpoint currentpoint translate 0.73552 0.73552 scale neg exch
neg exch translate
 484 1534 a 14 w @beginspecial 0 @llx 0 @lly 305 @urx
208 @ury 3050 @rwi @setspecial
%%BeginDocument: eps/mem.ordo.3.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 304.960022 207.816025 rectclip
-171.080948 -162.371658 translate
171.080948 162.371658 304.960022 207.816025 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
0.8 0 0 0.8 64.680939 53.171646 sc4mt astore 0.8 0 0 0.8 64.680939 53.171646 sc5mt astore 505 726 65 -244 0.8 0 0 0.8 -200.919067 -220.42836 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Moniteur ) [7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 0 0] 160 712 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 78.280937 -220.42836] dotx
0.8 0 0 0.8 64.680939 53.171646 sc4mt astore 0.8 0 0 0.8 64.680939 53.171646 sc5mt astore 505 703 65 -48 0.8 0 0 0.8 -200.919067 -220.42836 sc6mt astore rstroke
(P5 ) [7.199997 0 7.199997 0 0 0] 68 673 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 163.880951 -219.628372] dotx
/txtdraw true def
/txlndraw true def
(0 ) [8.400002 0 0 0] 51 729 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 144.680939 -226.028366] dotx
(256k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 139.080933 -210.828354] dotx
(40k ) [8.400002 0 8.400002 0 8.400002 0 0 0] 70 775 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 125.480942 -280.428345] dotx
(90k ) [8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 148.680939 -74.828354] dotx
(200k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 139.880951 -162.828354] dotx
(100k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 138.280945 -86.828354] dotx
(230k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 141.480942 -184.42836] dotx
0.8 0 0 0.8 64.680939 53.171646 sc4mt astore 0.8 0 0 0.8 64.680939 53.171646 sc5mt astore 505 548 65 -32 0.8 0 0 0.8 -200.919067 -220.42836 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(P3 ) [7.199997 0 7.199997 0 0 0] 68 673 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 169.480942 -336.428345] dotx
/crfilred 0.666662 def /crfilgrn 0.666662 def /crfilblu 0.666662 def /filinclr true def
0.8 0 0 0.8 64.680939 53.171646 sc5mt astore 505 655 65 -18 0.8 0 0 0.8 -200.919067 -220.42836 sc6mt astore rfill
0.8 0 0 0.8 64.680939 53.171646 sc4mt astore 0.8 0 0 0.8 64.680939 53.171646 sc5mt astore 505 655 65 -18 0.8 0 0 0.8 -200.919067 -220.42836 sc6mt astore rstroke
0.8 0 0 0.8 64.680939 53.171646 sc5mt astore 505 516 65 -34 0.8 0 0 0.8 -200.919067 -220.42836 sc6mt astore rfill
0.8 0 0 0.8 64.680939 53.171646 sc4mt astore 0.8 0 0 0.8 64.680939 53.171646 sc5mt astore 505 516 65 -34 0.8 0 0 0.8 -200.919067 -220.42836 sc6mt astore rstroke
0.8 0 0 0.8 64.680939 53.171646 sc5mt astore 505 577 65 -30 0.8 0 0 0.8 -200.919067 -220.42836 sc6mt astore rfill
0.8 0 0 0.8 64.680939 53.171646 sc4mt astore 0.8 0 0 0.8 64.680939 53.171646 sc5mt astore 505 577 65 -30 0.8 0 0 0.8 -200.919067 -220.42836 sc6mt astore rstroke
(P4 ) [7.200012 0 7.200012 0 0 0] 313 607 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 -29.719063 -221.228348] dotx
0.8 0 0 0.8 64.680939 53.171646 sc4mt astore 0.8 0 0 0.8 64.680939 53.171646 sc5mt astore 505 726 65 -244 0.8 0 0 0.8 -77.71907 -218.028366 sc6mt astore rstroke
(Moniteur ) [7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 0 0] 160 712 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 201.480942 -218.028366] dotx
0.8 0 0 0.8 64.680939 53.171646 sc4mt astore 0.8 0 0 0.8 64.680939 53.171646 sc5mt astore 505 703 65 -48 0.8 0 0 0.8 -77.71907 -218.028366 sc6mt astore rstroke
(P5 ) [7.199997 0 7.199997 0 0 0] 68 673 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 287.080933 -217.228348] dotx
/txtdraw true def
/txlndraw true def
(0 ) [8.400002 0 0 0] 51 729 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 267.88092 -223.628372] dotx
(256k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 262.280945 -208.42836] dotx
(40k ) [8.400002 0 8.400002 0 8.400002 0 0 0] 70 775 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 248.680939 -278.028381] dotx
(90k ) [8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 271.88092 -72.428352] dotx
(190k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 263.080933 -160.42836] dotx
(160k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 264.680939 -128.42836] dotx
0.8 0 0 0.8 64.680939 53.171646 sc4mt astore 0.8 0 0 0.8 64.680939 53.171646 sc5mt astore 505 548 65 -32 0.8 0 0 0.8 -77.71907 -185.228363 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(P3 ) [7.199997 0 7.199997 0 0 0] 68 673 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 293.480957 -305.228333] dotx
0.8 0 0 0.8 64.680939 53.171646 sc5mt astore 505 577 65 -30 0.8 0 0 2.026667 -77.71907 -941.815125 sc6mt astore rfill
0.8 0 0 0.8 64.680939 53.171646 sc4mt astore 0.8 0 0 0.8 64.680939 53.171646 sc5mt astore 505 577 65 -30 0.8 0 0 2.026667 -77.71907 -941.815125 sc6mt astore rstroke
(P4 ) [7.200012 0 7.200012 0 0 0] 313 607 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 95.880936 -201.228363] dotx
/txtdraw true def
/txlndraw true def
(170k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 141.480942 -138.828354] dotx
(Zone contigu\337 de 66k ) [8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.400024 0 8.400024 0 8.400024 0 -109.200012 -14.770004 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 0 0] 426 197 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 46.280937 43.571648] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 1534 a
 currentpoint currentpoint translate 1 0.73552 div 1 0.73552 div scale
neg exch neg exch translate
 484 1534 a 738 1625 a Fq(Fig.)13
b FD(8.12)g({)h Fp(Comp)n(actage)236 1758 y FB(Nous)k(tra)o(v)n
(aillons)h(dans)f(le)f(cas)h(d'un)f(syst)o(\022)-18 b(eme)17
b(de)g(traitemen)o(t)h(par)f(lots)h(c'est)e(\022)-19
b(a)17 b(dire)h(en)f(temps)179 1804 y(partag)o(\023)-18
b(e)13 b(mais)g(les)g(pro)q(cessus)g(resten)o(t)g(en)f(m)o(\023)-18
b(emoire)13 b(tout)f(le)h(temps)f(de)h(leur)g(ex)o(\023)-18
b(ecution.)14 b(S'il)f(n'y)f(a)g(plus)179 1849 y(de)h(place)h(le)g(pro)
q(cessus)g(est)f(mis)h(en)f(atten)o(te)g(\(i.e.)g(non)g(c)o(harg)o
(\023)-18 b(e)14 b(en)f(m)o(\023)-18 b(emoire\).)236
1895 y(Nous)14 b(dev)o(ons)h(r)o(\023)-18 b(esoudre)14
b(le)g(probl)o(\022)-18 b(eme)15 b(suiv)n(an)o(t)8 b(:)13
b(il)h(nous)h(faut)e(un)h(algorithme)h(p)q(our)g(c)o(hoisir)g(dyna-)179
1941 y(miquemen)o(t,)i(parmi)h(les)f(blo)q(cs)g(libres)i(de)d(la)h(m)o
(\023)-18 b(emoire)17 b(cen)o(trale,)h(celui)g(qui)f(v)n(a)g(recev)o
(oir)g(le)g(nouv)o(eau)179 1986 y(pro)q(cessus)c(\(algorithme)h(d'allo)
q(cation)h(de)d(m)o(\023)-18 b(emoire)13 b(\022)-19 b(a)12
b(un)h(pro)q(cessus\).)g(On)f(reconna)l(^)-15 b(\020t)13
b(en)f(g)o(\023)-18 b(en)o(\023)g(eral)14 b(trois)179
2032 y(m)o(\023)-18 b(etho)q(des)7 b(:)179 2094 y FC(First-\014t)20
b FB(Le)13 b(premier)h(blo)q(c)g(su\016sammen)o(t)g(grand)g(p)q(our)f
(con)o(tenir)i(notre)e(pro)q(cessus)i(est)d(c)o(hoisi.)179
2157 y FC(Best-\014t)21 b FB(Le)13 b(plus)i(p)q(etit)e(blo)q(c)h
(su\016sammen)o(t)g(grand)g(p)q(our)g(con)o(tenir)g(notre)g(pro)q
(cessus)g(est)f(c)o(hoisi.)179 2219 y FC(W)l(orst-\014t)21
b FB(Le)13 b(blo)q(c)h(qui)g(nous)g(laisse)h(le)e(plus)i(grand)e
(morceau)h(de)f(m)o(\023)-18 b(emoire)14 b(libre)h(est)e(c)o(hoisi)i
(\(le)e(plus)270 2265 y(grand)h(blo)q(c\).)236 2327 y(De)k(nom)o
(breuse)i(exp)o(\023)-18 b(eriences)20 b(pratiques)f(et)f(des)g(sim)o
(ulations)j(on)o(t)d(mon)o(tr)o(\023)-18 b(e)18 b(que)h(le)f(meilleur)j
(est)179 2373 y(\014rst-\014t)15 b(puis)i(b)q(est-\014t)f(et)f(que)h
(ces)f(deux)h(algorithmes)i(son)o(t)e(b)q(eaucoup)h(plus)f(e\016caces)g
(que)g(w)o(orst-\014t.)179 2419 y FC(Compactage)f FB(On)g(c)o(herc)o
(he)g(\022)-19 b(a)14 b(am)o(\023)-18 b(eliorer)17 b(ces)e(m)o(\023)-18
b(ecanismes)16 b(en)f(d)o(\023)-18 b(efragmen)o(tan)o(t)15
b(la)h(m)o(\023)-18 b(emoire)15 b(c'est)g(\022)-19 b(a)179
2464 y(dire)13 b(en)g(d)o(\023)-18 b(epla\030)h(can)o(t)15
b(les)e(pro)q(cessus)h(en)f(m)o(\023)-18 b(emoire)14
b(de)f(fa\030)-17 b(con)13 b(\022)-19 b(a)12 b(rendre)i(con)o(tigu)o
(\177)-18 b(es)14 b(les)f(zones)h(de)f(m)o(\023)-18 b(emoire)179
2510 y(libre)14 b(de)g(fa\030)-17 b(con)13 b(\022)-19
b(a)13 b(p)q(ouv)o(oir)i(les)e(utiliser.)179 2641 y Fv(8.3)66
b(Allo)r(cation)23 b(non-con)n(tigu)o(\177)-32 b(e)179
2737 y Fu(8.3.1)55 b(Les)18 b(pages)h(et)f(la)g(pagination)236
2806 y FB(P)o(our)c(acc)o(\023)-18 b(el)o(\023)g(erer)14
b(ces)f(m)o(\023)-18 b(ecanismes)14 b(d'allo)q(cation)q(,)h(la)f
(notion)g(de)f(page)h(a)e(\023)-18 b(et)o(\023)g(e)13
b(in)o(tro)q(duite.)p eop
%%Page: 64 72
64 71 bop 75 50 a FD(64)1141 b Fz(CHAPITRE)14 b(8.)27
b(LA)14 b(M)1670 39 y(\023)1665 50 y(EMOIRE)484 596 y
 currentpoint currentpoint translate 0.51385 0.51385 scale neg exch
neg exch translate

484 596 a 14 w @beginspecial 0 @llx 0 @lly 438 @urx 220
@ury 4380 @rwi @setspecial
%%BeginDocument: eps/mem.ordo.2.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 437.164734 219.81604 rectclip
-78.835266 -493.898987 translate
78.835266 493.898987 437.164734 219.81604 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 0 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 64 725 65 -244 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(0 ) [8.400002 0 0 0] 51 729 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 53.235268 119.098969] dotx
(256k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 53.235268 121.49897] dotx
/txtdraw true def
/txlndraw true def
(Moniteur ) [7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 0 0] 160 712 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 -13.964729 121.49897] dotx
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 175 725 65 -244 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 285 724 65 -244 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 389 725 65 -244 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 505 726 65 -244 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 64 701 65 -59 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
(P1 ) [7.199997 0 7.199997 0 0 0] 68 673 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 71.635269 122.298965] dotx
(Moniteur ) [7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 0 0] 160 712 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 74.835274 122.298965] dotx
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 67 684 65 -59 0.8 0 0 0.8 146.035278 137.498962 sc6mt astore rstroke
(P1 ) [7.199997 0 7.199997 0 0 0] 68 673 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 160.435272 123.098961] dotx
(Moniteur ) [7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 0 0] 160 712 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 163.635269 121.49897] dotx
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 285 701 65 -59 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
(P1 ) [7.199997 0 7.199997 0 0 0] 68 673 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 249.235275 122.298965] dotx
(Moniteur ) [7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 0 0] 160 712 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 246.035263 123.098969] dotx
/crfilalph 1 def
/crfilred 0.666662 def /crfilgrn 0.666662 def /crfilblu 0.666662 def /filinclr true def
0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 389 703 65 -59 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rfill
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 389 703 65 -59 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
(Moniteur ) [7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 7.199997 0 0 0] 160 712 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 338.835266 123.098969] dotx
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 505 703 65 -48 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
(P5 ) [7.199997 0 7.199997 0 0 0] 68 673 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 424.435303 123.898972] dotx
/txtdraw true def
/txlndraw true def
(40k ) [8.400002 0 8.400002 0 8.400002 0 0 0] 70 775 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 33.235268 62.298969] dotx
(0 ) [8.400002 0 0 0] 51 729 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 139.635269 119.098969] dotx
(40k ) [8.400002 0 8.400002 0 8.400002 0 0 0] 70 775 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 119.635269 62.298969] dotx
(0 ) [8.400002 0 0 0] 51 729 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 230.835266 119.098969] dotx
(256k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 231.635269 120.698967] dotx
(40k ) [8.400002 0 8.400002 0 8.400002 0 0 0] 70 775 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 210.835266 62.298969] dotx
(0 ) [8.400002 0 0 0] 51 729 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 313.235291 119.098969] dotx
(256k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 315.635254 121.49897] dotx
(40k ) [8.400002 0 8.400002 0 8.400002 0 0 0] 70 775 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 293.235291 62.298969] dotx
(0 ) [8.400002 0 0 0] 51 729 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 406.035278 119.898972] dotx
(256k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 408.435303 122.298965] dotx
(40k ) [8.400002 0 8.400002 0 8.400002 0 0 0] 70 775 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 386.035278 63.098969] dotx
(256k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 142.035278 121.49897] dotx
(200k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 47.635269 179.898972] dotx
(100k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 46.035271 255.898972] dotx
(230k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 49.235268 158.298965] dotx
(170k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 223.635269 204.698975] dotx
(90k ) [8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 409.235291 268.698975] dotx
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 64 547 65 -32 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(P2 ) [7.199997 0 7.199997 0 0 0] 68 673 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 75.635269 59.898968] dotx
(P3 ) [7.199997 0 7.199997 0 0 0] 68 673 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 77.235268 6.298965] dotx
/txtdraw true def
/txlndraw true def
(200k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 136.435272 179.098969] dotx
(100k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 134.835266 255.098969] dotx
(230k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 138.035278 157.498962] dotx
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 175 546 65 -32 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(P3 ) [7.199997 0 7.199997 0 0 0] 68 673 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 166.035278 5.49897] dotx
/txtdraw true def
/txlndraw true def
(200k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 224.435272 178.298965] dotx
(100k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 222.835266 254.298965] dotx
(230k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 226.035278 156.698975] dotx
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 285 545 65 -32 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(P3 ) [7.199997 0 7.199997 0 0 0] 68 673 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 254.035278 4.698967] dotx
/txtdraw true def
/txlndraw true def
(200k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 307.635254 180.698975] dotx
(100k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 306.035278 256.698975] dotx
(230k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 309.235291 159.098969] dotx
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 389 548 65 -32 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(P3 ) [7.199997 0 7.199997 0 0 0] 68 673 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 337.235291 7.098969] dotx
/txtdraw true def
/txlndraw true def
(200k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 400.435303 180.698975] dotx
(100k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 398.835266 256.698975] dotx
(230k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 402.035278 159.098969] dotx
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 505 548 65 -32 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(P3 ) [7.199997 0 7.199997 0 0 0] 68 673 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 430.035278 7.098969] dotx
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 285 642 65 -68 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(170k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 308.435272 207.898972] dotx
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 389 644 65 -67 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 505 655 65 -18 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rfill
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 505 655 65 -18 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 285 574 65 -30 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rfill
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 285 574 65 -30 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 389 578 65 -30 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rfill
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 389 578 65 -30 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 64 515 65 -34 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rfill
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 64 515 65 -34 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 175 515 65 -34 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rfill
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 175 515 65 -34 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 285 513 65 -34 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rfill
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 285 513 65 -34 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 389 516 65 -35 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rfill
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 389 516 65 -35 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 505 516 65 -34 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rfill
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 505 516 65 -34 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 505 577 65 -30 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rfill
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 505 577 65 -30 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(P4 ) [7.200012 0 7.200012 0 0 0] 313 607 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 59.635269 123.098969] dotx
(P4 ) [7.200012 0 7.200012 0 0 0] 313 607 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 140.435272 121.49897] dotx
(P4 ) [7.200012 0 7.200012 0 0 0] 313 607 /Courier [ 12 1 mul 0 0 12 0 0 ] [0.8 0 0 0.8 230.835266 122.298965] dotx
0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 175 644 65 -98 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rfill
0.8 0 0 0.8 59.635269 123.098969 sc4mt astore 0.8 0 0 0.8 59.635269 123.098969 sc5mt astore 175 644 65 -98 0.8 0 0 0.8 59.635269 123.098969 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(170k ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 42 471 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 401.235291 205.498962] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 596 a
 currentpoint currentpoint translate 1 0.51385 div 1 0.51385 div scale
neg exch neg exch translate
 484 596 a 548 687 a Fq(Fig.)f
FD(8.13)g({)g Fp(Plusieurs)i(d)o(\023)-20 b(eplac)n(ements)15
b(p)n(ossibles.)484 1283 y
 currentpoint currentpoint translate 0.55266 0.55266 scale neg exch
neg exch translate
 484 1283 a 14 w @beginspecial
0 @llx 0 @lly 407 @urx 230 @ury 4070 @rwi @setspecial
%%BeginDocument: eps/mem.page.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 407 229.203247 rectclip
-108 -317.790222 translate
108 317.790222 407 229.203247 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 0 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
0.8 0 0 0.8 55.89978 122.929443 sc4mt astore 0.8 0 0 0.8 55.89978 122.929443 sc5mt astore 29 625 80 -60 0.8 0 0 0.8 84.89978 -4.87056 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(unit\335 centrale ) [10.008003 0 10.007996 0 5.003998 0 5.994003 0 7.991997 0 -50.489998 -20.753998 7.992001 0 7.992001 0 10.008003 0 5.994003 0 7.991997 0 9 0 5.003998 0 7.991997 0 0 0] 61.497002 479 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 75.299782 92.729439] dotx
0.8 0 0 0.8 55.89978 122.929443 sc4mt astore 0.8 0 0 0.8 55.89978 122.929443 sc5mt astore 143 607 37 -19 0.8 0 0 0.8 224.89978 -6.47056 sc6mt astore rstroke
0.8 0 0 0.8 55.89978 122.929443 sc4mt astore 0.8 0 0 0.8 55.89978 122.929443 sc5mt astore 180 607 37 -19 0.8 0 0 0.8 224.89978 -6.47056 sc6mt astore rstroke
/crlinw 2 def
/crendarw true def
0.8 0 0 0.8 55.89978 122.929443 sc4mt astore 0.8 0 0 0.8 55.89978 122.929443 sc5mt astore 22.000046 0 109 598 0.8 0 0 0.8 84.89978 -4.87056 sc6mt astore ssl
0.8 0 0 0.8 55.89978 122.929443 sc5mt astore crlinw 0.8 0 0 0.8 55.89978 122.929443 sc6mt astore 236.892166 380.729431 236.89978 380.729431 arow
false 0.8 0 0 0.8 84.89978 -4.87056 sc5mt astore sstrt
systemdict
begin
152 474 212 587 setbbox
158 587 moveto
158 587 158 482 158 482 curveto
158 482 190 482 190 482 curveto
end
/nspans 2 def 0.8 0 0 0.8 55.89978 122.929443 sc5mt astore 0.8 0 0 0.8 55.89978 122.929443 sc6mt astore splstroke
0.8 0 0 0.8 55.89978 122.929443 sc5mt astore crlinw 0.8 0 0 0.8 55.89978 122.929443 sc6mt astore 379.899811 489.333374 379.89978 489.329468 arow
false 0.8 0 0 0.8 84.89978 -4.87056 sc5mt astore sstrt
systemdict
begin
191.25 607.75 385.25 661.75 setbbox
191.25 607.75 moveto
191.25 607.75 191.25 634.5 191.25 634.5 curveto
191.25 634.5 368.75 634.25 368.75 634.25 curveto
368.75 634.25 368.75 617.75 368.75 617.75 curveto
end
/nspans 3 def 0.8 0 0 0.8 55.89978 122.929443 sc5mt astore 0.8 0 0 0.8 55.89978 122.929443 sc6mt astore splstroke
/crlinw 1 def
/crendarw false def
0.8 0 0 0.8 55.89978 122.929443 sc4mt astore 0.8 0 0 0.8 55.89978 122.929443 sc5mt astore 205 545 79 -15 0.8 0 0 0.986667 84.89978 -106.603912 sc6mt astore rstroke
0.8 0 0 0.8 55.89978 122.929443 sc4mt astore 0.8 0 0 0.8 55.89978 122.929443 sc5mt astore 205 530 79 -15 0.8 0 0 0.986667 84.89978 -106.603912 sc6mt astore rstroke
0.8 0 0 0.8 55.89978 122.929443 sc4mt astore 0.8 0 0 0.8 55.89978 122.929443 sc5mt astore 205 515 79 -15 0.8 0 0 0.986667 84.89978 -106.603912 sc6mt astore rstroke
0.8 0 0 0.8 55.89978 122.929443 sc4mt astore 0.8 0 0 0.8 55.89978 122.929443 sc5mt astore 205 500 79 -15 0.8 0 0 0.986667 84.89978 -106.603912 sc6mt astore rstroke
0.8 0 0 0.8 55.89978 122.929443 sc4mt astore 0.8 0 0 0.8 55.89978 122.929443 sc5mt astore 205 485 79 -15 0.8 0 0 0.986667 84.89978 -106.603912 sc6mt astore rstroke
0.8 0 0 0.8 55.89978 122.929443 sc4mt astore 0.8 0 0 0.8 55.89978 122.929443 sc5mt astore 205 470 79 -15 0.8 0 0 0.986667 84.89978 -106.603912 sc6mt astore rstroke
/crendarw true def
/crfrtarw true def
0.8 0 0 0.8 55.89978 122.929443 sc4mt astore 0.8 0 0 0.8 55.89978 122.929443 sc5mt astore 0 -36 193 536 0.8 0 0 0.8 84.89978 -4.87056 sc6mt astore ssl
( ) [0 0] 158 599 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 84.89978 -4.87056] dotx
(p ) [10.007996 0 0 0] 163.996002 340 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 77.699783 199.12944] dotx
(d ) [10.007996 0 0 0] 229.996002 329 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 54.099781 205.929443] dotx
(f ) [5.993988 0 0 0] 347.002991 367 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 -11.900223 81.529442] dotx
(p ) [10.007996 0 0 0] 163.996002 340 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 95.299782 136.729446] dotx
(d ) [10.007996 0 0 0] 229.996002 329 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 193.699783 203.929443] dotx
(f ) [5.993988 0 0 0] 347.002991 367 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 75.299782 171.929443] dotx
/crlinw 2 def
/crfrtarw false def
0.8 0 0 0.8 55.89978 122.929443 sc5mt astore crlinw 0.8 0 0 0.8 55.89978 122.929443 sc6mt astore 361.699799 449.50824 361.699799 449.529419 arow
false 0.8 0 0 0.8 84.89978 -4.87056 sc5mt astore sstrt
systemdict
begin
285 475 403 569 setbbox
285 479 moveto
285 479 346 479 346 479 curveto
346 479 346 568 346 568 curveto
end
/nspans 2 def 0.8 0 0 0.8 55.89978 122.929443 sc5mt astore 0.8 0 0 0.8 55.89978 122.929443 sc6mt astore splstroke
0.8 0 0 0.8 55.89978 122.929443 sc4mt astore 0.8 0 0 0.8 55.89978 122.929443 sc5mt astore 22.000061 0 394 595 0.8 0 0 0.8 84.89978 -4.87056 sc6mt astore ssl
/crlinw 1 def
/crendarw false def
0.8 0 0 0.8 55.89978 122.929443 sc4mt astore 0.8 0 0 0.8 55.89978 122.929443 sc5mt astore 428 698 112 -248 0.8 0 0 0.748103 82.89978 21.353855 sc6mt astore rstroke
(m\335moire ) [14.994003 0 7.991989 0 14.993988 0 9 0 5.003998 0 7.667999 0 7.992004 0 0 0] 238.178009 348 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 251.299789 189.529449] dotx
(Adresse  logique ) [12.996002 0 10.007996 0 7.667999 0 7.992004 0 7.001999 0 7.001999 0 7.992004 0 4.5 0 -60.587997 -20.754028 5.003998 0 9 0 9 0 5.003998 0 10.007996 0 10.007996 0 7.992004 0 0 0] 97.419998 665 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 85.699783 -4.87056] dotx
(Adresse  physique ) [12.996002 0 10.007996 0 7.667999 0 7.992004 0 7.001999 0 7.001999 0 7.992004 0 4.5 0 -66.959999 -20.754028 10.008003 0 9.737999 0 9 0 7.002007 0 5.003998 0 10.007996 0 10.007996 0 7.992004 0 0 0] 97.419998 665 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 266.499786 -0.07056] dotx
(Table des pages ) [10.349998 0 9 0 10.008003 0 5.003998 0 7.991997 0 4.5 0 10.008003 0 7.992004 0 7.001999 0 4.5 0 10.007996 0 9 0 9 0 7.992004 0 7.001999 0 0 0] 70.320999 665 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 176.89978 -210.270569] dotx
0.8 0 0 0.8 55.89978 122.929443 sc4mt astore 0.8 0 0 0.8 55.89978 122.929443 sc5mt astore 143 607 37 -19 0.8 0 0 0.8 82.89978 -4.47056 sc6mt astore rstroke
0.8 0 0 0.8 55.89978 122.929443 sc4mt astore 0.8 0 0 0.8 55.89978 122.929443 sc5mt astore 180 607 37 -19 0.8 0 0 0.8 82.89978 -4.47056 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 484 1283 a
 currentpoint currentpoint translate 1 0.55266 div 1 0.55266 div scale
neg exch neg exch translate
 484 1283 a 452 1374 a Fq(Fig.)e
FD(8.14)f({)i Fp(Calcul)g(d'une)i(adr)n(esse)f(ave)n(c)g(la)f(table)h
(des)g(p)n(ages)236 1515 y FB(On)f(v)n(a)f(d)o(\023)-18
b(ecoup)q(er)15 b(la)f(m)o(\023)-18 b(emoire)14 b(et)f(les)h(pro)q
(cessus)h(en)e(pages.)h(Gr^)-19 b(ace)14 b(\022)-19 b(a)13
b(ce)g(syst)o(\022)-18 b(eme,)14 b(il)g(ne)g(sera)f(plus)179
1561 y(n)o(\023)-18 b(ecessaire)16 b(de)f(placer)g(les)g(pro)q(cessus)h
(dans)g(une)f(zone)g(con)o(tig)q(\177)-20 b(ue)16 b(de)e(la)h(m)o(\023)
-18 b(emoire.)15 b(Il)g(devien)o(t)h(p)q(ossible)179
1607 y(d'allouer)f(de)e(la)h(m)o(\023)-18 b(emoire)13
b(\022)-19 b(a)13 b(un)h(pro)q(cessus)g(sans)g(a)o(v)o(oir)g(\022)-19
b(a)13 b(r)o(\023)-18 b(ealiser)15 b(de)e(compactage)7
b(!)236 1656 y(Ce)j(princip)q(e)i(des)f(page)f(n)o(\023)-18
b(ecessite)12 b(de)e(nouv)o(elles)i(p)q(ossibil)q(it)o(\023)-18
b(es)13 b(mat)o(\023)-18 b(erielles.)12 b(T)m(oute)e(adresse)h(est)f
(main-)179 1702 y(tenan)o(t)j(consid)o(\023)-18 b(er)o(\023)g(ee)15
b(comme)e(un)h(couple)236 1752 y(\(Num)o(\023)-18 b(ero)14
b(de)f(page,)g(P)o(osition)i(dans)f(la)f(page\))236 1802
y(A)19 b(:)13 b(adresse)h(logique,)h(P)k(:)12 b(taille)j(de)f(page)179
1847 y(Num)o(\023)-18 b(ero)13 b(de)g(page)h(=)e(A)h(div)h(P)179
1893 y(P)o(osition)h(=)d(A)h(mo)q(dulo)i(P)179 2069 y
Fu(8.3.2)55 b(Ordonnancemen)n(t)19 b(des)i(pro)r(cessus)f(dans)h(une)g
(m)o(\023)-27 b(em)o(oire)17 b(pagi-)179 2127 y(n)o(\023)-27
b(ee)236 2205 y FB(Le)15 b(c)o(hoix)h(de)f(l'organisation)i(m)o(\023)
-18 b(emoire)16 b(a)f(une)g(in\015uence)h(pr)o(\023)-18
b(ep)q(ond)o(\023)g(eran)o(te)17 b(sur)e(l'ordonnancemen)o(t)179
2250 y(des)e(pro)q(cessus,)h(qui)g(devien)o(t)h(b)q(eaucoup)f(plus)h
(ind)o(\023)-18 b(ep)q(endan)o(t)16 b(de)d(la)g(m)o(\023)-18
b(emoire)14 b(quand)h(celle-ci)g(est)e(pagi-)179 2296
y(n)o(\023)-18 b(ee.)192 2342 y(Le)13 b(d)o(\023)-18
b(esa)o(v)n(an)o(tage)15 b(de)e(la)h(m)o(\023)-18 b(etho)q(de)14
b(de)g(gestion)g(de)g(m)o(\023)-18 b(emoire)14 b(par)f(un)h(m)o(\023)
-18 b(ecanisme)15 b(de)e(page)h(est)f(le)h(ph)o(\023)-18
b(e-)179 2387 y(nom)o(\022)g(ene)17 b(de)f FC(fragmen)o(tation)i(in)o
(terne)p FB(.)d(On)i(alloue)h(une)f(page)g(en)o(ti)o(\022)-18
b(ere)17 b(alors)g(que)g(le)g(pro)q(cessus)g(ne)179 2433
y(l'utilise)d(qu'en)f(partie.)f(Mais)h(la)g(taille)h(des)e(m)o(\023)-18
b(emoires)13 b(et)e(des)i(pro)q(cessus)g(deviennen)o(t)h(tels)e(par)h
(rapp)q(ort)179 2478 y(aux)g(tailles)j(de)d(page)g(que)h(cette)f(p)q
(erte)g(devien)o(t)h(minime.)236 2574 y(Un)f(a)o(v)n(an)o(tage)g(des)g
(pages)h(est)e(une)h(plus)h(grande)g(simplicit)o(\023)-18
b(e)15 b(du)f(partage)f(de)g(la)g(m)o(\023)-18 b(emoire)13
b(en)o(tre)g(dif-)179 2620 y(f)o(\023)-18 b(eren)o(ts)13
b(pro)q(cessus.)h(En)f(particulier)j(quand)e(plusieurs)h(pro)q(cessus)g
(partagen)o(t)e(le)h(m)o(^)-18 b(eme)13 b(co)q(de.)g(La)g(page)179
2665 y(qui)h(con)o(tien)o(t)g(du)g(co)q(de)f(utilis)o(\023)-18
b(e)15 b(par)f(les)f(pro)q(cessus)i(sera)e(partageable)i(et)e(prot)o
(\023)-18 b(eg)o(\023)g(ee)14 b(en)e(\023)-18 b(ecriture.)236
2761 y(Sous)16 b(Unix)f(le)g(compilateur)h(pro)q(duit)g(automatiquemen)
o(t)h(des)d(programmes)i(don)o(t)f(la)g(partie)g(co)q(de)179
2806 y(est)e(partageable.)p eop
%%Page: 65 73
65 72 bop 75 50 a Fz(8.3.)26 b(ALLOCA)m(TION)14 b(NON-CONTIGU)777
39 y(\177)772 50 y(E)996 b FD(65)484 753 y
 currentpoint currentpoint translate 0.70139 0.70139 scale neg exch
neg exch translate
 484 753 a
14 w @beginspecial 0 @llx 0 @lly 320 @urx 215 @ury 3200
@rwi @setspecial
%%BeginDocument: eps/mem.page2.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 319.315216 214.806427 rectclip
-108.569794 -199.215698 translate
108.569794 199.215698 319.315216 214.806427 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
0.8 0 0 0.8 53.427399 61.358109 sc4mt astore 0.8 0 0 0.8 53.427399 61.358109 sc5mt astore 79 351 65 -26 0.8 0 0 0.8 48.627399 84.558105 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(page 0 ) [10.007996 0 9 0 9 0 7.991997 0 4.5 0 9.000008 0 0 0] 86 335 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 48.627399 83.758102] dotx
0.8 0 0 0.8 53.427399 40.558105 sc4mt astore 0.8 0 0 0.8 53.427399 61.358109 sc5mt astore 79 351 65 -26 0.8 0 0 0.8 48.627399 63.758102 sc6mt astore rstroke
(page 1 ) [10.007996 0 9 0 9 0 7.991997 0 4.5 0 9.000008 0 0 0] 86 335 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 48.627399 62.958103] dotx
0.8 0 0 0.8 53.427399 19.758106 sc4mt astore 0.8 0 0 0.8 53.427399 61.358109 sc5mt astore 79 351 65 -26 0.8 0 0 0.8 48.627399 42.958103 sc6mt astore rstroke
(page 2 ) [10.007996 0 9 0 9 0 7.991997 0 4.5 0 9.000008 0 0 0] 86 335 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 48.627399 42.158104] dotx
0.8 0 0 0.8 53.427399 -1.041893 sc4mt astore 0.8 0 0 0.8 53.427399 61.358109 sc5mt astore 79 351 65 -26 0.8 0 0 0.8 48.627399 22.158104 sc6mt astore rstroke
(page 3 ) [10.007996 0 9 0 9 0 7.991997 0 4.5 0 9.000008 0 0 0] 86 335 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 48.627399 21.358105] dotx
(m\335moire  logique ) [14.993996 0 7.991997 0 14.993996 0 9 0 5.003998 0 7.667999 0 7.992004 0 4.5 0 -64.079987 -20.754028 5.003998 0 9 0 9 0 5.003998 0 10.007996 0 10.007996 0 7.992004 0 0 0] 93.928001 665 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 34.227398 -278.641907] dotx
0.8 0 0 0.8 53.427399 61.358109 sc4mt astore 0.8 0 0 0.8 53.427399 61.358109 sc5mt astore 259 351 23 -22 0.834783 0 0 0.909091 39.61869 46.267174 sc6mt astore rstroke
( 1 ) [4.5 0 9 0 0 0] 261.5 333.170013 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 48.627399 84.558105] dotx
0.8 0 0 0.8 53.427399 41.358109 sc4mt astore 0.8 0 0 0.8 53.427399 61.358109 sc5mt astore 259 351 23 -22 0.834783 0 0 0.909091 39.61869 26.267174 sc6mt astore rstroke
( 4 ) [4.5 0 9 0 0 0] 261.5 308.170013 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 48.627399 84.558105] dotx
0.8 0 0 0.8 53.427399 21.358109 sc4mt astore 0.8 0 0 0.8 53.427399 61.358109 sc5mt astore 259 351 23 -22 0.834783 0 0 0.909091 39.61869 6.267174 sc6mt astore rstroke
( 3 ) [4.5 0 9 0 0 0] 261.5 283.170013 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 48.627399 84.558105] dotx
0.8 0 0 0.8 53.427399 1.358109 sc4mt astore 0.8 0 0 0.8 53.427399 61.358109 sc5mt astore 259 351 23 -22 0.834783 0 0 0.909091 39.61869 -13.732826 sc6mt astore rstroke
( 7 ) [4.5 0 9 0 0 0] 261.5 258.170013 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 48.627399 84.558105] dotx
(0 ) [9 0 0 0] 223 374 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 63.8274 50.958103] dotx
(1 ) [9 0 0 0] 223 374 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 63.027401 30.958103] dotx
(2 ) [9 0 0 0] 223 374 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 63.8274 9.358101] dotx
(3 ) [9 0 0 0] 223 374 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 63.8274 -9.041893] dotx
(Table des pages ) [10.349998 0 9 0 10.008003 0 5.003998 0 7.991997 0 4.5 0 10.008003 0 7.992004 0 7.001999 0 4.5 0 10.007996 0 9 0 9 0 7.992004 0 7.001999 0 0 0] 70.320999 665 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 158.227402 -278.641907] dotx
0.8 0 0 0.8 53.427399 61.358109 sc4mt astore 0.8 0 0 0.8 53.427399 61.358109 sc5mt astore 79 351 65 -26 0.8 0 0 0.8 306.227417 111.75811 sc6mt astore rstroke
(page 0 ) [10.007996 0 9 0 9 0 7.991997 0 4.5 0 9.000008 0 0 0] 86 335 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 306.227417 110.958107] dotx
0.8 0 0 0.8 53.427399 40.558105 sc4mt astore 0.8 0 0 0.8 53.427399 61.358109 sc5mt astore 79 351 65 -26 0.8 0 0 0.8 306.227417 49.358105 sc6mt astore rstroke
(page 1 ) [10.007996 0 9 0 9 0 7.991997 0 4.5 0 9.000008 0 0 0] 86 335 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 306.227417 48.558105] dotx
0.8 0 0 0.8 53.427399 19.758106 sc4mt astore 0.8 0 0 0.8 53.427399 61.358109 sc5mt astore 79 351 65 -26 0.8 0 0 0.8 306.227417 70.158104 sc6mt astore rstroke
(page 2 ) [10.007996 0 9 0 9 0 7.991997 0 4.5 0 9.000008 0 0 0] 86 335 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 306.227417 69.358101] dotx
0.8 0 0 0.8 53.427399 -1.041893 sc4mt astore 0.8 0 0 0.8 53.427399 61.358109 sc5mt astore 79 351 65 -26 0.8 0 0 0.8 306.227417 -13.041893 sc6mt astore rstroke
(page 3 ) [10.007996 0 9 0 9 0 7.991997 0 4.5 0 9.000008 0 0 0] 86 335 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 306.227417 -13.841893] dotx
0.8 0 0 0.8 53.427399 61.358109 sc4mt astore 0.8 0 0 0.8 53.427399 61.358109 sc5mt astore 79 351 65 -26 0.8 0 0 0.8 306.227417 132.558105 sc6mt astore rstroke
( ) [0 0] 86 335 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 306.227417 131.758102] dotx
0.8 0 0 0.8 53.427399 61.358109 sc4mt astore 0.8 0 0 0.8 53.427399 61.358109 sc5mt astore 79 351 65 -26 0.8 0 0 0.8 306.227417 90.958107 sc6mt astore rstroke
( ) [0 0] 86 335 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 306.227417 90.158104] dotx
0.8 0 0 0.8 53.427399 61.358109 sc4mt astore 0.8 0 0 0.8 53.427399 61.358109 sc5mt astore 79 351 65 -26 0.8 0 0 0.8 306.227417 28.558105 sc6mt astore rstroke
( ) [0 0] 86 335 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 306.227417 27.758106] dotx
0.8 0 0 0.8 53.427399 61.358109 sc4mt astore 0.8 0 0 0.8 53.427399 61.358109 sc5mt astore 79 351 65 -26 0.8 0 0 0.8 306.227417 7.758102 sc6mt astore rstroke
( ) [0 0] 86 335 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 306.227417 6.958102] dotx
(0 ) [9 0 0 0] 223 374 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 178.227417 99.75811] dotx
(1 ) [9 0 0 0] 223 374 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 178.177017 78.158104] dotx
(2 ) [9 0 0 0] 223 374 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 178.263412 56.558105] dotx
(3 ) [9 0 0 0] 223 374 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 178.342606 34.958107] dotx
(4 ) [9 0 0 0] 223 374 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 178.270615 13.358109] dotx
(5 ) [9 0 0 0] 223 374 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 178.285004 -7.441895] dotx
(6 ) [9 0 0 0] 223 374 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 178.205811 -25.041893] dotx
(7 ) [9 0 0 0] 223 374 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 178.270615 -47.441902] dotx
(m\335moire  physique ) [14.993996 0 7.991997 0 14.993996 0 9 0 5.003998 0 7.667999 0 7.992004 0 4.5 0 -70.451988 -20.754028 10.008003 0 9.737999 0 9 0 7.002007 0 5.003998 0 10.007996 0 10.007996 0 7.992004 0 0 0] 93.928001 665 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 293.427399 -312.241882] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 753 a
 currentpoint currentpoint translate 1 0.70139 div 1 0.70139 div scale
neg exch neg exch translate
 484 753 a 471 844 a Fq(Fig.)12
b FD(8.15)h({)h Fp(L)n(a)h(m)o(\023)-20 b(emoir)n(e)14
b(lo)n(gique)h(et)f(la)h(T)m(able)g(des)g(p)n(ages.)484
1464 y
 currentpoint currentpoint translate 0.54999 0.54999 scale neg exch
neg exch translate
 484 1464 a 14 w @beginspecial 0 @llx 0 @lly 409
@urx 245 @ury 4090 @rwi @setspecial
%%BeginDocument: eps/mem.seg.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 409 244.60321 rectclip
-75 -522.135376 translate
75 522.135376 409 244.60321 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
0.8 0 0 0.8 55.89978 128.474548 sc4mt astore 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 29 625 80 -60 0.8 0 0 0.8 51.89978 179.674545 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(unit\335 centrale ) [10.008003 0 10.007996 0 5.003998 0 5.994003 0 7.991997 0 -50.489998 -20.753998 7.992001 0 7.992001 0 10.008003 0 5.994003 0 7.991997 0 9 0 5.003998 0 7.991997 0 0 0] 61.497002 479 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 42.299782 277.274536] dotx
0.8 0 0 0.8 55.89978 128.474548 sc4mt astore 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 143 607 37 -19 0.8 0 0 0.8 191.89978 178.074554 sc6mt astore rstroke
0.8 0 0 0.8 55.89978 128.474548 sc4mt astore 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 180 607 37 -19 0.8 0 0 0.8 191.89978 178.074554 sc6mt astore rstroke
/crlinw 2 def
/crendarw true def
0.8 0 0 0.8 55.89978 128.474548 sc4mt astore 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 22.000046 0 109 598 0.8 0 0 0.8 51.89978 179.674545 sc6mt astore ssl
0.8 0 0 0.8 55.89978 128.474548 sc5mt astore crlinw 0.8 0 0 0.8 55.89978 128.474548 sc6mt astore 230.292389 583.674561 230.299774 583.674561 arow
false 0.8 0 0 0.8 79.099777 179.674545 sc5mt astore sstrt
systemdict
begin
152 474 212 587 setbbox
158 587 moveto
158 587 158 505 158 505 curveto
158 505 189 505 189 505 curveto
end
/nspans 2 def 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 0.8 0 0 0.8 55.89978 128.474548 sc6mt astore splstroke
0.8 0 0 0.8 55.89978 128.474548 sc5mt astore crlinw 0.8 0 0 0.8 55.89978 128.474548 sc6mt astore 224.684998 686.874573 224.699783 686.874573 arow
false 0.8 0 0 0.8 51.89978 179.674545 sc5mt astore sstrt
systemdict
begin
154 607.75 232 636 setbbox
154 608 moveto
154 608 154 634 154 634 curveto
154 634 216 634 216 634 curveto
end
/nspans 2 def 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 0.8 0 0 0.8 55.89978 128.474548 sc6mt astore splstroke
/crlinw 1 def
/crendarw false def
0.8 0 0 0.8 55.89978 128.474548 sc4mt astore 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 205 545 79 -15 0.8 0 0 0.986667 71.099777 205.14122 sc6mt astore rstroke
0.8 0 0 0.8 55.89978 128.474548 sc4mt astore 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 205 530 79 -15 0.8 0 0 0.986667 71.099777 205.14122 sc6mt astore rstroke
0.8 0 0 0.8 55.89978 128.474548 sc4mt astore 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 205 515 79 -15 0.8 0 0 0.986667 71.099777 205.14122 sc6mt astore rstroke
0.8 0 0 0.8 55.89978 128.474548 sc4mt astore 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 205 500 79 -15 0.8 0 0 0.986667 71.099777 205.14122 sc6mt astore rstroke
0.8 0 0 0.8 55.89978 128.474548 sc4mt astore 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 205 485 79 -15 0.8 0 0 0.986667 71.099777 205.14122 sc6mt astore rstroke
0.8 0 0 0.8 55.89978 128.474548 sc4mt astore 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 205 470 79 -15 0.8 0 0 0.986667 71.099777 205.14122 sc6mt astore rstroke
( ) [0 0] 158 599 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 51.89978 179.674545] dotx
(p ) [10.007996 0 0 0] 163.996002 340 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 44.69978 382.074554] dotx
(d ) [10.007996 0 0 0] 229.996002 329 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 19.099781 388.474548] dotx
(l ) [5.003998 0 0 0] 347.497986 367 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 -31.300224 392.474548] dotx
(d ) [10.007996 0 0 0] 229.996002 329 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 160.699783 388.474548] dotx
/crlinw 2 def
/crendarw true def
0.8 0 0 0.8 55.89978 128.474548 sc5mt astore crlinw 0.8 0 0 0.8 55.89978 128.474548 sc6mt astore 352.699799 635.659546 352.699799 635.674561 arow
false 0.8 0 0 0.8 75.89978 181.274551 sc5mt astore sstrt
systemdict
begin
141 475 403 572 setbbox
282 505 moveto
282 505 346 505 346 505 curveto
346 505 346 568 346 568 curveto
end
/nspans 2 def 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 0.8 0 0 0.8 55.89978 128.474548 sc6mt astore splstroke
0.8 0 0 0.8 55.89978 128.474548 sc4mt astore 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 22.000061 0 394 595 0.8 0 0 0.8 51.89978 179.674545 sc6mt astore ssl
/crlinw 1 def
/crendarw false def
0.8 0 0 0.8 55.89978 128.474548 sc4mt astore 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 428 698 112 -248 0.8 0 0 0.8 51.89978 179.674545 sc6mt astore rstroke
(m\335moire ) [14.994003 0 7.991989 0 14.993988 0 9 0 5.003998 0 7.667999 0 7.992004 0 0 0] 238.178009 348 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 218.299789 374.074554] dotx
(Adresse  logique ) [12.996002 0 10.007996 0 7.667999 0 7.992004 0 7.001999 0 7.001999 0 7.992004 0 4.5 0 -60.587997 -20.754028 5.003998 0 9 0 9 0 5.003998 0 10.007996 0 10.007996 0 7.992004 0 0 0] 97.419998 665 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 52.69978 179.674545] dotx
(Adresse  physique ) [12.996002 0 10.007996 0 7.667999 0 7.992004 0 7.001999 0 7.001999 0 7.992004 0 4.5 0 -66.959999 -20.754028 10.008003 0 9.737999 0 9 0 7.002007 0 5.003998 0 10.007996 0 10.007996 0 7.992004 0 0 0] 97.419998 665 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 259.89978 165.274551] dotx
(Table des segments ) [10.349998 0 9 0 10.008003 0 5.003998 0 7.991997 0 4.5 0 10.008003 0 7.991997 0 7.002007 0 4.5 0 7.001999 0 7.992004 0 9 0 14.994003 0 7.992004 0 10.007996 0 5.994003 0 7.001999 0 0 0] 56.830002 665 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 150.299774 219.674561] dotx
0.8 0 0 0.8 55.89978 128.474548 sc4mt astore 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 0 -19 260 713 0.8 0 0 0.8 55.89978 128.474548 sc6mt astore ssl
(b ) [10.007996 0 0 0] 119.996002 452 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 181.499786 323.674561] dotx
(b ) [10.007996 0 0 0] 119.996002 452 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 222.299789 288.474548] dotx
/crlinw 2 def
/crendarw true def
0.8 0 0 0.8 55.89978 128.474548 sc5mt astore crlinw 0.8 0 0 0.8 55.89978 128.474548 sc6mt astore 320.699799 670.879333 320.699799 670.874573 arow
false 0.8 0 0 0.8 51.89978 179.674545 sc5mt astore sstrt
systemdict
begin
230 609 368.75 640 setbbox
313 634 moveto
313 634 336 634 336 634 curveto
336 634 336 614 336 614 curveto
end
/nspans 2 def 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 0.8 0 0 0.8 55.89978 128.474548 sc6mt astore splstroke
0.8 0 0 0.8 55.89978 128.474548 sc4mt astore 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 0 -28 265 555 0.8 0 0 0.8 55.89978 128.474548 sc6mt astore ssl
/crendarw false def
0.8 0 0 0.8 55.89978 128.474548 sc4mt astore 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 229 588 79 -32 0.8 0 0 0.8 55.89978 128.474548 sc6mt astore rstroke
( ) [0 0] 236 777 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 55.89978 128.474548] dotx
(d < l ) [10.007996 0 4.5 0 10.259995 0 4.5 0 5.003998 0 0 0] 207.863998 471 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 87.89978 205.274551] dotx
(oui ) [9 0 10.007996 0 5.003998 0 0 0] 177.994003 475 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 173.499786 210.874542] dotx
(non ) [10.007996 0 9 0 10.007996 0 0 0] 220.492004 533 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 55.89978 128.474548] dotx
(interruption erreur d'adresse ) [5.003998 0 10.007996 0 5.994003 0 7.991997 0 7.991997 0 7.992004 0 10.007996 0 10.007996 0 5.994003 0 5.003998 0 9 0 10.007996 0 4.5 0 7.992004 0 7.992004 0 7.667999 0 7.992004 0 10.007996 0 7.992004 0 4.5 0 10.007996 0 5.993988 0 9 0 10.007996 0 7.667999 0 7.992004 0 7.002014 0 7.002014 0 7.992004 0 0 0] 88.843002 472 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 111.099777 148.474548] dotx
/crlinw 1 def
0.8 0 0 0.8 55.89978 128.474548 sc4mt astore 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 143 607 37 -19 0.8 0 0 0.8 50.299782 179.674545 sc6mt astore rstroke
0.8 0 0 0.8 55.89978 128.474548 sc4mt astore 0.8 0 0 0.8 55.89978 128.474548 sc5mt astore 180 607 37 -19 0.8 0 0 0.8 50.299782 179.674545 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 484 1464 a
 currentpoint currentpoint translate 1 0.54999 div 1 0.54999 div scale
neg exch neg exch translate
 484 1464 a 671 1555 a Fq(Fig.)e
FD(8.16)f({)i Fp(M)o(\023)-20 b(emoir)n(e)14 b(se)n(gment)o(\023)-20
b(e)n(e)179 1688 y Fu(8.3.3)55 b(Commen)n(t)17 b(prot)o(\023)-27
b(eger)17 b(la)i(m)o(\023)-27 b(emoi)o(re)15 b(pagin)o(\023)-27
b(ee)236 1758 y FB(Les)13 b(protections)i(d'acc)o(\022)-18
b(es)13 b(son)o(t)h(faites)f(au)h(niv)o(eau)g(de)f(la)h(table)g(des)g
(pages.)236 1803 y(On)d(a)f(une)h(table)g(des)g(pages)g(globale.)h
(C'est)d(donc)i(le)g(syst)o(\022)-18 b(eme)11 b(qui)g(alloue)i(les)d
(pages)i(\022)-19 b(a)10 b(un)h(pro)q(cessus,)179 1849
y(qui)j(par)g(construction)i(\(du)e(syst)o(\022)-18 b(eme)14
b(de)g(pagination\))i(ne)e(p)q(eut)g(pas)f(\023)-18 b(ecrire)15
b(en)e(dehors)i(de)f(ses)g(propres)179 1894 y(pages.)i(De)h(plus,)g
(dans)g(la)g(table)h(des)e(pages)h(d'un)g(pro)q(cessus,)g(des)g(drap)q
(eaux)h(indiquen)o(t)h(le)e(t)o(yp)q(e)f(de)179 1940
y(page)d(\(droits)h(d'acc)o(\022)-18 b(es)14 b(en)f(lecture/)o(\023)-18
b(ecriture/ex)o(\023)g(ecu)q(tion)q(\).)179 2051 y Fu(8.3.4)55
b(La)19 b(m)o(\023)-27 b(emoi)o(re)15 b(segmen)n(t)o(\023)-27
b(ee)236 2120 y FB(Nous)12 b(v)o(enons)g(de)g(v)o(oir)g(que)g(les)g
(adresses)g(logiques)h(utilis)o(\023)-18 b(ees)14 b(par)e(le)g
(programmeur)g(son)o(t)g(di\013)o(\023)-18 b(eren)o(tes)179
2166 y(des)13 b(adresses)h(ph)o(ysiques.)236 2212 y(La)g(m)o(\023)-18
b(emoire)14 b(segmen)o(t)o(\023)-18 b(ee)15 b(est)e(une)h(organisation)
j(de)d(la)g(m)o(\023)-18 b(emoire)15 b(qui)f(resp)q(ecte)g(le)h(comp)q
(ortemen)o(t)179 2257 y(usuel)d(des)e(programmeurs,)i(qui)f(g)o(\023)
-18 b(en)o(\023)g(eralemen)o(t)13 b(v)o(oien)o(t)e(la)g(m)o(\023)-18
b(emoire)12 b(comme)e(un)h(ensem)o(ble)h(de)f(tableaux)179
2303 y(distincts)j(con)o(tenan)o(t)g(des)f(informations)i(de)e(t)o(yp)q
(es)g(di\013)o(\023)-18 b(eren)o(ts.)14 b(Un)f(segmen)o(t)g(p)q(our)g
(c)o(haque)h(t)o(yp)q(e)7 b(:)12 b(don-)179 2349 y(n)o(\023)-18
b(ees,)12 b(co)q(de,)g(table)h(des)f(sym)o(b)q(oles,)h(librairi)q(es)i
(etc.)c(Ces)h(di\013)o(\023)-18 b(eren)o(tes)14 b(zones)e(a)o(y)o(an)o
(t)h(des)f(tailles)i(v)n(ari)o(\023)-18 b(ees,)13 b(et)179
2394 y(parfois)h(v)n(ariables)h(au)e(cours)h(du)f(temps)h(\(le)f(tas)g
(par)h(exemple\).)236 2440 y(La)d(m)o(\023)-18 b(emoire)12
b(segmen)o(t)o(\023)-18 b(ee)12 b(non)g(pagin)o(\023)-18
b(ee)13 b(p)q(ose)e(des)h(probl)o(\022)-18 b(emes)13
b(de)e(compactage)h(\(d)o(\023)-18 b(efragmen)o(tation\).)179
2486 y(La)13 b(strat)o(\023)-18 b(egie)14 b(id)o(\023)-18
b(eale)15 b(est)6 b(:)13 b(la)g(m)o(\023)-18 b(emoire)14
b(en)f(segmen)o(ts)h(pagin)o(\023)-18 b(es.)p eop
%%Page: 66 74
66 73 bop 75 50 a FD(66)1141 b Fz(CHAPITRE)14 b(8.)27
b(LA)14 b(M)1670 39 y(\023)1665 50 y(EMOIRE)p eop
%%Page: 67 75
67 74 bop 1796 50 a FD(67)179 478 y Fw(Chapitre)32 b(9)179
686 y Fy(La)39 b(m)m(\023)-56 b(emoire)38 b(virtuelle)236
898 y FB(Les)15 b(m)o(\023)-18 b(etho)q(des)16 b(de)g(gestion)g(m)o
(\023)-18 b(emoire)16 b(que)f(nous)h(v)o(enons)g(de)g(v)o(oir)g(on)o(t)
f(toutes)g(un)h(d)o(\023)-18 b(efaut)15 b(ma)r(jeur)179
944 y(qui)f(est)f(de)g(garder)h(l'ensem)o(ble)g(du)g(pro)q(cessus)g(en)
f(m)o(\023)-18 b(emoire,)14 b(ce)f(qui)h(donne)8 b(:)230
1007 y({)21 b(un)14 b(co)q(^)-20 b(ut)13 b(en)g(sw)o(ap)g(imp)q(ortan)o
(t)230 1070 y({)21 b(Imp)q(ossibili)q(t)o(\023)-18 b(e)16
b(de)d(cr)o(\023)-18 b(eer)13 b(de)g(tr)o(\022)-18 b(es)13
b(gros)g(pro)q(cessus.)179 1134 y(Les)k(m)o(\023)-18
b(etho)q(des)18 b(de)g(m)o(\023)-18 b(emoire)18 b(virtuelle)i(p)q
(ermetten)o(t)e(d'ex)o(\023)-18 b(ecuter)18 b(un)g(programme)g(qui)g
(ne)g(tien)o(t)g(pas)179 1180 y(en)o(ti)o(\022)-18 b(eremen)o(t)14
b(en)f(m)o(\023)-18 b(emoire)14 b(cen)o(trale)8 b(!)236
1226 y(Nous)j(a)o(v)o(ons)h(commenc)o(\023)-18 b(e)11
b(par)g(pr)o(\023)-18 b(esen)o(ter)11 b(des)g(algorithmes)i(de)e
(gestion)h(de)f(la)g(m)o(\023)-18 b(emoire)11 b(qui)h(utilisen)o(t)179
1271 y(le)h(concept)h(de)f(base)h(suiv)n(an)o(t)8 b(:)179
1317 y(l'ensem)o(ble)17 b(de)e(l'espace)h(logique)h(adressable)g(d'un)f
(pro)q(cessus)g(doit)f(^)-18 b(etre)15 b(en)g(m)o(\023)-18
b(emoire)16 b(p)q(our)g(p)q(ouv)o(oir)179 1363 y(ex)o(\023)-18
b(ecuter)13 b(le)h(pro)q(cessus.)236 1454 y(Cette)g(restriction)i(sem)o
(ble)g(\022)-19 b(a)14 b(la)h(fois)g(raisonnable)i(et)e(n)o(\023)-18
b(ecessaire,)15 b(mais)g(aussi)h(tr)o(\022)-18 b(es)14
b(dommageable)179 1500 y(car)f(cela)h(limite)g(la)g(taille)h(des)f(pro)
q(cessus)g(\022)-19 b(a)13 b(la)g(taille)j(de)d(la)g(m)o(\023)-18
b(emoire)14 b(ph)o(ysique.)236 1592 y(Or)f(si)h(l'on)f(regarde)h(des)f
(programmes)h(tr)o(\022)-18 b(es)13 b(standards,)h(on)g(v)o(oit)g(que)7
b(:)230 1655 y({)21 b(il)16 b(y)f(des)f(p)q(ortions)j(de)e(co)q(de)g
(qui)g(g)o(\022)-18 b(eren)o(t)15 b(des)g(cas)g(tr)o(\022)-18
b(es)15 b(inhabituels)j(qui)e(on)o(t)e(lieu)j(tr)o(\022)-18
b(es)14 b(raremen)o(t)270 1701 y(\(si)g(ils)g(on)o(t)f(lieu\))230
1764 y({)21 b(les)15 b(tableaux,)g(les)g(listes)g(et)f(autres)h(tables)
g(son)o(t)f(en)g(g)o(\023)-18 b(en)o(\023)g(eral)15 b(initial)q(is)o
(\023)-17 b(es)16 b(\022)-19 b(a)14 b(des)h(tailles)h(b)q(eaucoup)270
1810 y(plus)e(grandes)g(que)g(ce)f(qui)h(est)f(r)o(\023)-18
b(eellemen)o(t)15 b(utile)230 1873 y({)21 b(Certaines)14
b(options)h(d'application)h(son)o(t)d(tr)o(\022)-18 b(es)13
b(raremen)o(t)h(utilis)o(\023)-18 b(ees)179 1936 y(M)o(^)g(eme)11
b(dans)h(le)g(cas)g(o)q(\022)-20 b(u)12 b(le)f(programme)i(en)e(en)o
(tier)h(doit)h(r)o(\023)-18 b(esider)12 b(en)g(m)o(\023)-18
b(emoire,)11 b(tout)h(n'est)f(p)q(eut-)o(^)-18 b(etre)12
b(pas)179 1982 y(absolumen)o(t)j(n)o(\023)-18 b(ecessaire)14
b(en)g(m)o(^)-18 b(eme)13 b(temps.)236 2028 y(Av)o(ec)i(la)h(m)o(\023)
-18 b(emoire)15 b(virtuelle,)i(la)f(m)o(\023)-18 b(emoire)15
b(logique)i(devien)o(t)g(b)q(eaucoup)f(plus)g(grande)g(que)f(la)h(m)o
(\023)-18 b(e-)179 2074 y(moire)14 b(ph)o(ysique.)236
2120 y(De)g(nom)o(breux)g(a)o(v)n(an)o(tages)8 b(:)179
2166 y(Comme)15 b(les)h(utilisateurs)i(consommen)o(t)e(individu)q(ell)q
(ement)i(moins)e(de)f(m)o(\023)-18 b(emoire,)16 b(plus)h
(d'utilisateurs)179 2211 y(p)q(euv)o(en)o(t)e(tra)o(v)n(ailler)i(en)d
(m)o(^)-18 b(eme)14 b(temps.)h(Av)o(ec)f(l'augmen)o(tation)j(de)d
(l'utilisati)q(on)j(du)e(CPU)f(et)g(de)g(d)o(\023)-18
b(ebit)179 2257 y(que)13 b(cela)h(implique)i(\(mais)e(pas)f(d'augmen)o
(tation)i(de)e(la)h(vitesse\).)236 2303 y(Moins)i(d'en)o(tr)o(\023)-18
b(ees-sorties)16 b(son)o(t)e(e\013ectu)o(\023)-18 b(ees)15
b(p)q(our)g(l'ex)o(\023)-18 b(ecution)16 b(d'un)f(pro)q(cessus,)g(ce)f
(qui)i(fait)e(que)h(le)179 2349 y(pro)q(cessus)f(s'ex)o(\023)-18
b(ecute)14 b(\(temps)f(r)o(\023)-18 b(eel\))13 b(plus)i(rapidemen)o(t.)
179 2461 y Fu(9.0.5)55 b(Les)18 b(o)n(v)n(erla)n(ys)236
2532 y FB(Une)f(des)g(premi)o(\022)-18 b(eres)19 b(v)o(ersions)f(d'ex)o
(\023)-18 b(ecutables)19 b(partiellemen)o(t)g(en)e(m)o(\023)-18
b(emoire)18 b(est)f(celle)h(des)f("o)o(v)o(er-)179 2577
y(la)o(y")d(qui)h(est)e(l'id)o(\023)-18 b(ee)15 b(de)f(c)o(harger)g
(successiv)o(emen)o(t)h(des)f(p)q(ortions)i(disjoin)o(tes)f(et)e
(di\013)o(\023)-18 b(eren)o(tes)16 b(de)d(co)q(de)h(en)179
2623 y(m)o(\023)-18 b(emoire,)13 b(ex)o(\023)-18 b(ecut)o(\023)g(ees)14
b(l'une)g(apr)o(\022)-18 b(es)14 b(l'autre.)236 2669
y(Les)e(di\013)o(\023)-18 b(eren)o(tes)14 b(passes)f(d'un)g
(compilateur)h(son)o(t)e(souv)o(en)o(t)h(r)o(\023)-18
b(ealis)o(\023)g(ees)14 b(en)e(utilisan)o(t)j(un)d(o)o(v)o(erla)o(y)i
(\(pr)o(\023)-18 b(e-)179 2715 y(pro)q(cesseurs,)14 b(pass1,)f(pass2,)h
(p)q(our)g(les)f(compilateurs)j(C\).)236 2761 y(Les)h(o)o(v)o(erla)o(y)
g(n)o(\023)-18 b(ecessiten)o(t)18 b(quelques)g(adaptations)g(de)e(l')o
(\023)-18 b(editeur)18 b(de)e(liens)i(et)e(des)h(m)o(\023)-18
b(ecanismes)17 b(de)179 2806 y(relo)q(cation.)p eop
%%Page: 68 76
68 75 bop 75 50 a FD(68)885 b Fz(CHAPITRE)14 b(9.)27
b(LA)14 b(M)1414 39 y(\023)1409 50 y(EMOIRE)g(VIR)m(TUELLE)179
166 y Fu(9.0.6)55 b(Le)18 b(c)n(hargemen)n(t)f(dynamique)236
238 y FB(Un)d(autre)f(syst)o(\022)-18 b(eme)14 b(courammen)o(t)g
(utilis)o(\023)-18 b(e)16 b(dans)e(les)g(logiciels)j(du)c(marc)o(h)o
(\023)-18 b(e)14 b(des)g(micros)g(est)f(le)h(c)o(har-)179
284 y(gemen)o(t)h(dynamique.)i(Av)o(ec)e(le)h(c)o(hargemen)o(t)g
(dynamique,)h(une)e(fonction)i(n'est)e(c)o(harg)o(\023)-18
b(ee)15 b(en)h(m)o(\023)-18 b(emoire)179 329 y(qu'au)18
b(momen)o(t)g(de)g(son)g(app)q(el.)h(Le)f(c)o(hargemen)o(t)g(dynamique)
i(demande)f(que)g(toutes)f(les)g(fonctions)179 375 y(soien)o(t)c(rep)q
(ositionnabl)q(es)i(en)d(m)o(\023)-18 b(emoire)14 b(de)f(fa\030)-17
b(con)14 b(ind)o(\023)-18 b(ep)q(endan)o(te.)236 422
y(A)14 b(c)o(haque)h(app)q(el)g(de)f(fonction)h(on)f(regarde)h(si)f(la)
h(fonction)g(est)f(en)g(m)o(\023)-18 b(emoire)15 b(sinon)g(un)e(\023)
-18 b(editeur)15 b(de)179 467 y(liens)f(dynamique)i(est)d(app)q(el)o
(\023)-18 b(e)14 b(p)q(our)g(la)g(c)o(harger.)236 514
y(Dans)c(les)g(deux)g(cas)f(\(o)o(v)o(erla)o(y)i(et)e(c)o(hargemen)o(t)
h(dynamique\),)h(le)e(syst)o(\022)-18 b(eme)10 b(joue)f(un)h(r^)-19
b(ole)10 b(tr)o(\022)-18 b(es)9 b(restrein)o(t,)179 560
y(il)14 b(su\016t)f(en)g(e\013et)h(d'a)o(v)o(oir)g(un)f(b)q(on)h(syst)o
(\022)-18 b(eme)13 b(de)g(gestion)i(de)e(\014c)o(hiers.)236
606 y(Malheureusemen)o(t,)21 b Fx(le)d(tr)n(avail)e FB(que)j(doit)g(r)o
(\023)-18 b(ealiser)19 b(le)g(programmeur)g(p)q(our)g(c)o(hoisir)h(les)
f(o)o(v)o(erla)o(ys)179 652 y(et/ou)e(installer)i(un)e(m)o(\023)-18
b(ecanisme)18 b(de)f(c)o(hargemen)o(t)h(dynamique)h(e\016cace)e
Fx(est)f(non)g(trivial)f FB(et)h(requiert)179 697 y(que)d(le)h
(programmeur)g(ait)g(une)f Fx(p)n(arfaite)f(c)n(onnaissan)o(c)n(e)d
FB(du)14 b(programme.)236 744 y(Ceci)g(nous)g(am)o(\022)-18
b(ene)13 b(aux)h Fx(te)n(chnique)o(s)d(automatiques)o
FB(.)179 880 y Fv(9.1)66 b(Demand)22 b(P)n(aging)236
964 y FB(La)14 b(m)o(\023)-18 b(etho)q(de)15 b(de)f FC(Demand)i(P)o
(aging)d FB(est)h(la)h(plus)g(r)o(\023)-18 b(epandue)16
b(des)e(impl)o(\023)-18 b(emen)o(tations)17 b(de)e(m)o(\023)-18
b(emoire)179 1010 y(virtuelle,)15 b(elle)f(demande)g(de)g(nom)o(breuse)
g(capacit)o(\023)-18 b(es)14 b(mat)o(\023)-18 b(erielles.)236
1102 y(Nous)12 b(partons)h(d'un)f(syst)o(\022)-18 b(eme)12
b(de)g(sw)o(ap)g(o)q(\022)-20 b(u)12 b(la)h(m)o(\023)-18
b(emoire)12 b(est)g(d)o(\023)-18 b(ecoup)o(\023)g(ee)13
b(en)f(pages.)g(Comme)g(p)q(our)g(le)179 1148 y(sw)o(ap,)i(quand)i(un)f
(programme)g(doit)f(^)-18 b(etre)15 b(ex)o(\023)-18 b(ecut)o(\023)g(e)
15 b(nous)g(le)g(c)o(hargeons)h(en)f(m)o(\023)-18 b(emoire)15
b(\(sw)o(ap)g(in\))g(mais)179 1194 y(au)e(lieu)i(de)e(faire)g(un)h(sw)o
(ap)f(complet,)h(on)f(utilise)i(un)f("sw)o(app)q(eur)g(paresseux")h
(\(lazy)e(sw)o(app)q(er\).)192 1239 y(Un)g(sw)o(app)q(eur)g(paresseux)i
(c)o(harge)e(une)h(page)g FC(uniquemen)o(t)f(si)f FB(elle)i(est)f(n)o
(\023)-18 b(ecessaire.)236 1332 y(Que)13 b(ce)g(passe-t-il)i(quand)f
(le)g(programme)g(essaie)g(d'acc)o(\023)-18 b(eder)13
b(\022)-19 b(a)13 b(une)h(page)g(qui)g(est)f(hors)g(m)o(\023)-18
b(emoire)s(?)230 1397 y({)21 b(le)c(mat)o(\023)-18 b(eriel)18
b(v)n(a)f(traduire)h(l'adresse)g(logique)h(en)d(une)i(adresse)f(ph)o
(ysique)i(gr^)-19 b(ace)17 b(\022)-19 b(a)16 b(la)i(table)f(des)270
1443 y(pages.)230 1507 y({)k(tan)o(t)10 b(que)g(les)g(pages)h(demand)o
(\023)-18 b(ees)11 b(son)o(t)f(en)g(m)o(\023)-18 b(emoire,)10
b(le)g(programme)h(tourne)f(normalemen)o(t,)h(sinon)270
1553 y(si)i(la)h(page)f(est)g(con)o(ten)o(ue)h(dans)f(l'espace)h(des)f
(adresses)h(logiques)h(mais)f(n'est)e(pas)i(c)o(harg)o(\023)-18
b(ee,)13 b(il)h(y)f(a)270 1598 y(une)h FC(page)h(fault)p
FB(.)236 1664 y(En)f(g)o(\023)-18 b(en)o(\023)g(eral,)15
b(une)g(erreur)f(d'adresse)h(est)e(d)q(^)-20 b(ue)15
b(\022)-19 b(a)14 b(une)g(ten)o(tativ)o(e)h(d'acc)o(\022)-18
b(es)14 b(\022)-19 b(a)14 b(une)h(adresse)f(ext)o(\023)-18
b(erieure)179 1709 y(\(in)o(v)n(alide\).)19 b(Dans)e(ce)g(cas,)g(le)g
(programme)h(doit)e(^)-18 b(etre)17 b(in)o(terrompu,)h(c'est)e(le)i
(comp)q(ortemen)o(t)f(normal)179 1755 y(d'un)c(syst)o(\022)-18
b(eme)14 b(de)f(sw)o(ap.)236 1802 y(Mais)k(il)h(est)e(p)q(ossible)i(a)o
(v)o(ec)e(un)h(sw)o(app)q(eur)g(paresseux)g(que)g(la)f(page)h(existe)g
(mais)g(ne)f(soit)h(pas)f(en)179 1847 y(m)o(\023)-18
b(emoire)14 b(cen)o(trale,)f(d'o)q(\022)-20 b(u)14 b(les)e(\023)-18
b(etap)q(es)14 b(suiv)n(an)o(tes)h(dans)f(ce)e(cas)7
b(:)236 1894 y(On)16 b(p)q(eut)h(faire)g(d)o(\023)-18
b(emarrer)16 b(un)h(pro)q(cessus)g(sans)g(aucune)g(page)g(en)f(m)o
(\023)-18 b(emoire.)17 b(La)f(premi)o(\022)-18 b(ere)17
b FC(P)o(age)179 1939 y(F)l(ault)9 b FB(aurait)j(lieu)f(\022)-19
b(a)10 b(la)h(lecture)g(de)g(la)f(premi)o(\022)-18 b(ere)12
b(instruction)g(\(l'instruction)h(n')o(\023)-18 b(etan)o(t)10
b(pas)h(en)f(m)o(\023)-18 b(emoire\).)236 1986 y(Il)14
b(faut)g(r)o(\023)-18 b(ealiser)15 b(une)f(forme)f(sp)o(\023)-18
b(eciale)16 b(de)d(sauv)o(egarde)i(de)f(con)o(texte,)g(il)g(faut)g
(garder)g(une)g(image)g(de)179 2032 y(l')o(\023)-18 b(etat)15
b(du)g(pro)q(cessus)i(qui)f(vien)o(t)g(d'e\013ectuer)f(une)h
FC(P)o(age)i(F)l(ault)c FB(mais)i(de)f(plus)h(il)g(faudra)g(red)o(\023)
-18 b(emarrer)179 2077 y(\(r)o(\023)g(eex)o(\023)g(ecuter\))16
b(l'instruction)j(qui)e(a)f(plac)o(\023)-18 b(e)17 b(le)g(pro)q(cessus)
g(dans)g(cet)e(\023)-18 b(etat,)15 b(en)h(e\013et)h(il)g(est)f(p)q
(ossible)i(que)179 2123 y(l'instruction)e(ne)d(se)g(soit)h(pas)f
(termin)o(\023)-18 b(e)14 b(par)f(manque)h(de)f(donn)o(\023)-18
b(ees.)236 2170 y(Le)15 b(syst)o(\022)-18 b(eme)15 b(d'exploitation)j
(a)d(ici)h(un)g(r^)-19 b(ole)15 b(imp)q(ortan)o(t,)h(c'est)f(lui)h(qui)
g(v)n(a)f(r)o(\023)-18 b(ealiser)16 b(le)g(c)o(hargemen)o(t)179
2215 y(de)d(la)h(page)f(manquan)o(te)i(puis)f(relancer)g(le)g(pro)q
(cessus)g(et)f(l'instruction.)236 2262 y(Les)e(circuits)h(n)o(\023)-18
b(ecessaires)12 b(\022)-19 b(a)11 b(la)g(m)o(\023)-18
b(etho)q(de)12 b(de)e(Demande)i(P)o(aging)g(son)o(t)f(les)g(m)o(^)-18
b(emes)11 b(que)g(ceux)g(que)g(l'on)179 2308 y(utilise)h(p)q(our)f(un)f
(syst)o(\022)-18 b(eme)11 b(de)f(sw)o(ap)g(pagin)o(\023)-18
b(e,)11 b(c'est-\022)-19 b(a-dire)11 b(une)f(m)o(\023)-18
b(emoire)11 b(secondaire)h(et)d(un)i(gestionnaire)179
2353 y(de)i(pages)h(\(table)g(des)f(pages\).)236 2400
y(P)o(ar)g(con)o(tre,)g(la)h(partie)g(logiciell)q(e)i(est)d(b)q
(eaucoup)i(plus)f(imp)q(ortan)o(te.)236 2447 y(En\014n)f(il)g(faut)f
(que)g(les)g FC(instructions)g(soien)o(t)h(in)o(terruptibles)p
FB(,)c(ce)j(qui)h(n'est)e(pas)i(toujours)f(le)g(cas)179
2492 y(sur)f(tous)g(les)g(pro)q(cesseurs)i(et)d(ce)h(qui)g(est)g
(fondamen)o(tal,)h(comme)f(nous)h(allons)g(le)g(v)o(oir)f(sur)g(des)g
(exemples:)236 2539 y(add)j(A,B)e(in)i(C)219 2614 y(1.)21
b(c)o(herc)o(her)14 b(et)f(d)o(\023)-18 b(eco)q(der)14
b(l'instruction)h(add)219 2678 y(2.)21 b(c)o(harger)14
b(le)f(con)o(ten)o(u)h(de)f(l'adresse)i(A)219 2742 y(3.)21
b(c)o(harger)14 b(le)f(con)o(ten)o(u)h(de)f(l'adresse)i(B)219
2806 y(4.)21 b(sommer)13 b(et)g(sauv)o(egarder)i(dans)f(C)p
eop
%%Page: 69 77
69 76 bop 75 50 a Fz(9.1.)26 b(DEMAND)14 b(P)m(A)o(GING)1256
b FD(69)484 952 y
 currentpoint currentpoint translate 0.52821 0.52821 scale neg exch
neg exch translate
 484 952 a 14 w @beginspecial 0 @llx
0 @lly 426 @urx 376 @ury 4260 @rwi @setspecial
%%BeginDocument: eps/mem.fault.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /estroke {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /efill {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath unpagectm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /apstroke {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc pie chord or {
        closepath
    } if crlinalph setalpha pie not chord not and {
        crfrtarw {
            2 copy crlinw exch gsave newpath angle1 1 add cos radius mul radius add angle1 1 add sin radius mul radius add moveto angle1 cos radius mul radius add angle1 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if crendarw {
            2 copy crlinw exch gsave newpath angle2 1 sub cos radius mul radius add angle2 1 sub sin radius mul radius add moveto angle2 cos radius mul radius add angle2 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if
    } if crlincp setlinecap crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /apfill {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup 5 -2 roll arc pie chord or {
        closepath
    } if 1 xscale div 1 yscale div scale crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /mkepath {
    dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def /closed exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc closed pie or chord or {
        closepath
    } if unpagectm
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 425.014832 376 rectclip
-88 -272 translate
88 272 425.014832 376 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
0.8 0 0 0.8 59.397171 92.00061 sc6mt astore 88.392578 1 -1 352 636 0.456774 0 0 0.146417 264.212585 289.563904 sc5mt astore efill
0.8 0 0 0.8 59.397171 92.00061 sc4mt astore 0.8 0 0 0.8 59.397171 92.00061 sc6mt astore 88.392578 1 -1 352 636 0.456774 0 0 0.146417 264.212585 289.563904 sc5mt astore estroke
0.8 0 0 0.8 59.397171 92.00061 sc5mt astore 352 622 176 -213 0.456774 0 0 0.86281 264.212585 16.853539 sc6mt astore rfill
0.8 0 0 0.8 59.397171 92.00061 sc4mt astore 0.8 0 0 0.8 59.397171 92.00061 sc5mt astore 352 622 176 -213 0.456774 0 0 0.86281 264.212585 16.853539 sc6mt astore rstroke
0.8 0 0 0.8 59.397171 92.00061 sc6mt astore 88.392578 1 -1 352 636 0.444411 0 0 0.146417 269.021423 291.28952 sc5mt astore efill
0.8 0 0 0.8 59.397171 92.00061 sc6mt astore 88.392578 1 -1 352 636 0.456774 0 0 0.146417 264.212585 472.479584 sc5mt astore efill
0.8 0 0 0.8 59.397171 92.00061 sc4mt astore 0.8 0 0 0.8 59.397171 92.00061 sc6mt astore 88.392578 1 -1 352 636 0.456774 0 0 0.146417 264.212585 472.479584 sc5mt astore estroke
0.8 0 0 0.8 59.397171 92.00061 sc4mt astore 0.8 0 0 0.8 59.397171 92.00061 sc5mt astore 198 720 74 -85 0.8 0 0 0.8 65.797173 71.200607 sc6mt astore rstroke
0.8 0 0 0.8 59.397171 92.00061 sc4mt astore 0.8 0 0 0.8 59.397171 92.00061 sc5mt astore 28 542 66 -27 0.8 0 0 0.8 65.797173 71.200607 sc6mt astore rstroke
0.8 0 0 0.8 59.397171 92.00061 sc4mt astore 0.8 0 0 0.8 59.397171 92.00061 sc5mt astore 1 -263 28 636 0.8 0 0 0.8 65.797173 71.200607 sc6mt astore ssl
0.8 0 0 0.8 59.397171 92.00061 sc4mt astore 0.8 0 0 0.8 59.397171 92.00061 sc5mt astore 1 -263 94 636 0.8 0 0 0.8 65.797173 71.200607 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(load M ) [5.003998 0 9 0 9 0 10.007996 0 4.5 0 16.992004 0 0 0] 86 255 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 24.19717 284.800598] dotx
/crlinw 1.5 def
/crendarw true def
0.8 0 0 0.8 59.397171 92.00061 sc5mt astore crlinw 0.8 0 0 0.8 59.397171 92.00061 sc6mt astore 224.189056 498.405151 224.197174 498.400635 arow
false 0.8 0 0 0.8 64.997169 71.200607 sc5mt astore sstrt
systemdict
begin
92 532 199 553 setbbox
92 537 moveto
92 537 129 553 147 553 curveto
165 553 199 534 199 534 curveto
end
/nspans 2 def 0.8 0 0 0.8 59.397171 92.00061 sc5mt astore 0.8 0 0 0.8 59.397171 92.00061 sc6mt astore splstroke
/crlinw 1 def
/crendarw false def
0.8 0 0 0.8 59.397171 92.00061 sc4mt astore 0.8 0 0 0.8 59.397171 92.00061 sc5mt astore 200 557 60 -71 0.8 0 0 0.8 65.797173 71.200607 sc6mt astore rstroke
(table des pages ) [5.994003 0 9 0 10.007996 0 5.003998 0 7.992004 0 4.5 0 10.008011 0 7.992004 0 7.002014 0 -67.500031 -20.753998 10.007996 0 9 0 9 0 7.992004 0 7.001999 0 0 0] 206 463 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 65.797173 71.200607] dotx
(noyau ) [10.007996 0 9 0 9 0 9 0 10.007996 0 0 0] 211 619 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 65.797173 71.200607] dotx
(disque de  swap ) [10.007996 0 5.003998 0 7.002014 0 10.007996 0 10.008026 0 7.992004 0 -50.022034 -20.753998 10.007996 0 7.992004 0 4.5 0 -22.5 -20.753998 7.002014 0 12.996002 0 9 0 10.008026 0 0 0] 479 325 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 80.997169 137.600616] dotx
0.8 0 0 0.8 59.397171 92.00061 sc4mt astore 0.8 0 0 0.8 59.397171 92.00061 sc5mt astore 475 510 19 -22 0.8 0 0 0.8 65.797173 71.200607 sc6mt astore rstroke
0.8 0 0 0.8 59.397171 92.00061 sc4mt astore 0.8 0 0 0.8 59.397171 92.00061 sc5mt astore 315 454 81 -202 0.8 0 0 0.8 65.797173 71.200607 sc6mt astore rstroke
(m\335moire ) [14.993988 0 7.992004 0 14.993988 0 9 0 5.003998 0 7.667999 0 7.992004 0 0 0] 345 266 /Times-Bold [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 48.19717 72.00061] dotx
/txtdraw true def
/txlndraw true def
(1 r\335f\335rence ) [9 0 4.5 0 5.994003 0 7.992004 0 5.994003 0 7.992004 0 5.994003 0 7.992004 0 9 0 7.992004 0 7.992004 0 0 0] 153 571 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 36.19717 64.800613] dotx
/crlinw 1.5 def
/crendarw true def
0.8 0 0 0.8 59.397171 92.00061 sc5mt astore crlinw 0.8 0 0 0.8 59.397171 92.00061 sc6mt astore 283.410522 579.983215 283.397186 580.00061 arow
false 0.8 0 0 0.8 65.797173 71.200607 sc5mt astore sstrt
systemdict
begin
259 513 372 636 setbbox
259 532 moveto
259 532 282 533 305 548 curveto
328 563 272 636 272 636 curveto
end
/nspans 2 def 0.8 0 0 0.8 59.397171 92.00061 sc5mt astore 0.8 0 0 0.8 59.397171 92.00061 sc6mt astore splstroke
(2 interruption ) [9 0 4.5 0 5.003998 0 9 0 5.003998 0 7.992004 0 5.993988 0 5.993988 0 9 0 9 0 5.003998 0 5.003998 0 9 0 9 0 0 0] 270 562 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 104.197174 80.00061] dotx
0.8 0 0 0.8 59.397171 92.00061 sc5mt astore crlinw 0.8 0 0 0.8 59.397171 92.00061 sc6mt astore 452.998169 479.213257 452.997192 479.200623 arow
false 0.8 0 0 0.8 65.797173 71.200607 sc5mt astore sstrt
systemdict
begin
273 510 496 675 setbbox
273 672 moveto
273 672 374 665 391 657 curveto
408 649 474 585 481 574 curveto
488 563 484 510 484 510 curveto
end
/nspans 3 def 0.8 0 0 0.8 59.397171 92.00061 sc5mt astore 0.8 0 0 0.8 59.397171 92.00061 sc6mt astore splstroke
(3 la page existe    en zone de swap ) [9 0 4.5 0 5.003998 0 7.992004 0 4.5 0 9 0 7.992004 0 9 0 7.992004 0 4.5 0 7.721985 0 9 0 5.003998 0 7.002014 0 5.003998 0 7.992004 0 4.5 0 -115.70401 -20.088013 4.5 0 4.5 0 7.992004 0 9 0 4.5 0 7.992004 0 9 0 9 0 7.992004 0 4.5 0 9 0 7.992004 0 4.5 0 7.002014 0 12.81601 0 7.992004 0 9 0 0 0] 298 701 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 65.797173 71.200607] dotx
0.8 0 0 0.8 59.397171 92.00061 sc5mt astore crlinw 0.8 0 0 0.8 59.397171 92.00061 sc6mt astore 384.210541 347.997803 384.197174 348.00061 arow
false 0.8 0 0 0.8 65.797173 71.200607 sc5mt astore sstrt
systemdict
begin
398 301 534 490 setbbox
483 490 moveto
483 490 476 350 465 342 curveto
454 334 398 346 398 346 curveto
end
/nspans 2 def 0.8 0 0 0.8 59.397171 92.00061 sc5mt astore 0.8 0 0 0.8 59.397171 92.00061 sc6mt astore splstroke
(4 swap in de la page fautive ... ) [9 0 4.5 0 7.002014 0 12.81601 0 7.992004 0 9 0 4.5 0 5.003998 0 9 0 -68.814026 -20.088013 9 0 7.992004 0 4.5 0 5.003998 0 7.992004 0 4.5 0 9 0 7.992004 0 9 0 7.991974 0 -72.971985 -20.088013 5.813995 0 7.992004 0 9 0 5.003998 0 4.553986 0 8.730011 0 7.992004 0 4.5 0 4.5 0 4.5 0 4.5 0 0 0] 446 309 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 65.797173 71.200607] dotx
0.8 0 0 0.8 59.397171 92.00061 sc5mt astore crlinw 0.8 0 0 0.8 59.397171 92.00061 sc6mt astore 236.783081 487.000305 236.997177 487.200623 arow
false 0.8 0 0 0.8 74.597168 72.800613 sc5mt astore sstrt
systemdict
begin
180 339 386 534 setbbox
314 357 moveto
302 358 251 371 233 384 curveto
215 397 197 419 195 443 curveto
193 467 194 510 203 518 curveto
end
/nspans 3 def 0.8 0 0 0.8 59.397171 92.00061 sc5mt astore 0.8 0 0 0.8 59.397171 92.00061 sc6mt astore splstroke
(5 mise \325 jours de la table des page du P. ) [9 0 4.5 0 14.003998 0 5.003998 0 7.001999 0 7.992004 0 4.5 0 7.992004 0 4.5 0 5.003998 0 9 0 9 0 5.994003 0 7.002014 0 -100.494019 -20.088013 9 0 7.992004 0 4.5 0 5.003998 0 7.992004 0 4.5 0 5.003998 0 7.992004 0 9 0 5.003998 0 7.992004 0 4.5 0 9 0 7.992004 0 7.002014 0 -102.47403 -20.088013 9 0 7.992004 0 9 0 7.992004 0 4.5 0 9 0 9 0 4.5 0 8.009995 0 4.5 0 0 0] 163 358 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 80.197174 67.200607] dotx
0.8 0 0 0.8 59.397171 92.00061 sc5mt astore crlinw 0.8 0 0 0.8 59.397171 92.00061 sc6mt astore 144.371613 483.033142 144.197174 483.200623 arow
false 0.8 0 0 0.8 71.397171 67.200607 sc5mt astore sstrt
systemdict
begin
84 491 205 543 setbbox
199 528 moveto
199 529 164 510 148 509 curveto
132 508 98 513 91 520 curveto
end
/nspans 2 def 0.8 0 0 0.8 59.397171 92.00061 sc5mt astore 0.8 0 0 0.8 59.397171 92.00061 sc6mt astore splstroke
/crlinw 1 def
/crendarw false def
0.8 0 0 0.8 59.397171 92.00061 sc4mt astore 0.8 0 0 0.8 59.397171 92.00061 sc5mt astore 315 375 82 -32 0.8 0 0 0.8 65.797173 71.200607 sc6mt astore rstroke
(6 relancer l'instruction ) [9 0 4.5 0 5.994003 0 7.992004 0 5.003998 0 7.992004 0 9 0 7.992004 0 7.992004 0 5.994003 0 -71.460022 -20.087997 5.003998 0 5.994003 0 5.003998 0 9 0 7.001999 0 5.003998 0 5.994003 0 9 0 7.992004 0 5.003998 0 5.003998 0 9 0 9 0 0 0] 101 248 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 67.397171 259.200623] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 952 a
 currentpoint currentpoint translate 1 0.52821 div 1 0.52821 div scale
neg exch neg exch translate
 484 952 a 483 1044 a Fq(Fig.)13
b FD(9.1)g({)g Fp(Etap)n(es)j(de)f(la)f(gestion)i(d'une)f(err)n(eur)f
(de)h(p)n(age)179 1177 y FB(Si)f(l'erreur)g(de)g(page)g(a)g(lieu)h
(dans)f(le)h(4i)o(\022)-18 b(eme)14 b(acc)o(\022)-18
b(es)14 b(\022)-19 b(a)14 b(la)g(m)o(\023)-18 b(emoire)14
b(\(C\),)f(il)i(faudra)f(de)g(nouv)o(eau)h(recom-)179
1222 y(mencer)e(les)h(3)f(acc)o(\022)-18 b(es)13 b(m)o(\023)-18
b(emoire)14 b(de)f(l'instruction,)j(c'est-\022)-19 b(a-dire)13
b(lire)h(l'instruction,)i(etc.)236 1268 y(Un)h(autre)h(t)o(yp)q(e)f(de)
h(probl)o(\022)-18 b(eme)18 b(vien)o(t)g(d'instructions)i(comme)d(la)h
(suiv)n(an)o(te)g(que)g(l'on)g(trouv)o(e)f(sur)179 1314
y(PDP-11)j(:)236 1360 y(MO)o(V)13 b(\(R2\)++,{\(R3\))236
1405 y(cette)f(instruction)i(d)o(\023)-18 b(eplace)13
b(l'ob)r(jet)f(p)q(oin)o(t)o(\023)-18 b(e)13 b(par)f(le)g(registre)h
(R2)f(dans)g(l'adresse)h(p)q(oin)o(t)o(\023)-18 b(e)13
b(par)f(R3,)f(R2)179 1451 y(est)i(incr)o(\023)-18 b(emen)o(t)o(\023)g
(e)14 b(apr)o(\022)-18 b(es)14 b(le)f(transfert)g(et)g(R3)g(a)o(v)n(an)
o(t.)236 1497 y(Que)h(se)f(passe-t-il)i(si)f(l'on)g(a)f(une)h(erreur)g
(de)f(page)h(en)g(c)o(herc)o(han)o(t)g(\022)-19 b(a)13
b(acc)o(\023)-18 b(eder)14 b(\022)-19 b(a)14 b(la)g(page)g(p)q(oin)o(t)
o(\023)-18 b(e)14 b(par)179 1542 y(R3)s(?)179 1654 y
Fu(9.1.1)55 b(E\016cacit)o(\023)-27 b(e)236 1724 y FB(E\016cacit)o
(\023)-18 b(e)14 b(des)g(p)q(erformances)g(de)f(Demand)h(P)o(aging)21
b(:)236 1815 y(Soit)14 b(ma)f(=)g(500)g(nanosecondes,)i(le)f(temps)f
(mo)o(y)o(en)h(d'acc)o(\022)-18 b(es)13 b(a)g(une)h(m)o(\023)-18
b(emoire.)179 1861 y(le)13 b(temps)h(e\013ectif)f(d'acc)o(\022)-18
b(es)14 b(a)o(v)o(ec)f(le)h(Demand)g(P)o(aging)g(est)236
1952 y(temps)g(e\013ectif)f(=)g(\(1-p\)*ma)g(+)g(p)g(*)g("temps)h(de)f
(gestion)h(de)g(l'erreur)f(de)g(page")179 1998 y(o)q(\022)-20
b(u)13 b(p)g(est)g(la)h(probabilit)o(\023)-18 b(e)16
b(d'o)q(ccurrence)e(d'une)g(erreur)f(de)g(page)h(\(page)f(fault\).)236
2044 y(Une)g(erreur)h(de)f(page)h(n)o(\023)-18 b(ecessite)14
b(de)f(r)o(\023)-18 b(ealiser)15 b(les)e(op)o(\023)-18
b(erations)15 b(suiv)n(an)o(tes)219 2106 y(1.)21 b(lev)o(er)14
b(une)f(in)o(terruption)j(p)q(our)e(le)f(syst)o(\022)-18
b(eme)219 2169 y(2.)21 b(sauv)o(egarder)15 b(le)e(con)o(texte)h(du)f
(pro)q(cessus)219 2232 y(3.)21 b(d)o(\023)-18 b(eterminer)14
b(que)g(l'in)o(terruption)i(est)d(une)g(erreur)h(de)f(page)219
2294 y(4.)21 b(v)o(\023)-18 b(eri\014er)13 b(que)g(la)f(page)h(en)f
(question)i(est)d(une)i(page)f(l)o(\023)-18 b(egale)14
b(de)e(l'espace)h(logique,)h(d)o(\023)-18 b(eterminer)13
b(o)q(\022)-20 b(u)12 b(se)270 2340 y(trouv)o(e)i(la)f(page)h(dans)g
(la)f(m)o(\023)-18 b(emoire)14 b(secondaire.)219 2402
y(5.)21 b(ex)o(\023)-18 b(ecuter)14 b(une)g(lecture)g(de)f(la)h(page)g
(sur)f(une)h(page)g(m)o(\023)-18 b(emoire)14 b(libre)h(\(lib)o(\023)-18
b(erer)13 b(\023)-18 b(ev)o(en)o(tuellemen)o(t)16 b(une)270
2448 y(page)e(cf.)e(algorithme)j(de)e(remplacemen)o(t)i(de)e(page\))308
2511 y({)21 b(attendre)13 b(que)h(le)f(p)o(\023)-18 b(eriph)o(\023)g
(eriqu)q(e)15 b(soit)f(libre)308 2565 y({)21 b(temps)13
b(de)g(latence)h(du)g(p)o(\023)-18 b(eriph)o(\023)g(erique)308
2619 y({)21 b(commencer)13 b(le)h(transfert)219 2681
y(6.)21 b(allouer)15 b(p)q(endan)o(t)f(ce)f(temps-l\022)-19
b(a)14 b(le)g(cpu)f(\022)-19 b(a)13 b(un)h(autre)f(utilisateur)219
2744 y(7.)21 b(in)o(terruption)16 b(du)d(p)o(\023)-18
b(eriph)o(\023)g(erique)219 2806 y(8.)21 b(sauv)o(egarde)15
b(du)e(con)o(texte)h(du)f(pro)q(cessus)i(couran)o(t)p
eop
%%Page: 70 78
70 77 bop 75 50 a FD(70)885 b Fz(CHAPITRE)14 b(9.)27
b(LA)14 b(M)1414 39 y(\023)1409 50 y(EMOIRE)g(VIR)m(TUELLE)219
166 y FB(9.)21 b(d)o(\023)-18 b(eterminer)14 b(que)g(l'in)o(terruption)
h(\023)-18 b(etait)13 b(la)h(b)q(onne)g(in)o(terruption)i(\(v)o(enan)o
(t)e(du)f(p)o(\023)-18 b(eriph)o(\023)g(erique\))200
235 y(10.)21 b(mise)13 b(\022)-19 b(a)13 b(jour)g(de)g(la)g(table)h
(des)f(pages)g(et)g(d'autres)g(pages)g(p)q(our)g(indiquer)j(que)d(la)g
(page)g(demand)o(\023)-18 b(ee)270 281 y(est)13 b(en)g(m)o(\023)-18
b(emoire)14 b(main)o(tenan)o(t.)200 350 y(11.)21 b(attendre)13
b(que)f(le)g(pro)q(cessus)h(soit)g(s)o(\023)-18 b(electionn)o(\023)g(e)
14 b(de)e(nouv)o(eau)h(p)q(our)g(utiliser)h(l'unit)o(\023)-18
b(e)13 b(cen)o(trale)g(\(cpu\))200 419 y(12.)21 b(c)o(harger)14
b(le)f(con)o(texte)h(du)f(pro)q(cessus)8 b(!)236 492
y(T)m(outes)k(ces)g(instructions)j(ne)d(son)o(t)g(pas)h(toujours)f(r)o
(\023)-18 b(ealis)o(\023)g(ees)14 b(\(on)e(p)q(eut)h(en)f(particulier)j
(supp)q(oser)e(que)179 537 y(l'on)g(ne)g(p)q(eut)g(pas)g(pr)o(\023)-18
b(eempter)14 b(l'unit)o(\023)-18 b(e)14 b(cen)o(trale,)g(mais)f(alors)h
(quelle)g(p)q(erte)f(de)g(temps)g(p)q(our)h(l'ensem)o(ble)179
583 y(du)f(syst)o(\022)-18 b(eme\).)236 632 y(Dans)14
b(tous)g(les)f(cas,)g(nous)h(dev)o(ons)g(au)f(moins)i(r)o(\023)-18
b(ealiser)14 b(les)g(3)f(actions)h(suiv)n(an)o(tes)9
b(:)230 750 y({)21 b(g)o(\023)-18 b(erer)13 b(l'in)o(terruption)230
819 y({)21 b(sw)o(app)q(er)14 b(la)f(page)h(demand)o(\023)-18
b(ee)230 888 y({)21 b(relancer)14 b(le)g(pro)q(cessus)179
961 y(Ce)d(qui)i(co)q(^)-20 b(ute)11 b(le)i(plus)f(c)o(her)g(est)g(la)g
(rec)o(herc)o(he)g(de)g(la)g(page)g(sur)g(le)g(disque)h(et)f(son)g
(transfert)f(en)h(m)o(\023)-18 b(emoire,)179 1006 y(ce)13
b(qui)h(prend)g(de)f(l'ordre)h(de)f(1)g(\022)-19 b(a)13
b(10)g(millisecon)q(des.)236 1101 y(Ce)f(qui)g(nous)g(donne)h(en)f
(prenan)o(t)g(une)g(vitesse)h(d'acc)o(\022)-18 b(es)12
b(m)o(\023)-18 b(emoire)12 b(de)g(1)f(microseconde)j(et)d(un)h(temps)
179 1147 y(de)h(gestion)h(de)g(page)f(de)g(5)g(milliseco)q(ndes)j(un)
536 1238 y(temps)d(e\013ectif)e(=)g(\(1)e Fr(\000)f Ft(p)p
FB(\))h(+)f Ft(p)h Fr(\002)f FB(5000)25 b(microsecondes)236
1332 y(Une)13 b(erreur)f(de)h(page)g(toutes)g(les)g(mille)h(pages)f
(nous)g(donne)h(un)e(temps)h(e\013ectif)g(onze)g(fois)g(plus)g(long)179
1378 y(que)g(l'acc)o(\022)-18 b(es)14 b(standard.)236
1473 y(Il)f(faut)e(r)o(\023)-18 b(eduire)14 b(\022)-19
b(a)12 b(moins)h(d'une)f(erreur)g(de)g(page)h(tout)f(les)h(100000)g
(acc)o(\022)-18 b(es)12 b(p)q(our)g(obtenir)i(une)e(d)o(\023)-18
b(egra-)179 1518 y(dation)14 b(inf)o(\023)-18 b(erieure)15
b(\022)-19 b(a)13 b(10)236 1568 y(On)j(comprend)g(bien)g(que)g(les)g(c)
o(hoix)g(\022)-19 b(a)16 b(faire)f(sur)h(des)g(pages)f(qu'il)i(faut)e
(placer)i(en)e(m)o(\023)-18 b(emoire)16 b(son)o(t)179
1613 y(donc)e(tr)o(\022)-18 b(es)12 b(imp)q(ortan)o(ts.)236
1708 y(Ces)e(c)o(hoix)i(deviennen)o(t)g(encore)e(plus)i(imp)q(ortan)o
(ts)f(quand)h(l'on)f(a)f(de)g(nom)o(breux)h(utilisateurs)i(et)d(qu'il)
179 1754 y(y)i(a)h(sur-allo)q(cation)j(de)d(la)g(m)o(\023)-18
b(emoire,)13 b(ex)o(\023)-18 b(ecution)15 b(concurren)o(te)e(de)g(6)g
(pro)q(cessus)h(de)f(la)g(taille)i(sup)o(\023)-18 b(erieure)179
1799 y(ou)12 b(\023)-18 b(egale)14 b(\022)-19 b(a)13
b(la)h(m)o(\023)-18 b(emoire)14 b(ph)o(ysique)8 b(!)236
1894 y(Si)k(l'on)g(supp)q(ose)g(de)f(plus)h(que)g(nos)f(6)g(programmes)
h(utilisen)o(t)h(dans)f(une)g(p)q(etite)f(s)o(\023)-18
b(equence)12 b(d'instruc-)179 1940 y(tions)j(toutes)g(les)g(pages)g(de)
g(leur)g(m)o(\023)-18 b(emoire)15 b(logique,)i(nous)e(nous)g(trouv)o
(ons)h(alors)f(dans)g(une)g(situation)179 1985 y(de)e(p)o(\023)-18
b(en)o(urie)15 b(de)e(pages)h(libres.)236 2080 y(Le)f(syst)o(\022)-18
b(eme)14 b(d'exploitation)i(p)q(eut)e(a)o(v)o(oir)g(recoure)f(\022)-19
b(a)13 b(plusieurs)j(solution)f(dans)f(ce)f(cas-l\022)-19
b(a)219 2152 y(1.)21 b(tuer)13 b(le)h(pro)q(cessus)g(fautif)g(...)219
2221 y(2.)21 b(utiliser)15 b(un)f(algorithme)h(de)e(remplacemen)o(t)i
(de)e(page)236 2294 y(Cet)g(algorithme)i(de)e(remplacemen)o(t)h(est)f
(in)o(tro)q(duit)i(dans)f(notre)f(s)o(\023)-18 b(equence)14
b(de)f(gestion)h(d'erreur)f(de)179 2340 y(page)g(l\022)-19
b(a)14 b(o)q(\022)-20 b(u)13 b(l'on)h(s'attribuait)h(une)e(page)h
(libre)h(de)e(la)g(m)o(\023)-18 b(emoire)14 b(cen)o(trale.)236
2434 y(Main)o(tenan)o(t)i(il)f(nous)g(faut)f(s)o(\023)-18
b(electionner)16 b(une)f(victime,)g(c'est-\022)-19 b(a-dire,)14
b(une)g(des)h(pages)f(o)q(ccup)o(\023)-18 b(ees)15 b(de)179
2480 y(la)e(m)o(\023)-18 b(emoire)14 b(cen)o(trale)g(qui)g(sera)g(sw)o
(app)o(\023)-18 b(ee)13 b(sur)h(disque)g(et)f(remplac)o(\023)-18
b(ee)14 b(par)g(la)f(page)h(demand)o(\023)-18 b(ee.)236
2575 y(Remarquons)18 b(que)e(dans)g(ce)f(cas-l\022)-19
b(a)17 b(notre)f(temps)g(de)f(transfert)h(est)f(doubl)o(\023)-18
b(e,)17 b(comme)f(il)h(faut)e(\022)-19 b(a)16 b(la)179
2620 y(fois)d(lire)i(une)e(page)h(et)f(sauv)o(egarder)h(une)g(page)g
(sur)f(disque)i(\(le)e(temps)g(de)h(transfert)f(disque)h(est)f(ce)g
(qui)179 2666 y(est)g(le)g(plus)i(co)q(^)-20 b(uteux)14
b(dans)f(la)h(gestion)g(d'une)g(erreur)f(de)g(page\).)236
2761 y(Il)j(est)f(p)q(ossible)j(de)e(r)o(\023)-18 b(ealiser)17
b(des)f(syst)o(\022)-18 b(emes)16 b(de)f FC(demand)i(segmen)o(ts)p
FB(,)f(mais)g(le)g(lecteur)g(a)o(vis)o(\023)-18 b(e)17
b(re-)179 2806 y(marquera)d(rapidemen)o(t)g(les)g(probl)o(\022)-18
b(emes)15 b(p)q(os)o(\023)-18 b(es)13 b(par)h(la)g(taille)h(v)n
(ariable)g(des)e(segmen)o(ts.)p eop
%%Page: 71 79
71 78 bop 75 50 a Fz(9.2.)26 b(LES)14 b(ALGORITHMES)g(DE)g(REMPLA)o
(CEMENT)g(DE)g(P)m(A)o(GE)562 b FD(71)179 166 y Fv(9.2)66
b(Les)22 b(algorithmes)h(de)f(remplacemen)n(t)i(de)e(page)236
249 y FB(Un)13 b(algorithme)i(de)f(remplacemen)o(t)g(de)f(page)h(doit)g
(minimiser)h(le)f(nom)o(bre)f(de)h(P)o(age)f(F)m(aults.)236
340 y(On)f(rec)o(herc)o(he)h(l'algorithme)i(qui)e(r)o(\023)-18
b(eduit)13 b(au)g(mieux)g(la)g(probabilit)o(\023)-18
b(e)15 b(d'o)q(ccurrence)e(d'une)g(erreur)f(de)179 386
y(page.)179 432 y(Un)e(algorithme)j(est)d(\023)-18 b(ev)n(alu)o(\023)g
(e)11 b(en)g(prenan)o(t)h(une)f(c)o(ha)l(^)-15 b(\020ne)12
b(de)f(n)o(um)o(\023)-18 b(eros)11 b(de)g(page)g(et)g(en)f(comptan)o(t)
i(le)f(nom)o(bre)179 477 y(de)j(fautes)g(de)g(page)g(qui)h(on)o(t)e
(lieu)j(au)e(cours)g(de)g(cette)f(suite)i(d'acc)o(\022)-18
b(es,)14 b(et)f(cela)i(en)f(fonction)h(du)f(nom)o(bre)179
523 y(de)f(pages)h(de)f(m)o(\023)-18 b(emoire)14 b(cen)o(trale)g(don)o
(t)f(il)i(disp)q(ose.)236 614 y(P)o(our)c(illustrer)i(les)f
(algorithmes)g(de)f(remplacemen)o(t,)h(nous)f(utiliserons)j(la)d(suite)
h(de)f(pages)g(suiv)n(an)o(te)d(:)179 660 y
(7,0,1,2,0,3,0,4,2,3,0,3,2,1,2,0,1,7,0,1)179 706 y(et)13
b(3)g(pages)g(en)h(m)o(\023)-18 b(emoire)13 b(cen)o(trale.)179
816 y Fu(9.2.1)55 b(Le)18 b(remplacem)o(en)n(t)e(optimal)236
886 y FB(Utiliser)f(comme)e(victime)i(la)e(page)h(qui)g(ne)f(sera)h
(pas)f(utilis)o(\023)-18 b(ee)15 b(p)q(endan)o(t)g(le)e(plus)i
(longtemps.)236 931 y(Soit)f(p)q(our)g(notre)f(suite)8
b(:)179 993 y FA(7xx)18 b(70x)h(701)f(201)h(-)g(203)f(-)i(243)e(-)h
(-203)f(-)h(-)h(201)e(-)h(-)h(-)f(701)f(-)i(-)179 1055
y FB(soit)14 b(seulemen)o(t)g(9)f(fautes)g(de)g(page.)236
1100 y(Mais)g(cet)f("algorithme")i(n'est)e(v)n(alable)h(que)g(dans)f
(un)g(cas)g(o)q(\022)-20 b(u)12 b(l'on)h(conna)l(^)-15
b(\020t)13 b(\022)-19 b(a)12 b(l'a)o(v)n(ance)h(les)f(b)q(esoins,)179
1146 y(ce)h(qui)h(n'est)f(g)o(\023)-18 b(en)o(\023)g(eralemen)o(t)14
b(pas)g(le)f(cas.)179 1256 y Fu(9.2.2)55 b(Le)18 b(remplacem)o(en)n(t)e
(p)r(eps)i(\(FIF)n(O\))236 1326 y FB(L'algorithme)d(le)f(plus)g(simple)
h(est)e(Premier)g(En)o(tr)o(\023)-18 b(e)14 b(Premier)f(Sorti)h
(\(First-In-First-Out)g(\).)236 1417 y(Quand)d(une)g(victime)h(doit)e
(^)-18 b(etre)10 b(s)o(\023)-18 b(electionn)o(\023)g(ee)12
b(c'est)e(la)h(page)g(la)g(plus)g(ancienne)h(qui)f(est)f(s)o(\023)-18
b(electionn)o(\023)g(ee.)236 1509 y(Soit)14 b(p)q(our)g(la)g(liste)179
1571 y FA(7,0,1,2,0)o(,3,)o(0,)o(4,2)o(,3)o(,0,)o(3,2)o(,1)o(,2,)o(0,)o
(1,7)o(,0)o(,1)179 1632 y FB(et)f(trois)g(page)h(de)f(m)o(\023)-18
b(emoire)14 b(cen)o(trale)8 b(:)179 1694 y FA(7XX/70X/7)o(01/)o(20)o
(1-2)o(01)o(/23)o(1/2)o(30)o(/43)o(0/)o(420)o(/4)o(23/)179
1740 y(023-023-0)o(23/)o(01)o(3/0)o(12)o(-01)o(2-0)o(12)o(/71)o(2/)o
(702)o(/7)o(01)179 1802 y FB(soit)14 b FC(Quinze)d FB(P)o(age)i(F)m
(aults.)236 1847 y(Ce)h(m)o(\023)-18 b(ecanisme)14 b(rapide)h(et)f
(simple)h(\022)-19 b(a)13 b(programmer)i(n'est)e(malheureusemen)o(t)j
(pas)e(tr)o(\022)-18 b(es)14 b(e\016cace.)f(Il)179 1893
y(existe)i(des)f(suites)h(de)g(pages)f(p)q(our)h(lesquelles)i(cet)d
(algorithme)i(fait)f(plus)g(de)f(page)h(faults)g(a)o(v)o(ec)f(quatre)
179 1939 y(pages)g(m)o(\023)-18 b(emoire)13 b(qu'a)o(v)o(ec)h(trois)7
b(!)13 b(\(par)g(exemple)8 b(:)k(1,2,3,4,1,2,5,1,2,3,4,5\).)179
2049 y Fu(9.2.3)55 b(Moins)19 b(r)o(\023)-27 b(ecemm)o(en)n(t)16
b(utilis)o(\023)-27 b(ee)16 b(LR)n(U.)236 2119 y FB(LR)o(U)d(\(Least)g
(Recen)o(tly)i(Used)e(page\).)179 2164 y(Nous)h(utilisons)j(ici)f(le)e
(vieilli)q(ssement)j(d'une)d(page)h(et)f(non)h(plus)g(l'ordre)g(de)f
(cr)o(\023)-18 b(eation)16 b(de)e(la)h(page.)g(On)179
2210 y(fait)c(le)h(pari)h(que)e(les)h(pages)g(qui)h(on)o(t)d(\023)-18
b(et)o(\023)g(e)11 b(r)o(\023)-18 b(ecemmen)o(t)12 b(utilis)o(\023)-18
b(ees)14 b(le)e(seron)o(t)f(dans)h(un)g(pro)q(c)o(he)g(a)o(v)o(enir,)g
(alors)179 2256 y(que)h(les)h(pages)g(qui)g(n'on)o(t)f(pas)f(\023)-18
b(et)o(\023)g(e)13 b(utilis)o(\023)-18 b(ees)16 b(depuis)f(longtemps)f
(ne)f(son)o(t)h(plus)g(utiles.)236 2301 y(Soit)g(p)q(our)g(notre)f
(suite)8 b(:)179 2363 y FA(7xx)18 b(70x)h(701)f(201)h(-)g(203)f(-)i
(403)e(402)g(432)h(032)f(-)i(-)f(132)f(-)h(102)g(-)g(107)g(-)179
2425 y FB(soit)14 b FC(Douze)e FB(P)o(age)h(F)m(aults.)236
2470 y(L'algorithme)18 b(LR)o(U)e(est)g(un)g(b)q(on)h(algorithme)h
(mais)f(il)g(p)q(ose)f(de)g(nom)o(breux)i(probl)o(\022)-18
b(emes)17 b(d'impl)o(\023)-18 b(e-)179 2516 y(men)o(tation)14
b(et)f(p)q(eut)h(demander)g(de)f(substan)o(tiels)j(outils)e(mat)o(\023)
-18 b(eriels.)236 2607 y(Des)14 b(solutions)h(logiciell)q(es)10
b(:)179 2669 y FC(Des)15 b(compteurs)21 b FB(\022)-19
b(a)12 b(c)o(haque)h(en)o(tr)o(\023)-18 b(ee)12 b(de)g(la)h(table)g
(des)f(pages,)h(on)f(a)r(joute)h(un)f(compteur)h(de)f(temps)g(qui)270
2715 y(est)i(mis)h(\022)-19 b(a)14 b(jour)g(\022)-19
b(a)14 b(c)o(haque)h(acc)o(\022)-18 b(es)14 b(\022)-19
b(a)14 b(la)h(page.)f(Il)g(faut)g(rec)o(herc)o(her)h(sur)f(l'ensem)o
(ble)i(de)e(la)h(table)g(la)270 2761 y(victime.)h(De)e(plus,)i(ces)f
(temps)f(doiv)o(en)o(t)h(^)-18 b(etre)15 b(mis)g(\022)-19
b(a)14 b(jour)h(quand)h(on)f(c)o(hange)g(de)g(table)g(de)g(page)270
2806 y(\(celle)f(d'un)g(autre)f(pro)q(cessus)i(...\).)c(On)i(ne)g(p)q
(eut)h(utiliser)h(le)f(temps)f(r)o(\023)-18 b(eel)13
b(...)p eop
%%Page: 72 80
72 79 bop 75 50 a FD(72)885 b Fz(CHAPITRE)14 b(9.)27
b(LA)14 b(M)1414 39 y(\023)1409 50 y(EMOIRE)g(VIR)m(TUELLE)179
166 y FC(Une)g(pile)19 b FB(\022)-19 b(a)16 b(c)o(haque)h(fois)g(que)f
(l'on)g(acc)o(\022)-18 b(ede)17 b(\022)-19 b(a)16 b(une)g(page,)g(la)h
(page)f(est)g(plac)o(\023)-18 b(ee)17 b(en)f(sommet)g(de)g(pile.)270
212 y(Le)e(dessus)h(est)f(toujours)h(la)g(page)g(la)g(plus)g(r)o(\023)
-18 b(ecemmen)o(t)15 b(utilis)o(\023)-18 b(ee)16 b(et)e(le)h(fond)g(de)
f(la)h(pile)h(la)e(moins)270 258 y(r)o(\023)-18 b(ecemmen)o(t)13
b(utilis)o(\023)-18 b(ee.)179 318 y FC(Des)15 b(masques)22
b FB(On)12 b(utilise)i(un)f(o)q(ctet)f(asso)q(ci)o(\023)-18
b(e)13 b(\022)-19 b(a)12 b(c)o(haque)h(page.)f(Le)g(syst)o(\022)-18
b(eme)12 b(p)q(ositionne)j(\022)-19 b(a)11 b(1)h(le)h(bit)f(de)270
364 y(p)q(oids)f(fort)e(\022)-19 b(a)10 b(c)o(haque)g(acc)o(\022)-18
b(es)10 b(\022)-19 b(a)10 b(la)g(page.)g(T)m(outes)f(les)i(N)e
(milliseconde)q(s)j(\(clic)o(k)f(d'horloge,)g(cf)e(clo)q(c)o(k,)h(N)270
410 y(=)i(100)g(sur)g(\014llmore\))i(le)e(syst)o(\022)-18
b(eme)12 b(fait)g(un)h(d)o(\023)-18 b(ecalage)13 b(\022)-19
b(a)12 b(droite)h(de)f(l'o)q(ctet)g(asso)q(ci)o(\023)-18
b(e)14 b(\022)-19 b(a)11 b(c)o(haque)i(page.)270 455
y(On)e(obtien)o(t)h(ainsi)h(un)f(historique)h(de)e(l'utilisati)q(on)j
(de)d(la)h(page.)f(L'o)q(ctet)g(\022)-19 b(a)11 b(00000000)i(indique)g
(que)270 501 y(la)i(page)g(n'a)f(pas)f(\023)-18 b(et)o(\023)g(e)14
b(utilis)o(\023)-18 b(ee)17 b(depuis)e(8)f(cycles,)h(11111111)h
(indique)g(que)f(la)f(page)h(a)e(\023)-18 b(et)o(\023)g(e)14
b(utilis)o(\023)-18 b(ee)270 547 y(p)q(endan)o(t)18 b(les)f(8)f
(cycles.)h(La)f(page)h(de)f(masque)h(11000100)h(\022)-19
b(a)15 b(\023)-18 b(et)o(\023)g(e)16 b(utilis)o(\023)-18
b(ee)19 b(plus)e(r)o(\023)-18 b(ecemmen)o(t)17 b(que)270
592 y(01110111.)c(Si)g(l'on)g(in)o(terpr)o(\022)-18 b(ete)13
b(ces)g(o)q(ctets)f(comme)g(des)h(en)o(tiers)g(non-sign)o(\023)-18
b(es,)14 b(c'est)d(la)i(page)g(a)o(y)o(an)o(t)270 638
y(le)i(plus)g(p)q(etit)g(o)q(ctet)f(qui)i(a)d(\023)-18
b(et)o(\023)g(e)14 b(utilis)o(\023)-18 b(ee)16 b(le)f(moins)g(r)o(\023)
-18 b(ecemmen)o(t)15 b(\(l'unicit)o(\023)-18 b(e)16 b(des)e(n)o(um)o
(\023)-18 b(eros)15 b(n')o(\023)-18 b(etan)o(t)270 684
y(pas)14 b(assur)o(\023)-18 b(ee,)13 b(la)h(s)o(\023)-18
b(election)15 b(en)o(tre)e(n)o(um)o(\023)-18 b(eros)14
b(iden)o(tiques)h(se)e(fait)h(a)o(v)o(ec)f(l'ordre)h(FIF)o(O\).)179
793 y Fu(9.2.4)55 b(L'algorithme)15 b(de)k(la)f(deuxi)o(\022)-27
b(eme)16 b(c)n(hance)236 863 y FB(Un)i(bit)f(asso)q(ci)o(\023)-18
b(e)19 b(\022)-19 b(a)17 b(c)o(haque)h(page)g(est)g(p)q(ositionn)o
(\023)-18 b(e)19 b(\022)-19 b(a)18 b(1)f(\022)-19 b(a)17
b(c)o(haque)h(fois)g(qu'une)g(page)g(est)f(utilis)o(\023)-18
b(ee)179 909 y(par)14 b(un)h(pro)q(cessus.)g(Av)n(an)o(t)f(de)g
(retirer)h(une)f(page)h(de)f(la)h(m)o(\023)-18 b(emoire,)14
b(on)g(v)n(a)h(essa)o(y)o(er)f(de)g(lui)i(donner)f(une)179
955 y(deuxi)o(\022)-18 b(eme)14 b(c)o(hance.)g(On)f(utilise)i(un)f
(algorithme)h(FIF)o(O)d(plus)j(la)e(deuxi)o(\022)-18
b(eme)15 b(c)o(hance)7 b(:)179 1000 y(Si)12 b(le)f(bit)h(d'utilisation)
j(est)c(\022)-19 b(a)11 b(0,)f(la)i(page)g(est)f(sw)o(app)o(\023)-18
b(ee)11 b(hors)h(m)o(\023)-18 b(emoire)12 b(\(elle)g(n'a)f(pas)g(\023)
-18 b(et)o(\023)g(e)10 b(utilis)o(\023)-18 b(ee)14 b(depuis)179
1046 y(la)f(derni)o(\022)-18 b(ere)15 b(demande)f(de)f(page\).)179
1092 y(Si)g(le)g(bit)g(est)f(\022)-19 b(a)13 b(1,)f(il)h(est)f(p)q
(ositionn)o(\023)-18 b(e)15 b(a)e(z)o(\023)-18 b(ero)12
b(et)g(l'on)h(c)o(herc)o(he)g(une)g(autre)g(victime.)g(Ainsi)h(cette)e
(page)h(ne)179 1137 y(sera)i(sw)o(app)o(\023)-18 b(ee)15
b(hors)g(m)o(\023)-18 b(emoire)15 b(que)h(si)f(toutes)g(les)g(autres)g
(pages)h(on)o(t)d(\023)-18 b(et)o(\023)g(e)15 b(utilis)o(\023)-18
b(ees,)17 b(et)d(utilisen)o(t)j(aussi)179 1183 y(leur)d(deuxi)o(\022)
-18 b(eme)14 b(c)o(hance.)236 1274 y(On)g(p)q(eut)g(v)o(oir)g(ceci)g
(comme)g(une)g(queue)g(circulaire,)i(o)q(\022)-20 b(u)13
b(l'on)i(a)o(v)n(ance)f(sur)f(les)i(pages)f(qui)g(on)o(t)g(le)g(bit)179
1320 y(\022)-19 b(a)13 b(1)h(\(en)g(le)g(p)q(ositionnan)o(t)i(\022)-19
b(a)14 b(z)o(\023)-18 b(ero\))13 b(jusqu'\022)-19 b(a)14
b(ce)g(que)g(l'on)g(trouv)o(e)g(une)g(page)g(a)o(v)o(ec)g(le)g(bit)g
(d'utilisati)q(on)j(\022)-19 b(a)179 1366 y(z)o(\023)h(ero.)179
1475 y Fu(9.2.5)55 b(Plus)19 b(fr)o(\023)-27 b(equemm)o(en)n(t)16
b(utilis)o(\023)-27 b(e)17 b(MFU)236 1545 y FB(Plus)d(fr)o(\023)-18
b(equemmen)o(t)14 b(Utilis)o(\023)-18 b(ee)8 b(:)179
1591 y(Comme)16 b(son)h(nom)g(l'indique,)i(c'est)d(la)h(fr)o(\023)-18
b(equence)17 b(d'utilisatio)q(n)i(qui)f(joue)e(au)h(lieu)h(de)f
(l'anciennet)o(\023)-18 b(e,)179 1636 y(mais)11 b(c'est)f(le)h(m)o(^)
-18 b(eme)10 b(m)o(\023)-18 b(ecanisme)12 b(que)f(LR)o(U.)f(Ces)g(deux)
h(algorithmes)h(de)f(LR)o(U)f(et)g(MFU)g(son)o(t)h(raremen)o(t)179
1682 y(utilis)o(\023)-18 b(es)15 b(car)e(trop)g(gourmands)h(en)f(temps)
h(de)f(calcul)h(et)f(di\016ciles)i(\022)-19 b(a)13 b(impl)o(\023)-18
b(emen)o(ter,)14 b(mais)g(ils)g(son)o(t)f(assez)179 1728
y(e\016caces.)179 1838 y Fu(9.2.6)55 b(Le)18 b(bit)g(de)g(salet)o(\023)
-27 b(e)18 b(\(Dirt)n(y)g(Bit\))236 1907 y FB(Remarquons)d(que)f(si)h
(il)f(existe)h(une)f(copie)g(iden)o(tique)i(sur)e(disque)h(\(zone)f(de)
g(sw)o(ap\))f(d'une)h(page)g(de)179 1953 y(m)o(\023)-18
b(emoire,)14 b(il)g(n'est)g(pas)g(n)o(\023)-18 b(ecessaire)15
b(dans)f(le)g(cas)g(d'un)g(sw)o(ap)q(out)g(de)f(sauv)o(egarder)i(la)f
(page)g(sur)g(disque,)179 1999 y(il)g(su\016t)f(de)g(la)h(lib)o(\023)
-18 b(erer.)179 2044 y(Le)12 b(bit)g(de)h(salet)o(\023)-18
b(e)13 b(p)q(ermet)f(d'indiquer)i(qu'une)f(page)g(est)f(\(ou)g(n'est)g
(plus\))h(conforme)g(\022)-19 b(a)12 b(la)g(page)h(en)f(zone)179
2090 y(de)h(sw)o(ap.)236 2136 y(Ce)h(bit)i(de)e(propret)o(\023)-18
b(e)16 b(est)e(utilis)o(\023)-18 b(e)17 b(dans)e(les)g(autres)g
(algorithmes,)i(on)e(c)o(hoisit)h(en)o(tre)f(deux)g(victimes)179
2181 y(p)q(ossibles)g(la)f(plus)g(propre,)g(c'est-\022)-19
b(a-dire)13 b(celle)i(qui)f(ne)f(n)o(\023)-18 b(ecessite)14
b(pas)g(de)f(sw)o(ap)q(out.)179 2312 y Fv(9.3)66 b(Allo)r(cation)23
b(de)g(pages)e(aux)i(pro)r(cessus)236 2394 y FB(Commen)o(t)13
b(r)o(\023)-18 b(epartir)14 b(les)g(pages)g(sur)f(les)h(di\013)o(\023)
-18 b(eren)o(ts)15 b(pro)q(cessus)f(et)f(le)g(syst)o(\022)-18
b(eme)s(?)179 2456 y FC(remplacemen)o(t)14 b(lo)q(cal)20
b FB(le)11 b(pro)q(cessus)i(se)e(v)o(oit)g(a\013ect)o(\023)-18
b(e)12 b(un)g(certain)g(nom)o(bre)g(de)f(pages)h(qu'il)g(v)n(a)f
(utiliser)270 2502 y(de)h(fa\030)-17 b(con)13 b(autonome,)f(son)h
(temps)f(d'ex)o(\023)-18 b(ecution)14 b(ne)e(d)o(\023)-18
b(ep)q(end)14 b(que)e(de)h(son)f(propre)h(comp)q(ortemen)o(t.)179
2562 y FC(remplacemen)o(t)h(global)19 b FB(le)d(comp)q(ortemen)o(t)g
(d'allo)q(cation)h(de)e(pages)h(aux)f(pro)q(cessus)i(d)o(\023)-18
b(ep)q(end)16 b(de)f(la)270 2608 y(c)o(harge)f(du)f(syst)o(\022)-18
b(eme)14 b(et)e(du)i(comp)q(ortemen)o(t)g(des)f(di\013)o(\023)-18
b(eren)o(ts)15 b(pro)q(cessus.)179 2669 y(Le)e(remplacemen)o(t)h(lo)q
(cal)h(demande)f(que)f(l'on)h(r)o(\023)-18 b(ealise)15
b(un)e(partage)h(en)o(tre)f(les)h(di\013)o(\023)-18 b(eren)o(ts)15
b(pro)q(cessus.)236 2761 y(Le)e(partage)h(")o(\023)-18
b(equitable")23 b(:)12 b(m)h(pages)h(de)g(m)o(\023)-18
b(emoire)14 b(ph)o(ysique,)h(n)e(pro)q(cessus,)h(m/n)g(pages)g(par)f
(pro-)179 2806 y(cessus)22 b(!)14 b(On)h(retrouv)o(e)h(ici)g(un)g
(probl)o(\022)-18 b(eme)16 b(pro)q(c)o(he)g(de)f(la)h(fragmen)o(tation)
h(in)o(terne,)e(un)h(grand)g(nom)o(bre)p eop
%%Page: 73 81
73 80 bop 75 50 a Fz(9.4.)26 b(L'APPEL)14 b(F)o(ORK)g(ET)g(LA)g(M)681
39 y(\023)676 50 y(EMOIRE)h(VIR)m(TUELLE)690 b FD(73)179
166 y FB(de)13 b(pages)h(est)f(donn)o(\023)-18 b(e)14
b(\022)-19 b(a)13 b(un)g(pro)q(cessus)i(qui)f(en)f(utilise)i
(e\013ectiv)o(emen)o(t)g(p)q(eu.)236 258 y(On)f(fait)g(un)g(p)q(eu)g
(mieux)h(en)f(utilisan)o(t)9 b(:)k Ft(S)i FB(=)c(\006)h
Ft(s)973 262 y Fd(i)999 258 y FB(o)q(\022)-20 b(u)14
b Ft(s)1071 262 y Fd(i)1098 258 y FB(est)g(le)g(nom)o(bre)g(de)g(pages)
g(de)g(la)h(m)o(\023)-18 b(emoire)179 304 y(logique)19
b(du)f(Pro)q(cessus)g(i.)g(Chaque)g(pro)q(cessus)h(se)e(v)o(oit)h
(attribu)o(\023)-18 b(e)19 b(\()p Ft(s)1226 308 y Fd(i)1239
304 y Ft(=S)r FB(\))p Ft(m)e FB(pages.)h(On)f(am)o(\023)-18
b(eliore)19 b(en)179 350 y(faisan)o(t)14 b(v)n(arier)g(ce)f(rapp)q(ort)
g(en)h(fonction)g(de)f(la)h(priorit)o(\023)-18 b(e)15
b(de)e(c)o(haque)h(pro)q(cessus.)179 497 y Fi(Probl)o(\022)-23
b(emes)9 b(d')o(\023)-23 b(ecroulemen)o(t)35 b FB(Si)10
b(le)g(nom)o(bre)h(de)e(pages)i(allou)o(\023)-18 b(ees)12
b(\022)-19 b(a)9 b(un)h(pro)q(cessus)h(non-prioritai)q(re)179
543 y(tom)o(b)q(e)k(en)f(dessous)i(de)f(son)g(minim)o(um)h(vital,)g(ce)
e(pro)q(cessus)i(est)f(constammen)o(t)g(en)g(erreur)g(de)g(page)21
b(:)179 589 y(il)14 b(passe)h(tout)f(son)g(temps)g(\022)-19
b(a)13 b(r)o(\023)-18 b(ealiser)15 b(des)f(demandes)h(de)f(pages.)g(Ce)
f(pro)q(cessus)i(doit)f(^)-18 b(etre)13 b(alors)h(\023)-18
b(eject)o(\023)g(e)179 634 y(en)o(ti)o(\022)g(eremen)o(t)14
b(en)f(zone)h(de)f(sw)o(ap)g(et)g(reviendra)i(plus)f(prioritaire)h
(quand)g(il)f(y)f(aura)g(de)h(la)f(place.)179 681 y(Un)j(exemple)h(de)f
(b)q(onne)h(et)e(mauv)n(aise)j(utilisation)h(des)d(pages)h(\(rapp)q(el)
g(les)f(compilateurs)j(c)c(allouen)o(t)179 726 y(les)i(tableaux)i(sur)e
(des)g(plages)h(d'adresse)g(croissan)o(te)g(con)o(tig)q(\177)-20
b(ues)19 b(in)o(t)e(m[A][B])f(est)g(un)i(tableau)g(de)f(A)179
772 y(tableaux)e(de)e(B)g(en)o(tiers\))20 b(:)179 838
y FA(/*)f(bonne)e(initialisa)o(tio)o(n)g(*/)179 883 y(int)h(m[2048][20)
o(48])o(;)179 929 y(main\(\))179 975 y({int)g(i,j;)179
1020 y(for\(i=0;i)o(<20)o(48)o(;i+)o(+\))336 1066 y(for\(j=0;j)o(<2)o
(048)o(;j+)o(+\))336 1112 y(m[i][j])f(=)i(1;)179 1157
y(})236 1222 y FB(ce)13 b(pro)q(cessus)i(acc)o(\022)-18
b(ede)13 b(a)g(une)h(nouv)o(elle)h(page)f(toute)f(les)h(2048)f
(a\013ectation.)179 1287 y FA(/*)19 b(mauvaise)d(initialisa)o(tio)o(n)g
(*/)179 1333 y(int)i(m[2048][20)o(48])o(;)179 1379 y(main\(\))179
1424 y({int)g(i,j;)179 1470 y(for\(i=0;i)o(<20)o(48)o(;i+)o(+\))336
1516 y(for\(j=0;j)o(<2)o(048)o(;j+)o(+\))336 1561 y(m[j][i])f(=)i(1;)
179 1607 y(})236 1672 y FB(ce)13 b(pro)q(cessus)i(acc)o(\022)-18
b(ede)13 b(a)g(une)h(nouv)o(elle)h(page)f(toute)f(les)h(a\013ectations)
8 b(!)179 1717 y(A)o(tten)o(tion)f(:)13 b(En)g FA(fortran)d
FB(l'allo)q(cation)16 b(des)e(tableaux)h(se)e(fait)g(dans)h(l'autre)f
(sens)h(par)f(colones)i(.)6 b(.)g(.)236 1810 y(Si)11
b(la)g(m)o(\023)-18 b(emoire)12 b(est)e(libre)i(et)e(assez)h(grande,)f
(les)h(deux)h(pro)q(cessus)f(son)o(t)g(grossi)o(\022)-18
b(eremen)o(t)12 b(aussi)f(rapides,)179 1855 y(par)j(con)o(tre)g(si)h
(on)f(lance)h(dix)g(exemplaires)h(du)e(premier,)h(le)f(temps)g(d'atten)
o(te)h(est)e(juste)h(m)o(ultipli)o(\023)-17 b(e)16 b(par)179
1901 y(10.)d(P)o(our)h(le)g(deuxi)o(\022)-18 b(eme,)15
b(le)f(temps)g(d'atten)o(te)f(est)h(au)g(moins)g(m)o(ultipli)o(\023)-17
b(e)16 b(par)e(100)f(\(je)g(n'ai)i(pas)f(attendu)179
1946 y(la)f(\014n)h(de)f(l'ex)o(\023)-18 b(ecution\).)179
2081 y Fv(9.4)66 b(L'app)r(el)23 b(fork)g(et)f(la)h(m)o(\023)-32
b(emoire)21 b(virtuell)q(e)236 2166 y FB(Nous)13 b(a)o(v)o(ons)g(vu)g
(que)g(la)g(primitiv)o(e)h FA(fork\(\))c FB(r)o(\023)-18
b(ealise)14 b(une)f(copie)g(de)g(l'image)g(m)o(\023)-18
b(emoire)13 b(du)g(pro)q(cessus)179 2211 y(p)o(\022)-18
b(ere)11 b(p)q(our)h(cr)o(\023)-18 b(eer)11 b(le)g(pro)q(cessus)i
(\014ls.)e(Cette)g(copie)h(n'est)f(pas)h(in)o(t)o(\023)-18
b(egrale)12 b(car)g(les)f(deux)h(pro)q(cessus)g(p)q(euv)o(en)o(t)179
2257 y(partager)j(des)g(pages)g(marqu)o(\023)-18 b(ees)16
b(en)f(lecture)g(seule,)h(en)e(particulier)k(le)d(segmen)o(t)g(du)g(co)
q(de)g(est)g(partag)o(\023)-18 b(e)179 2303 y(par)13
b(les)h(deux)g(pro)q(cessus)g(\(r)o(\023)-18 b(een)o(trance)14
b(standard)g(des)f(pro)q(cessus)i(unix\).)236 2395 y(Mais)e(a)o(v)o(ec)
g(le)f(syst)o(\022)-18 b(eme)13 b(de)f(demand-paging,)j(on)d(p)q(eut)h
(in)o(tro)q(duire)h(une)f(nouv)o(elle)h(notion)g(qui)f(est)f(la)179
2440 y("copie)j(sur)f(\023)-18 b(ecriture")15 b(\(cop)o(y)g(on)g
(write\).)f(On)g(a)r(joute)g(\022)-19 b(a)15 b(la)g(structure)f(de)h
(page)g(de)f(la)h(table)g(des)g(pages)179 2486 y(des)f(indicateurs)i
(de)e("copie)h(sur)e(\023)-18 b(ecriture".)15 b(L'id)o(\023)-18
b(ee)14 b(est)f(de)h(r)o(\023)-18 b(ealiser)16 b(la)e(copie)h(de)f(la)g
(page)g(uniquemen)o(t)179 2532 y(dans)h(le)g(cas)g(o)q(\022)-20
b(u)14 b(l'un)h(des)g(pro)q(cessus)h(qui)f(p)q(euv)o(en)o(t)h(y)e(acc)o
(\022)-18 b(eder)15 b(r)o(\023)-18 b(ealise)16 b(une)e(\023)-18
b(ecriture.)15 b(Dans)h(ce)e(cas-l\022)-19 b(a,)179 2577
y(la)13 b(page)h(est)f(recopi)o(\023)-18 b(ee)14 b(a)o(v)n(an)o(t)g(l')
o(\023)-18 b(ecriture)14 b(et)f(le)g(pro)q(cessus)h(\023)-18
b(ecriv)n(ain)15 b(p)q(oss)o(\022)-18 b(ede)14 b(alors)g(sa)f(propre)h
(page.)236 2669 y(L'in)o(t)o(\023)-18 b(er)o(^)g(et)15
b(de)f(ce)g(m)o(\023)-18 b(ecanisme)15 b(est)f(surtout)g(visible)j
(dans)d(le)h(cas)f(tr)o(\022)-18 b(es)13 b(fr)o(\023)-18
b(equen)o(t)15 b(o)q(\022)-20 b(u)14 b(le)g FA(fork)e
FB(est)i(im-)179 2715 y(m)o(\023)-18 b(ediatemen)o(t)17
b(suivi)g(par)f(un)g FA(exec)p FB(.)e(En)h(e\013et,)h(ce)g(dernier)g(v)
n(a)g(r)o(\023)-18 b(ealiser)17 b(une)g(lib)o(\023)-18
b(eration)18 b(de)e(toutes)g(les)179 2761 y(pages,)d(il)h(est)f(donc)h
(in)o(utile)h(de)f(les)f(recopier)i(juste)e(a)o(v)n(an)o(t)g(cette)g
(lib)o(\023)-18 b(eration.)p eop
%%Page: 74 82
74 81 bop 75 50 a FD(74)885 b Fz(CHAPITRE)14 b(9.)27
b(LA)14 b(M)1414 39 y(\023)1409 50 y(EMOIRE)g(VIR)m(TUELLE)236
166 y FB(Le)h(syst)o(\022)-18 b(eme)16 b(BSD)f(a)h(in)o(tro)q(duit)h
(la)e(premi)o(\022)-18 b(ere)17 b(v)o(ersion)f(de)f(cette)g(id)o(\023)
-18 b(ee)16 b(en)g(partan)o(t)f(de)h(l'app)q(el)g(sys-)179
212 y(t)o(\022)-18 b(eme)11 b FA(vfork\(\))e FB(qui)k(lui)h(p)q(ermet)e
(le)g(partage)h(totale)f(de)g(toutes)h(les)f(pages)h(en)o(tre)f(le)g
(pro)q(cessus)h(p)o(\022)-18 b(ere)12 b(et)g(le)179 258
y(pro)q(cessus)i(\014ls)g(sans)g(aucune)h(copie.)f(L'in)o(t)o(\023)-18
b(er)o(^)g(et)13 b(est)g(de)h(p)q(ouv)o(oir)h(r)o(\023)-18
b(ealiser)15 b(rapidemen)o(t)g(un)e FA(execve)e FB(sans)179
303 y(a)o(v)o(oir)j(\022)-19 b(a)13 b(recopier)h(l'espace)g
(d'adressage)g(du)g(pro)q(cessus)g(p)o(\022)-18 b(ere.)179
483 y Fv(9.5)66 b(Pro)t(jection)22 b(de)h(\014c)n(hiers)g(en)f(m)o
(\023)-32 b(emoire)236 566 y FB(La)10 b(fonction)h FA(mmap)d
FB(p)q(ermet)i(la)g(pro)r(jection)h(de)f(\014c)o(hiers)h(en)e(m)o(\023)
-18 b(emoire.)11 b(Le)e(segmen)o(t)h(du)g(\014c)o(hier)h(indiqu)o(\023)
-18 b(e)179 612 y(est)17 b(plac)o(\023)-18 b(e)19 b(en)f(m)o(\023)-18
b(emoire)19 b(\022)-19 b(a)17 b(partir)i(de)f(l'adresse)h(indiqu)o
(\023)-18 b(ee.)19 b(Le)f(segmen)o(t)g(de)g(\014c)o(hier)h(p)q(eut)f
(ainsi)h(^)-18 b(etre)179 658 y(parcouru)14 b(par)f(des)h(acc)o(\022)
-18 b(es)13 b(par)g(adresse)h(sans)g(utiliser)h(de)e(commande)h(de)g
(lecture)g(ou)f(d')o(\023)-18 b(ecriture.)179 731 y FA(#include)16
b(<sys/mman.)o(h>)179 777 y(#include)g(<sys/types)o(.h>)179
868 y(void)i(*mmap\(voi)o(d)36 b(*adr,)18 b(int)g(len,)395
914 y(int)57 b(prot,)18 b(int)g(options,)395 959 y(int)57
b(desc,)18 b(int)g(offset\);)179 1051 y(int)g(munmap\(voi)o(d)f(*adr,)g
(int)i(len\);)236 1124 y FB(L'adresse)c FA(adr)f FB(indique)j(o)q(\022)
-20 b(u)15 b(doit)f(^)-18 b(etre)15 b(plac)o(\023)-18
b(e)15 b(le)g(\014c)o(hier,)h(cette)e(adresse)i(doit)e(^)-18
b(etre)15 b(une)g(adresse)g(de)179 1169 y(d)o(\023)-18
b(ebut)15 b(de)g(page)g(\(un)g(m)o(ultiple)h(de)f FA(sysconf\()p
871 1169 12 2 v 11 w(SC)p 922 1169 V 14 w(PAGE)p 1016
1169 V 12 w(SIZE\))p FB(\),)d(si)j(le)g(param)o(\022)-18
b(etre)15 b(est)g(NULL)e(alors)j(le)179 1215 y(syst)o(\022)-18
b(eme)15 b(s)o(\023)-18 b(electionne)17 b(l'adresse)f(de)g(placemen)o
(t)g(qui)g(est)f(retourn)o(\023)-18 b(ee)16 b(par)f(la)g(fonction.)h
(L'in)o(terv)n(alle)h(de)179 1261 y(p)q(osition)864 1306
y FA([offset,)f(offset+len])179 1352 y FB(du)d(\014c)o(hier)h
FA(desc)e FB(est)h(plac)o(\023)-18 b(e)14 b(en)f(m)o(\023)-18
b(emoire.)179 1398 y FA(prot)11 b FB(indique)16 b(les)d(protections)i
(d'acc)o(\022)-18 b(es)13 b(sous)h(HP-UX)e(les)i(protections)g(suiv)n
(an)o(tes)h(son)o(t)e(disp)q(onibl)q(e)d(:)179 1462 y
FA(---)97 b(PROT_NONE)179 1508 y(r--)g(PROT_READ)179
1554 y(r-x)g(PROT_READ)o(|P)o(ROT)o(_EX)o(EC)o(UTE)179
1599 y(rw)117 b(PROT_READ)o(|P)o(ROT)o(_WR)o(IT)o(E)179
1645 y(rwx)97 b(PROT_READ)o(|P)o(ROT)o(_WR)o(IT)o(E|P)o(RO)o(T_E)o(XE)o
(CUT)o(E)236 1709 y(options)6 b FB(indique)11 b(si)f(l'on)f(v)o(eut)g
(que)g(les)g(\023)-18 b(ecritures)10 b(r)o(\023)-18 b(ealis)o(\023)g
(ees)10 b(dans)g(les)f(pages)h(con)o(tenan)o(t)g(la)f(pro)r(jection)179
1754 y(soien)o(t)20 b(partag)o(\023)-18 b(ees)19 b(\(MAP)p
578 1754 V 14 w(SHARED\),)g(ou)g(au)g(con)o(traire)h(qu'une)g(copie)g
(sur)e(\023)-18 b(ecriture)19 b(soit)h(r)o(\023)-18 b(ealis)o(\023)g
(ee)179 1800 y(\(MAP)p 286 1800 V 14 w(PRIV)l(A)m(TE\).)236
1846 y(La)13 b(fonction)i FA(munmap)10 b FB(p)q(ermet)j(de)h(lib)o
(\023)-18 b(erer)14 b(la)g(zone)f(m)o(\023)-18 b(emoire)14
b(d'adresse)g FA(adr)e FB(et)h(de)g(longueur)i FA(len)p
FB(.)236 1893 y(P)o(our)f(une)f(autre)h(forme)f(de)g(m)o(\023)-18
b(emoire)14 b(partag)o(\023)-18 b(ee,)13 b(v)o(oir)h(le)f(c)o(hapitre)i
(15)e(sur)g(les)h(IPC.)236 1985 y(Un)f(exemple)i(d'utilisation)h(de)d
FA(mmap)f FB(p)q(our)h(copier)i(un)e(\014c)o(hier)8 b(:)179
2030 y FA(#include)16 b(<stdio.h>)179 2076 y(#include)g(<sys/types)o
(.h>)179 2121 y(#include)g(<sys/stat.)o(h>)179 2167 y(#include)g
(<sys/mman.)o(h>)179 2213 y(#include)g(<fcntl.h>)179
2304 y(int)i(main\(int)f(argc,char)f(*argv[]\))179 2350
y Fr(f)218 2395 y FA(int)i(fdin,fdout;)218 2441 y(struct)f(stat)h
(statbuf;)218 2487 y(char)g(*src,*dst;)218 2532 y(if)h(\(argc)t(!=)g
(3\))257 2578 y Fr(f)296 2624 y FA(fprintf\(std)o(er)o(r,")o(usa)o(ge)o
(:)e(\045s)h(source)g(destinati)o(on)e(",argv[0]\))o(;)296
2669 y(exit\(-1\);)257 2715 y Fr(g)218 2761 y FA(if)j(\(\(fdin)e(=)i
(open\(argv[1)o(],)d(O)p 750 2761 V 14 w(RDONLY\)\))g(<0\))257
2806 y Fr(f)p eop
%%Page: 75 83
75 82 bop 75 50 a Fz(9.5.)26 b(PR)o(OJECTION)15 b(DE)f(FICHIERS)g(EN)g
(M)863 39 y(\023)858 50 y(EMOIRE)766 b FD(75)296 166
y FA(fprintf\(std)o(er)o(r,")o(imp)o(os)o(sib)o(le)16
b(d)p Fr(n)p FA('ouvrir:)g(\045s)j(en)g(lecture)e(",argv[1])o(\);)296
212 y(exit\(-2\);)257 258 y Fr(g)218 303 y FA(if)i(\(\(fdout)e(=)i
(open\(argv[)o(2])o(,)e(O)p 770 303 12 2 v 13 w(RDWR|O)p
903 303 V 12 w(CREAT|O)p 1055 303 V 12 w(TRUNC,06)o(66\))o(\))g(<0\))
257 349 y Fr(f)296 395 y FA(fprintf\(std)o(er)o(r,")o(imp)o(os)o(sib)o
(le)f(d)p Fr(n)p FA('ouvrir:)g(\045s)j(en)g(ecriture)e(",argv[2)o(]\);)
296 440 y(exit\(-3\);)257 486 y Fr(g)218 532 y FA(if)i(\(fstat\(fd)o
(in,)o(&s)o(tat)o(buf)o(\))d(<0)j(\))257 577 y Fr(f)296
623 y FA(fprintf\(std)o(er)o(r,")o(imp)o(os)o(sib)o(le)d(de)j(faire)f
(stat)g(sur)38 b(\045s)19 b(",argv[1)o(]\);)296 669 y(exit\(-4\);)257
714 y Fr(g)218 760 y FA(if)g(\(lseek\(fd)o(out)o(,)d(statbuf.st)p
753 760 V 11 w(size)i(-1)h(,)g(SEEK)p 1040 760 V 12 w(SET\))f(==)h(-1)g
(\))257 806 y Fr(f)296 851 y FA(fprintf\(std)o(er)o(r,")o(imp)o(os)o
(sib)o(le)d(de)j(lseek)37 b(\045s)19 b(",argv[2]\))o(;)296
897 y(exit\(-5\);)257 943 y Fr(g)218 988 y FA(if)g(\(write\(fd)o(out)o
(,")o(",1)o(\))s(!=)g(1\))257 1034 y Fr(f)296 1080 y
FA(fprintf\(std)o(er)o(r,")o(imp)o(os)o(sib)o(le)d(d)p
Fr(n)p FA('ecrire)h(sur)57 b(\045s)19 b(",argv[2]\))o(;)296
1125 y(exit\(-6\);)257 1171 y Fr(g)218 1217 y FA(if)g(\(\(src)f(=)h
(mmap)f(\(0,statbu)o(f.s)o(t)p 792 1217 V 11 w(size,)g(PROT)p
1001 1217 V 12 w(READ,)532 1262 y(MAP)p 594 1262 V 13
w(FILE)g(|)h(MAP)p 804 1262 V 13 w(SHARED,)e(fdin,0\)\))f(==)j(\(caddr)
p 1329 1262 V 12 w(t\))g(-1)g(\))257 1308 y Fr(f)296
1354 y FA(fprintf\(std)o(er)o(r,")o(imp)o(os)o(sib)o(le)d(de)j(mapper)
56 b(\045s)19 b(",argv[1]\))o(;)296 1399 y(exit\(-7\);)257
1445 y Fr(g)218 1491 y FA(if)g(\(\(dst)f(=)h(mmap)f(\(0,statbu)o(f.s)o
(t)p 792 1491 V 11 w(size,)g(PROT)p 1001 1491 V 12 w(READ)g(|)h(PROT)p
1230 1491 V 13 w(WRITE,)532 1536 y(MAP)p 594 1536 V 13
w(FILE)f(|)h(MAP)p 804 1536 V 13 w(SHARED,)e(fdout,0\)\))f(==)j
(\(caddr)p 1349 1536 V 12 w(t\))g(-1)f(\))257 1582 y
Fr(f)296 1628 y FA(fprintf\(std)o(er)o(r,")o(imp)o(os)o(sib)o(le)e(de)j
(mapper)56 b(\045s)19 b(",argv[2]\))o(;)296 1673 y(exit\(-8\);)257
1719 y Fr(g)218 1764 y FA(memcpy\(dst)o(,s)o(rc,)o(st)o(atb)o(uf.)o(st)
p 713 1764 V 10 w(size\);)f(/*)h(copie)e(*/)218 1856
y(exit\(0\);)179 1947 y Fr(g)236 2084 y FB(Programme)12
b(tr)o(\022)-18 b(es)10 b(rapide,)i(il)f(p)q(ourrait)h(^)-18
b(etre)10 b(encore)h(am)o(\023)-18 b(elior)o(\023)g(e)12
b(si)f(la)h(fonction)f FA(madvice)d FB(fonctionnait)179
2130 y(ce)13 b(commen)o(taire)h(n'est)f(plus)h(vrai)g(sur)f(la)h(v)o
(ersion)h(10.*)e(de)g(HPUX.)236 2221 y(A)o(tten)o(tion,)f(quand)h(v)o
(ous)f(utilisez)i FA(mmap)c FB(les)i(adresses)g(m)o(\023)-18
b(emoire)12 b(dans)g(la)h(zone)e(mapp)o(\023)-18 b(ee)13
b(ne)e(son)o(t)h(pas)179 2267 y(n)o(\023)-18 b(ecessairemen)o(t)15
b(bien)f(align)o(\023)-18 b(ees,)15 b(il)f(faut)f(faire)g(.)p
eop
%%Page: 76 84
76 83 bop 75 50 a FD(76)885 b Fz(CHAPITRE)14 b(9.)27
b(LA)14 b(M)1414 39 y(\023)1409 50 y(EMOIRE)g(VIR)m(TUELLE)p
eop
%%Page: 77 85
77 84 bop 1796 50 a FD(77)179 479 y Fw(Chapitre)32 b(10)179
688 y Fy(T)-10 b(ub)s(es)38 b(et)h(T)-10 b(ub)s(es)38
b(Nomm)m(\023)-56 b(es)236 901 y FB(Les)16 b(tub)q(es)f(son)o(t)h(un)f
(m)o(\023)-18 b(ecanisme)17 b(de)e(comm)o(unication)j(qui)e(p)q(ermet)g
(de)f(r)o(\023)-18 b(ealiser)17 b(des)e(comm)o(unica-)179
947 y(tions)h(en)o(tre)g(pro)q(cessus)h(sous)f(forme)f(d'un)h(\015ot)f
(con)o(tin)o(u)i(d'o)q(ctets.)f(Les)f(tub)q(es)h(son)o(t)g(un)g(des)e
(\023)-18 b(el)o(\023)g(emen)o(ts)179 993 y(de)17 b(l'agr)o(\023)-18
b(emen)o(t)18 b(d'utilisati)q(on)i(d'UNIX.)c(C'est)h(ce)g(m)o(\023)-18
b(ecanisme)19 b(qui)f(p)q(ermet)f(l'appro)q(c)o(he)i(\014ltre)f(de)g
(la)179 1038 y(conception)d(sous)e(UNIX.)236 1085 y(M)o(\023)-18
b(ecanisme)17 b(de)e(comm)o(unication)j(li)o(\023)-18
b(e)16 b(au)f(syst)o(\022)-18 b(eme)15 b(de)g(gestion)i(de)e(\014c)o
(hier,)h(les)f(tub)q(es)h(nomm)o(\023)-18 b(es)15 b(ou)179
1131 y(non)c(son)o(t)h(des)f(paires)h(d'en)o(tr)o(\023)-18
b(ees)11 b(de)g(la)h(table)g(des)f(\014c)o(hiers)h(ouv)o(erts,)f(asso)q
(ci)o(\023)-18 b(ees)13 b(\022)-19 b(a)11 b(une)g(ino)q(de)i(en)e(m)o
(\023)-18 b(emoire)179 1177 y(g)o(\023)g(er)o(\023)g(ee)15
b(par)h(un)f(driv)o(er)h(sp)o(\023)-18 b(eci\014que.)17
b(Une)e(en)o(tr)o(\023)-18 b(ee)16 b(est)f(utilis)o(\023)-18
b(ee)17 b(par)f(les)f(pro)q(cessus)i(qui)e(\023)-18 b(ecriv)o(en)o(t)16
b(dans)g(le)179 1222 y(tub)q(e,)d(une)h(en)o(tr)o(\023)-18
b(ee)13 b(p)q(our)h(les)f(lecteurs)h(du)g(tub)q(e.)179
1268 y FC(L'op)o(\023)-21 b(eration)14 b(de)h(lecture)f(y)h(est)h
(destructiv)o(e)7 b(!)236 1361 y(L'ordre)14 b(des)f(caract)o(\022)-21
b(eres)15 b(en)e(en)o(tr)o(\023)-21 b(ee)13 b(est)h(conserv)o(\023)-21
b(e)14 b(en)f(sortie)h(\(premier)f(en)o(tr)o(\023)-21
b(e)13 b(premier)179 1407 y(sortie\).)236 1499 y(Un)19
b(tub)q(e)h(a)g(une)f(capacit)o(\023)-21 b(e)19 b(\014nie)6
b(:)20 b(en)f(g)o(\023)-21 b(en)o(\023)g(eral)20 b(le)f(nom)o(bre)g
(d'adresses)i(directes)e(des)179 1545 y(ino)q(des)14
b(du)g(SGF)g(\(ce)h(qui)e(p)q(eut)i(v)n(arier)g(de)g(5)g(\022)-22
b(a)15 b(80)g(Ko\).)179 1683 y Fv(10.1)66 b(Les)22 b(tub)r(es)g
(ordinaires)i(\()p Fc(pip)l(e)p Fv(\))236 1768 y FB(Un)17
b(tub)q(e)g(est)g(mat)o(\023)-18 b(erialis)o(\023)g(e)19
b(par)e(deux)g(en)o(tr)o(\023)-18 b(ees)17 b(de)g(la)g(table)h(des)f
(ouv)o(ertures)h(de)e(\014c)o(hiers,)i(une)f(de)179 1814
y(ces)e(en)o(tr)o(\023)-18 b(ees)16 b(est)g(ouv)o(erte)g(en)e(\023)-18
b(ecriture)17 b(\(l'en)o(tr)o(\023)-18 b(ee)16 b(du)f(tub)q(e\),)h
(l'autre)g(en)g(lecture)g(\(la)g(sortie)g(du)g(tub)q(e\).)179
1860 y(Ces)d(deux)h(en)o(tr)o(\023)-18 b(ees)14 b(de)g(la)g(table)g
(des)g(\014c)o(hiers)h(ouv)o(erts)f(nous)g(donnen)o(t)g(le)g(nom)o(bre)
h(de)e(descripteurs)i(qui)179 1905 y(p)q(oin)o(ten)o(t)f(sur)g(elles.)g
(Ces)e(v)n(aleurs)j(p)q(euv)o(en)o(t)e(^)-18 b(etre)13
b(traduites)h(comme)7 b(:)179 1972 y FC(nom)o(bre)14
b(de)g(lecteurs)21 b FB(=)12 b(nom)o(bre)h(de)g(descripteurs)h(asso)q
(ci)o(\023)-18 b(es)14 b(\022)-19 b(a)12 b(l'en)o(tr)o(\023)-18
b(ee)13 b(ouv)o(erte)g(en)g(lecture.)p Fx(On)h(ne)270
2018 y(p)n(eut)e(p)n(as)g(\023)-19 b(e)n(crir)n(e)13
b(dans)f(un)h(tub)n(e)f(sans)h(le)n(cteur)p FB(.)179
2083 y FC(nom)o(bre)h(d')o(\023)-21 b(ecriv)n(ains)20
b FB(=)15 b(nom)o(bre)i(de)g(descripteurs)h(asso)q(ci)o(\023)-18
b(es)18 b(\022)-19 b(a)16 b(l'en)o(tr)o(\023)-18 b(ee)16
b(ouv)o(erte)h(en)f(\023)-18 b(ecriture.)17 b(La)270
2129 y(n)o(ullit)o(\023)-18 b(e)18 b(de)e(ce)g(nom)o(bre)g(d)o(\023)-18
b(e\014nit)17 b(le)g(comp)q(ortemen)o(t)f(de)g(la)h(primitiv)o(e)h
FA(read)c FB(lorsque)j(le)f(tub)q(e)h(est)270 2174 y(vide.)179
2312 y Fv(10.2)66 b(Cr)o(\023)-32 b(eation)21 b(de)i(tub)r(es)f
(ordinaires)236 2398 y FB(Un)12 b(pro)q(cessus)h(ne)f(p)q(eut)g
(utiliser)i(que)e(les)h(tub)q(es)f(qu'il)h(a)f(cr)o(\023)-18
b(e)o(\023)g(es)12 b(lui-m)o(^)-18 b(eme)13 b(par)f(la)g(primitiv)o(e)i
FA(pipe)c FB(ou)179 2443 y(qu'il)k(a)f(h)o(\023)-18 b(erit)o(\023)g(es)
14 b(de)f(son)h(p)o(\022)-18 b(ere)13 b(gr^)-19 b(ace)14
b(\022)-19 b(a)13 b(l'h)o(\023)-18 b(eritage)14 b(des)g(descripteurs)h
(\022)-19 b(a)13 b(tra)o(v)o(ers)g FA(fork)e FB(et)i
FA(exec)p FB(.)179 2557 y FA(#include)j(<unistd.h>)179
2603 y(int)i(pipe\(int)36 b(p[2]\);)236 2669 y FB(On)10
b(ne)g(p)q(eut)h(pas)f(manipuler)j(les)d(descripteurs)i(de)e(tub)q(es)h
(a)o(v)o(ec)f(les)h(fonctions)g(et)f(primitiv)o(es)f(:)g
FA(lseek,)179 2715 y(ioctl,)17 b(tcsetattr)11 b FB(et)k
FA(tcgetattr)p FB(,)c(comme)16 b(il)g(n'y)f(a)g(pas)h(de)f(p)o(\023)-18
b(eriph)o(\023)g(erique)18 b(asso)q(ci)o(\023)-18 b(e)16
b(au)g(tub)q(e)f(\(tout)179 2761 y(est)e(fait)g(en)g(m)o(\023)-18
b(emoire\).)p eop
%%Page: 78 86
78 85 bop 75 50 a FD(78)827 b Fz(CHAPITRE)15 b(10.)26
b(TUBES)15 b(ET)f(TUBES)h(NOMM)1791 39 y(\023)1786 50
y(ES)484 667 y
 currentpoint currentpoint translate 0.58098 0.58098 scale neg exch
neg exch translate
 484 667 a 14 w @beginspecial 0 @llx 0
@lly 387 @urx 224 @ury 3870 @rwi @setspecial
%%BeginDocument: eps/tube1.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
0 0 386.821594 223.299011 rectclip
-211.283798 -312 translate
211.283798 312 386.821594 223.299011 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 47.000004 484.000061 108 -26 0.318519 0 0 0.59077 237.113419 173.56012 sc6mt astore rstroke
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 47.000004 458.000061 108 -26 0.318519 0 0 0.59077 237.113419 173.56012 sc6mt astore rstroke
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 47.000004 432.000061 108 -26 0.318519 0 0 0.59077 237.113419 173.56012 sc6mt astore rstroke
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 47.000004 406.000061 108 -26 0.318519 0 0 0.59077 237.113419 173.56012 sc6mt astore rstroke
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 47.000004 380.000061 108 -26 0.318519 0 0 0.59077 237.113419 173.56012 sc6mt astore rstroke
/crlinw 1.9 def
/usedash true def
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore -3.051758e-05 -268 310.000031 559 0.8 0 0 0.8 64.883789 79.492599 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(processus A ) [10.007999 0 5.993999 0 10.007999 0 9 0 10.008003 0 9 0 9 0 10.007996 0 9 0 5.003998 0 12.005997 0 0 0] 34.000004 534 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 184.883789 93.092606] dotx
/txtdraw true def
/txlndraw true def
( ) [0 0] 228.000015 547 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 64.883789 78.692604] dotx
/txtdraw true def
/txlndraw true def
(Dans le noyau ) [12.995998 0 10.007999 0 10.007999 0 9 0 5.003998 0 3.996002 0 10.008003 0 5.003998 0 10.007996 0 9.468002 0 8.639999 0 10.007996 0 10.007996 0 0 0] 34.000004 534 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 338.483795 69.092606] dotx
/crlinw 1 def
/usedash false def
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 47.000004 484.000061 108 -26 0.925926 0 0 0.8 286.165283 53.892605 sc6mt astore rstroke
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 47.000004 458.000061 108 -26 0.925926 0 0 0.8 286.165283 53.892605 sc6mt astore rstroke
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 47.000004 432.000061 108 -26 0.925926 0 0 0.8 286.165283 53.892605 sc6mt astore rstroke
( 1 ) [5.003998 0 10.007996 0 0 0] 49.499985 414.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 292.083801 53.892605] dotx
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 47.000004 406.000061 108 -26 0.925926 0 0 0.8 286.165283 53.892605 sc6mt astore rstroke
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 47.000004 380.000061 108 -26 0.925926 0 0 0.8 286.165283 53.892605 sc6mt astore rstroke
( 1 ) [5.003998 0 10.007996 0 0 0] 49.499985 362.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 292.083801 53.892605] dotx
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 47.000004 484.000061 108 -26 0.8 0 0 0.8 447.283783 49.092579 sc6mt astore rstroke
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 47.000004 458.000061 108 -26 0.8 0 0 0.8 447.283783 49.092579 sc6mt astore rstroke
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 47.000004 432.000061 108 -26 0.8 0 0 0.8 447.283783 49.092579 sc6mt astore rstroke
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 47.000004 406.000061 108 -26 0.8 0 0 0.8 447.283783 49.092579 sc6mt astore rstroke
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 47.000004 380.000061 108 -26 0.8 0 0 0.8 447.283783 49.092579 sc6mt astore rstroke
/crlinw 1.9 def
/crendarw true def
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 62.093567 -35.358826 257 429 0.8 0 0 0.8 64.883789 78.692604 sc6mt astore ssl
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 70.837402 14.685791 449 394 0.8 0 0 0.8 64.883789 78.692604 sc6mt astore ssl
(descripteurs ) [10.007999 0 10.007999 0 9 0 9 0 6.264 0 3.996 0 10.007999 0 5.003998 0 10.007999 0 10.007999 0 5.994003 0 9 0 0 0] -24.148996 258.999939 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 246.483795 260.292603] dotx
(inodes en m\335moire ) [3.995998 0 10.007999 0 10.007999 0 10.007999 0 10.007999 0 9 0 5.004 0 10.007999 0 10.007999 0 5.004 0 14.993999 0 10.007999 0 14.993996 0 10.007996 0 3.996002 0 5.994003 0 10.007996 0 0 0] -51.526993 258.999939 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 515.283813 242.692566] dotx
/crlinw 1 def
/crendarw false def
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 47.000004 484.000061 108 -26 0.925926 0 0 0.8 286.165283 -50.107391 sc6mt astore rstroke
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 47.000004 484.000061 108 -26 0.318519 0 0 0.59077 237.113419 95.960114 sc6mt astore rstroke
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 47.000004 458.000061 108 -26 0.318519 0 0 0.59077 237.113419 95.960114 sc6mt astore rstroke
/crlinw 0 def
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 0 -155 354 454 0.8 0 0 0.8 64.883789 78.692604 sc6mt astore ssl
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 0 -155 382 454 0.8 0 0 0.8 64.883789 78.692604 sc6mt astore ssl
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 0 -155 429 454 0.8 0 0 0.8 64.883789 78.692604 sc6mt astore ssl
/crlinw 1.9 def
/crendarw true def
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 65.377441 56.542664 448 337 0.8 0 0 0.8 64.883789 78.692604 sc6mt astore ssl
(rd ) [5.994003 0 10.007996 0 0 0] 125 244 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 252.883789 189.892609] dotx
(wr ) [12.996002 0 5.994003 0 0 0] 125 244 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 251.283798 149.092606] dotx
(p[0] ) [10.007996 0 5.003998 0 10.007996 0 5.003998 0 0 0] 169 287 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 88.083786 187.492615] dotx
(p[1] ) [10.007996 0 5.003998 0 10.007996 0 5.003998 0 0 0] 90 406 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 150.483795 46.6926] dotx
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 64.273865 -23.13858 255 370 0.8 0 0 0.8 64.883789 78.692604 sc6mt astore ssl
(2  0 ) [10.007996 0 5.004028 0 5.004028 0 10.007996 0 0 0] 590 402 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [0.8 0 0 0.8 19.283787 79.492599] dotx
/crlinw 0 def
/crendarw false def
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 1 -129 549 447 0.8 0 0 0.8 64.883789 78.692604 sc6mt astore ssl
0.8 0 0 0.8 80.883789 84.292603 sc4mt astore 0.8 0 0 0.8 80.883789 84.292603 sc5mt astore 1 -129 568 447 0.8 0 0 0.8 64.883789 78.692604 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(pipe\(p\) ) [8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 0 0] 333 227 /Courier [ 14 1 mul 0 0 14 0 0 ] [0.8 0 0 0.8 -48.716217 321.09259] dotx
end
grestore
%%EndDocument
 @endspecial 484 667 a
 currentpoint currentpoint translate 1 0.58098 div 1 0.58098 div scale
neg exch neg exch translate
 484 667 a 666 758 a Fq(Fig.)e
FD(10.1)g({)g Fp(Ouvertur)n(e)i(d'un)g(tub)n(e)484 1357
y
 currentpoint currentpoint translate 0.53569 0.53569 scale neg exch
neg exch translate
 484 1357 a 14 w @beginspecial 0 @llx 0 @lly 420 @urx
246 @ury 4200 @rwi @setspecial
%%BeginDocument: eps/tube2.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
0 0 419.902405 245.301758 rectclip
-101.527466 -278.723938 translate
101.527466 278.723938 419.902405 245.301758 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2.412863e-35 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 47.000004 432.000061 108 -26 0.398148 2.215148e-08 -4.108527e-08 0.738462 197.814514 153.852081 sc6mt astore rstroke
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 47.000004 406.000061 108 -26 0.398148 2.215148e-08 -4.108527e-08 0.738462 197.814514 153.852081 sc6mt astore rstroke
/crlinw 1.9 def
/usedash true def
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore -2 -230 281 509 1 0 0 1 0 0 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(processus A ) [10.007999 0 5.993999 0 10.007999 0 9 0 10.008003 0 9 0 9 0 10.007996 0 9 0 5.003998 0 12.005997 0 0 0] 34.000004 534 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 5.563626e-08 -5.563626e-08 1 70.527466 -28.732298] dotx
/crlinw 1 def
/usedash false def
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 47.000004 458.000061 108 -26 1.157407 6.439382e-08 -5.563626e-08 1 244.129318 11.267704 sc6mt astore rstroke
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 47.000004 432.000061 108 -26 1.157407 6.439382e-08 -5.563626e-08 1 244.129318 11.267704 sc6mt astore rstroke
( 2 ) [5.003998 0 10.007996 0 0 0] 49.499985 414.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 5.563626e-08 -5.563626e-08 1 251.527481 11.267704] dotx
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 47.000004 406.000061 108 -26 1.157407 6.439382e-08 -5.563626e-08 1 244.129318 11.267704 sc6mt astore rstroke
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 47.000004 380.000061 108 -26 1.157407 6.439382e-08 -5.563626e-08 1 244.129318 11.267704 sc6mt astore rstroke
( 2 ) [5.003998 0 10.007996 0 0 0] 49.499985 362.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 5.563626e-08 -5.563626e-08 1 251.527481 11.267704] dotx
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 47.000004 484.000061 108 -26 0.715005 3.97802e-08 -5.563626e-08 1 409.922241 -7.732293 sc6mt astore rstroke
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 47.000004 458.000061 108 -26 0.715005 3.97802e-08 -5.563626e-08 1 409.922241 -7.732293 sc6mt astore rstroke
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 47.000004 432.000061 108 -26 0.712963 3.966659e-08 -5.563626e-08 1 410.238739 -7.732293 sc6mt astore rstroke
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 47.000004 406.000061 108 -26 0.712963 3.966658e-08 -5.563626e-08 1 410.238739 -7.732293 sc6mt astore rstroke
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 47.000004 380.000061 108 -26 0.712963 3.96666e-08 -5.563626e-08 1 410.238708 -7.732293 sc6mt astore rstroke
/crlinw 1.9 def
/crendarw true def
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 51.328888 -25.638214 233 465 1 0 0 1 0 0 sc6mt astore ssl
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore -2.858505 18.94809 232.559067 470.77948 1.192488e-08 -1 1 1.192488e-08 -53.252045 668.826782 sc6mt astore ssl
(inodes ) [3.996 0 10.007999 0 10.007999 0 10.008001 0 10.007999 0 9 0 0 0] -1.513996 258.999939 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 5.563626e-08 -5.563626e-08 1 458.527435 227.76767] dotx
/crlinw 1 def
/crendarw false def
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 47.000004 484.000061 108 -26 0.398148 2.215148e-08 -4.108527e-08 0.738462 197.814514 76.852112 sc6mt astore rstroke
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 47.000004 458.000061 108 -26 0.398148 2.215148e-08 -4.108527e-08 0.738462 197.814514 76.852112 sc6mt astore rstroke
/crlinw 0 def
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 1 -103 323 470 1 0 0 1 0 0 sc6mt astore ssl
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 1 -100 350 469 1 0 0 1 0 0 sc6mt astore ssl
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 0 -102 397 470 1 0 0 1 0 0 sc6mt astore ssl
/crlinw 1.9 def
/crendarw true def
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore -43.643692 29.793152 291.059052 463.77951 1.192488e-08 -1 1 1.192488e-08 -53.252045 668.826782 sc6mt astore ssl
(rd ) [5.994003 0 10.007996 0 0 0] 125 244 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 5.563626e-08 -5.563626e-08 1 203.527466 181.2677] dotx
(wr ) [12.996002 0 5.994003 0 0 0] 125 244 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 5.563626e-08 -5.563626e-08 1 201.527466 130.2677] dotx
(p[0] ) [10.007996 0 5.003998 0 10.007996 0 5.003998 0 0 0] 169 287 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 5.563626e-08 -5.563626e-08 1 11.527466 171.2677] dotx
(p[1] ) [10.007996 0 5.003998 0 10.007996 0 5.003998 0 0 0] 90 406 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 5.563626e-08 -5.563626e-08 1 89.527473 -4.732298] dotx
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 54.861877 -20.706726 236 407 1 0 0 1 0 0 sc6mt astore ssl
/crlinw 1 def
/crendarw false def
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 47.000004 484.000061 108 -26 0.398148 2.215148e-08 -4.108527e-08 0.738462 199.814514 1.852112 sc6mt astore rstroke
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 47.000004 458.000061 108 -26 0.398148 2.215148e-08 -4.108527e-08 0.738462 199.814514 1.852112 sc6mt astore rstroke
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 47.000004 432.000061 108 -26 0.398148 2.215148e-08 -4.108527e-08 0.738462 199.814514 1.852112 sc6mt astore rstroke
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 47.000004 406.000061 108 -26 0.398148 2.215148e-08 -4.108527e-08 0.738462 199.814514 1.852112 sc6mt astore rstroke
(processus B  fils de A ) [10.007999 0 5.993999 0 10.007999 0 9 0 10.008003 0 9 0 9 0 10.007996 0 9 0 5.003998 0 12.005997 0 -99.035995 -20.807983 5.004002 0 5.003998 0 3.995998 0 3.995998 0 9 0 5.003998 0 10.007996 0 10.007996 0 5.003998 0 12.005997 0 0 0] 34.000004 534 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 5.563626e-08 -5.563626e-08 1 68.527496 -167.7323] dotx
/txtdraw true def
/txlndraw true def
( ) [0 0] 228.000015 547 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 5.563626e-08 -5.563626e-08 1 -38.472511 -172.7323] dotx
/txtdraw true def
/txlndraw true def
(p[0] ) [10.007996 0 5.003998 0 10.007996 0 5.003998 0 0 0] 169 287 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 5.563626e-08 -5.563626e-08 1 13.527481 57.2677] dotx
(p[1] ) [10.007996 0 5.003998 0 10.007996 0 5.003998 0 0 0] 90 406 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 5.563626e-08 -5.563626e-08 1 96.527481 -119.7323] dotx
/crlinw 1.9 def
/usedash true def
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 135 -1 148 386 1 0 0 1 2 2 sc6mt astore ssl
/usedash false def
/crendarw true def
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 50.017853 71.909058 241 292 1 0 0 1 0 0 sc6mt astore ssl
(2  0 ) [10.007996 0 5.004028 0 5.004028 0 10.007996 0 0 0] 590 402 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 5.563626e-08 -5.563626e-08 1 -138.472534 30.267698] dotx
/crlinw 0 def
/crendarw false def
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 130.440948 0.22052 192.559052 520.77948 1.192488e-08 -1 1 1.192488e-08 -53.252045 668.826782 sc6mt astore ssl
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 129.940948 0.22052 193.559052 539.77948 1.192488e-08 -1 1 1.192488e-08 -53.252045 668.826782 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(fork\(\) ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.400002 0 0 0] 74 465 /Courier [ 14 1 mul 0 0 14 0 0 ] [1 5.563626e-08 -5.563626e-08 1 42.653481 19.236206] dotx
/crlinw 1.9 def
/crendarw true def
1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc4mt astore 1 5.563626e-08 -5.563626e-08 1 -264.472504 -105.7323 sc5mt astore 57.164185 67.564728 237 354 1 0 0 1 0 0 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(ouvertures  de fichiers ) [10.007996 0 10.007996 0 8.549988 0 10.007996 0 6.713989 0 5.003998 0 10.007996 0 5.993988 0 10.007996 0 9 0 -85.301941 -20.808014 5.003998 0 10.007996 0 10.007996 0 5.003998 0 5.003998 0 3.996002 0 9 0 10.007996 0 3.996002 0 10.007996 0 5.993988 0 9 0 0 0] 400 449 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -108 48] dotx
end
grestore
%%EndDocument
 @endspecial 484 1357 a
 currentpoint currentpoint translate 1 0.53569 div 1 0.53569 div scale
neg exch neg exch translate
 484 1357 a 680 1449 a Fq(Fig.)e
FD(10.2)f({)i Fp(H)o(\023)-20 b(eritage)14 b(d'un)i(tub)n(e)236
1581 y FB(H)o(\023)-18 b(eritage)13 b(d'un)g(tub)q(e)f(dans)h(la)g
(\014gure)g(10.2)18 b(:)12 b(le)g(pro)q(cessus)i(B)e(h)o(\023)-18
b(erite)13 b(des)f(descripteurs)i(ouv)o(erts)f(par)179
1627 y(son)g(p)o(\022)-18 b(ere)14 b(A)e(et)h(donc,)g(ici,)h(du)g(tub)q
(e.)236 1673 y(Dans)g(la)f(Figure)h(10.3,)e(les)i(descripteurs)g(asso)q
(ci)o(\023)-18 b(es)15 b(aux)e(tub)q(es)g(son)o(t)g(plac)o(\023)-18
b(es)14 b(comme)f(descripteurs)i(0)179 1718 y(et)e(1)g(des)g(pro)q
(cessus)h(A)f(et)g(B,)f(c'est)h(\022)-19 b(a)13 b(dire)h(la)f(sortie)h
(de)f(A)g(et)g(l'en)o(tr)o(\023)-18 b(ee)13 b(de)g(B.)g(Les)g(autres)h
(descripteurs)179 1764 y(son)o(t)f(ferm)o(\023)-18 b(es)13
b(p)q(our)h(assurer)f(l'unicit)o(\023)-18 b(e)16 b(du)d(nom)o(bre)h(de)
f(lecteurs)h(et)f(d')o(\023)-18 b(ecriv)n(ains)15 b(dans)f(le)f(tub)q
(e.)p eop
%%Page: 79 87
79 86 bop 75 50 a Fz(10.3.)26 b(LECTURE)14 b(D)o(ANS)g(UN)g(TUBE)1066
b FD(79)484 771 y
 currentpoint currentpoint translate 0.68654 0.68654 scale neg exch
neg exch translate
 484 771 a 14 w @beginspecial 0 @llx
0 @lly 327 @urx 226 @ury 3270 @rwi @setspecial
%%BeginDocument: eps/tube3.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
0 0 326.655579 225.027985 rectclip
-120.798836 -252.730011 translate
120.798836 252.730011 326.655579 225.027985 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 47.000004 484.000061 108 -26 0.398148 0 0 0.738462 230.525269 105.642609 sc6mt astore rstroke
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 47.000004 458.000061 108 -26 0.398148 0 0 0.738462 230.525269 105.642609 sc6mt astore rstroke
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 47.000004 432.000061 108 -26 0.398148 0 0 0.738462 230.525269 105.642609 sc6mt astore rstroke
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 47.000004 406.000061 108 -26 0.398148 0 0 0.738462 230.525269 105.642609 sc6mt astore rstroke
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 47.000004 380.000061 108 -26 0.398148 0 0 0.738462 230.525269 105.642609 sc6mt astore rstroke
/crlinw 1.9 def
/usedash true def
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore -1 -211 324 475 1 0 0 1 0 0 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(processus A ) [10.007999 0 5.993999 0 10.007999 0 9 0 10.008003 0 9 0 9 0 10.007996 0 9 0 5.003998 0 12.005997 0 0 0] 34.000004 534 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 92.238235 -79.941772] dotx
/txtdraw true def
/txlndraw true def
( ) [0 0] 228.000015 547 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 -17.761766 -117.941772] dotx
/crlinw 1 def
/usedash false def
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 47.000004 484.000061 108 -26 0.970016 0 0 1 296.647491 -40.941772 sc6mt astore rstroke
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 47.000004 458.000061 108 -26 0.970016 0 0 1 296.647491 -40.941772 sc6mt astore rstroke
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 47.000004 432.000061 108 -26 0.970016 0 0 1 296.647491 -40.941772 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
( 1 ) [5.003998 0 10.007996 0 0 0] 49.500031 414.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 295.23822 -40.941772] dotx
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 47.000004 406.000061 108 -26 0.970016 0 0 1 296.647491 -40.941772 sc6mt astore rstroke
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 47.000004 380.000061 108 -26 0.970016 0 0 1 296.647491 -40.941772 sc6mt astore rstroke
( 1 ) [5.003998 0 10.007996 0 0 0] 49.500031 362.242065 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 295.23822 -40.941772] dotx
/crlinw 0 def
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 0.76178 -131.058228 363.23822 417.058228 1 0 0 1 3 27 sc6mt astore ssl
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 0.76178 -130.058228 391.23822 417.058228 1 0 0 1 3 27 sc6mt astore ssl
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 0.76178 -129.058228 417.23822 416.058228 1 0 0 1 3 27 sc6mt astore ssl
(rd ) [5.994003 0 10.007996 0 0 0] 125 244 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 247.23822 129.058228] dotx
(wr ) [12.996002 0 5.994003 0 0 0] 125 244 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 245.23822 78.058228] dotx
(1 ) [10.007996 0 0 0] 90 406 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 141.238235 23.058228] dotx
/crlinw 1.9 def
/crendarw true def
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 55.148865 -92.216125 274 406 1 0 0 1 3 27 sc6mt astore ssl
/crlinw 1 def
/crendarw false def
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 47.000004 484.000061 108 -26 0.398148 0 0 0.738462 238.525269 -4.357391 sc6mt astore rstroke
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 47.000004 458.000061 108 -26 0.398148 0 0 0.738462 238.525269 -4.357391 sc6mt astore rstroke
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 47.000004 432.000061 108 -26 0.398148 0 0 0.738462 238.525269 -4.357391 sc6mt astore rstroke
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 47.000004 406.000061 108 -26 0.398148 0 0 0.738462 238.525269 -4.357391 sc6mt astore rstroke
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 47.000004 380.000061 108 -26 0.398148 0 0 0.738462 238.525269 -4.357391 sc6mt astore rstroke
(processus B fils de A ) [10.007999 0 5.993999 0 10.007999 0 9 0 10.008003 0 9 0 9 0 10.007996 0 9 0 5.003998 0 12.005997 0 -99.035995 -20.807983 5.004002 0 3.995998 0 3.995998 0 9 0 5.003998 0 10.007996 0 10.007996 0 5.003998 0 12.005997 0 0 0] 34.000004 534 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 89.238235 -193.941772] dotx
(0 ) [10.007996 0 0 0] 169 287 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 74.238235 50.058228] dotx
/crlinw 1.9 def
/usedash true def
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 207.23822 -0.941772 118 337 1 0 0 1 3 27 sc6mt astore ssl
/usedash false def
/crendarw true def
1 0 0 1 61.236206 -6.811034 sc4mt astore 1 0 0 1 61.236206 -6.811034 sc5mt astore 44.482574 18.601807 283 319 1 0 0 1 3 27 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(close \(p[0]\) close \(p[1]\) ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 -100.799973 -14.769989 8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 0 0] 71 433 /Courier [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 55 -19] dotx
(close \(p[0]\) close \(p[1]\) ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 -100.799973 -14.769989 8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 0 0] 71 433 /Courier [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 51 -161] dotx
(dup2\(1,p[1]\) ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 0 0] 70 443 /Courier [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 58 -11] dotx
(dup2\(0,p[0]\) ) [8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.400002 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 8.399994 0 0 0] 70 443 /Courier [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 53 -148] dotx
/txtdraw true def
/txlndraw true def
(ouvertures ) [10.007996 0 10.007996 0 8.549988 0 10.007996 0 6.713989 0 5.003998 0 10.007996 0 5.993988 0 10.007996 0 9 0 0 0] 400 449 /Helvetica [ 18 1 mul 0 0 18 0 0 ] [1 0 0 1 -50 10] dotx
end
grestore
%%EndDocument
 @endspecial 484 771 a
 currentpoint currentpoint translate 1 0.68654 div 1 0.68654 div scale
neg exch neg exch translate
 484 771 a 75 863 a Fq(Fig.)13
b FD(10.3)g({)i Fp(R)n(e)n(dir)n(e)n(ction)f(de)i(la)f(sortie)g
(standar)n(d)g(de)h(A)f(dans)h(le)f(tub)n(e)h(et)f(de)h(l'entr)o(\023)
-20 b(e)n(e)14 b(standar)n(d)i(de)f(B)h(dans)75 912 y(le)f(tub)n(e,)f
(et)h(fermetur)n(e)f(des)h(descripteurs)f(inutiles)179
1045 y Fv(10.3)66 b(Lecture)23 b(dans)f(un)h(tub)r(e)236
1128 y FB(On)13 b(utilise)j(l'app)q(el)e(syst)o(\022)-18
b(eme)14 b FA(read)p FB(.)179 1190 y FA(int)k(nb_lu;)179
1236 y(nb_lu)f(=)j(read\(p[0])o(,)c(buffer,)h(TAILLE_REA)o(D\);)179
1298 y FB(Remarquer)d(que)f(la)h(lecture)g(se)f(fait)g(dans)h(le)g
(descripteur)g(p[0].)179 1389 y(Comp)q(ortemen)o(t)f(de)h(l'app)q(el)8
b(:)179 1451 y(Si)14 b(le)f(tub)q(e)h(n'est)25 b FC(pas)16
b(vide)c FB(et)h(con)o(tien)o(t)27 b FC(taille)11 b FB(caract)o(\022)
-18 b(eres)8 b(:)328 1497 y(lecture)14 b(de)f(n)o(b)p
548 1497 12 2 v 15 w(lu)h(=)e(min\(taille,)k(T)m(AILLE)p
978 1497 V 13 w(READ\))d(caract)o(\022)-18 b(eres.)179
1543 y(Si)14 b(le)f(tub)q(e)h(est)25 b FC(vide)328 1588
y FB(Si)14 b(le)f(nom)o(bre)h(d')o(\023)-18 b(ecriv)n(ains)15
b(est)e Fx(nul)448 1634 y FB(alors)h(c'est)e(la)i(\014n)f(de)h(\014c)o
(hier)g(et)f(n)o(b)p 979 1634 V 14 w(lu)h(est)f(n)o(ul.)328
1680 y(Si)h(le)f(nom)o(bre)h(d')o(\023)-18 b(ecriv)n(ains)15
b(est)e Fx(non)g(nul)567 1725 y FB(Si)h(lecture)g(blo)q(quan)o(te)h
(alors)f(sommeil)567 1771 y(Si)g(lecture)g(non)f(blo)q(quan)o(te)j
(alors)e(en)f(fonction)h(de)f(l'indicateur)567 1817 y
FA(O)p 589 1817 V 14 w(NONBLOCK)c FB(n)o(b)p 813 1817
V 15 w(lu=)14 b(-1)e(et)h(errno=EA)o(GAIN.)567 1862 y
FA(O)p 589 1862 V 14 w(NDELAY)d FB(n)o(b)p 774 1862 V
15 w(lu)j(=)g(0.)p eop
%%Page: 80 88
80 87 bop 75 50 a FD(80)827 b Fz(CHAPITRE)15 b(10.)26
b(TUBES)15 b(ET)f(TUBES)h(NOMM)1791 39 y(\023)1786 50
y(ES)179 166 y Fv(10.4)66 b(Ecriture)24 b(dans)e(un)h(tub)r(e)179
249 y FA(nb_ecrit)16 b(=)k(write\(p[)o(1],)c(buf,)i(n\);)236
318 y FB(L')o(\023)-18 b(ecriture)16 b(est)f(atomique)h(si)f(le)g(nom)o
(bre)h(de)f(caract)o(\022)-18 b(eres)15 b(\022)-19 b(a)14
b(\023)-18 b(ecrire)16 b(est)e(inf)o(\023)-18 b(erieur)17
b(\022)-19 b(a)15 b(PIPE)p 1586 318 12 2 v 14 w(BUF,)f(la)179
364 y(taille)h(du)e(tub)q(e)h(sur)f(le)h(syst)o(\022)-18
b(eme.)13 b(\(cf)f FA(<limits.h>)o FB(\).)179 433 y(Si)i(le)f(nom)o
(bre)h(de)f(lecteurs)h(est)f(n)o(ul)328 479 y(en)o(v)o(oi)h(du)g
(signal)h(SIGPIPE)e(\022)-19 b(a)13 b(l')o(\023)-18 b(ecriv)n(ain.)179
525 y(Sinon)328 570 y(Si)14 b(l')o(\023)-18 b(ecriture)14
b(est)f(blo)q(quan)o(te,)i(il)f(n'y)f(a)g(retour)h(que)f(quand)448
616 y(les)g(n)g(caract)o(\022)-18 b(eres)14 b(on)o(t)e(\023)-18
b(et)o(\023)g(e)12 b(\023)-18 b(ecrits)14 b(dans)g(le)f(tub)q(e.)328
662 y(Si)g(\023)-18 b(ecriture)14 b(non)g(blo)q(quan)o(te)448
707 y(Si)f(n)g Ft(>)g FB(PIPE)p 663 707 V 14 w(BUF,)g(retour)g(a)o(v)o
(ec)g(un)h(nom)o(bre)g(inf)o(\023)-18 b(erieur)14 b(\022)-19
b(a)13 b(n)566 753 y(\023)-18 b(ev)o(en)o(tuellemen)o(t)15
b(-1)7 b(!)448 799 y(Si)13 b(n)g Fr(\024)g FB(PIPE)p
663 799 V 14 w(BUF)567 844 y(et)g(si)g(n)h(emplacemen)o(ts)g(libres,)g
(\023)-18 b(ecriture)14 b(n)o(b)p 1229 844 V 14 w(ecrit)g(=)e(n)448
890 y(sinon)i(retour)f(-1)g(ou)h(0.)179 1021 y Fv(10.5)66
b(In)n(terblo)r(cage)22 b(a)n(v)n(ec)h(des)f(tub)r(es)236
1103 y FB(Un)15 b(m)o(^)-18 b(eme)14 b(pro)q(cessus)i(a)e(deux)h(acc)o
(\022)-18 b(es)15 b(\022)-19 b(a)14 b(un)h(tub)q(e,)g(un)g(acc)o(\022)
-18 b(es)15 b(en)f(lecture,)h(un)g(acc)o(\022)-18 b(es)15
b(en)e(\023)-18 b(ecriture)16 b(et)179 1149 y(essaie)c(de)g(lire)g(sur)
g(le)f(tub)q(e)h(vide)h(en)e(mo)q(de)h(blo)q(quan)o(t)h
Fr(\000)-6 b(!)11 b FB(le)h(pro)q(cessus)g(est)g(blo)q(qu)o(\023)-18
b(e)13 b(ind)o(\023)-18 b(e\014nimen)o(t)14 b(dans)179
1195 y(la)f(primitiv)o(e)j FA(read)p FB(.)236 1286 y(Av)o(ec)d(deux)h
(pro)q(cessus)8 b(:)179 1332 y(deux)k(tub)q(es)g(en)o(tre)f(les)h(deux)
g(pro)q(cessus,)h(tous)e(les)h(deux)g(blo)q(qu)o(\023)-18
b(es)14 b(en)d(lecture)h(ou)g(tous)g(les)g(deux)g(blo)q(qu)o(\023)-18
b(es)179 1377 y(en)12 b(\023)-18 b(ecriture,)14 b(tous)f(les)h(deux)g
(en)f(atten)o(te)g(d'une)h(action)g(de)f(l'autre)h(pro)q(cessus.)179
1508 y Fv(10.6)66 b(Les)22 b(tub)r(es)g(nomm)o(\023)-32
b(es)236 1591 y FB(Les)15 b(tub)q(e)f(nomm)o(\023)-18
b(es)15 b(son)o(t)g(des)f(tub)q(es)h(\()p FA(pipe)p FB(\))e(qui)i
(existen)o(t)g(dans)h(le)e(syst)o(\022)-18 b(eme)15 b(de)f(\014c)o
(hiers,)i(et)e(donc)179 1636 y(p)q(euv)o(en)o(t)f(^)-18
b(etre)13 b(ouv)o(erts)g(gr^)-19 b(ace)14 b(\022)-19
b(a)13 b(une)g(r)o(\023)-18 b(ef)o(\023)g(erence.)179
1682 y(Il)16 b(faut)f(pr)o(\023)-18 b(ealablemen)o(t)19
b(cr)o(\023)-18 b(eer)15 b(le)h(tub)q(e)g(nomm)o(\023)-18
b(e)16 b(dans)h(le)f(syst)o(\022)-18 b(eme)16 b(de)g(\014c)o(hiers,)g
(gr^)-19 b(ace)16 b(\022)-19 b(a)16 b(la)g(primitiv)o(e)179
1728 y FA(mknod)11 b FB(\()p FA(mkfifo)p FB(\),)f(a)o(v)n(an)o(t)j(de)g
(p)q(ouv)o(oir)i(l'ouvrir)g(a)o(v)o(ec)e(la)h(primitiv)o(e)h
FA(open)p FB(.)179 1797 y FA(int)j(mknod\(refe)o(ren)o(ce)o(,)f(mode)h
(|)h(S_IFIFO,0)o(\);)236 1866 y(mode)12 b FB(est)h(construit)h(comme)f
(le)h(param)o(\022)-18 b(etre)13 b(de)h(mo)q(de)f(de)g(la)h(fonction)g
FA(open)p FB(.)236 1957 y(En)g(POSIX,)e(un)i(app)q(el)g(simpli\014)o
(\023)-18 b(e)22 b(:)179 2019 y FA(#include)16 b(<sys/types)o(.h>)179
2065 y(#include)g(<sys/stat.)o(h>)179 2110 y(int)i(mkfifo\(con)o(st)e
(char)i(*ref,)g(mode_t)f(mode\);)236 2172 y FB(On)c(p)q(eut)h(cr)o
(\023)-18 b(eer)13 b(des)g(FIF)o(Os)g(\022)-19 b(a)13
b(partir)h(du)f(shell)i(gr^)-19 b(ace)14 b(\022)-19 b(a)179
2233 y FA(mkfifo)17 b([-p])h([-m)h(mode])e(ref)i(...)236
2294 y FB(L'ouv)o(erture)g(d'un)f(tub)q(e)h(nomm)o(\023)-18
b(e)18 b(se)g(fait)g(exclusiv)o(emen)o(t)i(soit)f(en)f(mo)q(de)h(O)p
1423 2294 V 13 w(RDONL)m(Y)f(soit)g(en)179 2340 y(mo)q(de)13
b(O)p 314 2340 V 14 w(WR)o(ONL)m(Y,)f(ainsi)j(le)f(nom)o(bre)f(de)h
(lecteur)g(et)e(d')o(\023)-18 b(ecriv)n(ain)15 b(p)q(eut)e(^)-18
b(etre)13 b(comptabilis)o(\023)-18 b(e.)179 2496 y Fu(10.6.1)55
b(Ouv)n(erture)24 b(et)g(sync)n(hronisation)h(des)f(ouv)n(ertures)g(de)
g(tub)r(es)179 2554 y(nomm)o(\023)-27 b(es)236 2624 y
FC(Il)17 b(y)i(a)f(automatiquemen)o(t)g(sync)o(hronisation)f(des)h(pro)
q(cessus)h(qui)e(ouvren)o(t)h(en)g(mo)q(de)179 2669 y(blo)q(quan)o(t)c
(un)f(tub)q(e)i(nomm)o(\023)-21 b(e.)179 2761 y FB(L'op)o(\023)j
(eration)14 b(d'ouv)o(erture)g(sur)f(un)h(tub)q(e)f(nomm)o(\023)-18
b(e)14 b(est)f(blo)q(quan)o(te)i(en)e(lecture.)179 2806
y(Le)g(pro)q(cessus)h(attend)g(qu'un)f(autre)h(pro)q(cessus)g(ouvre)g
(la)f(\014fo)g(en)g(\023)-18 b(ecriture.)p eop
%%Page: 81 89
81 88 bop 75 50 a Fz(10.6.)26 b(LES)14 b(TUBES)h(NOMM)579
39 y(\023)574 50 y(ES)1171 b FD(81)179 166 y FB(L'ouv)o(erture)15
b(en)e(\023)-18 b(ecriture)16 b(est)e(aussi)i(blo)q(quan)o(te,)g(a)o(v)
o(ec)e(atten)o(te)h(qu'un)g(autre)g(pro)q(cessus)g(ouvre)g(la)g(\014fo)
179 212 y(en)e(lecture.)h(L'ouv)o(erture)f(blo)q(quan)o(te)i(se)e
(termine)h(de)g(fa\030)-17 b(cons)13 b(sync)o(hrone)i(p)q(our)e(les)h
(deux)g(pro)q(cessus.)236 303 y(Ainsi)g(un)f(unique)i(pro)q(cessus)f
(ne)e(p)q(eut)h(ouvrire)h(\022)-19 b(a)13 b(la)g(fois)g(en)g(lecture)g
(et)f(\023)-18 b(ecriture)13 b(un)g(tub)q(e)g(nomm)o(\023)-18
b(e.)236 395 y(En)13 b(mo)q(de)h(non)f(blo)q(quan)o(t)i(\(O)p
682 395 12 2 v 14 w(NONBLOCK,)c(O)p 975 395 V 14 w(NDELA)m(Y\),)h
(seule)h(l'ouv)o(erture)i(en)e(lecture)g(r)o(\023)-18
b(eus-)179 440 y(sit)17 b(dans)h(tous)f(les)h(cas.)f(L'ouv)o(erture)g
(en)f(\023)-18 b(ecriture)18 b(en)f(mo)q(de)h(non)f(blo)q(quan)o(t)i
(d'un)f(tub)q(e)f(nomm)o(\023)-18 b(e)17 b(ne)179 486
y(fonctionne)e(que)e(si)h(un)g(autre)g(pro)q(cessus)g(a)f(d)o(\023)-18
b(ej\022)f(a)14 b(ouv)o(ert)g(en)f(mo)q(de)h(non)g(blo)q(quan)o(t)h(le)
f(tub)q(e)f(en)h(lecture,)179 532 y(ou)e(bien)i(qu'il)g(est)e(blo)q(qu)
o(\023)-18 b(e)14 b(dans)f(l'app)q(el)h(d'une)f(ouv)o(erture)g(en)g
(lecture)g(en)f(mo)q(de)h(blo)q(quan)o(t.)h(Ceci)f(p)q(our)178
577 y(\023)-18 b(eviter)12 b(que)h(le)f(pro)q(cessus)h(qui)g(vien)o(t)g
(d'ouvrir)g(le)g(tub)q(e)f(nomm)o(\023)-18 b(e,)12 b(n')o(\023)-18
b(ecriv)o(e)13 b(dans)f(le)h(tub)q(e)f(a)o(v)n(an)o(t)g(qu'il)h(n'y)179
623 y(ait)g(de)g(lecteur)h(\(qu'un)g(pro)q(cessus)g(ait)f(ouv)o(ert)h
(le)f(tub)q(e)h(en)f(lecture\))h(et)e(ce)h(qui)h(engendrerait)h(un)f
(signal)179 669 y(SIGPIPE)f(\(tub)q(e)h(d)o(\023)-18
b(etruit\),)13 b(ce)g(qui)h(n'est)f(pas)h(vrai)g(car)f(le)g(tub)q(e)h
(n'a)f(pas)g(encore)g(\023)-18 b(et)o(\023)g(e)13 b(utilis)o(\023)-18
b(e.)179 779 y Fu(10.6.2)55 b(Suppression)19 b(d'un)f(tub)r(e)g(nomm)o
(\023)-27 b(e)236 849 y FB(L'utilisation)20 b(de)d FA(rm)e
FB(ou)i FA(unlink)d FB(ne)j(fait)g(que)g(d)o(\023)-18
b(etruire)18 b(la)f(r)o(\023)-18 b(ef)o(\023)g(erence,)16
b(le)h(tub)q(e)g(n'est)g(r)o(\023)-18 b(eellemen)o(t)179
894 y(d)o(\023)g(etruit)14 b(que)f(lorsque)i(son)e(compteur)h(de)f
(liens)i(in)o(ternes)f(et)f(externes)h(est)f(n)o(ul.)179
940 y(Une)c(fois)h(que)f(tous)h(les)g(liens)h(par)e(r)o(\023)-18
b(ef)o(\023)g(erence)10 b(son)o(t)f(d)o(\023)-18 b(etruits,)10
b(le)g(tub)q(e)g(nomm)o(\023)-18 b(e)10 b(devien)o(t)g(un)g(tub)q(e)g
(ordinaire.)p eop
%%Page: 82 90
82 89 bop 75 50 a FD(82)827 b Fz(CHAPITRE)15 b(10.)26
b(TUBES)15 b(ET)f(TUBES)h(NOMM)1791 39 y(\023)1786 50
y(ES)p eop
%%Page: 83 91
83 90 bop 1796 50 a FD(83)179 480 y Fw(Chapitre)32 b(11)179
690 y Fy(La)39 b(gestion)g(des)f(terminaux)236 909 y
FB(Les)11 b(terminaux)i(on)o(t)d(un)i(r^)-19 b(ole)11
b(fondamen)o(tal)i(puisqu'ils)g(p)q(ermetten)o(t)f(l'in)o(teraction)h
(en)o(tre)e(les)g(utilisa-)179 954 y(teurs)h(et)f(les)i(applications.)i
(Vis-\022)-19 b(a-vis)13 b(des)f(pro)q(cessus)h(dits)f(in)o(teractifs,)
h(les)f(terminaux)i(on)o(t)e(une)g(double)179 1000 y(fonction)c(:)179
1069 y FC(fonction)k(de)j("\014c)o(hier")k FB(sur)14
b(lequel)g(il)h(est)e(p)q(ossible)i(de)e(lire)h(ou)g(d')o(\023)-18
b(ecrire.)179 1143 y FC(fonction)12 b(de)j(con)o(tr^)-22
b(ole)20 b FB(:)11 b(la)h(p)q(ossibili)q(t)o(\023)-18
b(e)14 b(de)e(faire)g(parv)o(enir)h(des)e(signaux)j(\022)-19
b(a)11 b(un)h(ensem)o(ble)h(particulier)270 1188 y(de)g(pro)q(cessus)i
(connect)o(\023)-18 b(es.)236 1258 y(Un)13 b(terminal)i(corresp)q(ond)g
(\022)-19 b(a)13 b(l'un)g(de)h(ces)f(t)o(yp)q(es)20 b(:)179
1327 y FC(terminal)14 b(ph)o(ysique)20 b FB(,)12 b(connect)o(\023)-18
b(e)14 b(\022)-19 b(a)13 b(un)h(p)q(ort)f(de)h(comm)o(unication)i(de)d
(la)h(mac)o(hine)g(\(p)q(ort)g(s)o(\023)-18 b(erie,)13
b(p)q(ort)270 1373 y(parall)o(\022)-18 b(ele\).)17 b(On)e(compte)g
(dans)h(les)f(terminaux)i(ph)o(ysiques)g(les)e(impriman)o(tes)i(mais)f
(pas)f(les)g(T)m(er-)270 1419 y(minaux)g(X)6 b(!)179
1486 y FC(pseudo-terminal)19 b FB(,)12 b(par)i(exemple)g(une)f(fen)o(^)
-18 b(etre)13 b(de)g(terminal)i(X)d(ou)i(une)f(connection)i(ETHERNET)
270 1531 y(a)o(v)o(ec)e(un)h(autre)f(site)h(UNIX,)e(une)h(connections)i
(mo)q(dem)f(etc.)236 1601 y(Dans)j(tous)g(les)f(cas)h(on)f(trouv)o(era)
h(une)g(repr)o(\023)-18 b(esen)o(tation)18 b(sous)e(forme)g(de)g(\014c)
o(hier)i(sp)o(\023)-18 b(ecial)18 b(en)e(mo)q(de)179
1647 y(caract)o(\022)-18 b(ere)11 b(dans)h(le)f(r)o(\023)-18
b(ep)q(ertoire)13 b(/dev.)e(En)g(standard)h(un)g(\014c)o(hier)g(de)f
(terminal)i(s'app)q(elle)g(/dev/tt)o(y)p Fx(xy)p FB(.)e(On)179
1692 y(trouv)o(era)j(aussi)g(sur)f(\014llmore)i(des)e(\014c)o(hiers)i
(de)e(pseudo)h(terminaux)h(dans)e(/dev/pt)o(y/tt)o(y)p
Fx(xy)p FB(.)236 1786 y(Le)g(param)o(\023)-18 b(etrage)15
b(des)e(terminaux)i(et)e(de)h(la)g(ligne)h(de)e(comm)o(unication)j(est)
d(di\013)o(\023)-18 b(eren)o(t)15 b(sous)f(BSD)g(et)179
1832 y(SYSTEM)f(V.)179 1877 y(La)g(norme)g(POSIX)g(est)g(bas)o(\023)-18
b(ee)14 b(sur)f(SYSTEM)g(V.)179 2066 y Fv(11.1)66 b(Acquisition)28
b(d'un)g(descripteur)g(asso)r(ci)o(\023)-32 b(e)24 b(\022)-33
b(a)26 b(un)h(ter-)179 2140 y(minal)236 2227 y FB(En)14
b(standard,)g(l'acquisition)i(d'un)e(descripteur)g(de)f(terminal)i(se)e
(fait)g(par)h(h)o(\023)-18 b(eritage)14 b(\022)-19 b(a)13
b(la)h(naissance)179 2273 y(du)h(pro)q(cessus.)h(On)e(h)o(\023)-18
b(erite)16 b(en)f(particulier)i(du)e(terminal)i(de)d(con)o(tr^)-19
b(ole.)16 b(P)o(our)f(ouvrir)h(un)f(terminal,)h(on)179
2318 y(utilise)c(la)e(primitiv)o(e)j FA(open)8 b FB(a)o(v)o(ec)i(une)g
(r)o(\023)-18 b(ef)o(\023)g(erence)11 b(du)f(t)o(yp)q(e)g(/dev/tt)o
(yxy)m(,)h(qui)g(est)f(celle)h(d'un)f(\014c)o(hier)i(sp)o(\023)-18
b(ecial)179 2364 y(caract)o(\022)g(eres)11 b(corresp)q(ondan)o(t)i(au)e
(terminal)h(\022)-19 b(a)11 b(ouvrir.)h(Dans)f(le)h(cas)f(o)q(\022)-20
b(u)11 b(l'on)g(c)o(herc)o(he)h(\022)-19 b(a)10 b(ouvrir)j(le)e
(terminal)179 2410 y(de)f(con)o(tr^)-19 b(ole)11 b(du)f(pro)q(cessus,)h
(il)g(faut)f(utiliser)i(la)e(r)o(\023)-18 b(ef)o(\023)g(erence)11
b(sym)o(b)q(olique)h(")p Fx(/dev/tty)p FB(".)7 b(Si)k(le)f(terminal)i
(n'est)179 2455 y(pas)f(pr)o(^)-18 b(et,)11 b(la)h(primitiv)o(e)h
FA(open)c FB(est)i(blo)q(quan)o(te,)i(on)e(utilisera)j(p)q(our)d(un)h
(app)q(el)g(non)g(blo)q(quan)o(t)h(l'indicateur)179 2501
y(O)p 211 2501 12 2 v 13 w(NONBLOCK.)179 2615 y Fi(T)l(est)i(d'asso)q
(ciation)f(d'un)h(descripteu)o(r)e(a)o(v)o(ec)j(un)f(terminal)236
2689 y FB(La)e(primitiv)o(e)336 2761 y FA(#include)j(<unistd.h>)336
2806 y(int)i(isatty\(int)e(desc\);)p eop
%%Page: 84 92
84 91 bop 75 50 a FD(84)763 b Fz(CHAPITRE)14 b(11.)26
b(LA)14 b(GESTION)g(DES)g(TERMINA)o(UX)236 166 y FB(p)q(ermet)g(de)f
(tester)g(si)g(le)h(descripteur)h(est)e(\(1\))g(asso)q(ci)o(\023)-18
b(e)14 b(ou)f(non)h(\(0\))f(\022)-19 b(a)13 b(un)g(terminal.)236
264 y(La)g(primitiv)o(e)336 350 y FA(#include)j(<unistd.h>)336
395 y(char)i(*ttyname\()o(int)e(desc\);)236 475 y FB(ren)o(v)o(oie,)j
(lorsque)f(le)g(descripteur)h(est)e(asso)q(ci)o(\023)-18
b(e)19 b(\022)-19 b(a)17 b(un)h(terminal,)g(le)g(nom)g(de)f(celui-ci)i
(gr^)-19 b(ace)18 b(\022)-19 b(a)17 b(un)179 521 y(p)q(oin)o(teur)d(en)
g(zone)f(statique.)h(Sinon)h(elle)f(retourne)g(NULL.)179
567 y(Exemple)8 b(:)270 647 y FA(da=open\("/)o(de)o(v/t)o(ty")o(,O)p
667 647 12 2 v 10 w(RDWR\)\);)270 692 y(db=open\("/)o(de)o(v/t)o(typ)o
(2")o(,O)p 707 692 V 11 w(RDWR\)\);)270 738 y(a=ttyname\()o(da)o(\);)16
b(printf\(")h(\045s)p Fr(n)p FA(t",a\);)270 784 y(b=ttyname\()o(db)o
(\);p)o(rin)o(tf)o(\(")f(\045s)p Fr(n)p FA(t",b\);)h(printf\(")f(\045s)
j Fr(n)p FA(n",a\);)179 910 y FB(nous)14 b(donne)7 b(:)290
990 y FA(/dev/tty)75 b(/dev/ttyp2)55 b(/dev/ttyp2)179
1150 y Fv(11.2)66 b(T)-6 b(erminal)30 b(de)g(con)n(tr^)-34
b(ole)29 b(-)h(Sessions)e(-)i(Group)r(es)f(de)179 1224
y(pro)r(cessus)236 1318 y FB(L'ensem)o(ble)14 b(des)f(pro)q(cessus)h
(existan)o(t)g(dans)g(le)f(syst)o(\022)-18 b(eme)14 b(\022)-19
b(a)12 b(un)i(momen)o(t)f(donn)o(\023)-18 b(e)13 b(est)g(partitionn)o
(\023)-18 b(e)15 b(en)179 1363 y(sessions)8 b(:)14 b(tout)h(pro)q
(cessus)h(appartien)o(t)h(\022)-19 b(a)14 b(une)h(seule)h(et)f(unique)h
(session,)g(on)f(h)o(\023)-18 b(erite)16 b(de)f(la)g(session)h(du)179
1409 y(pro)q(cessus)e(p)o(\022)-18 b(ere.)236 1506 y(Un)9
b(pro)q(cessus)i(qui)f(n'est)f(pas)g Fx(le)n(ader)e FB(de)i(group)q(e)h
(p)q(eut)g(cr)o(\023)-18 b(eer)9 b(une)g(nouv)o(elle)j(session)e(a)o(v)
o(ec)g(la)f(primitiv)o(e)336 1592 y FA(#include)16 b(<unistd.h>)336
1638 y(pid_t)h(setsid\(void)o(\);)179 1718 y FB(Lors)d(du)h(login,)h
(le)e(pro)q(cessus)i(shell)g(cr)o(\023)-18 b(e)o(\023)g(e)14
b(est)g(le)h Fx(le)n(ader)d FB(d'une)j(nouv)o(elle)i(session.)e(Une)f
(tel)h(session)h(est)179 1764 y(caract)o(\023)-18 b(eris)o(\023)g(ee)19
b(par)f(le)g(terminal)h(de)f(l'utilisateur)i(\(sur)e(lequel)h(il)g(se)f
(loge\))g(qui)h(devien)o(t)f(le)h FC(terminal)179 1809
y(de)f(con)o(tr^)-22 b(ole)15 b FB(de)i(la)g(session.)g(T)m(ous)f(les)h
(pro)q(cessus)h(de)e(la)h(session)h(son)o(t)f(inform)o(\023)-18
b(es)17 b(de)f(la)h(frapp)q(e)g(des)179 1855 y(caract)o(\022)-18
b(eres)13 b(de)h(con)o(tr^)-19 b(ole)14 b(sur)f(le)h(terminal)179
1941 y FA(intr,)j(quit,)h(susp.)192 2021 y FB(Le)12 b(terminal)j(de)e
(con)o(tr^)-19 b(ole)15 b(est)e(sym)o(b)q(olis)o(\023)-18
b(e)15 b(par)e(la)h(r)o(\023)-18 b(ef)o(\023)g(erence)13
b(")p FA(/dev/tty)p FB(".)236 2118 y(Lorsque)g(le)f Fx(le)n(ader)e
FB(d'une)i(session)h(attac)o(h)o(\023)-18 b(ee)12 b(\022)-19
b(a)11 b(un)h(terminal)i(se)d FC(termine)g FB(tous)h(les)g(pro)q
(cessus)h(de)f(la)179 2164 y(session)g(re\030)-17 b(coiv)o(en)o(t)12
b(le)f(signal)i(SIGHUP)d(et)h(son)o(t)g(alors)g(in)o(terrompus)i(\(on)d
(r)o(\023)-18 b(ealise)13 b(sur)e(\014llmore)h(une)f(\014n)g(de)179
2210 y(session)g(en)e(tuan)o(t)h(la)g(fen)o(^)-18 b(etre)9
b(console,)h(ce)g(qui)g(termine)g(le)g(pro)q(cessus)g(shell)h(leader)g
(...\))d(sauf)h(si)h(un)g(handler)179 2255 y(a)g(\023)-18
b(et)o(\023)g(e)12 b(p)q(ositionn)o(\023)-18 b(e)14 b(p)q(our)f(le)f
(signal)i(SIGHUP)m(.)d(On)g(p)q(eut)i(r)o(\023)-18 b(ealiser)13
b(ceci)f(en)g(sh)g(a)o(v)o(ec)g(la)g(commande)h FA(nohup)p
FB(,)179 2301 y(ou)g(la)g(commande)g FA(trap)e FB(qui)j(p)q(ermetten)o
(t)f(d'ignorer)h(le)f(signal)i(SIGHUP)m(.)c(Le)i(terminal)h(de)f(con)o
(tr^)-19 b(ole)14 b(et)179 2347 y(la)f(session)i(d'un)e(tel)h(pro)q
(cessus)g(r)o(\023)-18 b(esistan)o(t)14 b(n'est)f(pas)h(norm)o(\023)-18
b(ee)13 b(dans)h(POSIX.)179 2486 y Fu(11.2.1)55 b(Acquisition)17
b(d'un)i(terminal)d(de)j(con)n(tr^)-28 b(ole)18 b(par)h(une)f(session)
236 2566 y FC(A)d(sa)h(cr)o(\023)-21 b(eation,)15 b(une)f(session)h
(n'a)g(pas)h(de)e(terminal)g(de)h(con)o(tr^)-22 b(ole!)236
2663 y FB(L'acquisition)17 b(d'un)d(terminal)i(de)e(con)o(tr^)-19
b(ole)15 b(n'est)e(pas)h(norm)o(\023)-18 b(ee,)14 b(mais,)g(si)h(l'on)f
(ouvre)h(un)f(terminal)179 2709 y(qui)g(n'est)f(pas)g(le)h(terminal)h
(de)e(con)o(tr^)-19 b(ole)14 b(d'une)g(autre)f(session)i(a)o(v)o(ec)e
(un)g(pro)q(cessus)i Fx(le)n(ader)c FB(qui)j(n'a)f(pas)179
2755 y(de)f(terminal)j(de)d(con)o(tr^)-19 b(ole,)14 b(alors)f(le)g
(terminal)h(ouv)o(ert)f(devien)o(t)h(le)f(terminal)h(de)f(con)o(tr^)-19
b(ole)14 b(de)e(la)h(session.)236 2806 y(Un)g(terminal)i(p)q(eut)e(^)
-18 b(etre)12 b(le)i(terminal)h(de)e(con)o(tr^)-19 b(ole)14
b(d'au)f(plus)i(une)e(session.)p eop
%%Page: 85 93
85 92 bop 75 50 a Fz(11.2.)26 b(TERMINAL)14 b(DE)g(CONTR)667
39 y(^)660 50 y(OLE)g(-)g(SESSIONS)g(-)g(GR)o(OUPES)g(DE)g(PR)o
(OCESSUS)227 b FD(85)179 166 y Fu(11.2.2)55 b(Group)r(es)18
b(de)h(pro)r(cessus)236 236 y FB(Les)14 b FC(group)q(es)j(de)e(pro)q
(cessus)g FB(son)o(t)f(un)h(ra\016nemen)o(t)g(POSIX)e(de)i(la)f(notion)
i(de)e(session.)h(Ils)f(p)q(er-)179 282 y(metten)o(t)g(de)g(tra)o(v)n
(ailler)j(a)o(v)o(ec)d(des)h(group)q(es)g(de)g(pro)q(cessus)g(sans)g
(toutes)g(les)g(obligations)i(li)o(\023)-18 b(ees)16
b(aux)f(ses-)179 327 y(sions.)236 373 y(L'ob)r(jectif)j(est)g(de)g(sp)o
(\023)-18 b(eci\014er)19 b(l'ensem)o(ble)h(des)e(pro)q(cessus)h(qui)f
(son)o(t)g(in)o(teractifs)i(sur)e(un)g(terminal)179 419
y(donn)o(\023)-18 b(e)17 b(\022)-19 b(a)16 b(un)g(momen)o(t)g(donn)o
(\023)-18 b(e,)17 b(et)f(donc)h(qui)g(on)o(t)f(le)g(droit)h(de)f(lire)i
(sur)e(le)g(terminal)i(et)e(de)g(plus)h(son)o(t)179 464
y(inform)o(\023)-18 b(es)14 b(de)f(la)h(frapp)q(e)f(des)h(caract)o
(\022)-18 b(eres)13 b(de)g(con)o(tr^)-19 b(ole.)236 510
y(Un)16 b Fx(gr)n(oup)n(e)f(de)g(pr)n(o)n(c)n(essus)e
FB(est)j(iden)o(ti\014)o(\023)-18 b(e)18 b(par)e(le)g(PID)g(du)g
Fx(le)n(ader)e FB(du)i(group)q(e,)h(\022)-19 b(a)15 b(la)i(naissance,)g
(un)179 556 y(pro)q(cessus)d(h)o(\023)-18 b(erite)14
b(du)f(group)q(e)i(de)e(son)g(p)o(\022)-18 b(ere.)13
b(La)g(primitiv)o(e)j(suiv)n(an)o(te)8 b(:)336 616 y
FA(#include)16 b(<unistd.h>)336 661 y(pid_t)h(setpgid\(pid)o(_t)f(pid,)
i(pid_t)g(id_grp\);)236 721 y FB(p)q(ermet)c(de)f(rattac)o(her)g(le)h
(pro)q(cessus)g Fx(pid)e FB(au)h(group)q(e)h Fx(id)p
1073 721 12 2 v 14 w(grp)p FB(.)179 813 y(Si)g Fx(pid)d
FB(est)i(n)o(ul)h(c'est)f(le)h(pro)q(cessus)g(couran)o(t)g(qui)g(est)f
(rattac)o(h)o(\023)-18 b(e.)179 858 y(Si)14 b Fx(id)p
258 858 V 13 w(grp)e FB(est)h(n)o(ul)h(le)g(n)o(um)o(\023)-18
b(ero)14 b(d)o(\023)-18 b(eduit)14 b(de)f Fx(pid)f FB(est)h(utilis)o
(\023)-18 b(e.)179 904 y(Dans)15 b(tous)f(les)h(cas)f(soit)g(le)h
(group)q(e)g(existe)g(et)f(le)g(pro)q(cessus)i(est)d(rattac)o(h)o(\023)
-18 b(e,)15 b(soit)f(le)h(group)q(e)g(est)f(cr)o(\023)-18
b(e)o(\023)g(e)14 b(et)179 950 y(le)f(pro)q(cessus)i(trait)o(\023)-18
b(e)13 b(devien)o(t)i(le)e(leader)h(du)g(group)q(e.)236
1041 y(Un)i(pro)q(cessus)i(ne)e(p)q(eut)g(^)-18 b(etre)16
b(rattac)o(h)o(\023)-18 b(e)16 b(qu'\022)-19 b(a)16 b(un)h(group)q(e)g
(appartenan)o(t)h(\022)-19 b(a)16 b(la)g(m)o(^)-18 b(eme)16
b(session)i(que)179 1087 y(lui,c'est-\022)-19 b(a-dire,)14
b(que)g(les)g(group)q(es)g(son)o(t)f(d)o(\023)-18 b(e\014nis)15
b(\022)-19 b(a)13 b(l'in)o(t)o(\023)-18 b(erieur)15 b(des)e(sessions.)
236 1178 y(La)g(primitiv)o(e)336 1238 y FA(#include)j(<unistd.h>)336
1283 y(pid_t)h(getpgrp\(voi)o(d\))o(;)236 1343 y FB(ren)o(v)o(oie)e(le)
e(n)o(um)o(\023)-18 b(ero)14 b(du)f Fx(le)n(ader)f FB(du)h(group)q(e)h
(du)g(pro)q(cessus)g(couran)o(t.)236 1435 y(Sur)g(certaines)g(mac)o
(hines,)g(la)g(primitiv)o(e)336 1495 y FA(#include)i(<unistd.h>)336
1540 y(pid_t)h(getgrp2\(pid)o(_t)f(pid\);)236 1600 y
FB(ren)o(v)o(oie)f(le)e(n)o(um)o(\023)-18 b(ero)14 b(du)f(group)q(e)h
(du)g(pro)q(cessus)g Fx(pid)p FB(.)179 1710 y Fu(11.2.3)55
b(Premier)16 b(Plan)j(et)f(Arri)o(\022)-27 b(ere)17 b(Plan)236
1780 y FB(Le)g FC(premier)i(plan)d FB(est)h(l'unique)i(sous-group)q(e)g
(de)e(pro)q(cessus)h(de)g(la)f(session)i(qui)f(est)f(en)g(mo)q(de)179
1825 y(in)o(teractif.)10 b(Les)g(pro)q(cessus)g(de)g(ce)f(group)q(e)i
(p)q(euv)o(en)o(t)f(lire)h(et)d(\023)-18 b(ecrire)10
b(sur)g(le)g(terminal,)h(ce)e(son)o(t)h(les)g(pro)q(cessus)179
1871 y(qui)17 b(re\030)-17 b(coiv)o(en)o(t)17 b(les)f(signaux)i
(engendr)o(\023)-18 b(es)17 b(par)f(les)g(caract)o(\022)-18
b(eres)16 b(de)g(con)o(tr^)-19 b(ole.)32 b(Les)16 b(group)q(es)h(en)f
FC(arri)o(\022)-21 b(ere)179 1917 y(plan)14 b FB(son)o(t)i(tous)g(les)g
(autres)g(sous-group)q(es)h(de)f(la)g(session.)g(En)g(csh/ksh)h(ce)e
(son)o(t)h(tous)g(les)g(pro)q(cessus)179 1962 y(lanc)o(\023)-18
b(es)14 b(en)f(t^)-19 b(ac)o(he)14 b(de)f(fond)g(\(&\),)f(que)i(l'on)g
(p)q(eut)f(manipuler)j(a)o(v)o(ec)d(les)g(commandes)i
FA(fg)d FB(et)g FA(bg)p FB(.)236 2008 y(Ces)i(group)q(es)i(ne)e(p)q
(euv)o(en)o(t)h(lire)h(sur)e(le)h(terminal)g(\(signaux)h(SIGTTIN)e(et)g
(SIGTTOU\),)f(de)h(plus)i(\022)-19 b(a)179 2054 y(la)13
b(frapp)q(e)h(de)f(caract)o(\022)-18 b(ere)14 b(de)f(con)o(tr^)-19
b(ole)14 b(sur)f(le)h(terminal)h(ils)f(ne)f(re\030)-17
b(coiv)o(en)o(t)14 b(pas)g(de)f(signaux.)236 2099 y(Av)n(an)o(t)18
b(POSIX)f(les)h(pro)q(cessus)h(lanc)o(\023)-18 b(es)18
b(en)g(t^)-19 b(ac)o(he)18 b(de)f(fond)h(par)g(le)g(shell)h(ignoraien)o
(t)h(les)e(signaux)179 2145 y(SIGINT)12 b(et)g(SIGQUIT)g(et)h(a)o(v)n
(aien)o(t)g(leur)h(en)o(tr)o(\023)-18 b(ee)13 b(standard)g(redirig)o
(\023)-18 b(ee)15 b(sur)e(le)g("trou)g(noir")8 b(:)k(/dev/n)o(ull.)179
2254 y Fu(11.2.4)55 b(Quelques)17 b(fonctions)236 2324
y FB(Quelques)e(fonctions)f(d'information)h(sur)f(les)f(sessions)i(et)e
(les)h(group)q(es.)179 2370 y(Elles)g(n)o(\023)-18 b(ecessite)15
b(toute)e(l'include)179 2430 y FA(#include)j(<unistd.h>)236
2490 y FB(La)d(primitiv)o(e)336 2550 y FA(pid_t)k(tcgetsid\(in)o(t)f
(desc\);)236 2610 y FB(ren)o(v)o(oie)f(l'iden)o(tit)o(\023)-18
b(e)15 b(du)e(pro)q(cessus)i(leader.)236 2701 y(La)e(primitiv)o(e)j
(ren)o(v)o(oie)e(-1)f(si)g(le)h(terminal)h(n'est)e(pas)g(terminal)i(de)
e(con)o(tr^)-19 b(ole.)336 2806 y FA(pid_t)17 b(getsid\(pid_)o(t)f
(pid\);)p eop
%%Page: 86 94
86 93 bop 75 50 a FD(86)763 b Fz(CHAPITRE)14 b(11.)26
b(LA)14 b(GESTION)g(DES)g(TERMINA)o(UX)484 472 y
 currentpoint currentpoint translate 0.52092 0.52092 scale neg exch
neg exch translate
 484
472 a 14 w @beginspecial 0 @llx 0 @lly 432 @urx 160 @ury
4320 @rwi @setspecial
%%BeginDocument: eps/terminaux1.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
0 0 431.100311 159.458405 rectclip
-68 -503.790497 translate
68 503.790497 431.100311 159.458405 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
0.9 0 0 0.9 28.400314 58.301331 sc4mt astore 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore 45 639 94 -93 0.9 0 0 0.9 28.400314 58.301331 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(processus ) [9 0 5.994003 0 9 0 7.991997 0 7.991997 0 7.001999 0 7.001999 0 9 0 7.001999 0 0 0] 56 618 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 28.400314 58.301331] dotx
/crlinw 2 def
/crendarw true def
0.9 0 0 0.9 28.400314 58.301331 sc4mt astore 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore 60 0 141 620 0.9 0 0 0.9 28.400314 58.301331 sc6mt astore ssl
/crlinw 1 def
/crendarw false def
0.9 0 0 0.9 28.400314 58.301331 sc4mt astore 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore 213 629 66 -20 0.9 0 0 0.9 28.400314 58.301331 sc6mt astore rstroke
(tampon d'\335criture ) [5.003998 0 7.992004 0 14.003998 0 9 0 9 0 9 0 4.5 0 9 0 5.994003 0 7.992004 0 7.992004 0 5.994003 0 5.003998 0 5.003998 0 9 0 5.993988 0 7.992004 0 0 0] 162 654 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 28.400314 58.301331] dotx
(tampon de lecture ) [5.003998 0 7.992004 0 14.003998 0 9 0 9 0 9 0 -54 -20.088013 9 0 7.992004 0 4.5 0 5.003998 0 7.992004 0 7.992004 0 5.003998 0 9 0 5.994003 0 7.992004 0 0 0] 175 520 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 28.400314 58.301331] dotx
0.9 0 0 0.9 28.400314 58.301331 sc4mt astore 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore 163 568 66 -20 0.9 0 0 0.9 28.400314 58.301331 sc6mt astore rstroke
/crlinw 2 def
/crendarw true def
0.9 0 0 0.9 28.400314 58.301331 sc4mt astore 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore 14 0 279 619 0.9 0 0 0.9 28.400314 58.301331 sc6mt astore ssl
0.9 0 0 0.9 28.400314 58.301331 sc4mt astore 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore -12.010406 -0.500427 163 559 0.9 0 0 0.9 28.400314 58.301331 sc6mt astore ssl
0.9 0 0 0.9 28.400314 58.301331 sc4mt astore 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore -63.615799 -21.205261 304 583 0.9 0 0 0.9 28.400314 58.301331 sc6mt astore ssl
/crlinw 1 def
/crendarw false def
0.9 0 0 0.9 28.400314 58.301331 sc4mt astore 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore 311 642 112 -22 0.9 0 0 0.9 21.200314 66.401329 sc6mt astore rstroke
0.9 0 0 0.9 28.400314 58.301331 sc4mt astore 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore 311 620 112 -22 0.9 0 0 0.9 21.200314 66.401329 sc6mt astore rstroke
0.9 0 0 0.9 28.400314 58.301331 sc4mt astore 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore 311 598 112 -22 0.9 0 0 0.9 21.200314 66.401329 sc6mt astore rstroke
0.9 0 0 0.9 28.400314 58.301331 sc4mt astore 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore 311 576 112 -22 0.9 0 0 0.9 21.200314 66.401329 sc6mt astore rstroke
/crlinred 0.325236 def /crlingrn 0.325236 def /crlinblu 0.325236 def /strinclr true def
0.9 0 0 0.9 28.400314 58.301331 sc4mt astore 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore 311 554 112 -22 0.18 0 0 0.9 245.120316 66.401321 sc6mt astore rstroke
/crlinw 2 def
/crendarw true def
0.9 0 0 0.9 28.400314 58.301331 sc5mt astore crlinw 0.9 0 0 0.9 28.400314 58.301331 sc6mt astore 210.198166 610.000732 210.200302 610.001282 arow
false 0.9 0 0 0.9 19.400314 57.401329 sc5mt astore sstrt
systemdict
begin
166 513 338 619 setbbox
286 575 moveto
257 576 215 578 210 581 curveto
205 584 190 592 194 600 curveto
198 608 204 612 204 612 curveto
204 612 212 614 212 614 curveto
end
/nspans 4 def 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore 0.9 0 0 0.9 28.400314 58.301331 sc6mt astore splstroke
/txtdraw true def
/crtxtred 0.325236 def /crtxtgrn 0.325236 def /crtxtblu 0.325236 def /txtinclr true def
/txlndraw true def
(ECHO ) [10.998001 0 12.005997 0 12.996002 0 12.996002 0 0 0] 239 440 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 -3.099686 185.201324] dotx
gsave clpmt currentmatrix pop newpath
0.9 0 0 0.9 196.700317 243.701324 sc5mt astore pop false {
    sc5mt dodrawctm 276 369.5 60 53 0 rfpath unpagectm
} {
    60 53 276 369.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
[0.9 0 0 0.9 196.700317 243.701324] dodrawctm
60
53
2
[1 0 0 -1 -276 422.5]

/_NXImageStr0 _NXImageString 0 795 getinterval def {currentfile _NXImageStr0 readhexstring pop} bind image
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9000000000000000006aaaaaaaaaaa0000000000000000000aaaaaaaaaa900000000000000000006aaaaaaaaa805555555555555555502aaaaaaaaa804000000000000000102aaaaaaaaa804555555555555555102aaaaaaaaa8046aaa6
6655555555102aaaaaaaaa804699955555555555102aaaaaaaaa804665555555555555102aaaaaaaaa804695555555555555102aaaaaaaaa804655555555555555102aaaaaaaaa804595555555555555102aaaaaaaaa804655555555555555102aaaaaaaaa804555555555555555102aaaaaaaaa80465555555555555510
2aaaaaaaaa804555555555555555102aaaaaaaaa804655555555555555102aaaaaaaaa804555555555555555102aaaaaaaaa804555555555555555102aaaaaaaaa804555555555555555102aaaaaaaaa804555555555555555102aaaaaaaaa804555555555555555102aaaaaaaaa804555555555555555102aaaaaaaaa80
4555555555555555102aaaaaaaaa804555555555555555102aaaaaaaaa804000000000000000102aaaaaaaaa805555555555555555502aaaaaaaaa800000000000000000002aaaaaaaaa800000000000000000002aaaaaaaaa800000000000000000002aaaaaaaaaaaaaaa444444444aaaaaaaaaaaaaaaaaaaaa00000000
0aaaaaaaaaaaaaaaaaaaaa400000001aaaaaaaaaaaaaaaaaaaaa900000006aaaaaaaaaaaaaaaaaaaaa911111112aaaaaaaaaaaaaaaaaaaaa4444444446aaaaaaaaaaaaaa954004000000000100152aaaaaaaaa554004000000000100154aaaaaaaa95540000000000000001552aaaaaaa55555555555555555555554aaaa
aa8000000000000000000000002aaaaa8000000000000000000000002aaaaa9555555555556555555555556aaaaa8000000000009000000000002aaaaa9555555555554555555555556aaaaa8000000000000000000000002aaaaa8000000000000000000000002aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
grestore
grestore
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
0.9 0 0 0.9 28.400314 58.301331 sc4mt astore 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore 35 0 417 613 0.9 0 0 0.9 28.400314 58.301331 sc6mt astore ssl
0.9 0 0 0.9 28.400314 58.301331 sc4mt astore 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore -32 0 462 589 0.9 0 0 0.9 28.400314 58.301331 sc6mt astore ssl
/txtdraw true def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txlndraw true def
(terminal ) [5.003998 0 7.992004 0 5.993988 0 14.003998 0 5.003998 0 9 0 7.992004 0 5.003998 0 0 0] 442 645 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 28.400314 58.301331] dotx
(struct termios ) [7.002014 0 5.003998 0 5.993988 0 9 0 7.992004 0 5.003998 0 4.5 0 5.003998 0 7.992004 0 5.993988 0 14.003998 0 5.003998 0 9 0 7.002014 0 0 0] 310 514 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 32.900314 49.301331] dotx
/crlinw 1 def
/crlinred 0.325236 def /crlingrn 0.325236 def /crlinblu 0.325236 def /strinclr true def
/crendarw false def
0.9 0 0 0.9 46.400314 58.301331 sc4mt astore 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore 311 554 112 -22 0.18 0 0 0.9 265.280334 66.401321 sc6mt astore rstroke
0.9 0 0 0.9 64.400314 58.301331 sc4mt astore 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore 311 554 112 -22 0.18 0 0 0.9 285.440308 66.401321 sc6mt astore rstroke
0.9 0 0 0.9 82.400314 58.301331 sc4mt astore 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore 311 554 112 -22 0.18 0 0 0.9 305.600311 66.401321 sc6mt astore rstroke
0.9 0 0 0.9 100.400314 58.301331 sc4mt astore 0.9 0 0 0.9 28.400314 58.301331 sc5mt astore 311 554 112 -22 0.18 0 0 0.9 325.760315 66.401321 sc6mt astore rstroke
(modes contr\356le ) [14.003998 0 9 0 9 0 7.992004 0 7.002014 0 4.5 0 7.992004 0 9 0 9 0 5.003998 0 5.993988 0 9 0 5.003998 0 7.992004 0 0 0] 270 445 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 60.800312 230.201324] dotx
(modes sortie ) [14.003998 0 9 0 9 0 7.992004 0 7.001999 0 4.5 0 7.001999 0 9 0 5.994003 0 5.003998 0 5.003998 0 7.992004 0 0 0] 101 402 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 215.600311 246.401321] dotx
(modes entr\335e ) [14.003998 0 9 0 9 0 7.992004 0 7.001999 0 4.5 0 7.992004 0 9 0 5.003998 0 5.994003 0 7.992004 0 7.992004 0 0 0] 142 343 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 179.600311 279.701324] dotx
(modes locaux ) [14.003998 0 9 0 9 0 7.991997 0 7.002007 0 4.5 0 5.003998 0 9 0 7.992004 0 7.992004 0 9 0 9 0 0 0] 87 454 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 230.000305 159.101318] dotx
(caract\334res contr\356le ) [7.991997 0 7.991997 0 5.994003 0 7.992004 0 7.992004 0 5.003998 0 7.992004 0 5.994003 0 7.992004 0 7.001999 0 4.5 0 7.992004 0 9 0 9 0 5.003998 0 5.994003 0 9 0 5.003998 0 7.992004 0 0 0] 115 335 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 193.100311 233.801331] dotx
(c_cc ) [7.992004 0 9 0 7.992004 0 7.992004 0 0 0] 201 351 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 129.200317 235.601318] dotx
end
grestore
%%EndDocument
 @endspecial 484 472 a
 currentpoint currentpoint translate 1 0.52092 div 1 0.52092 div scale
neg exch neg exch translate
 484 472 a 268 563 a Fq(Fig.)f
FD(11.1)f({)i Fp(Structur)n(e)g(de)h(la)g(c)n(ommunic)n(ation)h(entr)n
(e)e(le)h(pr)n(o)n(c)n(essus)g(et)f(le)h(terminal.)236
697 y FB(ren)o(v)o(oie)20 b(l'iden)o(tit)o(\023)-18 b(e)20
b(du)e(leader)h(de)f(la)h(session)g(du)f(pro)q(cessus)i
Fx(pid)p FB(.)c(Si)j Fx(pid)d FB(==0)i(c'est)g(le)g(pid)h(du)179
743 y(pro)q(cessus)12 b(couran)o(t)g(qui)g(est)f(utilis)o(\023)-18
b(e,)14 b(un)d(app)q(el)h(\023)-18 b(equiv)n(alen)o(t)13
b(\022)-19 b(a)11 b FA(getsid\(getp)o(id)o(\(\)\))c FB(mais)12
b(a)o(v)o(ec)f(un)h(app)q(el)179 789 y(syst)o(\022)-18
b(eme)13 b(de)g(moins.)179 890 y Fi(Changemen)o(t)h(du)h(group)q(e)f
(en)h(premier)f(plan)37 b FB(La)13 b(primitiv)o(e)336
955 y FA(pid_t)37 b(tcgetgrp\(i)o(nt)16 b(desc\);)236
1020 y FB(ren)o(v)o(oie)d(le)f(group)q(e)g(de)g(pro)q(cessus)g(en)g
(premier)g(plan)h(asso)q(ci)o(\023)-18 b(e)13 b(au)e(terminal)i(de)f
(con)o(tr^)-19 b(ole)12 b(indiqu)o(\023)-18 b(e)14 b(par)179
1065 y(le)f(descripteur)i Fx(desc)p FB(.)179 1111 y(Ceci)c(s'applique)i
(\023)-18 b(evidemen)o(t)12 b(uniquemen)o(t)i(au)d(terminal)i(de)e(con)
o(tr^)-19 b(ole)13 b(de)e(la)h(session)g(du)g(pro)q(cessus)g(cou-)179
1157 y(ran)o(t.)236 1249 y(La)h(primitiv)o(e)179 1314
y FA(pid_t)k(tcsetpgrp\(i)o(nt)f(desc,)i(pid_t)f(id_grp\);)236
1378 y FB(p)q(ermet)g(de)g(placer)g(en)g(premier)g(plan)h(le)f(group)q
(e)g Fx(id)p 1038 1378 12 2 v 14 w(grp)e FB(dans)i(la)g(session)h(asso)
q(ci)o(\023)-18 b(ee)18 b(au)f(terminal)179 1424 y(p)q(oin)o(t)o(\023)
-18 b(e)14 b(par)f Fx(desc)p FB(.)179 1558 y Fv(11.3)66
b(Les)22 b(driv)n(ers)i(logiciels)f(de)g(terminaux)236
1642 y FB(Les)16 b(terminaux)i(ph)o(ysiques)h(son)o(t)d(manipul)o(\023)
-18 b(es)19 b(par)d(des)h(driv)o(ers)g(sp)o(\023)-18
b(eci\014ques)18 b(p)q(our)f(c)o(haque)g(termi-)179 1688
y(nal\(en)g(fonction)g(du)f(mo)q(d)o(\022)-18 b(ele,)16
b(de)g(la)g(marque,)g(de)g(l'age,)g(etc)f(...\).)f(Sur)i(cet)g(ensem)o
(ble)h(de)f(driv)o(ers,)g(on)179 1734 y(trouv)o(e)e(une)h(sup)q
(er-structure)h(logicielle)q(,)g(les)f FC(tt)o(y)h(driv)o(er)p
FB(,)e(driv)o(ers)h(logiciels)i(de)e(terminaux.)g(Ces)f(dri-)179
1779 y(v)o(ers)d(p)q(ermetten)o(t)h(de)f(tra)o(v)n(ailler)i(sur)f
(l'ensem)o(ble)g(des)g(terminaux)g(de)g(fa\030)-17 b(con)11
b(homog)o(\022)-18 b(ene)12 b(et)f(transparen)o(te)179
1825 y(\(p)q(olymorphisme\).)236 1917 y(Structure)j(de)f(description)j
(du)d(mo)q(de)h(de)f(comm)o(unication)22 b(:)13 b(la)g(structure)h
(termios.)179 2031 y Fu(11.3.1)55 b(La)19 b(structure)f
Fj(termios)236 2102 y FB(En)12 b(POSIX,)f(toutes)g(les)h(caract)o(\023)
-18 b(eristiques)14 b(d'une)e(v)o(oie)h(de)e(comm)o(unication)j(son)o
(t)e(rassem)o(bl)o(\023)-18 b(ees)13 b(dans)179 2148
y(la)g(structure)h(termios)g(pr)o(\023)-18 b(ed)o(\023)g(e\014nie)15
b(dans)f(le)f(\014c)o(hier)34 b FA(<termios.h)o(>)p FB(.)192
2193 y(Sur)13 b(un)h(HP/UX)k(:)179 2258 y FA(/*)h(machine:)d(fillmore)h
(*/)179 2350 y(#define)g(NCCS)h(16)238 2441 y(typedef)f(unsigned)f(int)
j(tcflag_t)o(;)238 2487 y(typedef)e(unsigned)f(char)i(cc_t;)277
2578 y(struct)f(termios)g({)336 2624 y(tcflag_t)154 b(c_iflag;)f(/*)19
b(Input)f(modes)g(*/)336 2669 y(tcflag_t)154 b(c_oflag;)f(/*)19
b(Output)e(modes)h(*/)336 2715 y(tcflag_t)154 b(c_cflag;)f(/*)19
b(Control)e(modes)h(*/)336 2761 y(tcflag_t)154 b(c_lflag;)f(/*)19
b(Local)f(modes)g(*/)336 2806 y(tcflag_t)154 b(c_reserv)o(ed;)94
b(/*)19 b(Reserved)e(for)h(future)f(use)i(*/)p eop
%%Page: 87 95
87 94 bop 75 50 a Fz(11.3.)26 b(LES)14 b(DRIVERS)f(LOGICIELS)h(DE)g
(TERMINA)o(UX)732 b FD(87)336 166 y FA(cc_t)234 b(c_cc[NCC)o(S];)94
b(/*)19 b(Control)e(characters)f(*/)277 212 y(};)236
273 y FB(Le)d(t)o(yp)q(e)h(tc\015ag)p 470 273 12 2 v
14 w(t)f(est)g(consid)o(\023)-18 b(er)o(\023)g(e)15 b(comme)e(un)g
(tableau)i(de)e(bits.)h(On)f(p)q(eut)g(donc)h(tester)f(le)g(p)q
(osition-)179 319 y(nemen)o(t)g(d'un)h(indicateur)h(par)e(un)h(&)f
(\(conjonction)h(binaire\))h(a)o(v)o(ec)f(sa)f(macro-d)o(\023)-18
b(e\014nition.)179 364 y(P)o(ar)13 b(exemple:)179 410
y FA(\(c_iflag)j(&)k(IXOFF)d(\))c FB(est)g(vrai)h(si)f(le)h(drap)q(eau)
g(est)f(p)q(ositionn)o(\023)-18 b(e.)179 520 y Fu(11.3.2)55
b(Mo)r(des)18 b(d'en)n(tr)o(\023)-27 b(ee)236 590 y FB(Macro-d)o(\023)
-18 b(e\014nition)q(s)16 b(des)d(drap)q(eaux)i(du)e(mo)q(de)h(d'en)o
(tr)o(\023)-18 b(ee)19 b(:)179 651 y FC(IGNBRK)h FB(Ignorer)13
b Ft(<)p FB(break)p Ft(>)179 712 y FC(BRKINT)20 b FB(Signal)15
b(SIGINT)d(\022)-19 b(a)13 b(la)h(frapp)q(e)g(de)f Ft(<)p
FB(break)p Ft(>)179 773 y FC(IGNP)l(AR)20 b FB(Ignorer)14
b(les)g(erreurs)f(de)g(parit)o(\023)-18 b(e)179 834 y
FC(P)l(ARMRK)21 b FB(Marquer)14 b(les)g(erreurs)f(de)g(parit)o(\023)-18
b(e)179 895 y FC(INPCK)19 b FB(V)o(\023)-18 b(eri\014cation)16
b(de)d(parit)o(\023)-18 b(e)179 956 y FC(ISTRIP)20 b
FB(Strip)14 b(c)o(haracter)7 b(:)12 b(compacter)i(sur)f(7)g(bits)179
1017 y FC(INLCR)19 b FB(T)m(ransformer)13 b(NL)g(en)g(CR)179
1078 y FC(IGNCR)20 b FB(Ignorer)13 b(CR)179 1139 y FC(ICRNL)19
b FB(T)m(ransformer)13 b(CR)g(en)g(NL)p 181 1199 14 2
v 195 1199 a FC(IUCLC)19 b FB(T)m(ransformer)14 b(Ma)r(juscules)g(en)g
(min)o(uscules)179 1260 y FC(IX)o(ON)20 b FB(Autoriser)14
b(l'arr)o(^)-18 b(et)13 b(du)h(\015ux)g(a)o(v)o(ec)f(\(Ctrl-S/Ctrl-Q\))
p 181 1321 V 195 1321 a FC(IXANY)21 b FB(N'imp)q(orte)13
b(quel)h(caract)o(\022)-18 b(ere)14 b(relance)g(le)g(\015ux.)179
1382 y FC(IX)o(OFF)20 b FB(In)o(terdit)14 b(l'arr)o(^)-18
b(et)13 b(du)h(\015ux.)179 1492 y Fu(11.3.3)55 b(Mo)r(des)18
b(de)h(sortie)236 1562 y FB(Macro-d)o(\023)-18 b(e\014nition)q(s)16
b(des)d(drap)q(eaux)i(du)e(mo)q(de)h(de)f(sortie)20 b(:)179
1623 y FC(OPOST)g FB(P)o(ostpro)q(cessing)c(de)d(la)h(sortie.)179
1684 y FC(OLCUC)20 b FB(T)m(ransformer)13 b(min)o(uscule)j(en)d
(MAJUSCULE)f(en)h(sortie.)179 1745 y FC(ONLCR)20 b FB(NL)12
b(en)i(CR+NL.)179 1806 y FC(OCRNL)20 b FB(CR)13 b(en)g(NL)f(.)179
1867 y FC(ONOCR)21 b FB(No)12 b(CR)h(en)g(colonne)i(0.)179
1928 y FC(ONLRET)20 b FB(NL)12 b(en)i(NL+CR.)179 2038
y Fu(11.3.4)55 b(Mo)r(des)18 b(de)h(con)n(tr^)-28 b(ole)236
2108 y FB(Description)16 b(plus)e(bas)g(niv)o(eau)h(de)e(la)h(ligne)h
(de)e(comm)o(unication.)j(Utilis)o(\023)-18 b(es)15 b(surtout)e(p)q
(our)h(des)g(p)o(\023)-18 b(eri-)179 2153 y(ph)o(\023)g(eriques)15
b(de)e(comm)o(unication)j(\(mo)q(dems\).)179 2215 y FC(CLOCAL)k
FB(Ouv)o(erture)14 b(non)g(blo)q(quan)o(te,)h(sinon)g(l'ouv)o(erture)g
(est)e(blo)q(quan)o(te)i(tan)o(t)f(que)g(la)g(ligne)h(n'est)270
2261 y(pas)g(pr)o(^)-18 b(ete)14 b(\(par)h(exemple)h(un)e(mo)q(dem\),)h
(sauf)f(demande)i(con)o(traire)f(dans)g(l'app)q(el)h(de)f
FA(open)d FB(a)o(v)o(ec)270 2306 y FA(O)p 292 2306 12
2 v 14 w(NONBLOCK)p FB(.)179 2367 y FC(HUPCL)20 b FB(hangup)14
b(sur)g(le)f(dernier)h FA(close)p FB(.)179 2477 y Fu(11.3.5)55
b(Mo)r(des)18 b(lo)r(caux)236 2547 y FB(Ce)11 b(son)o(t)h(ces)f(mo)q
(des-l\022)-19 b(a)13 b(qui)f(on)o(t)f(le)h(plus)h(d'impact)f(au)g(niv)
o(eau)g(logiciel)q(.)h(Ce)e(son)o(t)h(eux)g(qui)g(indiquen)o(t)179
2593 y(les)k(traitemen)o(ts)g(r)o(\023)-18 b(ealis)o(\023)g(es)17
b(sur)f(les)g(caract)o(\022)-18 b(eres)16 b(de)g(con)o(tr^)-19
b(ole)16 b(et)f(d)o(\023)-18 b(eterminen)o(t)17 b(le)f(comp)q(ortemen)o
(t)g(de)g(la)179 2638 y(primitiv)o(e)f FA(read)p FB(.)179
2700 y FC(ISIG)k FB(les)14 b(caract)o(\022)-18 b(eres)13
b(de)h(con)o(tr^)-19 b(ole)14 b FA(intr,)k(quit)p FB(,)11
b(etc)h(son)o(t)i(transform)o(\023)-18 b(es)13 b(en)h(signaux.)179
2761 y FC(ECHO)20 b FB(Les)e(caract)o(\022)-18 b(eres)18
b(frapp)o(\023)-18 b(es)18 b(au)g(cla)o(vier)h(son)o(t)f(apr)o(\022)-18
b(es)18 b(transformation,)h(d)o(\023)-18 b(e\014nie)20
b(dans)e(le)g(mo)q(de)270 2806 y(d'en)o(tr)o(\023)-18
b(ee,)13 b(ins)o(\023)-18 b(er)o(\023)g(es)14 b(dans)g(le)g(\015ux)f
(de)h(sortie)f(\()o(\023)-18 b(ec)o(ho)14 b(des)f(caract)o(\022)-18
b(eres)14 b(en)f(sh)g(par)h(exemple\).)p eop
%%Page: 88 96
88 95 bop 75 50 a FD(88)763 b Fz(CHAPITRE)14 b(11.)26
b(LA)14 b(GESTION)g(DES)g(TERMINA)o(UX)179 166 y FC(ECHOE)20
b FB(dans)g(ce)f(mo)q(de)g(et)f(en)h(mo)q(de)h(ICANON,)d(le)i(caract)o
(\022)-18 b(ere)19 b(de)g(con)o(tr^)-19 b(ole)20 b FA(erase)d
FB(a)i(un)f(\023)-18 b(ec)o(ho)270 212 y(pro)o(v)o(o)q(quan)o(t)15
b(l'e\013acemen)o(t)f(du)g(dernier)g(caract)o(\022)-18
b(ere)13 b(sur)h(l')o(\023)-18 b(ecran.)179 285 y FC(ECHOK)20
b FB(dans)15 b(ce)f(mo)q(de)h(et)g(en)f(mo)q(de)h(ICANON,)e(le)i
(caract)o(\022)-18 b(ere)15 b(de)g(con)o(tr^)-19 b(ole)15
b FA(kill)e FB(a)i(comme)e(\023)-18 b(ec)o(ho)270 331
y(le)14 b(caract)o(\022)-18 b(ere)13 b(de)g(\014n)h(de)f(ligne.)179
404 y FC(NOFLSH)19 b FB(dans)h(ce)e(mo)q(de,)i(il)g(n'y)f(a)g(pas)g(de)
h(vidange)g(par)g(d)o(\023)-18 b(efaut)19 b(des)h(tamp)q(ons)g(de)f
(lecture)h(et)270 450 y(d')o(\023)-18 b(ecriture)14 b(\022)-19
b(a)13 b(la)h(prise)g(en)f(compte)g(des)h(caract)o(\022)-18
b(eres)13 b FA(intr,)18 b(quit,)g(susp)11 b FB(en)i(mo)q(de)h(ISIG.)179
523 y FC(TOSTOP)20 b FB(dans)15 b(ce)g(mo)q(de,)f(les)h(pro)q(cessus)h
(du)e(group)q(e)i(de)e(pro)q(cessus)i(en)f(arri)o(\022)-18
b(ere-plan)16 b(du)f(terminal)270 569 y(son)o(t)e(susp)q(endus,)i
(lorsqu'ils)h(essaien)o(t)e(d')o(\023)-18 b(ecrire)14
b(sur)f(le)h(terminal,)g(par)f(le)h(signal)h(SIGTTOU.)179
642 y FC(ICANON)20 b FB(est)13 b(un)g(mo)q(de)h(complexe,)g(v)o(oir)g
(plus)g(bas.)179 766 y Fi(les)h(mo)q(des)h(canoniques)e(et)i
(non-canoniques)35 b FB(Le)13 b(c)o(hoix)i(de)e(l'option)i(ICANON)d(a)h
(un)h(e\013et)179 812 y(sur)g(la)i(primitiv)o(e)g FA(read)d
FB(en)i(particulier)i(l'accessibili)q(t)o(\023)-18 b(e)17
b(des)e(caract)o(\022)-18 b(eres)15 b(frapp)o(\023)-18
b(es)15 b(d)o(\023)-18 b(ep)q(end)16 b(de)e(c)o(hoix)i(ef-)179
858 y(fectu)o(\023)-18 b(es)13 b(sur)g(ce)g(mo)q(de.)179
996 y FC(Mo)q(de)i(canonique)k FB(:)13 b(c'est)g(le)g(mo)q(de)h(de)f
(fonctionnemen)o(t)j(d'un)d(terminal)i(en)e(mo)q(de)h(in)o(teractif,)g
(il)g(se)270 1041 y(caract)o(\023)-18 b(erise)15 b(de)f(la)g(mani)o
(\022)-18 b(ere)15 b(suiv)n(an)o(te)8 b(:)14 b(le)g(tamp)q(on)g(d'en)o
(tr)o(\023)-18 b(ee)14 b(est)g(structur)o(\023)-18 b(e)14
b(en)g(ligne,)i(une)e(ligne)269 1087 y(\023)-18 b(etan)o(t)17
b(une)f(suite)i(de)e(caract)o(\022)-18 b(eres)17 b(termin)o(\023)-18
b(ee)17 b(par)g(le)g(caract)o(\022)-18 b(ere)17 b(newline)h(de)e(co)q
(de)h(ASCI)q(I)f(10)g(\(le)270 1133 y(newline)h(du)e(C\).)g(Ceci)g
(signi\014e)i(que)f(les)g(caract)o(\022)-18 b(eres)16
b(lus)g(au)f(cours)h(d'une)f(op)o(\023)-18 b(eration)17
b(de)f(lecture)270 1178 y FA(read)c FB(sur)h(le)h(terminal)h(son)o(t)f
(extraits)h(dans)f(une)g(et)f(une)h(seule)g(ligne.)h(Donc)f(tout)g
(caract)o(\022)-18 b(ere)14 b(non)270 1224 y(suivi)f(d'un)e(newline)h
(n'est)f(pas)g(accessible)i(en)e(lecture)d(!)i(Une)h(op)o(\023)-18
b(eration)12 b(de)f(lecture)h(ne)f(p)q(eut)h(a)o(v)o(oir)270
1270 y(lieu)j(\022)-19 b(a)13 b(c)o(hev)n(al)h(sur)f(plusieurs)j
(lignes.)179 1343 y FC(Mo)q(de)f(non-canonique)j FB(:)f(la)h(structure)
g(de)g(ligne)h(ne)f(d)o(\023)-18 b(e\014nit)19 b(plus)g(le)f(crit)o
(\022)-18 b(ere)18 b(d'accessibili)q(t)o(\023)-18 b(e)20
b(des)270 1389 y(caract)o(\022)-18 b(eres)12 b(et)f(les)i(4)e(caract)o
(\022)-18 b(eres)12 b FA(erase,)17 b(kill,)h(eof,)g(eol)10
b FB(p)q(erden)o(t)j(leur)f(qualit)o(\023)-18 b(e)13
b(de)f(caract)o(\022)-18 b(eres)270 1434 y(de)13 b(con)o(tr^)-19
b(ole.)236 1527 y(Les)16 b(crit)o(\022)-18 b(eres)17
b(d'accessibili)q(t)o(\023)-18 b(e)19 b(en)d(mo)q(de)h(non-canonique)h
(son)o(t)f(d)o(\023)-18 b(e\014nis)18 b(par)e(deux)h(caract)o(\022)-18
b(eres)16 b(sp)o(\023)-18 b(e-)179 1572 y(ciaux)14 b
FA(MIN)e FB(et)h FA(TIME)e FB(du)i(tableau)i FA(c)p 702
1572 12 2 v 14 w(cc)d FB(de)h(la)g(structure)h FA(termios)p
FB(.)236 1669 y(Si)f FA(MIN)e Ft(>)g FB(0)h(et)g FA(TIME)e
Ft(>)i FB(0)g(,)f FA(TIME)f FB(est)i(un)h(min)o(uteur)g(in)o
(ter-caract)o(\022)-18 b(eres)14 b(de)e(gran)o(ularit)o(\023)-18
b(e)14 b(0.1)e(seconde.)230 1748 y({)21 b(A)13 b(c)o(haque)h(caract)o
(\022)-18 b(ere)13 b(re\030)-17 b(cu)13 b(le)h(min)o(uteur)g(est)f(rep)
q(ositionn)o(\023)-18 b(e.)230 1821 y({)21 b(Si)c(le)g(nom)o(bre)g(de)f
(caract)o(\022)-18 b(eres)17 b(re\030)-17 b(cu)16 b(a)o(v)n(an)o(t)h
(l'expiration)i(du)d(min)o(uteur)i(est)d(\023)-18 b(egal)17
b(\022)-19 b(a)16 b FA(MIN)f FB(l'app)q(el)270 1867 y
FA(read)c FB(retourne)j(ces)f(caract)o(\022)-18 b(ere)14
b(au)f(pro)q(cessus.)230 1940 y({)21 b(Si)e(le)f(min)o(uteur)h(expire)g
(a)o(v)n(an)o(t)f(la)g(reception)h(de)f FA(MIN)e FB(caract)o(\022)-18
b(eres,)18 b(l'app)q(el)i FA(read)15 b FB(retourne)k(les)270
1986 y(caract)o(\022)-18 b(eres)14 b(re\030)-17 b(cus)13
b(au)g(pro)q(cessus.)230 2059 y({)21 b(Remarquer)d(qu'au)g(moins)g(un)f
(caract)o(\022)-18 b(ere)18 b(sera)f(ren)o(v)o(o)o(y)o(\023)-18
b(e.)17 b(Le)g FA(read)e FB(est)i(blo)q(quan)o(t)i(tan)o(t)f(que)f(le)
270 2104 y(premier)d(caract)o(\022)-18 b(ere)14 b(n'est)f(pas)g(re\030)
-17 b(cu)13 b(et)g(que)h FA(MIN)d FB(et)i FA(TIME)e FB(ne)i(son)o(t)h
(pas)f(mis)h(en)f(marc)o(he.)236 2183 y(P)o(our)h(certaines)g(v)n
(aleurs)g(de)g FA(MIN)d FB(et)i FA(TIME)5 b FB(:)179
2262 y FA(MIN)13 b Ft(>)i FC(0,)g FA(TIME)e FC(=)i(0)21
b FB(M)o(^)-18 b(eme)12 b(comp)q(ortemen)o(t)h(mais)f(seul)h
FA(MIN)d FB(est)i(signi\014catif.)i(Le)e FA(read)e FB(est)h(blo)q(quan)
o(t)270 2307 y(jusqu'\022)-19 b(a)14 b(la)f(reception)i(de)e
FA(MIN)f FB(caract)o(\022)-18 b(eres.)179 2381 y FA(MIN)13
b FC(=)i(0,)h FA(TIME)d Ft(>)h FC(0)21 b FB(comme)13
b(le)h(nom)o(bre)g(de)f(caract)o(\022)-18 b(eres)13 b(\022)-19
b(a)13 b(lire)i(est)e(n)o(ul)h(\()p FA(MIN)d FB(=)i(0\),)g(le)g(min)o
(uteur)i(est)270 2426 y(initiali)q(s)o(\023)-18 b(e)17
b(au)e(debut)h(de)e(l'app)q(el)j FA(read)p FB(.)12 b(L'app)q(el)k
FA(read)d FB(retourne)i(soit)g(parce)g(qu'un)h(caract)o(\022)-18
b(ere)15 b(a)269 2472 y(\023)-18 b(et)o(\023)g(e)13 b(lu)h(ou)f(que)h
(le)f(d)o(\023)-18 b(elai)15 b(a)e(expir)o(\023)-18 b(e.)179
2545 y FA(MIN)13 b FC(=)i(0,)h FA(TIME)d FC(=)i(0)21
b FB(mo)q(de)12 b(non)g(blo)q(quan)o(t)19 b(:)11 b(l'app)q(el)i
FA(read)d FB(retourne)i(les)g(caract)o(\022)-18 b(eres)12
b(disp)q(onibl)q(es)i(\(le)270 2591 y(minim)o(um)h(des)e(caract)o(\022)
-18 b(eres)14 b(disp)q(onibl)q(es)i(et)c(du)i(nom)o(bre)g(de)f(caract)o
(\022)-18 b(eres)14 b(demand)o(\023)-18 b(es)14 b(dans)g(l'app)q(el)270
2636 y(de)f FA(read)p FB(\).)179 2715 y(Les)g(v)n(aleurs)i(les)f(plus)g
(courammen)o(t)h(utilis)o(\023)-18 b(ees)15 b(son)o(t)f
FA(MIN)p FB(=1,)e FA(TIME)p FB(=0,)f(ce)i(qui)i(est)e(le)h(mo)q(de)g
(CBREAK)179 2761 y(des)h(v)o(ersions)h(BSD.)f(Ce)f(mo)q(de)h(p)q(ermet)
g(d'a)o(v)o(oir)h(une)f(saisie)i(blo)q(quan)o(te)f(de)f(c)o(haque)h
(caract)o(\022)-18 b(ere)15 b(frapp)o(\023)-18 b(e)179
2806 y(au)13 b(cla)o(vier)i(\(vi)e(utilise)j(ce)d(mo)q(de\),)g(le)g
FA(read)f FB(retourne)h(d)o(\022)-18 b(es)14 b(qu'un)f(caract)o(\022)
-18 b(ere)14 b(est)f(frapp)o(\023)-18 b(e.)p eop
%%Page: 89 97
89 96 bop 75 50 a Fz(11.3.)26 b(LES)14 b(DRIVERS)f(LOGICIELS)h(DE)g
(TERMINA)o(UX)732 b FD(89)179 166 y Fu(11.3.6)55 b(Les)18
b(caract)o(\022)-27 b(eres)18 b(sp)o(\023)-27 b(eciaux)236
242 y FB(Les)9 b(caract)o(\022)-18 b(eres)10 b(sp)o(\023)-18
b(eciaux)11 b(son)o(t)e(d)o(\023)-18 b(e\014nis)11 b(par)f(le)f
(tableau)i(c)p 1075 242 12 2 v 14 w(cc)e(de)g(la)h(structure)f
(termios.)h(Les)f(p)q(ositions)179 288 y(et)k(les)g(v)n(aleurs)i
(initiales)h(du)d(r^)-19 b(ole)14 b(des)f(di\013)o(\023)-18
b(eren)o(ts)15 b(caract)o(\022)-18 b(eres)14 b(sp)o(\023)-18
b(eciaux)15 b(son)o(t)e(les)h(suiv)n(an)o(tes)8 b(:)418
375 y(nom)179 b(co)q(de)150 b(caract)o(\022)-18 b(ere)418
421 y(EOF)170 b(VEOF)115 b(Con)o(trol-D)418 466 y(EOL)171
b(VEOL)116 b(NUL)418 512 y(ERASE)121 b(VERASE)66 b(#)418
558 y(INTR)152 b(VINTR)97 b(DEL)418 603 y(KILL)159 b(VKILL)104
b(@)418 649 y(MIN)173 b(VMIN)118 b(NUL)418 695 y(QUIT)150
b(V)o(QUIT)96 b(Con)o(trol-pip)q(e)418 740 y(ST)m(AR)m(T)123
b(VST)m(AR)m(T)68 b(Con)o(trol-Q)418 786 y(STOP)146 b(VSTOP)91
b(Con)o(trol-S)418 832 y(SUSP)154 b(VSUSP)99 b(disabled)418
877 y(SWTCH)106 b(VSWTCH)51 b(NUL)418 923 y(TIME)148
b(VTIME)93 b(Con)o(trol-D)179 1095 y Fu(11.3.7)55 b(Manipulation)24
b(du)h(driv)n(er)e(logiciel)f(de)i(terminaux)e(et)i(de)g(la)179
1153 y(structure)18 b(termios)236 1229 y(A)n(tten)n(tion)i
FC(toutes)g(ces)f(op)o(\023)-21 b(erations)20 b(se)g(fon)o(t)e(sur)h
(un)g(unique)e(terminal)i(manipul)o(\023)-21 b(e)179
1275 y(par)16 b(plusieurs)f(descripteurs)h(dans)g(plusieurs)f(pro)q
(cessus.)i(A)o(tten)o(tion)e(donc)g(aux)i(con\015its)178
1320 y(\023)-21 b(ev)o(en)o(tuels)14 b(et)h(faites)g(atten)o(tion)g
(\022)-22 b(a)15 b(rep)q(ositionner)f(la)h(ligne)e(apr)o(\022)-21
b(es)16 b(usage.)236 1415 y FB(Les)d(fonctions)i(suiv)n(an)o(tes)f(p)q
(ermetten)o(t)g(de)f(manipuler)j(la)d(structure)h(termios.)179
1490 y FA(#include)i(<termios.h)o(>)179 1536 y(int)i(tcgetattr\()o(int)
e(desc,)i(struct)f(termios)g(*termios\))o(;)236 1608
y FB(extraction)e(des)e(param)o(\022)-18 b(etres)14 b(couran)o(ts.)179
1696 y FA(int)k(tcsetattr\()o(int)e(desc,)i(int)g(option,)f(struct)g
(termios)g(*termios\);)236 1779 y FB(p)q(ositionnement)e(des)f(param)o
(\022)-18 b(etres.)236 1874 y(Le)10 b(param)o(\023)-18
b(etre)11 b FA(option)d FB(p)q(ermet)i(de)h(sp)o(\023)-18
b(eci\014er)12 b(le)e(comp)q(ortemen)o(t)i(de)e(gestion)i(des)e(tamp)q
(ons)h(d'en)o(tr)o(\023)-18 b(ee)179 1920 y(et)13 b(de)g(sortie)h(de)f
(la)h(ligne)21 b(:)179 1992 y FC(TCSANO)o(W)e FB(c)o(hangemen)o(t)c
(imm)o(\023)-18 b(ediat)14 b(des)g(attributs)179 2061
y FC(TCSADRAIN)20 b FB(les)13 b(sorties)h(en)g(cours)f(son)o(t)g(r)o
(\023)-18 b(ealis)o(\023)g(ees)15 b(a)o(v)n(an)o(t)179
2130 y FC(TCSAFLUSH)k FB(idem)13 b(et)g(le)h(tamp)q(on)g(de)f(lecture)h
(est)f(vid)o(\023)-18 b(e.)236 2202 y(La)13 b(primitiv)o(e)179
2278 y FA(int)18 b(tcdrain\(in)o(t)f(desc\);)236 2350
y FB(blo)q(que)h(le)e(pro)q(cessus)h(jusqu'\022)-19 b(a)16
b(ce)f(que)h(tous)g(les)g(caract)o(\022)-18 b(eres)17
b(\022)-19 b(a)15 b(destination)j(du)e(terminal)i(de)d(des-)179
2396 y(cripteur)f FA(desc)d FB(aien)o(t)i(\023)-18 b(et)o(\023)g(e)13
b(transmis.)179 2471 y FA(int)18 b(tcflush\(in)o(t)f(desc,)g(int)i
(option\);)236 2543 y FB(vidange)c(des)f(tamp)q(ons.)179
2589 y(v)n(aleur)g(de)f FA(option)t FB(:)179 2661 y FC(TCIFLUSH)18
b FB(tamp)q(on)c(d'en)o(tr)o(\023)-18 b(ee)179 2730 y
FC(TCOFLUSH)19 b FB(tamp)q(on)14 b(de)f(sortie)179 2799
y FC(TCIOFLUSH)18 b FB(les)c(deux)g(tamp)q(ons.)p eop
%%Page: 90 98
90 97 bop 75 50 a FD(90)763 b Fz(CHAPITRE)14 b(11.)26
b(LA)14 b(GESTION)g(DES)g(TERMINA)o(UX)484 282 y
 currentpoint currentpoint translate 0.51038 0.51038 scale neg exch
neg exch translate
 484
282 a 14 w @beginspecial 0 @llx 0 @lly 441 @urx 74 @ury
4410 @rwi @setspecial
%%BeginDocument: eps/pseudo.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
0 0 441 75 rectclip
-86 -338.122589 translate
86 338.122589 441 73.879242 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 2 def
/crlinred 0.325236 def /crlingrn 0.325236 def /crlinblu 0.325236 def /strinclr true def
0.9 0 0 0.9 30.651031 37.454193 sc4mt astore 0.9 0 0 0.9 30.651031 37.454193 sc5mt astore 178 381 95 -46 0.9 0 0 0.9 49.551033 64.454185 sc6mt astore rstroke
/crlinw 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
0.9 0 0 0.9 30.651031 37.454193 sc4mt astore 0.9 0 0 0.9 30.651031 37.454193 sc5mt astore 45 639 94 -93 0.919149 0 0 0.667742 45.089329 -16.632904 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(processus ) [9 0 5.994003 0 9 0 7.991997 0 7.991997 0 7.001999 0 7.001999 0 9 0 7.001999 0 0 0] 56 618 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 45.051033 -161.445801] dotx
/crlinw 2 def
/crlinred 0.325236 def /crlingrn 0.325236 def /crlinblu 0.325236 def /strinclr true def
0.9 0 0 0.9 30.651031 37.454193 sc4mt astore 0.9 0 0 0.9 30.651031 37.454193 sc5mt astore 307 380 95 -46 0.9 0 0 0.9 49.551033 64.454185 sc6mt astore rstroke
(processus ) [9 0 5.994003 0 9 0 7.991997 0 7.991997 0 7.001999 0 7.001999 0 9 0 7.001999 0 0 0] 56 618 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 396.051025 -160.545776] dotx
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crendarw true def
0.9 0 0 0.9 30.651031 37.454193 sc4mt astore 0.9 0 0 0.9 30.651031 37.454193 sc5mt astore -18 0 182 434 0.9 0 0 0.9 160.251038 3.254189 sc6mt astore ssl
0.9 0 0 0.9 30.651031 37.454193 sc4mt astore 0.9 0 0 0.9 30.651031 37.454193 sc5mt astore 16.007629 -0.571716 153 422 0.9 0 0 0.9 160.251038 3.254189 sc6mt astore ssl
0.9 0 0 0.9 30.651031 37.454193 sc4mt astore 0.9 0 0 0.9 30.651031 37.454193 sc5mt astore -18 0 182 434 0.9 0 0 0.9 38.75103 0.554192 sc6mt astore ssl
0.9 0 0 0.9 30.651031 37.454193 sc4mt astore 0.9 0 0 0.9 30.651031 37.454193 sc5mt astore 16.007645 -0.571716 153 422 0.9 0 0 0.9 38.75103 0.554192 sc6mt astore ssl
0.9 0 0 0.9 30.651031 37.454193 sc4mt astore 0.9 0 0 0.9 30.651031 37.454193 sc5mt astore -18 0 182 434 0.9 0 0 0.9 275.451019 1.454185 sc6mt astore ssl
0.9 0 0 0.9 30.651031 37.454193 sc4mt astore 0.9 0 0 0.9 30.651031 37.454193 sc5mt astore 16.007629 -0.571716 153 422 0.9 0 0 0.9 275.451019 1.454185 sc6mt astore ssl
(Ma\344tre  ) [16.001999 0 7.992004 0 5.003998 0 5.003998 0 5.994003 0 7.992004 0 4.5 0 0 0] 186 399 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 56.75103 24.854187] dotx
(Esclave ) [10.997986 0 7.002014 0 7.992004 0 5.003998 0 7.631989 0 8.730011 0 7.992004 0 0 0] 316 405 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 56.75103 20.354187] dotx
(/dev/pty) [5.003998 0 9 0 7.541992 0 9 0 5.003998 0 9 0 5.003998 0 0 0] 181 314 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 54.051033 59.954185] dotx
/txtdraw true def
/txlndraw true def
(xy ) [7.992004 0 7.992004 0 0 0] 239.553986 314 /Times-Italic [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 54.051033 59.954185] dotx
/txtdraw true def
/txlndraw true def
(/dev/tty) [5.003998 0 9 0 7.541992 0 9 0 5.003998 0 5.003998 0 5.003998 0 0 0] 330 316 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 37.851032 59.054188] dotx
/txtdraw true def
/txlndraw true def
(xy ) [7.992004 0 7.992004 0 0 0] 384.557983 316 /Times-Italic [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 37.851032 59.054188] dotx
/txtdraw true def
/txlndraw true def
(A ) [12.996002 0 0 0] 84 343 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 43.25103 59.054188] dotx
(B ) [12.006012 0 0 0] 478 341 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.9 0 0 0.9 42.351032 57.254189] dotx
/crlinw 1 def
/crendarw false def
0.9 0 0 0.9 30.651031 37.454193 sc4mt astore 0.9 0 0 0.9 30.651031 37.454193 sc5mt astore 45 639 94 -93 0.919149 0 0 0.667742 398.789337 -16.632904 sc6mt astore rstroke
end
grestore
%%EndDocument
 @endspecial 484 282 a
 currentpoint currentpoint translate 1 0.51038 div 1 0.51038 div scale
neg exch neg exch translate
 484 282 a 427 374 a Fq(Fig.)f
FD(11.2)g({)g Fp(Un)i(exemple)h(d'utilisation)e(d'un)h(pseudo)h
(terminal)179 506 y Fu(11.3.8)55 b(Manipulation)18 b(de)h(la)f(vitesse)
f(de)i(transmission)236 576 y FB(Le)c(mo)q(de)g(de)g(co)q(dage)h(de)f
(la)h(vitesse)e(\023)-18 b(etan)o(t)15 b(complexe,)h(elle)h(se)d
(manipule)k(en)d(deux)f(\023)-18 b(etap)q(es,)15 b(enco-)179
622 y(dage/d)o(\023)-18 b(eco)q(de,)14 b(p)q(ositionnement/r)o(\023)-18
b(ecup\023)g(erati)q(on.)236 667 y(Enco)q(dage:)179 729
y FA(speed_t)17 b(cfgetispe)o(ed)o(\(co)o(nst)f(struct)h(termios)g
(*termios\))o(;)179 775 y(speed_t)g(cfgetospe)o(ed)o(\(co)o(nst)f
(struct)h(termios)g(*termios\))o(;)236 837 y FB(P)o(ermet)c(de)h(lire)g
(la)f(vitesse)i(dans)e(la)h(structure)g(termios.)179
945 y FA(int)k(cfsetispee)o(d\(c)o(on)o(st)e(struct)i(*termios)o(,)f
(speed_t)g(vitesse\);)179 991 y(int)h(cfsetospee)o(d\(c)o(on)o(st)e
(struct)i(*termios)o(,)f(speed_t)g(vitesse\);)236 1053
y FB(p)q(ermet)d(de)f(p)q(ositionner)j(la)d(vitesse)h(dans)g(la)g
(structure)g(termios.)236 1099 y(P)o(ositionnemen)o(t/r)o(\023)-17
b(ecup)o(\023)f(era)q(tion)23 b(de)c(la)i(structure)f(termios)g(par)f
(les)i(primitiv)o(es)g FA(tcgetattr)36 b FB(et)179 1145
y FA(tcsetattr)o FB(.)179 1276 y Fv(11.4)66 b(Pseudo-terminaux)236
1358 y FB(Les)12 b(pseudo-terminaux)j(son)o(t)d(un)g(m)o(\023)-18
b(ecanisme)13 b(p)q(ermettan)o(t)g(une)f(connection)i(en)o(tre)e(pro)q
(cessus,)g(qui)179 1404 y(prend)19 b(les)g(attributs)g(d)o(\023)-18
b(e\014nis)20 b(dans)f(la)g(comm)o(unication)i(p)q(our)e(des)f
(terminaux)i(ph)o(ysiques.)g(D'o)q(\022)-20 b(u)19 b(le)179
1450 y(nom)12 b(de)g(pseudo-terminaux.)i(Un)e(pseudo-terminal)j(est)d
(comp)q(os)o(\023)-18 b(e)12 b(de)g(deux)h(en)o(tit)o(\023)-18
b(es)13 b(app)q(el)o(\023)-18 b(ees)14 b(pseudo-)179
1495 y(terminal)f(ma)l(^)-15 b(\020tre)13 b(et)f(pseudo-terminal)j
(escla)o(v)o(e,)e(qui)g(formen)o(t)f(les)g(deux)h(extr)o(\023)-18
b(emit)o(\023)g(es)13 b(de)f(la)h(connexion.)179 1541
y(L'ouv)o(erture)f(des)g(deux)g(extr)o(\023)-18 b(emit)o(\023)g(es)13
b(suit)g(les)f(r)o(\022)-18 b(egles)12 b(suiv)n(an)o(tes)20
b(:)11 b(Le)h(ma)l(^)-15 b(\020tre)12 b FA(/dev/pty)p
Fb(xy)c FB(ne)j(p)q(eut)h(^)-18 b(etre)179 1587 y(ouv)o(ert)12
b(qu'une)h(seule)g(fois.)f(L'escla)o(v)o(e)g FA(/dev/tty)p
Fb(xy)c FB(ne)k(p)q(eut)f(^)-18 b(etre)12 b(ouv)o(ert)g(que)g(si)h(le)f
(ma)l(^)-15 b(\020tre)12 b(corresp)q(on-)179 1632 y(dan)o(t)h(est)g
(ouv)o(ert.)236 1678 y(Les)g(pseudo-terminaux)j(on)o(t)d(des)h(noms)f
(o)q(\022)-20 b(u)14 b FA(x)19 b Fr(2)g FA([p-t])11 b
FB(et)i FA(y)19 b Fr(2)g FA([0-9a-f])p FB(.)236 1724
y(Dans)c(la)g(\014gure)g(11.2,)f(un)29 b FC(pseudo-terminal)12
b FB(est)i(utilis)o(\023)-18 b(e)17 b(p)q(our)e(faire)f(comm)o(uniquer)
i(deux)f(pro-)179 1769 y(cessus.)e(T)m(outes)h(les)f(\023)-18
b(ecritures)14 b(de)f(A)g(sur)h(le)f(ma)l(^)-15 b(\020tre)14
b(son)o(t)g(lisibles)i(sur)e(l'escla)o(v)o(e)h(par)e(le)h(pro)q(cessus)
g(B)g(et)179 1815 y(r)o(\023)-18 b(ecipro)q(quemen)o(t.)12
b(Exactemen)o(t)f(comme)f(si)h(l'on)f(a)o(v)n(ait)h(utilis)o(\023)-18
b(e)13 b(deux)e(tub)q(es.)f(De)h(plus,)g(p)q(our)g(le)f(pro)q(cessus)
179 1861 y(B)16 b(l'en)o(tr)o(\023)-18 b(ee)16 b(et)g(la)g(sortie)h
(standard)g(son)o(t)f(p)q(er\030)-17 b(cues)17 b(comme)f(un)g(terminal)
i(qui)f(se)f(comp)q(orte)g(normale-)179 1906 y(men)o(t)e(\022)-19
b(a)14 b(l'app)q(el)h(des)g(fonctions)g(de)f(manipulatio)q(n)j(du)d
(driv)o(er)h(de)f(terminaux)i(comme)e FA(tcsetattr)o
FB(.)d(Et)179 1952 y(les)i(caract)o(\022)-18 b(eres)14
b(de)f(con)o(tr^)-19 b(ole)15 b(son)o(t)e(e\013ectiv)o(emen)o(t)h
(transform)o(\023)-18 b(es)14 b(en)f(signaux.)179 2083
y Fv(11.5)66 b(La)22 b(primitiv)o(e)j Fm(ioctl)236 2166
y FB(La)18 b(primitiv)o(e)i FA(ioctl)35 b FB(p)q(ermet)18
b(de)g(r)o(\023)-18 b(ealiser)19 b(un)f(certain)h(nom)o(bre)f(d'op)o
(\023)-18 b(erations)20 b(sur)e(les)g(\014c)o(hiers)179
2211 y(sp)o(\023)-18 b(eciaux.)12 b(A)d(l'in)o(v)o(erse)j(de)f
FA(read)d FB(et)i FA(write)e FB(qui)j(son)o(t)g(p)q(olymorphes)i(et)d
(qui)h(s'appliquen)o(t)i(iden)o(tiquemen)o(t)179 2257
y(sur)d(tous)h(les)g(\014c)o(hiers)h(\(sp)o(\023)-18
b(eciaux)12 b(ou)e(non\),)h(la)g(primitiv)o(e)i FA(ioctl)8
b FB(a)i(des)h(argmen)o(t)f(di\013)o(\023)-18 b(eren)o(ts)12
b(p)q(our)g(c)o(haque)179 2303 y(t)o(yp)q(e)h(de)g(\014c)o(hier)i(sp)o
(\023)-18 b(ecial.)236 2348 y FA(#include<sy)o(s/)o(ioc)o(tl)o(.h>)179
2440 y(int)18 b(ioctl\(int)e(desc,)i(int)h(requete,)d(...)i(/*)h(args)f
(*/\);)p eop
%%Page: 91 99
91 98 bop 1796 50 a FD(91)179 479 y Fw(Chapitre)32 b(12)179
687 y Fy(Les)38 b(signaux)236 904 y FB(Les)13 b(signaux)i(son)o(t)f(un)
f(m)o(\023)-18 b(ecanisme)14 b(async)o(hrone)h(de)e(comm)o(unication)j
(in)o(ter-pro)q(cessus.)236 997 y(In)o(tuitiv)o(emen)o(t,)g(il)e(son)o
(t)g(comparables)i(\022)-19 b(a)13 b(des)h(sonneries,)h(les)f
(di\013eren)o(tes)i(sonneries)f(indiquan)o(t)h(des)178
1042 y(\023)-18 b(ev)o(\022)g(enemen)o(ts)13 b(di\013)o(\023)-18
b(eren)o(ts.)14 b(Les)f(signaux)h(son)o(t)f(en)o(v)o(o)o(y)o(\023)-18
b(es)14 b(\022)-19 b(a)12 b(un)h(ou)g(plusieurs)i(pro)q(cessus.)f(Ce)e
(signal)j(est)d(en)179 1088 y(g)o(\023)-18 b(en)o(\023)g(eral)14
b(asso)q(ci)o(\023)-18 b(e)15 b(\022)-19 b(a)13 b(un)f(\023)-18
b(ev)o(\022)g(enemen)o(t.)236 1135 y(P)o(eu)11 b(p)q(ortables)h(en)o
(tre)e(BSD)h(et)f(A)m(TT,)f(ils)i(deviennen)o(t)h(plus)g(commo)q(des)f
(\022)-19 b(a)10 b(utiliser)i(et)e(p)q(ortables)i(a)o(v)o(ec)179
1180 y(la)g(norme)h(POSIX)f(qui)h(utilise)h(la)e(notion)i(utile)f(de)f
(v)o(ecteur)h(de)f(signaux)i(et)e(qui)h(fournit)g(un)f(m)o(\023)-18
b(ecanisme)179 1226 y(de)13 b(masquage)h(automatique)h(p)q(endan)o(t)f
(les)g(pro)q(c)o(\023)-18 b(edures)15 b(de)e(traitemen)o(t)h(\(comme)f
(BSD\).)236 1273 y(Un)g(signal)i(est)e(en)o(v)o(o)o(y)o(\023)-18
b(e)14 b(\022)-19 b(a)13 b(un)h(pro)q(cessus)g(en)f(utilisan)o(t)j
(l'app)q(el)e(syst)o(\022)-18 b(eme)8 b(:)198 1339 y
FA(kill\(int)17 b(pid,)h(int)g(signal\);)236 1404 y(signal)10
b FB(est)j(un)f(n)o(um)o(\023)-18 b(ero)13 b(compris)h(en)o(tre)e(1)h
(et)f FA(NSIG)f FB(\(d)o(\023)-18 b(e\014ni)13 b(dans)h
FA(<signal.)o(h>)p FB(\))9 b(et)j FA(pid)f FB(le)i(n)o(um)o(\023)-18
b(ero)179 1450 y(du)13 b(pro)q(cessus.)236 1542 y(Le)k(pro)q(cessus)h
(vis)o(\023)-18 b(e)17 b(re\030)-17 b(coit)18 b(le)f(signal)h(sous)f
(forme)g(d'un)g(drap)q(eau)h(p)q(ositionn)o(\023)-18
b(e)19 b(dans)f(son)f(blo)q(c)g(de)179 1588 y(con)o(tr^)-19
b(ole.)179 1633 y(Le)13 b(pro)q(cessus)h(est)f(in)o(terrompu)i(et)d(r)o
(\023)-18 b(ealise)14 b(\023)-18 b(ev)o(en)o(tuellemen)o(t)15
b(un)f(traitemen)o(t)g(de)f(ce)g(signal.)236 1726 y(On)f(p)q(eut)g
(consid)o(\023)-18 b(erer)13 b(les)g(signaux)g(comme)f(des)g(in)o
(terruptions)i(logiciell)q(es,)g(ils)f(in)o(terromp)q(en)o(t)g(le)f
(\015ot)179 1771 y(normal)k(d'un)f(pro)q(cessus)h(mais)f(ne)g(son)o(t)g
(pas)g(trait)o(\023)-18 b(es)15 b(de)g(fa\030)-17 b(con)15
b(sync)o(hrone)h(comme)f(les)g(in)o(terruptions)179 1817
y(mat)o(\023)-18 b(erielles.)179 1978 y Fu(12.0.1)55
b(Pro)n(v)n(enance)19 b(des)f(signaux)236 2049 y FB(Certains)13
b(signaux)i(p)q(euv)o(en)o(t)d(^)-18 b(etre)12 b(lanc)o(\023)-18
b(es)14 b(\022)-19 b(a)12 b(partir)h(d'un)g(terminal)g(gr^)-19
b(ace)13 b(aux)g(caract)o(\022)-18 b(eres)13 b(sp)o(\023)-18
b(eciaux)179 2095 y(comme)14 b FA(intr)p FB(,)d FA(quit)h
FB(don)o(t)i(la)h(frapp)q(e)f(est)f(transform)o(\023)-18
b(ee)15 b(en)e(l'en)o(v)o(oi)j(des)e(signaux)h FA(SIGINT)c
FB(et)j FA(SIGQUIT)p FB(.)193 2141 y(D'autres)g(son)o(t)h(d)q(^)-20
b(us)15 b(\022)-19 b(a)14 b(des)h(causes)g(in)o(ternes)g(au)g(pro)q
(cessus,)g(par)f(exemple)8 b(:)14 b FA(SIGSEGV)d FB(qui)16
b(est)e(en)o(v)o(o)o(y)o(\023)-18 b(e)179 2186 y(en)13
b(cas)g(d'erreur)h(d'adressage,)f FA(SIGFPE)e FB(division)16
b(par)d(z)o(\023)-18 b(ero)13 b(\(Floating)i(P)o(oin)o(t)f
(Exception\).)236 2233 y(En\014n)g(certains)g(son)o(t)f(d)q(^)-20
b(us)13 b(\022)-19 b(a)13 b(des)f(\023)-18 b(ev)o(\022)g(enemen)o(ts)13
b(comme)g(la)g(d)o(\023)-18 b(econnection)15 b(de)e(la)g(ligne)i(\(le)e
(terminal\))179 2279 y(utilis)o(\023)-18 b(e)9 b(:)j(si)i(le)g(pro)q
(cessus)h(leader)f(d'un)g(group)q(e)h(de)e(pro)q(cessus)i(est)e(d)o
(\023)-18 b(econnect)o(\023)g(e,)14 b(il)h(en)o(v)o(oie)f(\022)-19
b(a)14 b(l'ensem)o(ble)179 2324 y(des)f(pro)q(cessus)h(de)g(son)f
(group)q(e)h(le)g(signal)h FA(SIGHUP)10 b FB(\(Hangup)k(=)f(raccro)q(c)
o(her\).)179 2439 y Fu(12.0.2)55 b(Gestion)18 b(in)n(terne)g(des)g
(signaux)236 2511 y FB(C'est)g(dans)g(le)h(blo)q(c)g(de)f(con)o(tr^)-19
b(ole)19 b(\(BCP\))e(de)i(c)o(haque)f(pro)q(cessus)i(que)e(l'on)g
(trouv)o(e)h(la)f(table)h(de)179 2557 y(gestion)e(des)f(signaux)h
(\(atten)o(tion,)g(sous)f(System)g(V)g Ft(<)f FB(V.4,)g(la)h(table)h
(de)f(gestion)h(des)f(pro)q(cessus)h(est)179 2602 y(dans)d(la)f
FA(zone)18 b(u)p FB(,)12 b(c'est)h(\022)-19 b(a)13 b(dire)h(dans)g
(l'espace-m)o(\023)-18 b(emoire)15 b(du)e(pro)q(cessus\).)236
2649 y(Cette)h(table)h(con)o(tien)o(t,)f(p)q(our)h(c)o(haque)g(signal)h
(d)o(\023)-18 b(e\014ni)15 b(sur)f(la)h(mac)o(hine,)g(une)f(structure)g
FA(sigvec)e FB(sui-)179 2695 y(v)n(an)o(te)7 b(:)238
2761 y FA({)316 2806 y(bit)19 b(pendant;)p eop
%%Page: 92 100
92 99 bop 75 50 a FD(92)1117 b Fz(CHAPITRE)14 b(12.)26
b(LES)14 b(SIGNA)o(UX)316 166 y FA(void)k(\(*traiteme)o(nt\))o(\(i)o
(nt\))o(;)238 212 y(})236 269 y FB(En)c(BSD)f(et)g(POSIX,)g(on)g(a)g
(un)g(c)o(hamp)h(suppl)o(\023)-18 b(emen)o(taire)10 b(:)i
FA(bit)18 b(masque;)179 315 y FB(Le)12 b(drap)q(eau)i
FA(pendant)c FB(indique)15 b(que)e(le)g(pro)q(cessus)h(a)f(re\030)-17
b(cu)13 b(un)g(signal,)h(mais)f(n'a)g(pas)g(encore)g(eu)g(l'o)q(cca-)
179 361 y(sion)h(de)f(prendre)h(en)f(compte)h(ce)f(signal.)236
452 y(Remarque)8 b(:)i(comme)h FA(pendant)d FB(est)i(un)h(unique)i
(bit,)e(si)g(un)g(pro)q(cessus)h(re\030)-17 b(coit)11
b(plusieurs)i(fois)e(le)h(m)o(^)-18 b(eme)179 498 y(signal)11
b(a)o(v)n(an)o(t)f(de)f(le)h(prendre)g(en)g(compte,)f(alors)h(il)h(n'y)
e(a)g(pas)h(m)o(\023)-18 b(emorisation)11 b(des)f(r)o(\023)-18
b(eceptions)11 b(successiv)o(es,)179 543 y(un)i(seul)h(traitemen)o(t)g
(sera)f(donc)h(r)o(\023)-18 b(ealis)o(\023)g(e.)236 589
y(Comme)10 b(nous)h(l'a)o(v)o(ons)g(vu)g(dans)g(le)g(graphe)g(d')o
(\023)-18 b(etat)10 b(des)g(pro)q(cessus,)h(la)g(prise)g(en)g(compte)f
(des)h(signaux)179 635 y(se)j(fait)g(au)g(passage)h(de)f(l')o(\023)-18
b(etat)14 b(actif)g(no)o(y)o(au)h(\022)-19 b(a)14 b(l')o(\023)-18
b(etat)14 b(actif)g(utilisateur.)i(P)o(ourquoi)g(la)e(prise)h(en)f
(compte)179 680 y(de)f(signaux)i(se)e(fait-elle)i(uniquemen)o(t)g(\022)
-19 b(a)13 b(ce)g(momen)o(t)g(l\022)-19 b(a)s(?)236 772
y FC(P)o(arce)16 b(que)179 817 y FB(Une)g(sauv)o(egarde)i(de)e(la)h
(pile)h(utilisateur)h(et)d(du)h(con)o(texte)g(a)e(\023)-18
b(et)o(\023)g(e)16 b(e\013ectu)o(\023)-18 b(ee)18 b(quand)f(le)g(pro)q
(cessus)h(est)179 863 y(pass)o(\023)-18 b(e)14 b(en)f(mo)q(de)h(no)o(y)
o(au.)g(Il)g(n'est)f(pas)h(n)o(\023)-18 b(ecessaire)15
b(de)f(faire)g(un)g(nouv)o(eau)g(c)o(hangemen)o(t)h(de)f(con)o(texte.)f
(Il)179 909 y(est)g(facile)i(p)q(our)f(traiter)g(le)g(signal)h(de)f(r)o
(\023)-18 b(ealiser)15 b(imm)o(\023)-18 b(ediatemen)o(t)15
b(une)f(nouv)o(elle)i(augmen)o(tation)f(de)f(pile)179
954 y(p)q(our)f(le)g(traitemen)o(t)h(du)f(signal,)h(de)f(plus)h(la)f
(pile)h(no)o(y)o(au)g(est)e(vide)i(\(remarque)20 b(:)12
b(en)g(POSIX,)g(il)i(devien)o(t)179 1000 y(p)q(ossible)h(de)e(cr)o
(\023)-18 b(eer)13 b(une)h(pile)h(sp)o(\023)-18 b(eciale)15
b(p)q(our)e(les)h(fonctions)g(de)g(traitemen)o(t)g(de)f(signaux\).)236
1046 y(L'app)q(el)j(\022)-19 b(a)15 b(la)g(fonction)h(de)f(traitemen)o
(t)g(est)g(r)o(\023)-18 b(ealis)o(\023)g(e)16 b(de)f(fa\030)-17
b(con)15 b(\022)-19 b(a)15 b(ce)f(qu'au)h(retour)g(de)g(la)h(fonction,)
179 1091 y(le)i(pro)q(cessus)i(con)o(tin)o(ue)f(son)g(ex)o(\023)-18
b(ecution)20 b(normalemen)o(t)f(en)f(p)q(oursuiv)n(an)o(t)j(ce)d(qui)g
(\023)-18 b(etait)19 b(en)f(cours)g(de)179 1137 y(r)o(\023)-18
b(ealisation)19 b(a)o(v)n(an)o(t)d(la)g(r)o(\023)-18
b(eception)18 b(du)e(signal.)h(Si)g(l'on)g(v)o(eut)f(que)g(le)g(pro)q
(cessus)i(se)d(p)q(oursuiv)o(e)j(dans)f(un)179 1183 y(autre)c(con)o
(texte)h(\(de)f(pile\),)h(il)g(doit)g(g)o(\023)-18 b(erer)13
b(lui-m)o(^)-18 b(eme)15 b(la)e(restauration)i(de)e(ce)g(con)o(texte.)
236 1228 y(La)h(primitiv)o(e)i FA(longjmp)11 b FB(p)q(eut)j(p)q
(ermettre)g(de)g(r)o(\023)-18 b(ealiser)16 b(des)e(c)o(hangemen)o(ts)h
(de)f(con)o(texte)g(in)o(terne)h(au)179 1274 y(pro)q(cessus,)f(gr^)-19
b(ace)13 b(\022)-19 b(a)13 b(un)h(d)o(\023)-18 b(esempilemen)o(t)15
b(brutal.)236 1320 y(P)o(endan)o(t)k(ce)e(c)o(hangemen)o(t)i(d')o(\023)
-18 b(etat,)17 b(la)h(table)g(de)g(gestion)g(des)g(signaux)i(du)d(pro)q
(cessus)i(est)e(test)o(\023)-18 b(ee)179 1365 y(p)q(our)15
b(la)f(pr)o(\023)-18 b(esence)15 b(d'un)g(signal)h(re\030)-17
b(cu)14 b(mais)h(non)f(trait)o(\023)-18 b(e)15 b(\(c'est)f(un)g(simple)
i(v)o(ecteur)e(de)h(bit)f(p)q(our)h(le)g(bit)179 1411
y(p)q(endan)o(t,)h(et)f(donc)h(testable)h(en)e(une)h(seule)h
(instruction,)g(ceci)f(doit)g(^)-18 b(etre)15 b(fait)g(rapidemen)o(t)i
(comme)f(le)179 1457 y(test)d(de)g(r)o(\023)-18 b(eception)14
b(d'un)g(signal)h(est)e(souv)o(en)o(t)h(r)o(\023)-18
b(ealis)o(\023)g(e\).)179 1502 y(Si)12 b(un)g(signal)h(a)e(\023)-18
b(et)o(\023)g(e)11 b(re\030)-17 b(cu)12 b(\()f(et)g(qu'il)i(n'est)e
(pas)h(masqu)o(\023)-18 b(e\),)12 b(alors)g(la)g(fonction)h(de)e
(traitemen)o(t)i(asso)q(ci)o(\023)-18 b(ee)13 b(est)179
1548 y(r)o(\023)-18 b(ealis)o(\023)g(ee.)14 b(Le)f(masquage)h(p)q
(ermet)g(au)f(pro)q(cessus)h(de)f(temp)q(oriser)i(la)e(mise)h(en)f
(\034euvre)h(du)g(traitemen)o(t.)179 1656 y Fu(12.0.3)55
b(L'en)n(v)n(oi)18 b(de)g(signaux)28 b(:)18 b(la)h(primitiv)m(e)d(kill)
277 1726 y FA(kill\(int)g(pid,)i(int)h(sig\))236 1789
y FB(Il)14 b(y)f(a)g(NSIG)g(signaux)i(sur)e(une)g(mac)o(hine,)i(d)o
(\023)-18 b(eclar)o(\023)g(es)14 b(dans)g(le)f(\014c)o(hier)h
(/usr/includ)q(e/si)q(gna)q(l.h.)179 1835 y(La)f(v)n(aleur)h(de)f
FA(pid)f FB(indique)j(le)f FA(PID)e FB(du)h(pro)q(cessus)h(auquel)h(le)
f(signal)h(est)d(en)o(v)o(o)o(y)o(\023)-18 b(e.)179 1895
y FC(0)21 b FB(T)m(ous)13 b(les)g(pro)q(cessus)i(du)e
FC(group)q(e)g FB(du)g(pro)q(cessus)i(r)o(\023)-18 b(ealisan)o(t)15
b(l'app)q(el)g FA(kill)179 1952 y FC(1)21 b FB(En)13
b(syst)o(\022)-18 b(eme)13 b(V.4)g(tous)g(les)h(pro)q(cessus)g(du)g
(syst)o(\022)-18 b(eme)13 b(sauf)g(0)g(et)g(1)179 2009
y FC(pid)g(p)q(ositif)19 b FB(le)14 b(pro)q(cessus)g(du)g(pid)g(indiqu)
o(\023)-18 b(e)179 2067 y FC(pid)13 b(n)o(\023)-21 b(egatif)20
b FB(tous)13 b(les)h(pro)q(cessus)h(du)e(group)q(e)h
Fr(j)e FB(pid)j Fr(j)179 2126 y FB(le)f(param)o(\022)-18
b(etre)13 b FA(sig)f FB(est)h(in)o(terpr)o(\023)-18 b(et)o(\023)g(e)15
b(comme)e(un)h(signal)h(si)f FA(sig)e Fr(2)h FB([0-NSIG],)f(ou)h(comme)
h(une)f(demande)179 2172 y(d'information)h(si)f FA(sig)f
FB(=)g(0)g(\(suis-je)i(autoris)o(\023)-18 b(e)13 b(\022)-19
b(a)13 b(en)o(v)o(o)o(y)o(er)g(un)g(signal)i(\022)-19
b(a)12 b(ce\(s\))h(pro)q(cessus)s(?\).)h(Comme)e(un)179
2218 y(param)o(\022)-18 b(etre)13 b(erron)o(\023)-18
b(e)14 b(sinon.)236 2309 y(La)h(fonction)g FA(raise\(int)i(signal\))11
b FB(est)j(un)h(raccourci)h(p)q(our)f FA(kill\(getpi)o(d\()o(\),)h
(signal\))p FB(,)11 b(le)k(pro-)179 2355 y(cessus)e(s'en)o(v)o(oie)i
(\022)-19 b(a)13 b(lui-m)o(^)-18 b(eme)14 b(un)f(signal.)236
2446 y(Remarquez)h(que)f(l'on)f(p)q(eut)h(r)o(\023)-18
b(e)o(\023)g(ecrire)13 b FA(kill\(0,)k(signal\))10 b
FB(par)i FA(kill\(-getp)o(id\()o(\),)k(signal\))p FB(.)9
b(Rap-)179 2492 y(p)q(el)e(:)13 b(les)g(PID)h(son)o(t)f(toujours)h(p)q
(ositifs.)179 2666 y Fv(12.1)66 b(La)22 b(gestion)g(simpli\014)o(\023)
-32 b(ee)23 b(a)n(v)n(ec)g(la)f(fonction)h Fm(signal)236
2749 y FB(ZZZ)8 b(:)13 b(cette)g(section)h(est)f(historique,)i
(utiliser)g(la)f(norme)f(POSIX)g(d)o(\023)-18 b(ecrite)14
b(plus)g(loin.)179 2806 y FA(ancien)j(C)i(:)h(\(*signal)o(\(si)o(g,)c
(func\)\)\(\))p eop
%%Page: 93 101
93 100 bop 75 50 a Fz(12.2.)26 b(PR)o(OBL)338 39 y(\022)333
50 y(EMES)15 b(DE)f(LA)f(GESTION)i(DE)e(SIGNA)o(UX)h(A)m(TT)611
b FD(93)395 166 y FA(int)18 b(sig;)395 212 y(int)g(\(*func\)\(\);)179
303 y(ANSI)g(C)h(:)59 b(void)18 b(\(*signal\()o(in)o(t)f(sig,)h(void)g
(\(*action\))o(\(i)o(nt\))o(\)\)\()o(in)o(t\);)236 365
y FB(La)d(fonction)h FA(signal)c FB(p)q(ermet)j(de)f(sp)o(\023)-18
b(eci\014er)16 b(ou)f(de)g(conna)l(^)-15 b(\020tre)16
b(le)f(comp)q(ortemen)o(t)h(du)f(pro)q(cessus)h(\022)-19
b(a)179 411 y(la)13 b(r)o(\023)-18 b(eception)14 b(d'un)g(signal)g
(donn)o(\023)-18 b(e,)14 b(il)g(faut)e(donner)i(en)f(param)o(\022)-18
b(etre)14 b(\022)-19 b(a)12 b(la)i(fonction)g(le)f(n)o(um)o(\023)-18
b(ero)13 b(du)h(signal)179 456 y FA(sig)f FB(que)i(l'on)g(v)o(eut)f(d)o
(\023)-18 b(etourner)16 b(et)e(la)h(fonction)h(de)e(traitemen)o(t)i
FA(action)11 b FB(\022)-19 b(a)15 b(r)o(\023)-18 b(ealiser)16
b(\022)-19 b(a)14 b(la)h(r)o(\023)-18 b(eception)16 b(du)179
502 y(signal.)236 593 y(T)m(rois)e(p)q(ossibili)q(t)o(\023)-18
b(es)16 b(p)q(our)d(ce)g(param)o(\022)-18 b(etre)14 b
FA(action)179 655 y FC(SIG)p 259 655 14 2 v 15 w(DFL)20
b FB(Comp)q(ortemen)o(t)13 b(par)h(d)o(\023)-18 b(efaut,)13
b(plusieurs)i(p)q(ossibili)q(t)o(\023)-18 b(es)353 709
y FC(exit)13 b FB(Le)g(pro)q(cessus)h(se)f(termine)h(\(a)o(v)o(ec)f(si)
h(p)q(ossible)h(la)f(r)o(\023)-18 b(ealisation)16 b(d'un)d(core\))353
762 y FC(ignore)f FB(Le)h(pro)q(cessus)i(ignore)f(le)g(signal)353
816 y FC(pause)f FB(Susp)q(ension)j(du)d(pro)q(cessus)353
870 y FC(con)o(tin)o(ue)e FB(Reprise)j(du)g(pro)q(cessus)g(si)f(il)h
(\023)-18 b(etait)13 b(susp)q(endu.)179 931 y FC(SIG)p
259 931 V 15 w(IGN)19 b FB(le)14 b(signal)h(est)e(ignor)o(\023)-18
b(e.)270 977 y(Remarque)8 b(:)k(les)i(signaux)h(SIGKILL,)d(SIGSTOP)i
(ne)f(p)q(euv)o(en)o(t)h(pas)e(^)-18 b(etre)13 b(ignor)o(\023)-18
b(es.)179 1038 y FC(HANDLER)20 b FB(Une)13 b(fonction)h(de)f(v)o(otre)g
(cru.)179 1149 y Fu(12.1.1)55 b(Un)19 b(exemple)236 1218
y FB(Exemple)e(p)q(our)e(rendre)h(un)f(programme)h(insensibl)q(e)h
(\022)-19 b(a)15 b(la)h(frapp)q(e)g(du)f(caract)o(\022)-18
b(ere)15 b(de)h(con)o(tr^)-19 b(ole)16 b(in)o(tr)179
1264 y(sur)d(le)h(terminal)g(de)g(con)o(tr^)-19 b(ole)14
b(du)f(pro)q(cessus.)179 1326 y FA(void)18 b(got_the_b)o(lod)o(y_)o
(sig)o(nal)o(\(i)o(nt)e(n\))j({)257 1371 y(signal\(SIG)o(INT)o(,)d
(got_the_blo)o(dy)o(_si)o(gn)o(al\))o(;)257 1417 y(printf\(")h
(gotcha!!)36 b(your)i(\(\045d\))18 b(signal)f(is)i(useless)e(\\n"\);)
179 1463 y(})179 1554 y(main\(\))g({)257 1600 y(signal\(SIG)o(INT)o(,)f
(got_the_blo)o(dy)o(_si)o(gn)o(al\))o(;)257 1645 y(printf\(")h(kill)h
(me)h(now)f(!!)h(\\n"\);)257 1691 y(for\(;;\);)179 1737
y(})236 1798 y FB(une)14 b(v)o(ersion)g(plus)g(\023)-18
b(el)o(\023)g(egan)o(te)14 b(et)f(plus)h(\014able)8 b(:)257
1860 y FA(signal\(SIG)o(INT)o(,)16 b(SIG_IGN\);)179 1990
y Fv(12.2)66 b(Probl)o(\022)-32 b(emes)21 b(de)h(la)h(gestion)f(de)h
(signaux)g(A)-6 b(TT)236 2073 y FB(Les)12 b(ph)o(\023)-18
b(enom)o(\022)g(enes)13 b(suiv)n(an)o(ts)g(son)o(t)e(d)o(\023)-18
b(ecrits)12 b(comme)g(des)g(probl)o(\022)-18 b(emes)12
b(mais)h(la)e(norme)h(POSIX)f(p)q(ermet)179 2119 y(d'en)i(conserv)o(er)
h(certains,)g(mais)g(fournit)g(aussi)g(les)g(mo)o(y)o(ens)f(de)h(les)e
(\023)-18 b(eviter.)219 2181 y(1.)21 b(un)14 b(signal)h(est)e(rep)q
(ositionn)o(\023)-18 b(e)15 b(\022)-19 b(a)13 b(sa)h(v)n(aleur)g(par)f
(d)o(\023)-18 b(efaut)13 b(au)h(d)o(\023)-18 b(ebut)14
b(de)f(son)g(traitemen)o(t)h(\(handler\).)270 2258 y
FA(#include)j(<signal.h)o(>)270 2350 y(traitement)o(\(\))36
b({)349 2395 y(printf\(")o(PID)16 b(\045d)j(en)g(a)g(capture)e(un)i
(\\n",)f(getpid\(\)\))o(;)270 2441 y(->)97 b(reception)17
b(du)h(deuxieme)f(signal,)g(realisati)o(on)f(d'un)i(exit)349
2487 y(signal\(S)o(IGI)o(NT,)e(traitemen)o(t\);)270 2532
y(})270 2624 y(main\(\))h({)349 2669 y(int)h(ppid;)349
2715 y(signal\(S)o(IGI)o(NT,)o(tr)o(ait)o(em)o(ent)o(\);)349
2761 y(if)g(\(fork\(\)==0\))349 2806 y({/*)g(attendre)f(que)h(pere)g
(ait)h(realise)d(son)j(nice\(\))e(*/)p eop
%%Page: 94 102
94 101 bop 75 50 a FD(94)1117 b Fz(CHAPITRE)14 b(12.)26
b(LES)14 b(SIGNA)o(UX)427 166 y FA(sleep\(5\);)427 212
y(ppid)k(=)h(getppid\(\);)d(/*)j(numero)e(de)i(pere)f(*/)427
258 y(for\(;;\))505 303 y(if)h(\(kill\(ppid)o(,SI)o(GIN)o(T\))d(==)j
(-1\))584 349 y(exit\(\);)349 395 y(})270 440 y(/*)g(pere)f(ralenti)f
(pour)h(un)h(conflit)e(plus)h(sur)g(*/)349 486 y(nice\(10\))o(;)349
532 y(for\(;;\))e(pause\(\);)37 b(<-)18 b(reception)f(du)h(premier)f
(signal)270 577 y(/*)i(pause)f(c'est)f(mieux)h(qu'une)f(attente)g
(active)g(*/)270 623 y(})270 703 y FB(Si)g(l'on)g(c)o(herc)o(he)f(\022)
-19 b(a)16 b(corriger)h(ce)f(d)o(\023)-18 b(efaut,)16
b(on)h(rep)q(ositionne)i(la)d(fonction)h FA(traitement)12
b FB(au)17 b(d)o(\023)-18 b(ebut)270 749 y(du)14 b(traitemen)o(t)h(du)f
(signal.)h(Ceci)f(risque)h(de)f(nous)g(placer)h(dans)f(une)g(situation)
i(de)e(d)o(\023)-18 b(epassemen)o(t)270 794 y(de)13 b(pile)8
b(:)j(en)i(e\013et,)f(dans)h(le)g(programme)g(pr)o(\023)-18
b(ec)o(\023)g(eden)o(t,)13 b(nous)g(p)q(ouv)o(ons)h(imaginer)g(que)f
(le)f(p)o(\022)-18 b(ere)13 b(p)q(eut)270 840 y(recev)o(oir)18
b(un)f(nom)o(bre)h(de)f(signaux)h(arbitrairemen)o(t)h(grand)f(p)q
(endan)o(t)g(le)g(traitemen)o(t)f(d'un)g(seul)270 886
y(signal,)d(d'o)q(\022)-20 b(u)13 b(une)h(explosion)h(assur)o(\023)-18
b(ee)13 b(de)g(la)g(pile)i(\(il)e(su\016t)g(en)g(e\013et)g(que)g(c)o
(haque)h(empilemen)o(t)g(de)270 931 y(la)g(fonction)g
FA(traitement)9 b FB(soit)14 b(in)o(terrompu)g(par)g(un)f(signal\))270
1003 y FA(traitement)o(\(\))o({)349 1048 y(signal\(S)o(IGI)o(NT,)o(tr)o
(ait)o(em)o(ent)o(\);)270 1094 y(->)58 b(signal)17 b(SIGINT)349
1140 y(printf\(")o(PID)f(\045d)j(en)g(a)g(capture)e(un)i(\\n",getp)o
(id\()o(\)\);)270 1185 y(})270 1257 y FB(On)f(p)q(eut)g(aussi)h
(ignorer)g(les)g(signaux)h(p)q(endan)o(t)f(leur)f(traitemen)o(t,)h
(mais)f(cela)h(p)q(eut)f(cr)o(\023)-18 b(eer)18 b(des)270
1302 y(p)q(ertes)c(de)f(r)o(\023)-18 b(eception.)270
1348 y(En\014n,)11 b(la)g(solution)i(BSD/POSIX)e(o)q(\022)-20
b(u)11 b(l'on)g(p)q(eut)g(blo)q(quer)i(et)d(d)o(\023)-18
b(eblo)q(quer)13 b(la)e(r)o(\023)-18 b(eception)12 b(de)f(signaux)270
1394 y(\022)-19 b(a)9 b(l'aide)i(du)f(v)o(ecteur)g(de)f(masquage)i
(\(sans)f(p)q(our)g(autan)o(t)g(nous)g(assurer)g(de)g(la)g(r)o(\023)-18
b(eception)11 b(de)e(tous)h(les)270 1439 y(signaux)f(!!\).)g(De)i
(plus,)g(en)g(POSIX,)f(le)h(traitemen)o(t)g(d'un)g(signal)h(comp)q
(orte)f(une)g(clause)h(de)f(blo)q(cage)270 1485 y(automatique.)17
b(On)d(indique)k(quels)e(signaux)h(doiv)o(en)o(t)e(^)-18
b(etre)15 b(blo)q(qu)o(\023)-18 b(es)17 b(p)q(endan)o(t)f(le)f
(traitemen)o(t)h(du)270 1531 y(signal,)f(gr^)-19 b(ace)13
b(\022)-19 b(a)13 b(un)h(v)o(ecteur)f(de)g(masquage)i(dans)e(la)h
(structure)g FA(sigaction)o FB(.)270 1585 y(Ceci)e(est)g(le)g(comp)q
(ortemen)o(t)h(naturel)g(de)f(gestion)h(des)f(in)o(terruptions)i(mat)o
(\023)-18 b(erielles)9 b(:)i(on)h(blo)q(que)i(les)270
1631 y(in)o(terruptions)i(de)d(priorit)o(\023)-18 b(e)15
b(inf)o(\023)-18 b(erieure)15 b(p)q(endan)o(t)f(le)f(traitemen)o(t)h
(d'un)g(in)o(terruption.)219 1694 y(2.)21 b(Seconde)16
b(anomalie)g(des)f(signaux)h(sous)f(System)f(V)g Ft(<)g
FB(V4)7 b(:)13 b(certains)j(app)q(els)g(syst)o(\022)-18
b(emes)14 b(p)q(euv)o(en)o(t)269 1739 y(^)-18 b(etre)16
b(in)o(terrompus)i(et)e(dans)h(ce)f(cas)h(la)g(v)n(aleur)g(de)g(retour)
f(de)h(l'app)q(el)h(syst)o(\022)-18 b(eme)16 b(est)h(-1)f(\()o(\023)-18
b(ec)o(hec\).)270 1785 y(Il)16 b(faudrait,)h(p)q(our)f(r)o(\023)-18
b(ealiser)17 b(correctemen)o(t)g(le)f(mo)q(d)o(\022)-18
b(ele)17 b(d'une)f(in)o(terruption)i(logiciell)q(e,)g(relancer)270
1831 y(l'app)q(el)d(syst)o(\022)-18 b(eme)14 b(en)f(\014n)h(de)f
(traitemen)o(t)h(du)g(signal.)h(\(Sous)f(BSD)g(ou)f(POSIX,)g(il)h(est)g
(p)q(ossible)h(de)270 1876 y(c)o(hoisir)j(le)f(comp)q(ortemen)o(t)h(en)
e(cas)h(d'in)o(terruption)i(d'un)d(app)q(el)i(syst)o(\022)-18
b(eme)17 b(gr^)-19 b(ace)17 b(\022)-19 b(a)16 b(la)h(fonction)270
1922 y FA(siginterru)o(pt)o FB(,)d(c-a-d)j(relancer)h(ou)g(non)f(l'app)
q(el)i(syst)o(\022)-18 b(eme,)17 b(un)h(app)q(el)g(\022)-19
b(a)17 b FA(read)p FB(,)e(par)j(exemple,)270 1968 y(p)q(eut)c
(facilemen)o(t)f(^)-18 b(etre)13 b(in)o(terrompu)i(si)e(il)h(n)o(\023)
-18 b(ecessite)15 b(un)e(acc)o(\022)-18 b(es)14 b(disque\).)219
2030 y(3.)21 b(T)m(roisi)o(\022)-18 b(eme)19 b(anomalie)i(des)d
(signaux)i(sous)f(A)m(TT)5 b(:)18 b(si)h(un)f(signal)j(est)d(ignor)o
(\023)-18 b(e)19 b(par)g(un)f(pro)q(cessus)270 2076 y(endormi,)c
(celui-ci)h(sera)f(r)o(\023)-18 b(ev)o(eill)o(\023)g(e)15
b(par)e(le)h(syst)o(\022)-18 b(eme)13 b(uniquemen)o(t)i(p)q(our)f
(apprendre)g(qu'il)h(ignore)f(le)270 2122 y(signal)g(et)d(doit)i(donc)e
(^)-18 b(etre)12 b(endormi)h(de)f(nouv)o(eau.)g(Cette)f(p)q(erte)h(de)g
(temps)g(est)g(d)q(^)-20 b(ue)12 b(au)g(fait)g(que)g(le)270
2167 y(v)o(ecteur)h(des)f(signaux)j(est)d(dans)h(la)g(zone)g(u)f(et)g
(non)h(pas)g(dans)g(le)f(blo)q(c)i(de)e(con)o(tr^)-19
b(ole)14 b(du)f(pro)q(cessus.)179 2279 y Fu(12.2.1)55
b(Le)18 b(signal)g(SIGCHLD)236 2350 y FB(Le)d(signal)h(SIGCHLD)f
(\(anciennemen)o(t)h(SIGCLD\))f(est)f(un)h(signal)i(utilis)o(\023)-18
b(e)16 b(p)q(our)g(r)o(\023)-18 b(ev)o(eiller)16 b(un)f(pro-)179
2395 y(cessus)g(don)o(t)g(un)h(des)f(\014ls)g(vien)o(t)h(de)f(mourir.)h
(C'est)e(p)q(ourquoi)j(il)e(est)g(trait)o(\023)-18 b(e)16
b(di\013)o(\023)-18 b(eremmen)o(t)16 b(des)f(autres)179
2441 y(signaux.)f(La)f(r)o(\023)-18 b(eaction)14 b(\022)-19
b(a)12 b(la)i(r)o(\023)-18 b(eception)14 b(d'un)f(signal)i(SIGCHLD)d
(est)h(de)g(rep)q(ositionner)j(le)d(bit)g(p)q(endan)o(t)179
2486 y(\022)-19 b(a)14 b(z)o(\023)-18 b(ero,)15 b(et)g(d'ignorer)h(le)f
(signal,)h(mais)g(le)f(pro)q(cessus)h(a)f(quand)h(m)o(^)-18
b(eme)13 b(\023)-18 b(et)o(\023)g(e)15 b(r)o(\023)-18
b(ev)o(eill)o(\023)g(e)17 b(p)q(our)e(cela.)h(L'e\013et)179
2532 y(d'un)e(signal)h(SIGCHLD)e(est)h(donc)g(uniquemen)o(t)h(de)f(r)o
(\023)-18 b(ev)o(eiller)16 b(un)e(pro)q(cessus)g(endormi)h(en)f
(priorit)o(\023)-18 b(e)15 b(in-)179 2578 y(terruptible.)236
2669 y(Si)f(le)f(pro)q(cessus)g(capture)g(les)h(signaux)g(SIGCHLD,)e
(il)h(in)o(v)o(o)q(que)i(alors)e(la)g(pro)q(c)o(\023)-18
b(edure)14 b(de)f(traitemen)o(t)179 2715 y(d)o(\023)-18
b(e\014nie)17 b(par)e(l'utilisateu)q(r)j(comme)d(il)i(le)e(fait)h(p)q
(our)g(les)g(autres)g(signaux,)h(ceci)f(en)f(plus)i(du)f(traitemen)o(t)
179 2761 y(par)d(d)o(\023)-18 b(efaut.)p eop
%%Page: 95 103
95 102 bop 75 50 a Fz(12.2.)26 b(PR)o(OBL)338 39 y(\022)333
50 y(EMES)15 b(DE)f(LA)f(GESTION)i(DE)e(SIGNA)o(UX)h(A)m(TT)611
b FD(95)236 166 y FB(Le)10 b(traitemen)o(t)i(normal)f(est)f(li)o(\023)
-18 b(e)12 b(\022)-19 b(a)10 b(la)h(primitiv)o(e)h FA(wait)d
FB(qui)i(p)q(ermet)g(de)f(r)o(\023)-18 b(ecup)o(\023)g(erer)11
b(la)g(v)n(aleur)h(de)e(retour)179 212 y(\(exit)j(status\))f(d'un)h
(pro)q(cessus)g(\014ls.)g(En)f(e\013et,)g(la)h(primitiv)o(e)i
FA(wait)10 b FB(est)i(blo)q(quan)o(te)i(et)e(c'est)g(la)h(r)o(\023)-18
b(eception)179 258 y(du)13 b(signal)i(qui)e(v)n(a)g(r)o(\023)-18
b(ev)o(eiller)15 b(le)f(pro)q(cessus,)f(et)g(p)q(ermettre)g(la)g(\014n)
g(de)g(l'ex)o(\023)-18 b(ecution)15 b(de)e(la)h(primitiv)o(e)h
FA(wait)p FB(.)236 349 y(Un)g(des)g(probl)o(\022)-18
b(emes)17 b(de)e(la)h(gestion)g(de)f(signaux)i(System)e(V)f(est)h(le)h
(fait)f(que)g(le)h(signal)h(SIGCHLD)179 395 y(est)c(re\030)-17
b(cu)13 b(\(raised\))h(au)f(momen)o(t)h(de)f(la)h(p)q(ose)f(d'une)h
(fonction)g(de)f(traitemen)o(t.)236 486 y(Ces)g(propri)o(\023)-18
b(et)o(\023)g(es)15 b(du)e(signal)i(SIGCHLD)e(p)q(euv)o(en)o(t)h
(induire)h(un)f(b)q(on)g(nom)o(bre)f(d'erreurs.)236 532
y(P)o(ar)k(exemple,)h(dans)f(le)g(programme)h(suiv)n(an)o(t)g(nous)f(p)
q(ositionnons)j(une)d(fonction)h(de)f(traitemen)o(t)179
577 y(dans)d(laquelle)i(nous)f(rep)q(ositionnons)i(la)d(fonction)h(de)e
(traitemen)o(t.)h(Comme)g(sous)g(System)g(V,)f(le)h(com-)179
623 y(p)q(ortemen)o(t)f(par)f(d)o(\023)-18 b(efaut)13
b(est)f(rep)q(ositionn)o(\023)-18 b(e)15 b(p)q(endan)o(t)e(le)g
(traitemen)o(t)g(d'un)f(signal.)i(Or)e(le)g(signal)j(est)d(lev)o(\023)
-18 b(e)179 669 y(\022)f(a)13 b(la)g(p)q(ose)h(de)f(la)h(fonction)g(de)
f(traitemen)o(t,)h(d'o)q(\022)-20 b(u)13 b(une)h(explosion)i(de)d(la)g
(pile.)179 727 y FA(#include)j(<stdio.h>)179 772 y(#include)g
(<unistd.h>)g(/*)j(ancienne)d(norme)i(*/)179 818 y(#include)e
(<signal.h>)179 909 y(void)i(hand\(int)e(sig\))i({)257
955 y(signal\(sig)o(,)f(hand\);)257 1001 y(printf\("me)o(ssa)o(ge)f
(qui)j(n'est)e(pas)i(affiche\\n)o("\))o(;)179 1046 y(})179
1138 y(main\(\))e({)257 1183 y(if)i(\(fork\(\)\))e({)i(exit\(0\);)d(/*)
j(creation)e(d'un)h(zombi)f(*/)i(})257 1229 y(signal\(SIG)o(CHL)o(D,)d
(hand\);)257 1275 y(printf\("ce)g(printf)h(n'est)h(pas)g(execute\\n"\))
o(;)179 1320 y(})236 1378 y FB(Sur)j(les)f(HP)m(,)g(un)g(message)h
(d'erreur)f(v)o(ous)g(informe)h(que)g(la)f(pile)i(est)e(pleine)28
b(:)19 b FA(stack)f(growth)179 1424 y(failure)p FB(.)236
1470 y(Deuxi)o(\022)-18 b(eme)15 b(exemple)21 b(:)179
1528 y FA(#include)16 b(<signal.h>)179 1574 y(#include)g(<sys/wait.)o
(h>)179 1665 y(int)i(pid,)g(status;)179 1756 y(void)g(hand\(int)e
(sig\))i({)257 1802 y(printf\(")f(Entree)g(dans)h(le)h(handler)e
(\\n"\);)257 1848 y(system\("ps)f(-l"\);)331 b(/*)19
b(affichage)d(avec)j(etat)f(zombi)f(du)i(fils)f(*/)257
1893 y(if)h(\(\(pid)f(=)h(wait\(&stat)o(us)o(\)\))d(==)j(-1\))f(/*)h
(suppressio)o(n)e(du)i(fils)f(zombi)f(*/)257 1939 y({)355
1985 y(perror\("wa)o(it)f(handler)h("\);)355 2030 y(return)h(;)257
2076 y(})257 2121 y(printf\(")f(wait)h(handler)36 b(pid:)18
b(\045d)78 b(status)17 b(\045d)i(\\n",)f(pid,)g(status\);)257
2167 y(return;)179 2213 y(})179 2304 y(main\(\))f({)257
2350 y(signal\(SIG)o(CHL)o(D,)o(han)o(d\);)35 b(/*)19
b(installati)o(on)d(du)j(handler)e(*/)257 2395 y(if)i(\(fork\(\))e(==)
38 b(0\))257 2441 y({)59 b(/*)19 b(dans)f(le)g(fils)h(*/)336
2487 y(sleep\(5\);)336 2532 y(exit\(2\);)257 2578 y(})179
2624 y(/*)g(dans)f(le)h(pere)f(*/)257 2669 y(if)h(\(\(pid)f(=)h
(wait\(&stat)o(us)o(\)\))d(==)j(-1\))f(/*)h(attente)e(de)i(terminaiso)o
(n)d(du)j(fils)f(*/)257 2715 y({)336 2761 y(perror\("w)o(ai)o(t)f(main)
h("\);)336 2806 y(return)f(;)p eop
%%Page: 96 104
96 103 bop 75 50 a FD(96)1117 b Fz(CHAPITRE)14 b(12.)26
b(LES)14 b(SIGNA)o(UX)257 166 y FA(})257 212 y(printf\(")j(wait)h(main)
38 b(pid:)18 b(\045d)77 b(status)18 b(\045d)g(\\n",)g(pid,)h(status\);)
179 258 y(})236 319 y FB(r)o(\023)-18 b(esultat)8 b(:)198
381 y FA(Entree)18 b(dans)g(le)h(handler)179 427 y(F)g(S)39
b(UID)58 b(PID)38 b(PPID)f(C)20 b(PRI)e(NI)97 b(ADDR)58
b(SZ)38 b(WCHAN)77 b(TTY)38 b(TIME)18 b(COMD)179 472
y(1)h(S)39 b(121)f(6792)g(6667)f(0)20 b(158)e(20)38 b(81ac180)76
b(6)39 b(49f5fc)e(ttys1)18 b(0:00)g(sigchld)179 518 y(1)h(S)39
b(121)f(6667)g(6666)f(0)20 b(168)e(20)38 b(81ac700)f(128)18
b(7ffe6000)f(ttys1)h(0:00)g(tcsh)179 564 y(1)h(Z)39 b(121)f(6793)g
(6792)f(0)20 b(178)e(20)38 b(81bda80)76 b(0)196 b(ttys1)18
b(0:00)g(sigchld)179 609 y(1)h(S)39 b(121)f(6794)g(6792)f(0)20
b(158)e(20)38 b(81ac140)57 b(78)38 b(4a4774)f(ttys1)18
b(0:00)g(sh)179 655 y(1)h(R)39 b(121)f(6795)g(6794)f(4)20
b(179)e(20)38 b(81bd000)57 b(43)195 b(ttys1)18 b(0:00)g(ps)179
701 y(wait)g(handler)36 b(pid:)18 b(6793)77 b(status)18
b(512)97 b(\(2)18 b(*)i(256\))179 746 y(wait)e(main:)g(Interrup)o(ted)e
(system)h(call)236 854 y FB(A)g(la)g(mort)g(du)g(\014ls,)h(Le)e(p)o
(\022)-18 b(ere)17 b(re\030)-17 b(coit)18 b(le)f(signal)i(SIGCHLD)e
(\(alors)h(qu'il)f(\023)-18 b(etait)17 b(dans)h(le)f
FA(wait)e FB(du)179 900 y(main\),)h(puis)h(le)e(handler)j(est)d(execut)
o(\023)-18 b(e,)16 b(et)f FA(ps)g FB(a\016c)o(he)g(bien)i(le)f(\014ls)g
(zom)o(bi.)g(Ensuite)h(c'est)e(le)h FA(wait)e FB(du)179
945 y(handler)h(qui)f(prend)g(en)g(compte)g(la)f(terminaison)j(du)e
(\014ls.)g(Au)f(retour)h(du)f(handler,)i(l'app)q(el)g(a)f
FA(wait)d FB(du)179 991 y(main)j(retourne)g(-1,)e(puisqu'il)k(a)o(v)n
(ait)d(\023)-18 b(et)o(\023)g(e)13 b(in)o(terrompu)h(par)g(SIGCHLD.)179
1122 y Fv(12.3)66 b(Manipulation)24 b(de)f(la)g(pile)g(d'ex)o(\023)-32
b(ecution)236 1204 y FB(La)13 b(primitiv)o(e)179 1266
y FA(#include)j(<setjmp.h>)179 1312 y(int)i(sigsetjmp\()o(sig)o(jm)o
(p_b)o(uf)e(env,)i(int)h(indicateu)o(r\))o(;)236 1374
y FB(sauv)o(egarde)d(un)e(en)o(vironnemen)o(t)j(d'ex)o(\023)-18
b(ecution,)15 b(c'est)e(\022)-19 b(a)14 b(dire)h(un)f(\023)-18
b(etat)13 b(de)i(la)f(pile,)h(et)f(si)h Fx(indic)n(ateur)179
1419 y FB(est)e(non)i(n)o(ul,)f(sauv)o(egarde)i(le)e(masque)g(de)g
(signaux)i(couran)o(t.)e(La)g(v)n(aleur)h(de)f(retour)g(de)g(cette)f
(fonction)179 1465 y(est)i(z)o(\023)-18 b(ero)15 b(quand)i(on)e(fait)h
(une)g(sauv)o(egarde,)g(et)f(sinon)i(d)o(\023)-18 b(ep)q(end)17
b(du)e(param)o(\022)-18 b(etre)16 b Fx(valeur)e FB(de)h(la)h(fonction)
179 1511 y FA(siglongjm)o(p)p FB(.)179 1572 y FA(int)i(siglongjmp)o
(\(si)o(gj)o(mp_)o(buf)e(env,)i(int)g(valeur\);)236 1634
y FB(La)9 b(primitiv)o(e)i FA(siglongjmp)5 b FB(p)q(ermet)k(de)g
(reprendre)h(l'ex)o(\023)-18 b(ecution)10 b(\022)-19
b(a)9 b(l'endroit)i(sauv)o(egard)o(\023)-18 b(e)10 b(par)f
FA(sigsetjmp)179 1680 y FB(dans)14 b(la)f(v)n(ariable)i
Fx(env)p FB(.)236 1725 y(Deux)i(remarques)8 b(:)15 b
FA(env)g FB(doit)i(a)o(v)o(oir)f(\023)-18 b(et)o(\023)g(e)15
b(initial)q(is)o(\023)-17 b(e)18 b(par)f FA(sigsetjm)o(p)p
FB(,)12 b(les)17 b(v)n(aleurs)g(de)g(pile)g(plac)o(\023)-18
b(ees)179 1771 y(au-dessus)13 b(de)e(l'en)o(vironnemen)o(t)j(repris)f
(son)o(t)f(p)q(erdues.)g(L'en)o(vironnemen)o(t)h(de)f(pile)h(doit)f
(encore)h(exister)179 1817 y(dans)h(la)f(pile)i(au)e(momen)o(t)g(de)h
(l'app)q(el,)g(sinon)h(le)e(r)o(\023)-18 b(esultat)14
b(est)f(ind)o(\023)-18 b(etermin)o(\023)g(e.)179 1948
y Fv(12.4)66 b(Quelques)22 b(exemples)h(d'utilisation)179
2030 y FA(/*un)18 b(exemple)f(de)i(signaux)e(BSD)h(*/)179
2076 y(#include)e(<stdio.h>)179 2121 y(#include)g(<signal.h>)179
2167 y(void)i(gots1\(int)e(n\))58 b({)19 b(raise\(SIGU)o(SR2)o(\);)36
b(printf\("g)o(ot)g(s1\(\045d\))17 b(",)i(n\);)f(})179
2213 y(void)g(gots2\(int)e(n\))58 b({)19 b(printf\("go)o(t)36
b(s2\(\045d\))18 b(",)g(n\);)h(})179 2304 y(main\(\))179
2350 y({)257 2395 y(int)g(mask)f(;)257 2441 y(struct)g(sigvec)f(s1,s2;)
257 2532 y(s1.sv_hand)o(ler)f(=)j(gots1;)257 2578 y(s1.sv_mask)d(=)j
(sigmask\(SI)o(GUS)o(R1)o(\);)257 2624 y(sigvec\(SIG)o(USR)o(1,)d(&s1,)
i(NULL\);)257 2715 y(s2.sv_hand)o(ler)e(=)j(gots2;)257
2761 y(s2.sv_mask)d(=)j(sigmask\(SI)o(GUS)o(R2)o(\);)257
2806 y(sigvec\(SIG)o(USR)o(2,)d(&s2,)i(NULL\);)p eop
%%Page: 97 105
97 104 bop 75 50 a Fz(12.5.)26 b(LA)14 b(NORME)g(POSIX)1234
b FD(97)257 212 y FA(printf\(")17 b(sans)h(masquage)e(de)j(SIGUSR2:)e
("\))257 258 y(raise\(SIGU)o(SR1)o(\);)257 349 y(printf\(")g(\\n)i
(avec)f(masquage)e(de)j(SIGUSR2:)e(")i(\);)257 395 y(s1.sv_mask)d(=)j
(sigmask\(SI)o(GUS)o(R2)o(\);)257 440 y(sigvec\(SIG)o(USR)o(1,)d(&s1,)i
(NULL\);)257 532 y(raise\(SIGU)o(SR1)o(\);)179 577 y(})236
649 y FB(Nous)c(donne)g(les)f(a\016c)o(hages)h(suiv)n(an)o(t)8
b(:)198 712 y FA(sans)18 b(masquage)f(de)i(SIGUSR2:)d(got)38
b(s2\(31\))18 b(got)38 b(s1\(30\))198 757 y(avec)18 b(masquage)f(de)i
(SIGUSR2:)d(got)38 b(s1\(30\))18 b(got)38 b(s2\(31\))236
820 y FB(Sous)15 b(BSD,)g(pas)g(de)f(fonction)i(de)e(manipulati)q(on)j
(propre)e(des)g(group)q(es)g(de)g(signaux)h(\(on)e(regroup)q(e)179
866 y(les)f(signaux)i(par)f(des)f(conjonctions)i(de)e(masques\).)236
912 y(Le)19 b(probl)o(\022)-18 b(eme)20 b(de)f("l'in)o(terruption")j
(des)d(app)q(els)h(syst)o(\022)-18 b(eme)19 b(par)g(les)h(signaux)g
(est)f(corrig)o(\023)-18 b(e)20 b(par)f(la)179 957 y(fonction)8
b(:)179 1020 y FA(int)38 b(siginterr)o(upt)o(\(i)o(nt)16
b(sig,)i(int)h(flag\);)236 1083 y FB(le)14 b(drap)q(eau)g
FA(flag)d FB(prend)j(comme)f(v)n(aleur)i(0)e(ou)g(1,)g(ce)f(qui)i
(signi\014e)i(que)d(les)h(app)q(els)g(syst)o(\022)-18
b(emes)14 b(in)o(ter-)179 1129 y(rompus)g(par)f(un)g(signal)i(seron)o
(t)7 b(:)179 1174 y(soit)14 b(relanc)o(\023)-18 b(es)14
b(a)o(v)o(ec)f(les)h(m)o(^)-18 b(emes)13 b(param)o(\022)-18
b(etres.)179 1220 y(soit)14 b(retourneron)o(t)g(la)f(v)n(aleur)i(-1,)d
(et)h(dans)h(ce)f(cas)g(la)h(v)n(aleur)g(de)f FA(errno)e
FB(est)i(p)q(ositionn)o(\023)-18 b(ee)16 b(\022)-19 b(a)13
b FA(EINTR)p FB(.)236 1312 y(Certaines)19 b(fonctions)f(comme)f
FA(readdir)e FB(utilisen)o(t)k(des)f(v)n(ariables)h(statiques,)f(ces)g
(fonctions)g(son)o(t)179 1357 y(dites)13 b(non)h(r)o(\023)-18
b(een)o(tran)o(tes.)13 b(Il)g(faut)f(\023)-18 b(eviter)13
b(d'app)q(eler)i(ce)d(t)o(yp)q(e)i(de)f(fonctions)h(dans)f(un)g
(handler)i(de)e(signal,)179 1403 y(dans)g(le)h(cas)e(o)q(\022)-20
b(u)13 b(l'on)h(fait)f(d)o(\023)-18 b(ej\022)f(a)13 b(app)q(el)h(\022)
-19 b(a)13 b(la)g(fonction)h(dans)f(le)h(reste)e(du)i(pro)q(cessus.)f
(De)g(la)h(m)o(^)-18 b(eme)12 b(fa\030)-17 b(con)179
1449 y(la)14 b(v)n(ariable)h FA(errno)c FB(est)j(unique.)h(Si)f
(celle-ci)h(est)e(p)q(ositionn)o(\023)-18 b(ee)16 b(dans)f(le)e
FA(main)f FB(mais)i(qu'un)g(signal)i(arriv)o(e)179 1494
y(a)o(v)n(an)o(t)h(son)g(utilisation,)i(une)e(primitiv)o(e)i(app)q(el)o
(\023)-18 b(ee)18 b(dans)g(le)f(handler)h(p)q(eut)f(en)g(c)o(hanger)g
(la)g(v)n(aleur!)h(\(ce)179 1540 y(probl)o(\022)-18 b(eme)14
b(de)f(r)o(\023)-18 b(een)o(trance)14 b(sera)g(vu)f(plus)h(en)f(d)o
(\023)-18 b(etail)15 b(a)o(v)o(ec)e(les)h(pro)q(cessus)g(m)o
(ulti-activi)q(t)o(\023)-18 b(es\).)179 1651 y Fu(12.4.1)55
b(L'app)r(el)17 b(pause)236 1721 y FB(F)m(onction)e(de)e(mise)h(en)f
(atten)o(te)g(de)g(r)o(\023)-18 b(eception)15 b(d'un)e(signal)c(:)179
1784 y FA(pause\(voi)o(d\);)236 1847 y FB(cette)17 b(primitiv)o(e)j
(est)d(le)g(standard)i(UNIX)d(d'atten)o(te)h(de)g(la)h(r)o(\023)-18
b(eception)19 b(d'un)e(signal)i(quelconque,)179 1893
y(BSD)13 b(prop)q(ose)i(la)e(primitiv)o(e)j(suiv)n(an)o(te)8
b(:)179 1956 y FA(sigpause\()o(int)16 b(sigmask\))236
2019 y FB(qui)g(p)q(ermet)f(l'atten)o(te)f(d'un)h(group)q(e)h(sp)o
(\023)-18 b(eci\014que)16 b(de)f(signaux,)h(atten)o(tion)f(les)h
(signaux)g(du)f(masque)179 2064 y(son)o(t)e(d)o(\023)-18
b(eblo)q(qu)o(\023)g(es)15 b(\(c.f.)d FA(sigprocmas)o(k)p
FB(\).)179 2196 y Fv(12.5)66 b(La)22 b(norme)h(POSIX)236
2279 y FB(La)16 b(norme)h(POSIX)e(ne)h(d)o(\023)-18 b(e\014nit)18
b(pas)e(le)g(comp)q(ortemen)o(t)h(d'in)o(terruption)i(des)d(app)q(els)h
(syst)o(\022)-18 b(emes,)16 b(il)179 2325 y(faut)d(le)g(sp)o(\023)-18
b(eci\014er)15 b(dans)f(la)f(structure)h(de)f(traitemen)o(t)h(du)g
(signal.)179 2469 y Fi(Les)h(ensem)o(bles)e(de)i(signaux)37
b FB(La)13 b(norme)h(POSIX)e(in)o(tro)q(duit)k(les)d(ensem)o(bles)i(de)
e(signaux)c(:)179 2515 y(ces)g(ensem)o(bles)i(de)f(signaux)h(p)q
(ermetten)o(t)f(de)f(d)o(\023)-18 b(epasser)11 b(la)f(con)o(train)o(te)
g(classique)i(qui)f(v)o(eut)e(que)h(le)g(nom)o(bre)179
2561 y(de)g(signaux)j(soit)e(inf)o(\023)-18 b(erieur)12
b(ou)e(\023)-18 b(egal)11 b(au)g(nom)o(bre)g(de)g(bits)g(des)g(en)o
(tiers)h(de)e(la)h(mac)o(hine.)h(D'autre)f(part,)f(des)179
2606 y(fonctions)j(de)e(manipulati)q(on)k(de)c(ces)h(ensem)o(bles)h
(son)o(t)f(fournies)h(et)e(p)q(ermetten)o(t)h(de)g(d)o(\023)-18
b(e\014nir)13 b(simplemen)o(t)179 2652 y(des)g(masques.)h(Ces)f(ensem)o
(bles)i(de)f(signaux)h(son)o(t)e(du)h(t)o(yp)q(e)g(sigset)p
1171 2652 12 2 v 15 w(t)f(et)g(son)o(t)g(manipulabl)q(es)j(gr^)-19
b(ace)14 b(aux)179 2698 y(fonctions)g(suiv)n(an)o(tes)8
b(:)179 2806 y FA(int)18 b(sigemptyse)o(t\(s)o(ig)o(set)o(_t)e(*ens\))
214 b(/*)19 b(raz)f(*/)p eop
%%Page: 98 106
98 105 bop 75 50 a FD(98)1117 b Fz(CHAPITRE)14 b(12.)26
b(LES)14 b(SIGNA)o(UX)179 166 y FA(int)k(sigfillset)o(\(si)o(gs)o(et_)o
(t)f(*ens\))233 b(/*)19 b(ens)f(=)h({)h(1,2,...,N)o(SI)o(G})c(*/)179
212 y(int)i(sigaddset\()o(sig)o(se)o(t_t)e(*ens,)i(int)g(sig\))77
b(/*)19 b(ens)f(=)h(ens)g(+)g({sig})f(*/)179 258 y(int)g(sigdelset\()o
(sig)o(se)o(t_t)e(*ens,)i(int)g(sig\))97 b(/*)18 b(ens)h(=)g(ens)g(-)g
({sig)f(})h(*/)236 317 y FB(Ces)13 b(fonctions)i(retournen)o(t)f(-1)e
(en)i(cas)f(d')o(\023)-18 b(ec)o(hec)13 b(et)g(0)g(sinon.)179
377 y FA(int)18 b(sigismembe)o(r\(s)o(ig)o(set)o(_t)e(*ens,)i(int)g
(sig\);)57 b(/*)19 b(sig)f(appartient)e(\022)-20 b(a)19
b(ens)g(?*/)236 436 y FB(retourne)14 b(vrai)g(si)g(le)f(signal)i
(appartien)o(t)g(\022)-19 b(a)13 b(l'ensem)o(ble.)179
545 y Fu(12.5.1)55 b(Le)18 b(blo)r(cage)g(des)g(signaux)236
615 y FB(La)13 b(fonction)i(suiv)n(an)o(te)f(p)q(ermet)f(de)h
(manipuler)h(le)f(masque)f(de)h(signaux)h(du)e(pro)q(cessus)8
b(:)179 675 y FA(#include)16 b(<signal.h>)179 720 y(int)i(sigprocmas)o
(k\(i)o(nt)e(op,)j(const)e(sigset_t)36 b(*nouv,)18 b(sigset_t)e
(*anc\);)236 780 y FB(L'op)o(\023)-18 b(eration)15 b
FA(op)5 b FB(:)179 841 y FC(SIG)p 259 841 14 2 v 15 w(SETMASK)19
b FB(a\013ectation)k(du)e FA(nouv)p FB(eau)f(masque,)h(recup)o(\023)-18
b(eration)23 b(de)f(la)f(v)n(aleur)h(de)f(l')p FA(anc)p
FB(ien)270 887 y(masque.)179 946 y FC(SIG)p 259 946 V
15 w(BLOCK)f FB(union)15 b(des)e(deux)h(ensem)o(bles)h
FA(nouv)c FB(et)i FA(anc)179 1006 y FC(SIG)p 259 1006
V 15 w(UNBLOCK)20 b FB(soustraction)15 b FA(anc)c FB(-)i
FA(nouv)236 1066 y FB(On)g(p)q(eut)h(sa)o(v)o(oir)g(si)g(un)f(signal)i
(est)e Fx(p)n(endant)d FB(et)j(donc)h Fx(blo)n(qu)o(\023)-19
b(e)11 b FB(gr^)-19 b(ace)13 b(\022)-19 b(a)13 b(la)h(fonction)7
b(:)179 1126 y FA(int)18 b(sigpending)o(\(si)o(gs)o(et_)o(t)f(*ens\);)
236 1185 y FB(retourne)i(-1)f(en)h(cas)f(d')o(\023)-18
b(ec)o(hec)18 b(et)g(0)g(sinon)i(et)e(l'ensem)o(ble)i(des)e(signaux)i
(p)q(endan)o(ts)g(est)e(sto)q(c)o(k)o(\023)-18 b(e)19
b(\022)-19 b(a)179 1231 y(l'adresse)14 b FA(ens)p FB(.)179
1386 y Fu(12.5.2)55 b(sigaction)236 1456 y FB(La)13 b(structure)h
FA(sigaction)9 b FB(d)o(\023)-18 b(ecrit)14 b(le)g(comp)q(ortemen)o(t)g
(utilis)o(\023)-18 b(e)15 b(p)q(our)f(le)f(traitemen)o(t)h(d'un)g
(signal)8 b(:)179 1515 y FA(struct)17 b(sigaction)f({)336
1561 y(void)i(\(*sa_hand)o(ler)o(\))e(\(\);)336 1607
y(sigset_t)g(sa_mask;)336 1652 y(int)i(sa_flags;})179
1734 y FC(sa)p 220 1734 V 17 w(handler)h FB(fonction)c(de)e(traitemen)o
(t)h(\(ou)f FA(SIG)p 919 1734 12 2 v 13 w(DFL)f FB(et)g
FA(SIG)p 1108 1734 V 13 w(IGN)p FB(\))179 1794 y FC(sa)p
220 1794 14 2 v 17 w(mask)21 b FB(ensem)o(ble)15 b(de)e(signaux)i
(suppl)o(\023)-18 b(emen)o(taires)16 b(\022)-19 b(a)13
b(blo)q(quer)i(p)q(endan)o(t)f(le)g(traitemen)o(t)179
1853 y FC(sa)p 220 1853 V 17 w(\015ags)21 b FB(di\013)o(\023)-18
b(eren)o(tes)15 b(options)270 1921 y FC(SA)p 331 1921
V 16 w(NOCLDSTOP)k FB(le)14 b(signal)h(SIGCHLD)e(n'est)g(pas)g(en)o(v)o
(o)o(y)o(\023)-18 b(e)14 b(\022)-19 b(a)13 b(un)g(pro)q(cessus)i
(lorsque)348 1966 y(l'un)f(de)f(ses)g(\014ls)h(est)f(stopp)o(\023)-18
b(e.)270 2019 y FC(SA)p 331 2019 V 16 w(RESETHAND)19
b FB(sim)o(ulation)i(de)e(l'ancienne)h(m)o(\023)-18 b(etho)q(de)19
b(de)f(gestion)h(des)g(signaux,)348 2065 y(pas)c(de)f(blo)q(cage)j(du)e
(signal)h(p)q(endan)o(t)g(le)f(handler)h(et)f(rep)q(ositionnemen)o(t)i
(du)e(handler)348 2110 y(par)e(d)o(\023)-18 b(efaut)13
b(au)h(lancemen)o(t)g(du)g(handler.)270 2163 y FC(SA)p
331 2163 V 16 w(REST)l(AR)l(T)21 b FB(les)12 b(app)q(els)h(syst)o(\022)
-18 b(eme)12 b(in)o(terrompus)i(par)e(un)f(signal)j(capt)o(\023)-18
b(e)12 b(son)o(t)g(relanc)o(\023)-18 b(es)348 2209 y(au)9
b(lieu)h(de)f(ren)o(v)o(o)o(y)o(er)h(-1.)e(Cet)g(indicateur)j(joue)e
(le)g(r^)-19 b(ole)10 b(de)f(l'app)q(el)h FA(siginterru)o(pt\()o(sig)o
(,0)o(\))348 2254 y FB(des)j(v)o(ersions)i(BSD.)270 2307
y FC(SA)p 331 2307 V 16 w(NOCLD)o(W)-5 b(AIT)19 b FB(si)e(le)h(signal)h
(est)d(SIGCHLD,)h(ses)g(\014ls)h(qui)f(se)g(terminen)o(t)h(ne)f(de-)348
2353 y(viennen)o(t)c(pas)g(zom)o(bis.)g(Cet)e(indicateur)k(corresp)q
(ond)e(au)f(comp)q(ortemen)o(t)h(des)g(pro)q(ces-)348
2398 y(sus)g(p)q(our)h(SIG)p 570 2398 12 2 v 14 w(IGN)f(dans)g(les)h(v)
o(ersions)h(A)m(TT.)179 2466 y(Le)8 b(p)q(ositionnement)j(du)e(comp)q
(ortemen)o(t)h(de)f(reception)h(d'un)f(signal)i(se)e(fait)g(par)g(la)g
(primitiv)o(e)j FA(sigactio)o(n)p FB(.)179 2512 y(L'installation)19
b(d'une)d(fonction)h(de)f(traitemen)o(t)h(du)f(signal)h(SIGCHLD)f(p)q
(eut)g(a)o(v)o(oir)h(p)q(our)g(e\013et)f(d'en-)179 2557
y(v)o(o)o(y)o(er)d(un)h(signal)h(au)e(pro)q(cessus,)h(ceci)g(dans)f(le)
h(cas)f(o)q(\022)-20 b(u)13 b(le)h(pro)q(cessus)g(a)f(des)g(\014ls)h
(zom)o(bis,)g(c'est)f(toujours)179 2603 y(le)g(probl)o(\022)-18
b(eme)15 b(li)o(\023)-18 b(e)14 b(\022)-19 b(a)13 b(ce)g(signal)i(qui)f
(n'a)f(pas)h(le)f(m)o(^)-18 b(eme)13 b(comp)q(ortemen)o(t)h(que)f(les)h
(autres)g(signaux.)179 2649 y(Un)f(handler)i(p)q(ositionn)o(\023)-18
b(e)16 b(par)e FA(sigaction)c FB(reste)j(jusqu'\022)-19
b(a)14 b(ce)g(qu'un)g(autre)f(handler)j(soit)e(p)q(ositionn)o(\023)-18
b(e,)16 b(\022)-19 b(a)179 2694 y(la)13 b(di\013)o(\023)-18
b(erence)14 b(des)f(v)o(ersions)g(A)m(TT)f(o)q(\022)-20
b(u)12 b(le)h(handler)h(par)f(d)o(\023)-18 b(efaut)12
b(est)h(rep)q(ositionn)o(\023)-18 b(e)15 b(automatiquemen)o(t)f(au)179
2740 y(d)o(\023)-18 b(ebut)14 b(du)f(traitemen)o(t)h(du)f(signal.)336
2806 y FA(#include)j(<signal.h>)p eop
%%Page: 99 107
99 106 bop 75 50 a Fz(12.5.)26 b(LA)14 b(NORME)g(POSIX)1234
b FD(99)336 166 y FA(int)18 b(sigaction\()o(int)e(sig,)610
212 y(const)i(struct)f(sigaction)f(*paction,)610 258
y(struct)i(sigactio)o(n)134 b(*paction_pr)o(ec)o(ede)o(nt)o(e\);)236
328 y FB(Cette)17 b(fonction)h(r)o(\023)-18 b(ealise)18
b(soit)g(une)f(demande)h(d'information.)h(Si)e(le)h(p)q(oin)o(teur)g
FA(paction)c FB(est)j(n)o(ull,)179 374 y(on)h(obtien)o(t)i(la)f
(structure)f FA(sigaction)d FB(couran)o(te.)k(Sinon)h(c'est)e(une)g
(demande)i(de)e(mo)q(di\014cation)j(du)179 420 y(comp)q(ortemen)o(t.)
179 530 y Fu(12.5.3)55 b(L'atten)n(te)17 b(d'un)i(signal)236
600 y FB(En)12 b(plus)g(de)f(l'app)q(el)i FA(pause)p
FB(,)c(on)i(trouv)o(e)h(sous)g(POSIX)f(l'app)q(el)h FA(int)19
b(sigsuspen)o(d\(c)o(on)o(st)d(sigset)p 1704 600 12 2
v 12 w(t)179 645 y(*ens\);)10 b FB(qui)k(p)q(ermet)g(de)f(r)o(\023)-18
b(ealiser)15 b(de)e(fa\030)-17 b(cons)13 b FA(atomique)d
FB(les)k(actions)g(suiv)n(an)o(tes)8 b(:)230 708 y({)21
b(l'installati)q(on)g(du)d(masque)g(de)g(blo)q(cage)h(d)o(\023)-18
b(e\014ni)19 b(par)f FA(ens)e FB(\(qui)i(sera)g(rep)q(ositionn)o(\023)
-18 b(e)20 b(\022)-19 b(a)18 b(sa)f(v)n(aleur)270 753
y(d'origine\))e(\022)-19 b(a)13 b(la)h(\014n)f(de)g(l'app)q(el,)230
816 y({)21 b(mise)14 b(en)f(atten)o(te)g(de)g(la)h(r)o(\023)-18
b(eception)15 b(d'un)e(signal)i(non)f(blo)q(qu)o(\023)-18
b(e.)p eop
%%Page: 100 108
100 107 bop 75 50 a FD(100)1096 b Fz(CHAPITRE)14 b(12.)26
b(LES)14 b(SIGNA)o(UX)p eop
%%Page: 101 109
101 108 bop 1775 50 a FD(101)179 479 y Fw(Chapitre)32
b(13)179 688 y Fy(Les)38 b(v)m(errous)h(de)g(\014c)m(hiers)236
901 y FB(M)o(\023)-18 b(ecanismes)19 b(de)e(con)o(tr^)-19
b(ole)18 b(d'acc)o(\022)-18 b(es)18 b(concurren)o(ts)g(\022)-19
b(a)17 b(un)g(\014c)o(hier,)h(les)g(v)o(errous)g(son)o(t)f(d'une)h
(grande)179 947 y(utilit)o(\023)-18 b(e)15 b(dans)f(les)f(applicatio)q
(ns)j(de)d(gestion)h(et)f(dans)h(l')o(\023)-18 b(elab)q(oration)16
b(de)d(bases)h(de)f(donn)o(\023)-18 b(ees)15 b(partag)o(\023)-18
b(ees.)179 992 y(Les)14 b(v)o(errous)i(son)o(t)f(rattac)o(h)o(\023)-18
b(es)15 b(aux)g FC(in\033uds)p FB(.)e(Ainsi)j(toutes)f(les)g(ouv)o
(ertures)h(d'un)f(m)o(^)-18 b(eme)15 b(\014c)o(hier,)g(et)g(\022)-19
b(a)179 1038 y(fortiori)14 b(tous)f(les)h(descripteurs)h(sur)e(ces)g
(ouv)o(ertures,)h("v)o(oien)o(t")h(le)e(v)o(errou.)179
1084 y(La)g(protection)h(r)o(\023)-18 b(ealis)o(\023)g(ee)15
b(par)e(le)h(v)o(errou)g(a)f(donc)g(lieu)i(sur)e(le)h(\014c)o(hier)g
(ph)o(ysique.)179 1129 y(Un)f(v)o(errou)h(est)f(la)h
FC(propri)o(\023)-21 b(et)o(\023)g(e)13 b FB(d'un)h(seul)g
FC(pro)q(cessus)p FB(,)g(et)f(seul)h(le)g(pro)q(cessus)h(propri)o(\023)
-18 b(etaire)15 b(du)f(v)o(errou)179 1175 y(p)q(eut)f(le)g(mo)q
(di\014er)h(ou)f(l'enlev)o(er,)h(atten)o(tion)g(le)f(v)o(errou)h(ne)e
(prot)o(\022)-18 b(ege)14 b(pas)f(con)o(tre)g(les)g(acc)o(\022)-18
b(es)13 b(du)g(pro)q(cessus)179 1221 y(propri)o(\023)-18
b(etaire)15 b(\(atten)o(tion)f(\022)-19 b(a)13 b(une)h(situation)h(m)o
(ulti-thread\).)179 1404 y Fv(13.1)66 b(Caract)o(\023)-32
b(eristiques)22 b(d'un)h(v)n(errou)236 1489 y FB(Les)13
b(v)o(errous)h(son)o(t)g(d)o(\023)-18 b(e\014nis)14 b(par)g(deux)f
(caract)o(\023)-18 b(eristiques)10 b(:)236 1581 y FC(La)20
b(p)q(ort)o(\023)-21 b(ee)7 b FB(:)17 b(Ensem)o(ble)h(des)g(p)q
(ositions)h(du)f(\014c)o(hier)g(auxquelles)i(le)e(v)o(errou)g
(s'applique.)h(Cet)e(en-)179 1627 y(sem)o(ble)d(est)f(un)g(in)o(terv)n
(alle,)i(soit)f(une)g(p)q(ortion)g(du)g(\014c)o(hier)841
1673 y FA([position)o(1,)i(position2])179 1718 y FB(soit)e(jusqu'\022)
-19 b(a)13 b(la)h(\014n)f(du)h(\014c)o(hier)795 1764
y FA([position1)o(,)j(fin)h(de)h(fichier[)179 1810 y
FB(dans)14 b(ce)f(dernier)h(cas)f(si)h(le)f(\014c)o(hier)h(augmen)o
(te,)g(le)g(v)o(errou)f(prot)o(\022)-18 b(ege)14 b(les)g(nouv)o(elles)h
(p)q(ositions.)236 1902 y FC(Le)g(t)o(yp)q(e)7 b FB(:)12
b(qui)i(d)o(\023)-18 b(ecrit)14 b(les)g(p)q(ossibili)q(t)o(\023)-18
b(es)16 b(de)d(cohabitation)j(des)d(di\013)o(\023)-18
b(eren)o(ts)15 b(v)o(errous.)179 2014 y FC(F)p 210 2014
14 2 v 15 w(RDLCK)20 b FB(partag)o(\023)-18 b(e,)15 b(plusieurs)j(v)o
(errous)d(de)g(ce)g(t)o(yp)q(e)g(p)q(euv)o(en)o(t)h(a)o(v)o(oir)g(des)f
(p)q(ort)o(\023)-18 b(ees)15 b(non)h(disjoin)o(tes,)270
2060 y(par)d(exemple)i(les)e(v)o(errous)h([80)p Ft(;)6
b FB(150])13 b(et)g([100)p Ft(;)7 b FB(123])179 2125
y FC(F)p 210 2125 V 15 w(WRLCK)20 b FB(exclusif,)11 b(pas)f(de)g
(cohabitation)i(p)q(ossible)g(a)o(v)o(ec)e(un)g(autre)g(v)o(errou)h
(quelque)g(soit)f(son)g(t)o(yp)q(e.)179 2262 y Fv(13.2)66
b(Le)22 b(mo)r(de)g(op)o(\023)-32 b(eratoire)22 b(des)g(v)n(errous)236
2347 y FB(Le)15 b(mo)q(de)g(op)o(\023)-18 b(eratoire)17
b(joue)d(sur)i(le)f(comp)q(ortemen)o(t)h(des)f(primitiv)o(es)i
FA(read)c FB(et)i FA(write)p FB(.)d(Les)j(v)o(errous)179
2393 y(d'un)e(\014c)o(hier)h(son)o(t)g(soit)g FC(consultatifs)p
FB(,)d(soit)i FC(imp)o(\023)-21 b(eratifs)p FB(.)236
2485 y(Dans)13 b(le)g(premier)g(mo)q(de)f FC(advisory)h
FB(\(consultatif)s(\),)h(la)e(pr)o(\023)-18 b(esence)13
b(d'un)g(v)o(errou)f(n'est)g(test)o(\023)-18 b(ee)13
b(qu'\022)-19 b(a)12 b(la)179 2531 y(p)q(ose)h(d'un)g(v)o(errou,)g(la)g
(p)q(ose)g(sera)g(refus)o(\023)-18 b(ee)13 b(s'il)h(existe)f(un)g(v)o
(errou)h(de)e(p)q(ort)o(\023)-18 b(ee)14 b(non)f(disjoin)o(te)h(et)f
(que)g(l'un)179 2577 y(des)g(deux)h(v)o(errous)g(est)f(exclusif.)179
2622 y(Dans)h(le)h(second)g(mo)q(de)f FC(mandatory)p
FB(,)g(la)h(pr)o(\023)-18 b(esence)14 b(de)h(v)o(errous)f(est)g(test)o
(\023)-18 b(ee)14 b(p)q(our)h(la)f(p)q(ose)h(mais)f(aussi)179
2668 y(p)q(our)g(les)f(app)q(els)i(syst)o(\022)-18 b(emes)13
b FA(read)f FB(et)g FA(write)p FB(.)236 2761 y(Dans)k(le)f(mo)q(de)g
(consultatif,)h(les)f(v)o(errous)h(n'on)o(t)e(d'e\013et)h(que)g(sur)g
(les)h(pro)q(cessus)f(jouan)o(t)g(e\013ectiv)o(e-)179
2806 y(men)o(t)g(le)g(jeu,)g(c'est-\022)-19 b(a-dire,)15
b(p)q(osan)o(t)h(des)f(v)o(errous)h(sur)f(les)h(zones)g(du)f(\014c)o
(hiers)h(sur)g(lesquels)h(ils)f(v)o(eulen)o(t)p eop
%%Page: 102 110
102 109 bop 75 50 a FD(102)796 b Fz(CHAPITRE)14 b(13.)27
b(LES)14 b(VERR)o(OUS)g(DE)f(FICHIERS)179 166 y FB(r)o(\023)-18
b(ealiser)14 b(une)g(lecture)g(\(v)o(errou)g(partag)o(\023)-18
b(e\))13 b(ou)h(une)e(\023)-18 b(ecriture)14 b(\(v)o(errou)g(exclusif)s
(\).)236 259 y(Dans)j(le)f(mo)q(de)g(imp)o(\023)-18 b(eratif,)17
b(les)f(v)o(errous)h(on)o(t)f(un)g(impact)g(sur)g(les)h(lectures/)o
(\023)-18 b(ecritures)18 b(de)e(tous)g(les)179 305 y(pro)q(cessus)8
b(:)230 371 y({)21 b(sur)d(les)g(v)o(errous)h(de)f(t)o(yp)q(e)g(partag)
o(\023)-18 b(e)18 b(\(F)p 871 371 12 2 v 14 w(RDLCK\),)f(toute)h(ten)o
(tativ)o(e)h(d')o(\023)-18 b(ecriture)18 b(par)g(un)g(autre)270
417 y(pro)q(cessus)c(est)f(blo)q(qu)o(\023)-18 b(ee;)230
482 y({)21 b(sur)11 b(les)h(v)o(errous)g(de)f(t)o(yp)q(e)g(exclusif)i
(\(F)p 829 482 V 13 w(WRLCK\),)e(toute)g(ten)o(tativ)o(e)h(de)f
(lecture)h(ou)f(d')o(\023)-18 b(ecriture)12 b(par)270
527 y(un)i(autre)f(pro)q(cessus)h(est)f(blo)q(qu)o(\023)-18
b(ee.)179 665 y Fv(13.3)66 b(Manipulation)24 b(des)e(v)n(errous)236
750 y FB(La)13 b(structure)h(de)f(v)o(errou)h FA(flock)t
FB(:)179 818 y FA(struct)j(flock)37 b({)296 864 y(short)77
b(l_type;)115 b(/*)19 b(F_RDLCK,)d(F_WRLCK,F_)o(UNL)o(CK)g(*/)296
909 y(short)77 b(l_whence;)e(/*)19 b(SEEK_SET,)o(SEE)o(K_)o(CUR)o(,S)o
(EEK)o(_EN)o(D)d(*/)296 955 y(off_t)77 b(l_start;)95
b(/*)19 b(position)d(relative)h(a)i(l_whence)e(*/)296
1001 y(off_t)77 b(l_len;)135 b(/*)19 b(longueur)d(de)j(l'interval)o(le)
d(*/)296 1046 y(pid_t)77 b(l_pid;)135 b(/*)19 b(PID)f(du)h(processus)d
(propri\023)-20 b(etai)o(re)16 b(*/)179 1092 y(};)236
1158 y FB(le)e(c)o(hamp)g FA(l)p 422 1158 V 13 w(type)179
1225 y FC(F)p 210 1225 14 2 v 15 w(RDLCK)20 b FB(v)o(errou)14
b(partag)o(\023)-18 b(e)179 1290 y FC(F)p 210 1290 V
15 w(WRLCK)20 b FB(v)o(errou)14 b(exclusif)179 1355 y
FC(F)p 210 1355 V 15 w(UNLCK)20 b FB(d)o(\023)-18 b(ev)o(errouillage)
236 1421 y(Les)12 b(manipulati)q(ons)j(de)d(v)o(errous)h(se)f(fon)o(t)g
(a)o(v)o(ec)g(la)h(primitiv)o(e)h FA(fcntl)p FB(,)c(c'est-\022)-19
b(a-dire)12 b(par)h(le)f(biais)i(d'un)179 1467 y(descripteur.)i(P)o
(our)f(p)q(oser)g(un)g(v)o(errou)g(partag)o(\023)-18
b(e,)15 b(ce)g(descripteur)h(doit)g(p)q(oin)o(ter)g(sur)f(une)g(ouv)o
(erture)g(en)179 1513 y(lecture.)d(De)g(m)o(^)-18 b(eme,)11
b(il)h(faut)g(un)g(descripteur)h(sur)f(une)g(ouv)o(erture)h(en)d(\023)
-18 b(ecriture)13 b(p)q(our)f(un)g(v)o(errou)g(de)g(t)o(yp)q(e)179
1558 y(exclusif)179 1604 y(.)236 1651 y(P)o(our)h(d)o(\023)-18
b(ecrire)13 b(la)g(p)q(ort)o(\023)-18 b(ee)13 b(du)g(v)o(errou)g(que)f
(l'on)h(v)o(eut)g(p)q(oser,)g(on)f(utilise)j(la)e(m)o(^)-18
b(eme)12 b(syn)o(taxe)h(que)g(p)q(our)179 1697 y(la)g(primitiv)o(e)j
FA(lseek)p FB(,)10 b(le)k(d)o(\023)-18 b(ebut)14 b(de)f(l'in)o(terv)n
(alle)j(est)d FC(whence+l)p 1148 1697 V 15 w(start)7
b FB(:)179 1742 y FA(l)p 201 1742 12 2 v 14 w(whence)j
FB(=)j(SEEK)p 491 1742 V 14 w(SET)g Fr(\000)-7 b(!)14
b FB(whence)f(=)g(0)179 1788 y FA(l)p 201 1788 V 14 w(whence)d
FB(=)j(SEEK)p 491 1788 V 14 w(CUR)g Fr(\000)-7 b(!)13
b FB(whence)h(=)e(o\013set)i(courran)o(t)179 1834 y FA(l)p
201 1834 V 14 w(whence)c FB(=)j(SEEK)p 491 1834 V 14
w(END)g Fr(\000)-7 b(!)14 b FB(whence)f(=)g(taille)i(du)e(\014c)o
(hier.)236 1926 y(La)h(longueur)i(du)f(v)o(errou)f(est)g(d)o(\023)-18
b(e\014nie)16 b(par)e(le)h(c)o(hamp)f FA(l)p 1069 1926
V 14 w(len)p FB(.)e(Si)j(cette)f(v)n(aleur)h(est)f(n)o(ulle,)h(le)g(v)o
(errou)179 1972 y(v)n(a)e(jusqu'\022)-19 b(a)14 b(la)f(\014n)h(du)f
(\014c)o(hier)i(\(m)o(^)-18 b(eme)13 b(si)g(le)h(pro)q(cessus)g(c)o
(hange)h(cette)d(\014n\).)i(Remarque)7 b(:)13 b(il)h(est)f(p)q(ossible)
179 2018 y(de)g(p)q(oser)h(un)f(v)o(errou)h(don)o(t)f(la)h(p)q(ort)o
(\023)-18 b(ee)13 b(est)g(sup)o(\023)-18 b(erieure)15
b(\022)-19 b(a)13 b(la)h(taille)h(du)e(\014c)o(hier.)236
2110 y(Le)h(c)o(hamp)g FA(l)p 436 2110 V 13 w(pid)e FB(con)o(tien)o(t)j
(le)f(pid)g(du)g(pro)q(cessus)g(propri)o(\023)-18 b(etaire)16
b(du)e(v)o(errou,)f(ce)h(c)o(hamp)g(est)f(rempli)179
2156 y(par)g FA(fcntl)e FB(dans)j(le)f(cas)h(d'un)f(app)q(el)h
(consultatif)h(\()p FA(F)p 969 2156 V 14 w(GETLK)p FB(\).)179
2294 y Fv(13.4)66 b(Utilisation)20 b(de)e Fm(fcntl)g
Fv(p)r(our)h(manipuler)i(les)d(v)n(errous)355 2379 y
FA(#include)f(<sys/type)o(s.h)o(>)355 2425 y(#include)g(<unistd.h)o(>)
355 2470 y(#include)g(<fcntl.h>)355 2516 y(int)i(fcntl\(int)d(desc,)i
(int)g(commande,)e(struct)h(flock)h(*verrou\);)236 2592
y(fcntl)11 b FB(retourne)j(0)f(en)g(cas)g(de)h(succ)o(\022)-18
b(es,)13 b(ou)g(-1)g(en)g(cas)h(d'ec)o(hec.)236 2685
y(T)m(rois)g(commandes)g(p)q(ossibles)9 b(:)179 2751
y FC(F)p 210 2751 14 2 v 15 w(SETLKW)19 b FB(p)q(ose)14
b(blo)q(quan)o(te)h(\(W)m(ait\))353 2806 y(si)f(il)g(existe)g(un)f(v)o
(errou)h(incompatible,)i FA(errno)11 b FB(a)i(p)q(our)g(v)n(aleur)i(EA)
o(GAIN)p eop
%%Page: 103 111
103 110 bop 75 50 a Fz(13.4.)26 b(UTILISA)m(TION)14 b(DE)g
Fh(FCNTL)f Fz(POUR)h(MANIPULER)g(LES)g(VERR)o(OUS)394
b FD(103)353 166 y FB(si)12 b(l'on)h(n'a)f(pas)g(les)g(droits)h(d'acc)o
(\022)-18 b(es)12 b(sur)g(le)h(\014c)o(hier)g(p)q(our)f(le)g(t)o(yp)q
(e)h(de)f(v)o(errou)g(demand)o(\023)-18 b(e,)12 b(alors)270
212 y FA(errno)f FB(a)i(p)q(our)h(v)n(aleur)g(EA)o(CCES;)353
266 y(si)j(la)g(p)q(ose)f(du)h(v)o(errou)g(cr)o(\023)-18
b(ee)16 b(une)h(situation)h(d'in)o(terblo)q(cage,)g(alors)f
FA(errno)d FB(a)i(p)q(our)h(v)n(aleur)270 312 y(EDEADLK.)179
374 y FC(F)p 210 374 14 2 v 15 w(SETLK)j FB(p)q(ose)13
b(non)h(blo)q(quan)o(te)353 428 y(succ)o(\022)-18 b(es)19
b(imm)o(\023)-18 b(ediat)20 b(si)f(il)g(n'y)f(a)h(pas)f(de)h(v)o(errou)
g(incompatible,)i(ou)d(une)h(fois)g(les)g(v)o(errous)270
474 y(incompatible)q(s)d(lev)o(\023)-18 b(es.)353 527
y(si)14 b(l'app)q(el)h(est)d(in)o(terrompu,)j FA(errno)c
FB(a)i(p)q(our)g(v)n(aleur)i(EINTR)353 581 y(si)f(une)f(situation)i
(d'in)o(terblo)q(cage)g(est)e(d)o(\023)-18 b(etect)o(\023)g(ee,)13
b(alors)h FA(errno)c FB(a)j(p)q(our)g(v)n(aleur)h(EDEADLK.)179
644 y FC(F)p 210 644 V 15 w(GETLK)20 b FB(T)m(est)e(d'existence)h(d'un)
g(v)o(errou)g(incompatible)i(a)o(v)o(ec)e(le)g(v)o(errou)f(pass)o(\023)
-18 b(e)19 b(en)g(param)o(\022)-18 b(etre)270 689 y(\(retour)13
b(-1)g(sur)h(des)f(param)o(\022)-18 b(etres)14 b(incorrects\))353
743 y(si)g(il)g(existe)g(un)f(tel)h(v)o(errou)g(incompatible,)i(alors)e
(la)f(structure)h(\015o)q(c)o(k)g(pass)o(\023)-18 b(ee)14
b(en)f(param)o(\022)-18 b(etre)270 789 y(est)16 b(remplie)j(a)o(v)o(ec)
d(les)h(v)n(aleurs)h(de)f(ce)f(v)o(errou)h(incompatibl)q(e.)h(Le)f(c)o
(hamp)g FA(l)p 1429 789 12 2 v 14 w(pid)e FB(indique)j(alors)270
835 y(l'iden)o(tit)o(\023)-18 b(e)15 b(du)f(pro)q(cessus)g(propri)o
(\023)-18 b(etaire)15 b(de)f(ce)e(v)o(errou)i(incompatibl)q(e.)353
889 y(sinon,)c(la)f(structure)h(\015o)q(c)o(k)f(reste)g(inc)o(hang)o
(\023)-18 b(ee)11 b(except)o(\023)-18 b(e)9 b(le)g(c)o(hamp)h(t)o(yp)q
(e)f(qui)h(con)o(tien)o(t)g(F)p 1606 889 V 14 w(UNLCK.)236
951 y(A)o(tten)o(tion,)i(apr)o(\022)-18 b(es)12 b(un)g(test)g
(d'existence)g(qui)h(nous)f(informe)g(de)g(l'absence)h(de)f(v)o(errou)g
(incompatible,)179 997 y(nous)j(ne)g(sommes)f(pas)h(assur)o(\023)-18
b(e)15 b(qu'au)g(pro)q(c)o(hain)h(app)q(el)g(la)f(p)q(ose)g(de)g(ce)f
(v)o(errou)h(soit)g(p)q(ossible,)i(en)d(e\013et)179 1042
y(un)j(autre)h(pro)q(cessus)g(a)g(p)q(eut-)o(^)-18 b(etre)17
b(p)q(os)o(\023)-18 b(e)18 b(un)g(v)o(errou)f(incompatibl)q(e)j(en)o
(tre-temps)d(\(cf.)g(in)o(terblo)q(cages)179 1088 y(c)o(hapitre)d
(14\).)p eop
%%Page: 104 112
104 111 bop 75 50 a FD(104)796 b Fz(CHAPITRE)14 b(13.)27
b(LES)14 b(VERR)o(OUS)g(DE)f(FICHIERS)p eop
%%Page: 105 113
105 112 bop 1775 50 a FD(105)179 478 y Fw(Chapitre)32
b(14)179 685 y Fy(Algorithmes)38 b(Distribu)m(\023)-56
b(es)40 b(&)179 810 y(In)m(terblo)s(cages)236 1026 y
FB(Ce)11 b(c)o(hapitre)h(in)o(tro)q(duit)i(les)d(probl)o(\022)-18
b(emes)13 b(li)o(\023)-18 b(es)12 b(\022)-19 b(a)11 b(la)h(gestion)h
(de)e(pro)q(cessus)h(concurren)o(ts.)g(Le)f(probl)o(\022)-18
b(eme)179 1072 y(\022)f(a)15 b(resoudre)h(est)g(le)f(partage)h(de)g
(ressources)g(en)o(tre)g(di\013)o(\023)-18 b(eren)o(ts)16
b(pro)q(cessus)h(async)o(hrones.)g(Les)e(I.P)m(.C.)f(et)179
1117 y(les)k(v)o(errous)h(son)o(t)f(deux)g(t)o(yp)q(es)h(d'outils)g(p)q
(ermettan)o(t)f(le)h(partage)f(async)o(hrone)i(de)e(ressources)g(en)o
(tre)179 1163 y(pro)q(cessus.)236 1254 y(Prenons)c(un)g(exemple)g
(simple)h(p)q(our)f(d)o(\023)-18 b(ecrire)14 b(les)f(probl)o(\022)-18
b(emes)15 b(de)e(partages.)236 1346 y(Probl)o(\022)-18
b(eme)8 b(:)j(il)i(y)e(a)h(une)g(rivi)o(\022)-18 b(ere)13
b(que)f(l'on)g(p)q(eut)g(tra)o(v)o(erser)g(par)g(un)g(gu)o(\023)-18
b(e)11 b(fait)h(de)g(pierre)g(align)o(\023)-18 b(ees,)14
b(o)q(\022)-20 b(u)11 b(il)179 1391 y(n'est)h(pas)h(p)q(ossible)h(de)f
(se)f(croiser,)h(et)f(il)h(n'est)g(pas)f(p)q(ossible)j(de)d(faire)h
(demi-tour.)g(Commen)o(t)g(doit-t-on)179 1437 y(organiser)h(le)g
(passage)s(?)236 1528 y(Solutions)c(:)219 1590 y(1.)21
b(regarder)14 b(a)o(v)n(an)o(t)f(de)h(tra)o(v)o(erser)219
1651 y(2.)21 b(si)14 b(deux)g(p)q(ersonnes)g(arriv)o(en)o(t)g(en)f(m)o
(^)-18 b(eme)13 b(temps)h(sur)f(c)o(haque)h(riv)o(e,)353
1705 y(si)g(elles)g(a)o(v)n(ancen)o(t)g(en)f(m)o(^)-18
b(eme)13 b(temps)h Fr(\000)-7 b(!)13 b FB(in)o(terblo)q(cage)353
1758 y(si)h(elles)g(attenden)o(t)g(en)f(m)o(^)-18 b(eme)13
b(temps)h Fr(\000)-7 b(!)13 b FB(in)o(terblo)q(cage)219
1820 y(3.)21 b(Un)13 b(rem)o(\022)-18 b(ede)7 b(:)12
b(un)i(c^)-19 b(ot)o(\023)h(e)12 b(prioritaire)k Fr(\000)-7
b(!)13 b FB(famine.)h(En)f(e\013et)g(si)h(le)f(cot)o(\023)-18
b(e)13 b(OUEST)f(est)h(prioritaire)j(et)270 1865 y(qu'un)g(\015ot)f
(con)o(tin)o(u)h(de)f(p)q(ersonnes)h(arriv)o(e)g(de)f(ce)g(c^)-19
b(ot)o(\023)h(e,)15 b(les)g(p)q(ersonnes)h(\022)-19 b(a)15
b(l'EST)g(son)o(t)h(blo)q(qu)o(\023)-18 b(ees)270 1911
y(ind)o(\023)g(e\014nimen)o(t.)219 1972 y(4.)21 b(Une)13
b(solution)c(:)j(alterner)j(les)e(priorit)o(\023)-18
b(es.)236 2034 y(P)o(our)16 b(des)g(ressources)g(syst)o(\022)-18
b(eme)15 b(comme)h(les)g(\014c)o(hiers,)g(le)g(partage)g(n'est)f(pas)g
(g)o(\023)-18 b(er)o(\023)g(e)16 b(par)f(le)h(SGF.)f(Il)179
2080 y(faut)g(donc)g(un)h(m)o(\023)-18 b(ecanisme)16
b(de)f(partage)22 b(:)14 b(les)i(v)o(errous,)f(qui)h(p)q(ermetten)o(t)g
(un)f(partage)h(dynamique)h(et)179 2125 y(partiel)g(\(p)q(ortions)f(de)
g(\014c)o(hiers\).)g(P)o(our)f(un)h(partage)f(en)o(tre)h(utilisateurs,)
h(on)f(utilise)h(plut^)-19 b(ot)16 b(des)g(outils)179
2171 y(comme)d FA(SCCS,)18 b(RCS)p FB(.)179 2327 y Fu(14.0.1)55
b(Mo)r(de)18 b(d'utilisation)f(des)h(ressources)g(par)h(un)g(pro)r
(cessus.)236 2397 y FB(F)m(ormalisons)d(les)d(op)o(\023)-18
b(erations)15 b(r)o(\023)-18 b(ealisables)16 b(sur)d(une)h(ressource.)
230 2458 y({)21 b(requ)o(^)-18 b(ete)7 b(:)13 b(demande)h(blo)q(quan)o
(te)h(de)e(ressources)230 2520 y({)21 b(utilisatio)q(n)9
b(:)k(lecture/)o(\023)-18 b(ecriture)15 b(sur)e(la)h(zone)g(v)o
(errouill)o(\023)-18 b(ee)230 2581 y({)21 b(lib)o(\023)-18
b(eration)10 b(:)i(v)o(errou)i(L-t)o(yp)q(e)179 2691
y Fu(14.0.2)55 b(D)o(\023)-27 b(e\014nition)18 b(de)g(l'in)n(terblo)r
(cage)e(\(deadlo)r(c)n(k\))236 2761 y FB(Un)e(ensem)o(ble)i(de)e(pro)q
(cessus)h(est)f(en)g FC(in)o(terblo)q(cage)f FB(si)h(et)g(seulemen)o(t)
h(si)g(tout)f(pro)q(cessus)h(de)f(l'en-)179 2806 y(sem)o(ble)g(est)g
(en)f(atten)o(te)h(d'un)f(\023)-18 b(ev)o(\022)g(enemen)o(t)14
b(qui)g(ne)g(p)q(eut)f(^)-18 b(etre)13 b(r)o(\023)-18
b(ealis)o(\023)g(e)15 b(que)f(par)g(un)g(autre)g(pro)q(cessus)g(de)p
eop
%%Page: 106 114
106 113 bop 75 50 a FD(106)365 b Fz(CHAPITRE)14 b(14.)27
b(ALGORITHMES)14 b(DISTRIBU)1365 39 y(\023)1360 50 y(ES)g(&)g
(INTERBLOCA)o(GES)179 166 y FB(l'ensem)o(ble.)236 258
y(Exemple)8 b(:)236 349 y(Le)k(pro)q(cessus)i(A)e(p)q(oss)o(\022)-18
b(ede)13 b(un)g(v)o(errou)f(de)h(p)q(ort)o(\023)-18 b(ee)12
b([0,400])g(sur)h(un)f(\014c)o(hier)i(f,)d(et)h(demande)h(un)g(v)o
(errou)179 395 y(de)e(p)q(ort)o(\023)-18 b(ee)12 b([800,1000])g(sur)g
(ce)f(m)o(^)-18 b(eme)12 b(\014c)o(hier,)g(alors)g(qu'un)h(pro)q
(cessus)f(B)g(p)q(oss)o(\022)-18 b(ede)12 b(un)g(v)o(errou)g(de)g(p)q
(ort)o(\023)-18 b(ee)179 440 y([600,900])10 b(sur)g(le)g(\014c)o(hier)i
(f)d(et)h(demande)h(un)f(v)o(errou)h(de)f(p)q(ort)o(\023)-18
b(ee)10 b([0,33])g(sur)g(f.)f(Les)h(deux)h(pro)q(cessus)g(son)o(t)f(en)
179 486 y(in)o(terblo)q(cage.)j(Dans)f(le)g(cas)g(de)f(la)h(p)q(ose)g
(de)g(v)o(errous)g(sous)g(UNIX,)e(il)i(y)f(a)h(d)o(\023)-18
b(etection)12 b(de)g(cet)f(in)o(terblo)q(cage)179 532
y(et)i(la)g(commande)h FA(fcntl)c FB(\023)-18 b(ec)o(houe.)179
642 y Fu(14.0.3)55 b(Quatre)18 b(conditions)g(n)o(\023)-27
b(ecessaires)18 b(\022)-28 b(a)19 b(l'in)n(terblo)r(cage.)236
712 y FB(Les)13 b(conditions)j(suiv)n(an)o(tes)f(son)o(t)e
FC(n)o(\023)-21 b(ecessaires)14 b FB(p)q(our)g(a)o(v)o(oir)g(une)g(p)q
(ossibilit)o(\023)-17 b(e)15 b(d'in)o(terblo)q(cage.)179
828 y FC(Exclusion)e(m)o(utuelle)19 b FB(les)11 b(ressources)h(ne)f
(son)o(t)g(pas)g(partageables,)i(un)e(seul)h(pro)q(cessus)g(\022)-19
b(a)11 b(la)h(fois)f(p)q(eut)270 874 y(utiliser)k(la)f(ressource.)179
936 y FC(P)o(ossession)i(&)f(atten)o(te)21 b FB(il)d(doit)g(exister)g
(un)g(pro)q(cessus)g(qui)g(utilise)h(une)f(ressource)g(et)e(qui)i(est)f
(en)270 982 y(atten)o(te)c(sur)h(une)f(requ)o(^)-18 b(ete.)179
1044 y FC(Sans)15 b(pr)o(\023)-21 b(eemption)19 b FB(les)10
b(ressources)h(ne)f(son)o(t)f(pas)h(pr)o(\023)-18 b(eemptibles)12
b(c'est-\022)-19 b(a-dire)10 b(que)g(les)h(lib)o(\023)-18
b(erations)12 b(son)o(t)270 1090 y(faites)g(v)o(olon)o(tairemen)o(t)i
(par)e(les)g(pro)q(cessus.)g(On)f(ne)h(p)q(eut)g(pas)g(forcer)f(un)h
(pro)q(cessus)h(\022)-19 b(a)11 b(rendre)h(une)270 1135
y(ressource.)i(\(Con)o(tre)f(exemple)8 b(:)k(le)i(CPU)e(sous)i(Unix)f
(est)g(pr)o(\023)-18 b(eemptible\))179 1197 y FC(A)o(tten)o(te)15
b(circulaire)k FB(il)e(doit)f(exister)h(un)f(ensem)o(ble)h(de)f(pro)q
(cessus)h Ft(P)1261 1201 y Fd(i)1289 1197 y FB(tel)f(que)g
Ft(P)1446 1201 y Fd(i)1474 1197 y FB(attend)g(une)h(res-)270
1243 y(source)d(p)q(oss)o(\023)-18 b(ed)o(\023)g(ee)14
b(par)f Ft(P)638 1247 y Fd(i)p Fs(+1)690 1243 y FB(.)179
1314 y(Les)g(quatre)g(conditions)j(son)o(t)d(n)o(\023)-18
b(ecessaires)15 b(p)q(our)f(qu'une)g(situation)h(d'in)o(terblo)q(cage)h
(ait)d(lieu.)179 1359 y(Exercice)8 b(:)k(mon)o(trer)h(que)h(p)q(our)g
(les)f(v)o(errous,)h(les)f(quatre)h(conditions)i(tiennen)o(t.)179
1405 y(Exercice)8 b(:)j(mon)o(trer)i(que)g(si)g(l'une)g(des)g
(condition)i(n'est)e(pas)g(v)o(\023)-18 b(eri\014)o(\023)g(ee)13
b(alors)h(il)f(ne)g(p)q(eut)g(y)g(a)o(v)o(oir)g(d'in)o(ter-)179
1451 y(blo)q(cage.)179 1561 y Fu(14.0.4)55 b(Les)18 b(graphes)h(d'allo)
r(cation)e(de)h(ressources)236 1631 y FB(Les)g(graphes)g(d'allo)q
(cation)j(de)c(ressources)i(p)q(ermetten)o(t)e(de)h(d)o(\023)-18
b(ecrire)18 b(simplemen)o(t)i(les)e(probl)o(\022)-18
b(emes)179 1677 y(d'in)o(terblo)q(cage.)236 1722 y FA(G)20
b(=)f(\(N,T\))f(N)h(=)g(P)g(U)g(R)179 1768 y FB(P)6 b(:)13
b(ensem)o(ble)h(des)g(pro)q(cessus)179 1814 y(R)6 b(:)13
b(ensem)o(ble)h(des)g(ressources)236 1905 y(T)f(est)g(inclus)i(dans)f
(RXP)f(U)f(PXR)179 1951 y(Soit)i(le)f(couple)i(\(x,y\))e(appartenan)o
(t)h(\022)-19 b(a)13 b(T,)179 1996 y(si)g(\(x,y\))g(appartien)o(t)i
(\022)-19 b(a)13 b(RXP)m(,)f(cela)i(signi\014e)h(que)f(la)g(ressource)g
(x)f(est)g(utilis)o(\023)-18 b(ee)15 b(par)e(le)h(pro)q(cessus)g(y)m(.)
179 2042 y(si)f(\(x,y\))g(appartien)o(t)i(\022)-19 b(a)13
b(PXR,)g(cela)g(signi\014e)j(que)d(le)h(pro)q(cessus)g(x)f(demande)h
(la)g(ressource)g(y)m(.)p eop
%%Page: 107 115
107 114 bop 1775 50 a FD(107)179 481 y Fw(Chapitre)32
b(15)179 691 y Fy(In)m(ter)39 b(Pro)s(cessus)179 816
y(Comm)m(un)o(ications)d(\(I.P)-10 b(.C.\))236 1043 y
FB(Les)13 b(m)o(\023)-18 b(ecanismes)13 b(d'IPC)f(p)q(ermetten)o(t)h
(de)f(faire)h(comm)o(uniquer)h(et/ou)f(de)f(sync)o(hroniser)i(n'imp)q
(orte)179 1088 y(quel)g(couple)g(de)g(pro)q(cessus)g(lo)q(caux)h(\(de)e
(la)g(m)o(^)-18 b(eme)13 b(mac)o(hine\).)236 1183 y(Les)d(trois)g(m)o
(\023)-18 b(ecanismes)11 b(d'IPC)6 b(:)i(\014les)j(de)e(messages,)h
(segmen)o(ts)g(de)g(m)o(\023)-18 b(emoire)10 b(partag)o(\023)-18
b(ee,)10 b(s)o(\023)-18 b(emaphores,)179 1228 y(son)o(t)12
b(puremen)o(t)i(m)o(\023)-18 b(emoire.)13 b(Ils)f(n'on)o(t)h(pas)g(de)f
(liens)j(a)o(v)o(ec)d(le)h(syst)o(\022)-18 b(eme)13 b(de)g(\014c)o
(hiers,)g(ce)f(qui)i(les)f(sort)f(de)h(la)179 1274 y(philosophi)q(e)j
(UNIX.)236 1368 y(Ces)e(m)o(\023)-18 b(ecanismes)15 b(ne)f(son)o(t)f
(plus)i(d)o(\023)-18 b(esign)o(\023)g(es)16 b(lo)q(calemen)o(t)f(dans)g
(les)f(pro)q(cessus)h(par)f(des)g(descripteurs)179 1414
y(standards,)g(et)e(de)h(ce)g(fait)g(il)h(n'est)f(plus)h(p)q(ossible)h
(d'utiliser)g(les)f(m)o(\023)-18 b(ecanismes)14 b(de)f(lecture)h(et)f
(d')o(\023)-18 b(ecriture)179 1460 y(standards)14 b(sur)g(de)f(tels)g
(ob)r(jets.)236 1554 y(Le)i(syst)o(\022)-18 b(eme)15
b(prend)h(en)f(c)o(harge)h(la)f(gestion)h(de)f(ces)g(ob)r(jets.)g
(C'est)f(lui)j(qui)f(tien)o(t)f(\022)-19 b(a)15 b(jour)g(les)g(tables)
179 1600 y(qui)f(les)g(con)o(tiennen)o(t.)179 1791 y
Fv(15.1)66 b(R)o(\023)-32 b(ef)o(\023)g(erences)19 b(d'IPC)236
1879 y FB(Les)d(ob)r(jets)h(son)o(t)f(r)o(\023)-18 b(ef)o(\023)g(erenc)
o(\023)g(es)17 b(par)f(deux)h(noms)7 b(:)15 b(le)i(n)o(um)o(\023)-18
b(ero)17 b(d'iden)o(ti\014cation)i(dans)e(le)g(pro)q(cessus,)179
1924 y(qui)d(est)f(retourn)o(\023)-18 b(e)14 b(par)f(les)h(fonctions)g
(get)7 b(:)12 b FA(msgget,)17 b(semget,)g(shmget)p FB(.)236
1973 y(Nous)g(app)q(ellerons)h(par)f(la)f(suite)h FA(dipc)e
FB(ce)g(descripteur)j(d'IPC.)d(L'autre)h(r)o(\023)-18
b(ef)o(\023)g(erence)17 b(de)f(l'IPC)g(est)179 2019 y(la)h(cl)o(\023)
-18 b(e)17 b(\()p FA(key)p FB(\))f(qui)h(est)g(utilis)o(\023)-18
b(ee)19 b(dans)e(l'app)q(el)i(de)e(la)g(fonction)h FA(get)d
FB(p)q(our)j(iden)o(ti\014er)h(l'ob)r(jet)e(IPC)f(\(du)179
2064 y(syst)o(\022)-18 b(eme\))13 b(auquel)i(on)e(c)o(herc)o(he)h(\022)
-19 b(a)13 b(acc)o(\023)-18 b(eder.)236 2113 y(La)10
b(cl)o(\023)-18 b(e)11 b(p)q(ermet)f(\022)-19 b(a)10
b(plusieurs)j(pro)q(cessus)e(d'acc)o(\023)-18 b(eder)11
b(au)f(m)o(^)-18 b(eme)10 b(ob)r(jet)g(IPC)f(\(ce)h(qui)h(est)f
(fondamen)o(tal\).)179 2159 y(Mais)k(ce)f(syst)o(\022)-18
b(eme)13 b(de)g(cl)o(\023)-18 b(e)14 b(est)f(d'une)g(gestion)i(d)o
(\023)-18 b(elicate,)14 b(et)f(p)q(ose)h(des)f(probl)o(\022)-18
b(emes.)236 2207 y(Comme)17 b(les)g(cl)o(\023)-18 b(es)17
b(son)o(t)g(arbitraires)i(\(un)e(en)o(tier)g(long)h(de)e(la)h(mac)o
(hine)h(H^)-19 b(ote\),)16 b(des)h(probl)o(\022)-18 b(emes)18
b(de)179 2253 y(droits)c(et)f(de)g(c)o(hoix)h(de)f(la)h(cl)o(\023)-18
b(e)14 b(se)f(p)q(osen)o(t.)236 2302 y(Il)f(n'est)f(pas)h(assur)o(\023)
-18 b(e)12 b(\022)-19 b(a)12 b(un)g(syst)o(\022)-18 b(eme)12
b(clien)o(t/serv)o(eur)i(qui)e(d)o(\023)-18 b(emarre)12
b(que)g(sa)f(cl)o(\023)-18 b(e)12 b(priv)o(\023)-18 b(ee)13
b(n'est)e(pas)h(d)o(\023)-18 b(ej\022)f(a)179 2347 y(utilis)o(\023)h
(ee)15 b(par)f(un)g(autre)f(pro)q(cessus)8 b(!)13 b(Comme)g(le)h(clien)
o(t)h(et)e(le)h(serv)o(eur)f(doiv)o(en)o(t)i(a)o(v)o(oir)f(la)g(m)o(^)
-18 b(eme)14 b(cl)o(\023)-18 b(e,)13 b(des)179 2393 y(complications)j
(surviennen)o(t.)179 2518 y Fu(15.1.1)55 b(Cr)o(\023)-27
b(eation)18 b(de)h(cl)o(\023)-27 b(es)236 2593 y FB(P)o(our)10
b(r)o(\023)-18 b(esoudre)10 b(ce)f(probl)o(\022)-18 b(eme,)10
b(une)g(fonction)g(de)g(cr)o(\023)-18 b(eation)10 b(automatique)h(de)f
(cl)o(\023)-18 b(e)9 b(a)f(\023)-18 b(et)o(\023)g(e)9
b(mise)h(au)g(p)q(oin)o(t.)179 2639 y(Cette)i(fonction)j
FA(ftock\(\))10 b FB(utilise)15 b(une)f(r)o(\023)-18
b(ef)o(\023)g(erence)13 b(de)g(l'arb)q(orescence)i(p)q(our)f(cr)o(\023)
-18 b(eer)13 b(une)g(cl)o(\023)-18 b(e)14 b(unique.)179
2724 y FA(key_t)j(ftok\(const)f(char)i(*,)h(char\);)236
2806 y FB(Si)14 b(tout)f(le)h(monde)g(utilise)h(de)e(telles)i(cl)o
(\023)-18 b(es,)13 b(le)g(probl)o(\022)-18 b(eme)15 b(soulev)o(\023)-18
b(e)15 b(pr)o(\023)-18 b(ec)o(\023)g(edemmen)o(t)14 b(disparait.)p
eop
%%Page: 108 116
108 115 bop 75 50 a FD(108)401 b Fz(CHAPITRE)14 b(15.)40
b(INTER)14 b(PR)o(OCESSUS)g(COMMUNICA)m(TIONS)h(\(I.P)m(.C.\))236
166 y FB(Malheureusemen)o(t,)21 b(cette)d(fonction)h
FA(ftock)d FB(utilise)21 b(p)q(our)e(cr)o(\023)-18 b(eer)18
b(une)h(cl)o(\023)-18 b(e)19 b(le)g(n)o(um)o(\023)-18
b(ero)18 b(de)h(disque)179 212 y(logique)g(et)e(d'ino)q(de)i(de)e(la)h
(r)o(\023)-18 b(ef)o(\023)g(erence)17 b(donn)o(\023)-18
b(ee)19 b(en)e(param)o(\022)-18 b(etre)18 b(\(il)g(faut)f(que)h(la)g(r)
o(\023)-18 b(ef)o(\023)g(erence)17 b(pass)o(\023)-18
b(ee)18 b(en)179 258 y(param)o(\022)-18 b(etre)13 b(\022)-19
b(a)13 b FA(ftock)e FB(existe,)j(sinon)g FA(ftock)d FB(ren)o(v)o(oie)k
(-1\).)236 304 y(Ceci)h(p)q(ose)f(un)g(autre)h(t)o(yp)q(e)f(de)g(probl)
o(\022)-18 b(eme)8 b(:)15 b(si)g(l'on)h(c)o(hange)f(l'ino)q(de)i(asso)q
(ci)o(\023)-18 b(ee)16 b(\022)-19 b(a)15 b(la)h(r)o(\023)-18
b(ef)o(\023)g(erence,)15 b(cela)179 349 y(c)o(hange)f(la)f(v)n(aleur)i
(de)e(la)g(cl)o(\023)-18 b(e,)14 b(donc)f(il)i(n'est)e(plus)h(p)q
(ossible)h(de)e(retrouv)o(er)h(la)g(cl)o(\023)-18 b(e)13
b(originale.)236 395 y(Le)19 b(conseil)i(de)f(ton)o(ton)g(Doum)o(\023)
-18 b(e)7 b(:)19 b(utiliser)i(un)f(\014c)o(hier)g(v)o(errouill)o(\023)
-18 b(e)22 b(comme)d(r)o(\023)-18 b(ef)o(\023)g(erence)19
b(et)g(faire)h(le)179 441 y(m)o(\023)-18 b(enage)13 b(...)f(comme)h(p)q
(our)h(les)g(pseudo-terminaux,)h(ou)f(les)f(tub)q(es.)179
553 y Fu(15.1.2)55 b(La)19 b(structure)f(ip)r(c)p 778
553 17 2 v 19 w(p)r(erm)236 624 y FB(La)10 b(structure)h
FA(ipc)p 513 624 12 2 v 12 w(perm)e FB(est)g(comm)o(une)i(aux)f(trois)h
(m)o(\023)-18 b(ecanismes)11 b(d'ip)q(c.)f(Elle)h(p)q(ermet,)f(comme)g
(le)g(fait)179 669 y(une)15 b(ino)q(de,)g(de)f(sto)q(c)o(k)o(er)h
(l'utilisateur)i(cr)o(\023)-18 b(eateur,)15 b(l'utilisateur)i(propri)o
(\023)-18 b(etaire)17 b(ainsi)f(que)e(leurs)i(group)q(es.)179
715 y(On)10 b(di\013)o(\023)-18 b(erencie)13 b(p)q(our)e(les)h(IPC,)d
(l'utilisateu)q(r)k(cr)o(\023)-18 b(eateur)11 b(\(qui)g(a)g(r)o(\023)
-18 b(ealis)o(\023)g(e)12 b(la)f(fonction)h(get\))e(du)h(propri)o(\023)
-18 b(etaire)179 761 y(de)14 b(l'IPC.)g(Les)g(droits)h(d'acc)o(\022)-18
b(es)15 b(son)o(t)f(limit)o(\023)-18 b(es)16 b(\022)-19
b(a)14 b(la)h(lecture)g(et)f(l')o(\023)-18 b(ecriture)16
b(\(l'ex)o(\023)-18 b(ecution)16 b(n'a)o(y)o(an)o(t)f(pas)f(de)179
806 y(sens)f(...\).)236 852 y(La)g(structure)h FA(ipc)p
519 852 V 13 w(perm)d FB(et)i(les)h(droits)g(d'acc)o(\022)-18
b(es)13 b(\022)-19 b(a)13 b(un)h(ob)r(jet)f(IPC)19 b(:)277
916 y FA(typedef)e(long)h(key_t;)76 b(/*)19 b(for)f(ftok\(\))g
(function)e(*/)277 962 y(typedef)h(long)h(uid_t;)76 b(/*)19
b(Used)f(for)g(user)g(IDs)h(*/)277 1007 y(typedef)e(long)h(gid_t;)76
b(/*)19 b(Used)f(for)g(group)g(IDs)g(*/)198 1099 y(/*)h(Common)f(IPC)g
(Access)f(Structure)f(*/)238 1144 y(struct)h(ipc_perm)f({)336
1190 y(uid_t)214 b(uid;)76 b(/*)19 b(owner's)e(user)h(id)h(*/)336
1236 y(gid_t)214 b(gid;)76 b(/*)19 b(owner's)e(group)h(id)h(*/)336
1281 y(uid_t)214 b(cuid;)56 b(/*)19 b(creator's)d(user)i(id)h(*/)336
1327 y(gid_t)214 b(cgid;)56 b(/*)19 b(creator's)d(group)i(id)h(*/)336
1373 y(unsigned)d(short)38 b(mode;)56 b(/*)19 b(access)f(modes)f(*/)336
1418 y(unsigned)f(short)38 b(seq;)76 b(/*)19 b(slot)f(usage)g(sequence)
f(number)g(*/)336 1464 y(key_t)214 b(key;)76 b(/*)19
b(key)g(*/)238 1510 y(};)179 1622 y Fu(15.1.3)55 b(Les)18
b(options)h(de)f(la)g(structure)g(ip)r(c)p 1131 1622
17 2 v 20 w(p)r(erm)179 1692 y FA(#)39 b(define)e(IPC_CREA)o(T)56
b(0001000)95 b(/*)19 b(create)e(entry)h(if)h(key)f(doesn't)f(exist)h
(*/)179 1738 y(#)39 b(define)e(IPC_EXCL)75 b(0002000)95
b(/*)19 b(fail)f(if)h(key)f(exists)g(*/)179 1784 y(#)39
b(define)e(IPC_NOWA)o(IT)f(0004000)95 b(/*)19 b(error)f(if)h(request)e
(must)h(wait)g(*/)238 1875 y(/*)g(Keys.)g(*/)179 1921
y(#)39 b(define)e(IPC_PRIV)o(ATE)f(\(key_t\)0)75 b(/*)19
b(private)e(key)h(*/)238 2012 y(/*)g(Control)f(Commands.)g(*/)179
2058 y(#)39 b(define)e(IPC_RMID)75 b(0)215 b(/*)19 b(remove)e
(identifier)f(*/)179 2103 y(#)39 b(define)e(IPC_SET)95
b(1)215 b(/*)19 b(set)g(options)d(*/)179 2149 y(#)39
b(define)e(IPC_STAT)75 b(2)215 b(/*)19 b(get)g(options)d(*/)218
2240 y(/*)j(Common)e(IPC)i(Definitio)o(ns)o(.)e(*/)238
2286 y(/*)h(Mode)h(bits.)e(*/)179 2332 y(#)39 b(define)e(IPC_ALLO)o(C)
56 b(0100000)95 b(/*)19 b(entry)f(currently)e(allocated)g(*/)179
2377 y(#)39 b(define)e(IPC_LOCK)o(ED)f(0040000)95 b(/*)19
b(structure)d(is)j(locked)e(*/)179 2423 y(#)39 b(define)e(IPC_WANT)o
(ED)f(0004000)95 b(/*)19 b(process)e(waiting)g(for)h(lock)g(*)179
2535 y Fu(15.1.4)55 b(L'acc)o(\022)-27 b(es)18 b(aux)g(tables)g(d'IPC)h
(par)g(le)f(shell)236 2606 y FB(La)11 b(commande)h FA(ipcs)d
FB(\(IPC)h(state)h(\))f(p)q(ermet)h(de)g(conna)l(^)-15
b(\020tre)13 b(l')o(\023)-18 b(etat)11 b(des)g(IPC)f(de)h(la)g(mac)o
(hine)h(\(comme)179 2651 y(la)h(commande)h(ps)g(p)q(our)f(les)h(pro)q
(cessus\).)g(P)o(ar)f(exemple)h(sur)g(\014llmore)21 b(:)179
2761 y FA(IPC)d(status)g(from)g(/dev/kmem)e(as)j(of)f(Mon)h(Apr)38
b(5)19 b(18:23:31)e(1993)179 2806 y(T)97 b(ID)h(KEY)156
b(MODE)135 b(OWNER)77 b(GROUP)p eop
%%Page: 109 117
109 116 bop 75 50 a Fz(15.2.)26 b(LES)14 b(FILES)g(DE)g(MESSA)o(GES)
1063 b FD(109)179 166 y FA(Message)17 b(Queues:)179 212
y(q)117 b(3)19 b(0x4917dfe1)d(--rw-rw-rw)o(-)95 b(root)h(root)179
258 y(q)117 b(4)19 b(0xd5dcf701)d(--rw-rw-rw)o(-)95 b(root)h(root)179
303 y(Shared)17 b(Memory:)179 349 y(m)117 b(0)19 b(0x41440010)d
(--rw-rw-rw)o(-)95 b(root)h(root)179 395 y(m)117 b(1)19
b(0x414461bf)d(--rw-rw-rw)o(-)95 b(root)h(root)179 440
y(m)117 b(2)19 b(0x41460741)d(--rw-rw-rw)o(-)95 b(root)h(root)179
486 y(m)117 b(3)19 b(0xff46df0e)d(--rw-rw-rw)o(-)95 b(root)h(root)179
532 y(m)117 b(4)19 b(0xfe46df0e)d(--rw-rw-rw)o(-)95 b(root)h(root)179
577 y(m)78 b(808)18 b(0x44446180)e(--rw-r----)o(-)95
b(root)38 b(licence)179 623 y(Semaphore)o(s:)179 669
y(s)117 b(0)19 b(0x414461bf)d(--ra-ra-ra)o(-)95 b(root)h(root)179
714 y(s)117 b(1)19 b(0x41460741)d(--ra-ra-ra)o(-)95 b(root)h(root)179
760 y(s)117 b(2)19 b(0x00446f6d)d(--ra-r--r-)o(-)95 b(root)h(root)179
806 y(s)117 b(3)19 b(0x01090522)d(--ra-r--r-)o(-)95 b(root)h(root)179
851 y(s)117 b(4)19 b(0x054baa58)d(--ra-r--r-)o(-)95 b(root)h(root)179
897 y(s)117 b(5)19 b(0xff46df0e)d(--ra-ra-ra)o(-)95 b(root)h(root)179
943 y(s)117 b(6)19 b(0x00000000)d(--ra-ra---)o(-)56 b(oracle)115
b(dba)236 1006 y FB(O)q(\022)-20 b(u)13 b(l'on)h(a)f(les)h
(informations)h(suiv)n(an)o(tes)21 b(:)179 1115 y FC(T)f
FB(t)o(yp)q(e)179 1179 y FC(ID)g FB(iden)o(ti\014cation)d(in)o(terne)d
(de)f(l'ob)r(jet)179 1242 y FC(KEY)20 b FB(cl)o(\023)-18
b(e)14 b(de)f(l'ob)r(jet)h(\(en)f(hexa\))h(a)o(v)o(ec)f(0x000000)h(mo)q
(de)g(IPC)p 1123 1242 12 2 v 13 w(PRIV)l(A)m(TE)179 1305
y FC(MODE)21 b FB(droits)14 b(d'acc)o(\022)-18 b(es)179
1368 y FC(O)o(WNER)20 b FB(propri)o(\023)-18 b(etaire)179
1431 y FC(GR)o(OUP)21 b FB(propri)o(\023)-18 b(etaire)179
1494 y FC(CREA)l(TOR)179 1558 y(CGR)o(OUP)179 1621 y
FB(D'autres)13 b(options,)i(-q)d(-m)h(-s)g(-a)g(-c)236
1713 y(L'autre)g(commande)h FA(ipcrm)d FB(p)q(ermet)j(de)f(d)o(\023)-18
b(etruire)14 b(les)g(ip)q(c)g(don)o(t)f(on)h(donne)g(soit)179
1777 y FC(l'iden)o(ti\014an)o(t)k FB(a)o(v)o(ec)f(-q)h(-m)f(et)g(-s,)g
(soit)h(par)g(exemple,)g FA(ipcrm)g(-q)h(5)e FB(d)o(\023)-18
b(etruit)18 b(les)h(\014les)f(de)g(messages)270 1822
y(d'iden)o(ti\014an)o(t)e(5.)179 1886 y FC(la)e(cl)o(\023)-21
b(e)20 b FB(a)o(v)o(ec)10 b(-Q)f(-M)g(-S,)h(soit)g(par)g(exemple)h
FA(ipcrm)17 b(-M)i(0x01090522)6 b FB(d)o(\023)-18 b(etruit)10
b(les)h(segmen)o(ts)f(de)g(m)o(\023)-18 b(emoire)270
1931 y(de)13 b(cl)o(\023)-18 b(e)14 b(0x01090522)236
1995 y(Ces)f(options)i(son)o(t)e(com)o(binables.)236
2041 y FC(A)o(tten)o(tion)g FB(ne)h(jamais)g(utiliser)i(les)e(iden)o
(ti\014an)o(ts)i(fournis)f(par)f FA(ipcs)e FB(dans)i(un)g(programme.)g
(Ils)g(ne)179 2087 y(son)o(t)f(pas)h(totalemen)o(t)g(compatibles,)h
(c'est)d(la)i(cl)o(\023)-18 b(e)14 b(qui)g(est)f(la)g(seule)i(r)o(\023)
-18 b(ef)o(\023)g(erence)13 b(solide.)179 2220 y Fv(15.2)66
b(Les)22 b(\014les)g(de)h(messages)236 2303 y FB(Utilise)13
b(le)f(princip)q(e)i(des)d(b)q(o)l(^)-15 b(\020tes)12
b(aux)g(lettres)18 b(:)11 b(on)h(d)o(\023)-18 b(ep)q(ose)12
b(dans)g(la)g(b)q(o)l(^)-15 b(\020te)12 b(un)g(message)f(que)h
(d'autres)179 2349 y(pro)q(cessus)i(p)q(ourron)o(t)g(lire.)236
2441 y(Le)e(mo)q(de)g(de)g(lecture/)o(\023)-18 b(ecriture)14
b(se)d(fait)h(de)g(mani)o(\022)-18 b(ere)13 b(group)o(\023)-18
b(ee)13 b(par)f(une)g(structure)g(de)g(taille)i(donn)o(\023)-18
b(ee.)179 2486 y(Chaque)11 b(instruction)j(de)c(lecture)i(ou)f(d')o
(\023)-18 b(ecriture)12 b(se)f(fait)g(sur)g(un)g(message)h(en)o(tier)f
(\(toute)g(la)h(structure)f(de)179 2532 y(message\).)h(P)o(our)h(que)g
(les)g(lectures)h(soien)o(t)f(compatibles)i(a)o(v)o(ec)e(les)f(\023)-18
b(ecritures,)13 b(les)g(messages)h(son)o(t)e(t)o(yp)o(\023)-18
b(es.)179 2578 y(On)13 b(utilisera)i(une)f(structure)g(don)o(t)f(le)h
(premier)g(c)o(hamp)f(est)g(un)h(en)o(tier)g(long)g(qui)g(doit)g(con)o
(tenir)h(le)e(t)o(yp)q(e)179 2623 y(du)g(message.)179
2669 y FC(R)o(\022)-21 b(egle)15 b(d'or)k FB(:)12 b(le)i(t)o(yp)q(e)f
(d'un)h(message)g(est)e(un)i(en)o(tier)g(strictemen)o(t)g(p)q(ositif.)
236 2761 y(Le)h(t)o(yp)q(e)g(du)g(message)g(p)q(ermet)g(aux)h
(applications)i(d'e\013ectuer)d(les)h(b)q(ons)f(ordres)h(de)e(lecture,)
i(mais)179 2806 y(aussi)e(p)q(ermet)f(de)h(s)o(\023)-18
b(electionner)15 b(le)f(ou)f(les)h(messages)f(dans)h(la)g(\014le)g
(d'atten)o(te.)p eop
%%Page: 110 118
110 117 bop 75 50 a FD(110)401 b Fz(CHAPITRE)14 b(15.)40
b(INTER)14 b(PR)o(OCESSUS)g(COMMUNICA)m(TIONS)h(\(I.P)m(.C.\))236
166 y FB(Le)e(\014c)o(hier)h FA(<sys/msg.h>)236 258 y
FB(Quelques)h(macros)e(p)q(ermettan)o(t)h(de)f(param)o(\022)-18
b(etrer)14 b(les)g(app)q(els)8 b(:)179 365 y FC(MSG)p
284 365 14 2 v 15 w(NOERR)o(OR)21 b FB(l'extraction)14
b(d'un)g(message)f(trop)h(long)g(n'en)o(traine)g(pas)f(d'erreur)h(\(le)
f(message)270 410 y(est)g(tronqu)o(\023)-18 b(e\).)179
471 y FC(MSG)p 284 471 V 15 w(R)21 b FB(autorisation)15
b(de)f(lire)g(dans)g(la)f(\014le.)179 532 y FC(MSG)p
284 532 V 15 w(W)20 b FB(autorisation)c(d')o(\023)-18
b(ecrire)14 b(dans)f(la)h(\014le.)179 592 y FC(MSG)p
284 592 V 15 w(R)-5 b(W)g(AIT)20 b FB(indication)d(qu'un)c(pro)q
(cessus)i(est)e(blo)q(qu)o(\023)-18 b(e)14 b(en)g(lecture.)179
653 y FC(MSG)p 284 653 V 15 w(WW)-5 b(AIT)20 b FB(indication)c(qu'un)e
(pro)q(cessus)g(est)f(blo)q(qu)o(\023)-18 b(e)15 b(en)d(\023)-18
b(ecriture.)179 763 y Fu(15.2.1)55 b(la)19 b(structure)e(msqid)p
832 763 17 2 v 19 w(ds)198 833 y FA(struct)h(msqid_ds)e({)257
878 y(struct)i(ipc_perm)75 b(msg_perm;)134 b(/*)19 b(op\023)-20
b(eratio)o(n)17 b(permissio)o(n)f(struct)i(*/)257 924
y(struct)g(__msg)135 b(*msg_firs)o(t;)95 b(/*)19 b(ptr)f(to)h(first)f
(message)e(on)j(q)h(*/)257 970 y(struct)e(__msg)135 b(*msg_last)o(;)115
b(/*)19 b(ptr)f(to)h(last)f(message)f(on)i(q)g(*/)257
1015 y(unsigned)e(short)g(int)i(msg_qnum;)134 b(/*)19
b(#)g(of)g(messages)d(on)j(q)g(*/)257 1061 y(unsigned)e(short)g(int)i
(msg_qbyte)o(s;)95 b(/*)19 b(max)f(#)h(of)g(bytes)f(on)h(q)g(*/)257
1107 y(pid_t)273 b(msg_lspid)o(;)115 b(/*)19 b(pid)f(of)h(last)f
(msgsnd)f(*/)257 1152 y(pid_t)273 b(msg_lrpid)o(;)115
b(/*)19 b(pid)f(of)h(last)f(msgrcv)f(*/)257 1198 y(time_t)253
b(msg_stime)o(;)115 b(/*)19 b(last)f(msgsnd)f(time)h(*/)257
1243 y(time_t)253 b(msg_rtime)o(;)115 b(/*)19 b(last)f(msgrcv)f(time)h
(*/)257 1289 y(time_t)253 b(msg_ctime)o(;)115 b(/*)19
b(last)f(change)f(time)h(*/)257 1335 y(unsigned)f(short)g(int)i
(msg_cbyte)o(s;)95 b(/*)19 b(current)d(#)k(bytes)d(on)i(q)g(*/)257
1380 y(char)293 b(msg_pad[2)o(2];)75 b(/*)19 b(room)f(for)g(future)f
(expansion)g(*/)238 1426 y(};)179 1536 y Fu(15.2.2)55
b(La)19 b(structure)f(g)o(\023)-27 b(en)o(\023)g(erique)16
b(d'un)j(message)236 1606 y FB(La)13 b(structure)h(suiv)n(an)o(te)h
(est)e(un)g(mo)q(d)o(\022)-18 b(ele)14 b(p)q(our)g(les)g(messages)20
b(:)179 1674 y FA(struct)d(msgbuf)g({)257 1719 y(long)h(mtype;)76
b(/*)19 b(type)f(du)h(message)e(*/)257 1765 y(char)h(mtext[1];)e(/*)j
(texte)f(du)h(message)e(*/)179 1811 y(};)236 1879 y FB(par)d(exemple)8
b(:)179 1940 y FA(struct)17 b(msg_buffer)f({)257 1985
y(long)i(toto;)g(/*)h(type)f(*/)257 2031 y(float)g(a;)257
2077 y(char)g(m[7];)179 2122 y(};)236 2183 y FC(A)o(tten)o(tion)c
FB(on)g(ne)g(p)q(eut)h(pas)f(\023)-18 b(ec)o(hanger)15
b(des)g(adresses,)f(en)h(e\013et)f(les)h(adresses)g(virtuelles)i
(utilis)o(\023)-18 b(ees)179 2229 y(par)12 b(les)h(di\013)o(\023)-18
b(eren)o(ts)13 b(programmes)g(qui)f(\023)-18 b(ec)o(hangen)o(t)13
b(des)f(messages)h(son)o(t)f(\022)-19 b(a)12 b(priori)h(di\013)o(\023)
-18 b(eren)o(tes,)14 b(de)e(plus)h(les)179 2274 y(zones)g(de)h(m)o
(\023)-18 b(emoire)13 b(manipulab)q(les)j(par)e(deux)f(pro)q(cessus)i
(son)o(t)e(disjoin)o(tes.)236 2320 y FC(Imp)q(ortan)o(t)7
b FB(:)k(le)h(premier)g(c)o(hamp)h(doit)e(^)-18 b(etre)12
b(un)g(en)o(tier)g(long)h(qui)g(con)o(tiendra)g(le)f(t)o(yp)q(e)g(du)g
(message.)179 2366 y(On)i(trouv)o(era)g(d'autres)h(structures)f(dans)h
(le)g(\014c)o(hier)g(sys/msg.h,)f(mais)h(elle)g(ne)f(son)o(t)g(pas)h
(utilis)o(\023)-18 b(ees)16 b(par)179 2411 y(les)d(applicati)q(ons)j
(utilisateur.)236 2457 y(P)o(ar)d(exemple,)h(la)g(structure)g(de)f
(\014le)h(de)f(message)20 b(:)179 2517 y FA(struct)d(__msg)h({)257
2563 y(struct)g(__msg)155 b(*msg_nex)o(t;)257 2609 y(long)313
b(msg_type)o(;)257 2654 y(unsigned)17 b(short)g(int)39
b(msg_ts;)56 b(/*)38 b(taille)17 b(du)i(texte)f(*/)257
2700 y(long)313 b(msg_spot)o(;)17 b(/*)h("adresse")f(du)h(texte)g(*/)
179 2746 y(};)236 2806 y FB(ou)c(la)f(structure)h FA(msginfo)c
FB(utilis)o(\023)-18 b(e)15 b(par)f(le)f(no)o(y)o(au.)p
eop
%%Page: 111 119
111 118 bop 75 50 a Fz(15.2.)26 b(LES)14 b(FILES)g(DE)g(MESSA)o(GES)
1063 b FD(111)179 166 y Fu(15.2.3)55 b(Utilisation)17
b(des)i(\014les)f(de)g(messages)236 239 y FB(La)13 b(primitiv)o(e)179
306 y FA(#include)j(<sys/msg.h)o(>)179 352 y(int)i(msgget)g(\(key_t)36
b(cle,)19 b(int)f(options\);)236 418 y FB(est)d(une)g(fonction)g(pro)q
(c)o(he)h(de)e(la)i(fonction)f FA(open)p FB(.)e(Elle)i(ren)o(v)o(oie)h
(un)f(descripteur)h(d'IPC)e(de)h(\014le)g(de)179 464
y(messages)e(de)f(k)o(ey)g(=)g FA(cle)p FB(.)e(Av)o(ec)i(cr)o(\023)-18
b(eation)14 b(ou)e(non)h(de)f(la)h(\014le)g(de)f(messages)h(en)f
(fonction)h(de)g(l'existence)179 510 y(de)g(celle-ci)i(et)e(du)g(param)
o(\022)-18 b(etre)14 b FA(options)p FB(.)179 555 y(La)g(v)n(aleur)i(du)
f(param)o(\022)-18 b(etre)16 b FA(options)11 b FB(doit)k(^)-18
b(etre)14 b(construite)i(a)o(v)o(ec)f(une)h(conjonction)g(du)f(mo)q(de)
g(d'acc)o(\022)-18 b(es)179 601 y(et)13 b(des)g(constan)o(tes)h(IPC)p
547 601 12 2 v 14 w(CREA)m(T)e(et)h(IPC)p 822 601 V 13
w(EX)o(CL.)179 669 y(Si)h(cle)f(==)g(IPC)p 424 669 V
13 w(PRIV)l(A)m(TE)179 714 y(une)g(nouv)o(elle)j(\014le)e(de)f
(messages)h(priv)o(\023)-18 b(ee)14 b(est)f(cr)o(\023)-18
b(ee.)179 760 y(Sinon)179 806 y(Si)14 b(la)f(cle)h(corresp)q(ond)g
(\022)-19 b(a)13 b(une)h(\014le)g(inexistan)o(te:)358
851 y(SI)f(IPC)p 476 851 V 13 w(CREA)m(T)g(est)g(p)q(ositionn)o(\023)
-18 b(e)15 b(\(dans)f(options\),)g(une)g(nouv)o(elle)h(\014le)f(est)f
(cr)o(\023)-18 b(ee)13 b(asso)q(ci)o(\023)-18 b(e)15
b(\022)-19 b(a)13 b(cette)f(cl)o(\023)-18 b(e,)597 897
y(a)o(v)o(ec)13 b(les)h(droits)g(d)o(\023)-18 b(e\014nis)15
b(dans)e(options.)597 943 y(Le)g(cr)o(\023)-18 b(eateur)13
b(et)g(le)h(propri)o(\023)-18 b(etaire)15 b(son)o(t)e(p)q(ositionn)o
(\023)-18 b(es)597 988 y(aux)13 b(v)n(aleurs)i(de)e(l'euid)i(et)d(du)i
(egid)g(du)f(pro)q(cessus)i(r)o(\023)-18 b(ealisan)o(t)15
b(l'app)q(el,)597 1034 y(le)e(dip)q(c)i(in)o(terne)f(de)f(la)h(\014le)g
(est)f(retourn)o(\023)-18 b(e.)358 1080 y(sinon)14 b(erreur)g(retour)f
(-1)179 1125 y(Sinon)h(la)g(cle)g(corresp)q(ond)g(\022)-19
b(a)13 b(une)h(\014le)g(d)o(\023)-18 b(ej\022)f(a)13
b(existan)o(te)8 b(:)358 1171 y(Si)14 b(les)f(2)g(indicateurs)j(IPC)p
757 1171 V 14 w(CREA)m(T)c(et)h(IPC)p 1032 1171 V 13
w(EX)o(CL)g(son)o(t)g(p)q(ositionn)o(\023)-18 b(es)16
b(dans)e(options)597 1217 y(une)f(erreur)h(est)f(d)o(\023)-18
b(etect)o(\023)g(ee,)13 b(retour)g(-1,)g(errno)g(=)g(EEXIST.)358
1262 y(sinon)h(l'iden)o(ti\014cati)q(on)i(de)d(la)h(\014le)g(est)f
(retourn)o(\023)-18 b(e.)236 1329 y(En)14 b(bref,)e(IPC)p
455 1329 V 14 w(EX)o(CL)g(nous)i(p)q(ermet)f(de)h(v)o(\023)-18
b(eri\014er)14 b(que)f(la)h(\014le)g(n'existait)g(pas.)179
1446 y Fu(15.2.4)55 b(L'en)n(v)n(oi)18 b(de)g(message)179
1518 y FA(#include)e(<sys/msg.h)o(>)179 1563 y(int)i(msgsnd)g(\(int)g
(dipc,)f(const)h(void)g(*p_msg,)f(int)h(lg,)h(int)f(options\);)236
1639 y FB(En)o(v)o(oie)d(dans)f(la)f(\014le)h FA(dipc)d
FB(le)j(message)g(p)q(oin)o(t)o(\023)-18 b(e)14 b(par)f
FA(p)p 1043 1639 V 14 w(msg)p FB(.)236 1686 y FC(lg)h
FB(taille)j(du)e(message)f(\023)-18 b(egale)15 b(\022)-19
b(a)15 b FA(sizeof\(st)o(ruc)o(t)i(msgbuf\)-)o(siz)o(eof)o(\(l)o(ong)o
(\))p FB(,)11 b(le)k(t)o(yp)q(e)g(du)g(message)179 1732
y(n')o(\023)-18 b(etan)o(t)13 b(pas)g(compt)o(\023)-18
b(e)14 b(dans)g(cette)f(longueur.)236 1779 y(V)m(aleur)h(de)f(retour)h
(\(0\))f(succes)g(\(-1\))f(\023)-18 b(ec)o(hec.)236 1826
y(V)m(aleur)14 b(de)f FA(errno)e FB(en)i(cas)h(d')o(\023)-18
b(ec)o(hec:)179 1893 y FC(EINV)-5 b(AL)20 b FB(\014le)14
b(inexistan)o(te)179 1958 y FC(EPERM)21 b FB(pas)13 b(de)g(droits)i(d')
o(\023)-18 b(ecriture)179 2023 y FC(EINV)-5 b(AL)20 b
FB(t)o(yp)q(e)14 b(de)f(message)g(incorrect)236 2089
y(Si)e(IPC)p 348 2089 V 14 w(NO)o(W)l(AIT)e(est)h(p)q(ositionn)o(\023)
-18 b(e,)13 b(l'en)o(v)o(oi)e(de)g(messages)g(sur)f(une)h(\014le)g
(pleine)h(n'est)e(plus)i(blo)q(quan)o(t,)179 2135 y(alors)h(dans)h(le)f
(cas)f(d'une)i(\014le)f(pleine,)h(la)f(fonction)h(retourne)f(-1)g(et)f
FA(errno)e FB(est)j(p)q(ositionn)o(\023)-18 b(e)15 b(\022)-19
b(a)13 b(EA)o(GAIN.)236 2182 y(Un)f(app)q(el)h(de)f FA(msgsnd)e
FB(blo)q(qu)o(\023)-18 b(e)13 b(p)q(eut)f(^)-18 b(etre)11
b(in)o(terrompu)j(par)e(un)g(signal)i(ou)e(par)h(la)f(destruction)i(de)
e(la)179 2227 y(\014le)g(de)g(message.)g(Dans)h(ce)f(cas,)f(elle)i(ren)
o(v)o(oie)h(\(-1\))d(et)h FA(errno)d FB(est)j(p)q(ositionn)o(\023)-18
b(e)14 b(\022)-19 b(a)12 b([EINTR])f(ou)h([EIDRM].)179
2344 y Fu(15.2.5)55 b(La)19 b(primitiv)m(e)d(d'extraction)179
2416 y FA(#include)g(<sys/msg.h)o(>)179 2462 y(int)i(msgrcv\(int)e
(dipc,)i(void)g(*p_msg,)f(int)h(taille,)f(long)h(type,)g(int)g
(options\);)236 2538 y FB(est)13 b(une)f(demande)i(de)e(lecture)i(dans)
f(la)g(\014le)g FA(dipc)d FB(d'un)j(message)g(de)g(longueur)h(inf)o
(\023)-18 b(erieure)14 b(ou)d(\023)-18 b(egale)179 2584
y(\022)f(a)16 b FA(taille)p FB(,)d(qui)k(sera)f(copi)o(\023)-18
b(e)18 b(dans)e(la)h(zone)g(p)q(oin)o(t)o(\023)-18 b(ee)17
b(par)f FA(p)p 1069 2584 V 14 w(msg)p FB(.)f FA(options)e
FB(est)j(une)g(com)o(binaison)j(des)179 2629 y(constan)o(tes:)179
2696 y FC(IPC)p 261 2696 14 2 v 15 w(NO)o(W)-5 b(AIT)20
b FB(si)14 b(la)g(\014le)f(est)g(vide,)h(le)g(message)f(est)g(non-blo)q
(quan)o(t.)179 2761 y FC(MSG)p 284 2761 V 15 w(NOERR)o(OR)21
b FB(si)15 b(le)h(texte)f(du)g(message)g(\022)-19 b(a)15
b(extraire)h(est)f(de)g(longueur)i(sup)o(\023)-18 b(erieure)17
b(\022)-19 b(a)14 b FA(taille)p FB(,)270 2806 y(alors)g(le)g(message)f
(est)g(extrait)h(tronqu)o(\023)-18 b(e)14 b(sans)g(signaler)h
(d'erreur.)p eop
%%Page: 112 120
112 119 bop 75 50 a FD(112)401 b Fz(CHAPITRE)14 b(15.)40
b(INTER)14 b(PR)o(OCESSUS)g(COMMUNICA)m(TIONS)h(\(I.P)m(.C.\))236
166 y FB(Le)e(param)o(\022)-18 b(etre)14 b FA(type)d
FB(p)q(ermet)i(de)h(sp)o(\023)-18 b(eci\014er)14 b(le)g(t)o(yp)q(e)f
(du)h(message)f(\022)-19 b(a)13 b(extraire:)230 234 y({)21
b(si)14 b(t)o(yp)q(e)f Ft(>)g FB(0,)f(le)i(plus)g(vieux)h(message)e(de)
h(ce)e(t)o(yp)q(e)i(est)f(extrait;)230 300 y({)21 b(si)14
b(t)o(yp)q(e)f(==)g(0,)f(le)i(plus)g(vieux)h(message)e(est)g(extrait;)
230 365 y({)21 b(si)12 b(t)o(yp)q(e)g Ft(<)f FB(0,)g(le)h(message)h(le)
f(plus)g(vieux)h(du)f(t)o(yp)q(e)g(le)g(plus)h(p)q(etit,)f(mais)g(inf)o
(\023)-18 b(erieur)13 b(ou)e(\023)-18 b(egal)13 b(\022)-19
b(a)11 b Fr(j)g FB(t)o(yp)q(e)270 411 y Fr(j)p FB(,)h(est)h(extrait.)h
(Ceci)f(p)q(ermet)g(de)h(d)o(\023)-18 b(e\014nir)14 b(des)g(priorit)o
(\023)-18 b(es)14 b(en)o(tre)g(les)f(messages.)236 479
y(Dans)g(tous)f(les)g(cas,)g(l'app)q(el)h(est)f(blo)q(quan)o(t)i(si)e
(il)h(n'y)e(a)h(pas)g(de)g(message)g(du)h(t)o(yp)q(e)f(v)o(oulu)h(en)f
(atten)o(te.)236 526 y(Les)h(causes)h(d')o(\023)-18 b(ec)o(hec)7
b(:)179 593 y FC(EINV)-5 b(AL)20 b FB(\014le)14 b(inexistan)o(te)179
659 y FC(EINV)-5 b(AL)20 b FB(taille)15 b(n)o(\023)-18
b(egativ)o(e)179 725 y FC(E2BIG)20 b FB(taille)15 b(message)f
Ft(>)f FB(taille,)h(et)f(pas)h(de)f(MSG)p 979 725 12
2 v 14 w(NOERR)o(OR)179 791 y FC(ENOMSG)19 b FB(pas)14
b(de)f(message)h(et)f(IPC)p 780 791 V 13 w(NO)o(W)l(AIT)179
858 y(et)g(les)g(m)o(^)-18 b(emes)13 b(co)q(des)h(d'in)o(terruptions)i
(que)d FA(msgsnd)p FB(.)179 977 y Fu(15.2.6)55 b(La)19
b(primitiv)m(e)d(de)i(con)n(tr^)-28 b(ole)179 1050 y
FA(#include)16 b(<sys/msg.h)o(>)179 1096 y(int)i(msgctl)g(\(int)g
(dipc,)f(int)i(options,)d(struct)i(msqid)f(*pmsqid\);)236
1173 y FB(p)q(ermet)c(de)g(tra)o(v)n(ailler)i(sur)e(la)g(structure)g
FA(msqid)d FB(p)q(oin)o(t)o(\023)-18 b(ee)14 b(par)f
FA(pmsqid)d FB(de)j(la)g(\014le)h(de)e(message)i FA(dipc)p
FB(.)179 1219 y(V)m(aleur)f(de)h FA(options)i FB(:)179
1287 y FC(IPC)p 261 1287 14 2 v 15 w(ST)l(A)l(T)21 b
FB(lecture)14 b(de)f(la)h(structure)179 1352 y FC(IPC)p
261 1352 V 15 w(SET)21 b FB(p)q(ositionnemen)o(t,)15
b(seuls)f(les)g(c)o(hamps)g(uid,gid)h(et)e(p)q(erm)g(son)o(t)g(mo)q
(di\014ables)179 1418 y FC(IPC)p 261 1418 V 15 w(RMID)21
b FB(p)q(ermet)14 b(de)g(d)o(\023)-18 b(etruire)15 b(la)f(\014le)h(de)f
(messages)g(\(sup)q(er-utilisateu)q(r,)i(ou)e(cr)o(\023)-18
b(eateur)14 b(de)g(la)h(\014le)270 1464 y(de)e(messages\))179
1603 y Fv(15.3)66 b(Les)22 b(s)o(\023)-32 b(emaphores)236
1689 y FB(Les)14 b(s)o(\023)-18 b(emaphores)15 b(p)q(ermetten)o(t)f(de)
g(r)o(\023)-18 b(ealiser)15 b(l'acc)o(\022)-18 b(es)15
b(en)e(exclusion)k(m)o(utuelle)e(\022)-19 b(a)14 b(une)g(ressource)g
(\(par)179 1735 y(exemple)g(une)g(zone)f(de)g(m)o(\023)-18
b(emoire)14 b(partag)o(\023)-18 b(ee\).)236 1782 y(Un)13
b(p)q(eu)h(de)f(th)o(\023)-18 b(eorie)21 b(:)179 1828
y(Les)15 b(s)o(\023)-18 b(emaphores)16 b(garan)o(tissen)o(t)h(l'acc)o
(\022)-18 b(es)16 b(d'un)g(nom)o(bre)f(b)q(orn)o(\023)-18
b(e)16 b(de)g(pro)q(cessus)g(\022)-19 b(a)15 b(une)h(donn)o(\023)-18
b(ee.)16 b(Ils)f(p)q(er-)179 1873 y(metten)o(t)e(de)g(placer)h(en)f
(exclusion)j(m)o(utuelle)f(une)e(ressource)h(\(par)f(exemple)i(la)e(m)o
(\023)-18 b(emoire\).)236 1921 y(Dijkstra)14 b(a)e(\023)-18
b(ecrit)13 b(de)g(nom)o(breux)h(algorithmes)h(d'exclusion)g(m)o
(utuelle,)f(et)f(a)g(d)o(\023)-18 b(e\014ni)14 b(les)f(s)o(\023)-18
b(emaphores)179 1967 y(p)q(our)13 b(faciliter)h(l')o(\023)-18
b(ecriture)13 b(de)g(ces)f(algorithmes.)i(Les)f(s)o(\023)-18
b(emaphores)13 b(son)o(t)g(des)g(v)n(ariables)h(partag)o(\023)-18
b(ees,)13 b(don)o(t)179 2012 y(l'acc)o(\022)-18 b(es)13
b(ne)h(se)f(fait)g(que)h(gr^)-19 b(ace)13 b(aux)g(deux)h(op)o(\023)-18
b(erations)15 b(atomiques)g(P)e(et)g(V.)236 2105 y(On)g(app)q(elle)j
Fx(se)n(ction)11 b(critique)g FB(la)i(partie)h(de)g(programme)f(qui)i
(doit)d(^)-18 b(etre)13 b(r)o(\023)-18 b(ealis)o(\023)g(ee)15
b(en)e(exclusion.)236 2198 y(P\(S\))230 2312 y({)21 b(Soit)c(la)g(v)n
(aleur)g(du)f(s)o(\023)-18 b(emaphore)18 b(S)e(est)g(p)q(ositiv)o(e,)i
(il)f(y)f(a)g(donc)h(encore)f(au)g(moins)i(une)e(place)h(en)270
2357 y(section)12 b(critique)g(p)q(our)f(le)g(pro)q(cessus)h(qui)g(r)o
(\023)-18 b(ealise)12 b(le)f(P)m(,)f(le)h(s)o(\023)-18
b(emaphore)12 b(est)e(alors)i(d)o(\023)-18 b(ecr)o(\023)g(emen)o(t)o
(\023)g(e)11 b(\(une)270 2403 y(place)j(de)f(moins\))i(et)d(le)i(pro)q
(cessus)g(utilise)h(la)f(ressource.)230 2514 y({)21 b(Soit)14
b(la)g(v)n(aleur)g(de)f(S)g(est)g(n)o(ulle)i(\(plus)f(de)f(place\),)h
(le)g(pro)q(cessus)g(est)f(mis)h(en)f(atten)o(te.)179
2582 y(V\(S\))230 2695 y({)21 b(Si)12 b(un)f(ou)g(plusieurs)j(pro)q
(cessus)e(son)o(t)f(en)h(atten)o(te)f(du)g(s)o(\023)-18
b(emaphore,)12 b(ils)g(son)o(t)f(r)o(\023)-18 b(ev)o(eill)o(\023)g(es)
14 b(et)c(l'un)i(d'eux)270 2741 y(ren)o(tre)h(en)h(section)g(critique.)
g(Les)f(autres)h(son)o(t)f(remis)h(en)f(atten)o(te.)230
2806 y({)21 b(Sinon)15 b(le)e(s)o(\023)-18 b(emaphore)14
b(est)f(incr)o(\023)-18 b(emen)o(t)o(\023)g(e)15 b(\(lib)o(\023)-18
b(eration)16 b(d'une)d(place)h(en)f(section)i(critique\).)p
eop
%%Page: 113 121
113 120 bop 75 50 a Fz(15.3.)26 b(LES)14 b(S)307 39 y(\023)302
50 y(EMAPHORES)1203 b FD(113)236 166 y FB(Ces)12 b(op)o(\023)-18
b(erations)14 b(son)o(t)e FC(atomiques)7 b FB(:)k(totalemen)o(t)i(inin)
o(terruptibl)q(es,)i(on)o(t)d(toujours)g(lieu)h(s)o(\023)-18
b(equen)o(tiel-)179 212 y(lemen)o(t)14 b(m)o(^)-18 b(eme)13
b(sur)g(une)g(mac)o(hine)i(m)o(ulti-pro)q(cesseurs.)179
258 y(Le)e(\014c)o(hier)h FA(<sys/sem.)o(h>)i FB(:)236
304 y(P)o(our)e(c)o(haque)g(s)o(\023)-18 b(emaphore)8
b(:)218 368 y FA(struct)17 b(__sem)h({)296 413 y(unsigned)f(short)h
(int)g(semval;)76 b(/*)19 b(adresse)e(*/)296 459 y(unsigned)g(short)h
(int)g(sempid;)76 b(/*)19 b(pid)f(de)h(derni\022)-20
b(ere)17 b(op\023)-20 b(eratio)o(n)17 b(*/)296 505 y(unsigned)g(short)h
(int)g(semncnt;)56 b(/*)19 b(#)g(de)g(Proc.)e(en)i(attente)e(de)i(V)g
(*/)296 550 y(unsigned)e(short)h(int)g(semzcnt;)56 b(/*)19
b(#)g(en)g(attente)e(de)i(S)g(=)g(0)g(*/)218 596 y(};)236
660 y FB(P)o(our)14 b(c)o(haque)g(dip)q(c)g(de)f(s)o(\023)-18
b(emaphore:)198 724 y FA(struct)18 b(semid_ds)e({)277
769 y(struct)h(ipc_perm)76 b(sem_perm)o(;)56 b(/*)19
b(droits)37 b(*/)277 815 y(struct)17 b(__sem)136 b(*sem_bas)o(e;)36
b(/*)19 b(premier)e(\023)-20 b(el\023)g(ement)17 b(de)h(l'ensemble*)o
(/)277 861 y(time_t)253 b(sem_otim)o(e;)36 b(/*)19 b(last)f(semop)f
(time)i(*/)277 906 y(time_t)253 b(sem_ctim)o(e;)36 b(/*)19
b(last)f(change)f(time)h(*/)277 952 y(unsigned)e(short)i(int)h
(sem_nsem)o(s;)36 b(/*)19 b(taille)e(de)i(l'ensembl)o(e)e(*/)198
998 y(};)179 1110 y Fu(15.3.1)55 b(La)19 b(primitiv)m(e)d(de)i
(manipulation)f Fj(semop\(\))236 1181 y FB(La)c(primitiv)o(e)179
1245 y FA(#include)j(<sys/sem.h)o(>)179 1290 y(int)i(semop\(int)e
(dipc,)i(struct)f(sembuf)h(*sops,)f(unsigned)f(int)j(nsops\);)236
1354 y FB(est)d(utilis)o(\023)-18 b(ee)19 b(p)q(our)d(r)o(\023)-18
b(ealiser)18 b(un)e(tableau)i(d'op)o(\023)-18 b(erations)17
b(de)f(s)o(\023)-18 b(emaphores)18 b(sur)e(un)g(ensem)o(ble)i(de)e(s)o
(\023)-18 b(e-)179 1400 y(maphores)15 b(indiqu)o(\023)-18
b(e)16 b(par)f FA(dipc)p FB(.)d Fx(sops)g FB(est)i(un)g(p)q(oin)o(teur)
i(sur)e(tableau)i(de)e(structures)h FA(sembuf)p FB(,)c(et)j
Fx(nsops)179 1445 y FB(indique)h(le)f(nom)o(bre)f(d')o(\023)-18
b(el)o(\023)g(emen)o(ts)15 b(du)e(tableau.)236 1492 y(La)g(structure)h
FA(sembuf)218 1556 y(struct)j(sembuf)h({)296 1601 y(unsigned)f(short)h
(int)g(sem_num;)75 b(/*)19 b(#)h(s\023)-20 b(emaphor)o(e)17
b(*/)296 1647 y(short)273 b(sem_op;)95 b(/*)19 b(op\023)-20
b(eration)16 b(du)j(s\023)-20 b(emaphore)16 b(*/)296
1693 y(short)273 b(sem_flg;)75 b(/*)19 b(flags)f(de)h(l'op\023)-20
b(erati)o(on)16 b(*/)218 1738 y(};)236 1802 y FB(Nature)e(de)f(l'op)o
(\023)-18 b(eration)15 b(dans)f(la)f(structure)h FA(sembuf)179
1848 y FB(Si)g(sem)p 290 1848 12 2 v 14 w(n)o(um)f Ft(>)g
FB(0)236 1894 y Fr(\000)-6 b(!)13 b FB(une)h(op)o(\023)-18
b(eration)14 b(V)f(est)g(e\013ectu)o(\023)-18 b(ee)14
b(sur)f(le)h(s)o(\023)-18 b(emaphore)14 b(sem)p 1174
1894 V 14 w(n)o(um)179 1939 y(Si)g(sem)p 290 1939 V 14
w(n)o(um)f Ft(<)g FB(0)236 1985 y Fr(\000)-6 b(!)13 b
FB(une)h(op)o(\023)-18 b(eration)14 b(P)f(est)g(e\013ectu)o(\023)-18
b(ee)14 b(sur)f(le)h(s)o(\023)-18 b(emaphore)14 b Fr(j)p
FB(sem)p 1182 1985 V 14 w(n)o(um)p Fr(j)179 2031 y FB(Si)g(sem)p
290 2031 V 14 w(n)o(um)f(==)g(0)236 2076 y(c'est)e(une)g(op)o(\023)-18
b(eration)13 b(d'atten)o(te)e(qui)h(se)f(termine)g(quand)i(l'ensem)o
(ble)f(des)f(s)o(\023)-18 b(emaphores)13 b(d)o(\023)-18
b(esign)o(\023)g(es)12 b(par)179 2122 y FA(dipc)f FB(son)o(t)i(\022)-19
b(a)13 b(z)o(\023)-18 b(ero.)236 2214 y(La)13 b(primitiv)o(e)179
2286 y FA(#include)j(<sys/sem.h)o(>)179 2332 y(int)i(semop)g(\(int)g
(dipc,)g(struct)f(sembuf)g(*tab_op,)g(int)h(nb_op\);)236
2404 y FB(Les)d FA(nb)p 349 2404 V 13 w(op)f FB(op)o(\023)-18
b(erations)16 b(plac)o(\023)-18 b(ees)16 b(\022)-19 b(a)14
b(l'adresse)i FA(tab)p 984 2404 V 13 w(op)d FB(son)o(t)i(r)o(\023)-18
b(ealis)o(\023)g(ees)16 b(atomiquemen)o(t,)g(c'est)e(\022)-19
b(a)15 b(dire)179 2450 y(toutes)g(r)o(\023)-18 b(ealis)o(\023)g(ees)17
b(ou)f(aucune)7 b(!!)15 b(Le)g(no)o(y)o(au)h(g)o(\023)-18
b(eran)o(t)15 b(l'atomicit)o(\023)-18 b(e.)17 b(Si)f(la)f(i-)o(\022)-18
b(eme)16 b(op)o(\023)-18 b(eration)17 b(ne)e(p)q(eut)g(^)-18
b(etre)179 2496 y(r)o(\023)g(ealis)o(\023)g(ee,)14 b(les)g(\(i-1\))f
(premi)o(\022)-18 b(eres)14 b(son)o(t)g(ann)o(ul)o(\023)-18
b(ees.)236 2542 y(Chaque)14 b(op)o(\023)-18 b(eration)15
b(du)e(tableau)i(p)q(eut)d(^)-18 b(etre)13 b(rendue)h(non)g(blo)q(quan)
o(te.)236 2588 y(Le)d(fait)h(d'a)o(v)o(oir)g(un)f(app)q(el)i(blo)q
(quan)o(t)g(on)e(non)h(blo)q(quan)o(t)h(v)n(a)e(donc)h(d)o(\023)-18
b(ep)q(endre)13 b(de)e(l'ordre)h(dans)g(lequel)179 2634
y(on)h(place)h(les)g(op)o(\023)-18 b(erations)15 b(\022)-19
b(a)13 b(e\013ectuer)h(dans)f(le)h(tableau)h(.)6 b(.)g(.)236
2680 y(Les)13 b(cas)h(d')o(\023)-18 b(ec)o(hec)179 2743
y FC(EINV)-5 b(AL)20 b FB(iden)o(ti\014cation)d(in)o(v)n(alide)179
2806 y FC(EA)o(CCESS)j FB(acc)o(\022)-18 b(es)13 b(in)o(terdit)p
eop
%%Page: 114 122
114 121 bop 75 50 a FD(114)401 b Fz(CHAPITRE)14 b(15.)40
b(INTER)14 b(PR)o(OCESSUS)g(COMMUNICA)m(TIONS)h(\(I.P)m(.C.\))179
166 y FC(E2BIG)20 b FB(trop)14 b(d'op)o(\023)-18 b(erations)179
229 y FC(EFBIG)20 b FB(n)o(um)o(\023)-18 b(ero)14 b(de)f(s)o(\023)-18
b(emaphore)14 b(incorrect)179 292 y FC(EA)o(GAIN)20 b
FB(Non)13 b(r)o(\023)-18 b(ealisable)16 b(+)d(non)g(blo)q(quan)o(t)179
355 y FC(EINV)-5 b(AL,ENOSPC)20 b FB(trop)13 b(d'op)o(\023)-18
b(erations)15 b(ou)e(de)h(SEM)p 1054 355 12 2 v 14 w(UNDO)179
418 y FC(ERANGE)20 b FB(v)n(aleur)15 b(du)e(s)o(\023)-18
b(emaphore)14 b(trop)f(grande)8 b(!!)179 481 y FC(EINTR)20
b FB(in)o(terruption)179 544 y FC(EIDRM)g FB(sem)13 b(supprim)o(\023)
-18 b(e)179 655 y Fu(15.3.2)55 b(La)19 b(primitiv)m(e)d(de)i(con)n(tr^)
-28 b(ole)19 b(des)f(s)o(\023)-27 b(emaphores)179 726
y FA(#include)16 b(<sys/sem.h)o(>)179 771 y(int)i(semctl\(int)e(dipc,)i
(int)g(semnum,)f(int)h(op,)h(...)f(/*)h(arg)g(variables)d(*/\);)236
843 y FB(En)e(fonction)g(de)f FA(op)f FB(la)i(fonction)g(r)o(\023)-18
b(ealise)8 b(:)179 906 y FC(GETNCNT)19 b FB(ren)o(v)o(oi)14
b(de)f(la)h(v)n(aleur)g(de)f(semncn)o(t)179 969 y FC(GETZCNT)19
b FB(ren)o(v)o(oi)14 b(de)g(la)f(v)n(aleur)i(de)e(semzcn)o(t)179
1032 y FC(GETV)-5 b(AL)20 b FB(ren)o(v)o(oi)15 b(de)e(la)g(v)n(aleur)i
(du)e(s)o(\023)-18 b(emaphore)179 1095 y FC(GETPID)20
b FB(ren)o(v)o(oi)14 b(du)f(pid)i(du)e(dernier)h(pro)q(cessus)h(a)o(y)o
(an)o(t)e(r)o(\023)-18 b(ealis)o(\023)g(e)15 b(une)e(op)o(\023)-18
b(eration.)179 1158 y FA(semnum)10 b FB(est)j(p)q(our)h(les)g
(commandes)g(suiv)n(an)o(tes)g(in)o(terpr)o(\023)-18
b(et)o(\023)g(e)15 b(comme)e(un)g(nom)o(bre)h(de)f(s)o(\023)-18
b(emaphores)179 1230 y FC(GET)l(ALL)20 b FB(r)o(\023)-18
b(ecup)o(\023)g(eration)15 b(du)e(tableau)i(des)e(v)n(aleurs)i(des)e
FA(semnum)d FB(premiers)15 b(s)o(\023)-18 b(emaphores)179
1293 y FC(SET)l(ALL)20 b FB(p)q(ositionnemen)o(t)c(des)d
FA(semnum)e FB(premi)o(\022)-18 b(eres)14 b(v)n(aleurs)g(du)g(tableau)
236 1365 y(Et)f(les)h(commandes)g(de)f(manipulati)q(on)j(de)d(l'IPC)7
b(:)179 1428 y FC(IPC)p 261 1428 14 2 v 15 w(ST)l(A)l(T)21
b FB(lecture)14 b(de)f(la)h(structure)g FA(semid)p 893
1428 12 2 v 12 w(ds)179 1491 y FC(IPC)p 261 1491 14 2
v 15 w(SET)21 b FB(p)q(ositionnemen)o(t)16 b(de)d(la)g(structure)h
FA(semid)p 1008 1491 12 2 v 12 w(ds)179 1554 y FC(IPC)p
261 1554 14 2 v 15 w(RMID)21 b FB(p)q(ermet)13 b(de)f(d)o(\023)-18
b(etruire)14 b(le)f(tableau)h(de)e(s)o(\023)-18 b(emaphores)14
b(\(sup)q(er-utilisateu)q(r,)g(ou)f(cr)o(\023)-18 b(eateur)13
b(du)270 1599 y(s)o(\023)-18 b(emaphore\))179 1732 y
Fv(15.4)66 b(Les)22 b(segmen)n(ts)f(de)h(m)o(\023)-32
b(emoire)22 b(partag)o(\023)-32 b(ee)236 1815 y FB(Av)o(ec)13
b(les)h(segmen)o(ts)g(de)f(m)o(\023)-18 b(emoire)14 b(partag)o(\023)-18
b(ee,)13 b(des)h(pro)q(cessus)g(v)o(on)o(t)f(partager)h(des)f(pages)h
(ph)o(ysiques)179 1861 y(par)g(l'in)o(term)o(\023)-18
b(ediaire)16 b(de)e(leur)g(espace)h(d'adressage.)f(Il)g(n'y)f(aura)i
(plus)f(de)g(copie)h(d'information.)g(Cette)179 1906
y(m)o(\023)-18 b(emoire)14 b(partag)o(\023)-18 b(ee)14
b(devien)o(t)h(un)f(espace)g(critique.)h(Il)f(faudra)g(sans)g(doute)g
(en)g(prot)o(\023)-18 b(eger)14 b(les)g(acc)o(\022)-18
b(es)14 b(a)o(v)o(ec)179 1952 y(des)f(s)o(\023)-18 b(emaphores)14
b(par)g(exemple...)236 1998 y(Un)f(segmen)o(t)h(de)f(m)o(\023)-18
b(emoire)13 b(est)g(ind)o(\023)-18 b(ep)q(endan)o(t)16
b(de)d(tout)g(pro)q(cessus.)h(Il)f(p)q(eut)h(exister)g(sans)f(qu'aucun)
179 2044 y(pro)q(cessus)h(n'y)f(acc)o(\022)-18 b(ede.)236
2090 y(Un)12 b(pro)q(cessus)i(rattac)o(hera)e(le)h(segmen)o(t)f(\022)
-19 b(a)12 b(son)h(espace)f(d'adressage,)h(puis)g(p)q(ourra)g
(manipuler)i(cette)179 2135 y(m)o(\023)-18 b(emoire)14
b(de)f(la)g(m)o(^)-18 b(eme)13 b(fa\030)-17 b(con)14
b(qu'il)g(p)q(eut)g(manipuler)h(sa)e(propre)h(m)o(\023)-18
b(emoire.)236 2181 y(Le)13 b(\014c)o(hier)h FA(<sys/shm.h>)h
FB(:)179 2253 y FA(struct)i(shmid_ds)g({)277 2299 y(struct)g(ipc_perm)
36 b(shm_perm;)134 b(/*)19 b(operation)d(permission)g(struct)h(*/)277
2345 y(int)273 b(shm_segsz;)114 b(/*)19 b(size)f(of)h(segment)e(in)i
(bytes)e(*/)277 2390 y(struct)g(vas)136 b(*shm_vas;)e(/*)19
b(virtual)e(address)g(space)g(this)i(entry)e(*/)277 2436
y(pid_t)233 b(shm_lpid;)134 b(/*)19 b(pid)f(of)h(last)f(shmop)g(*/)277
2482 y(pid_t)233 b(shm_cpid;)134 b(/*)19 b(pid)f(of)h(creator)e(*/)277
2527 y(unsigned)f(short)i(int)h(shm_natt)o(ch;)55 b(/*)19
b(current)e(#)i(attached)36 b(*/)277 2573 y(unsigned)16
b(short)i(int)h(shm_cnat)o(tch)o(;)36 b(/*)19 b(in)g(memory)e(#)i
(attached)e(*/)277 2619 y(time_t)213 b(shm_atime;)114
b(/*)19 b(last)f(shmat)g(time)g(*/)277 2664 y(time_t)213
b(shm_dtime;)114 b(/*)19 b(last)f(shmdt)g(time)g(*/)277
2710 y(time_t)213 b(shm_ctime;)114 b(/*)19 b(last)f(change)f(time)h(*/)
277 2756 y(char)253 b(shm_pad[24)o(];)75 b(/*)19 b(room)f(for)g(future)
g(expansion)e(*/)179 2801 y(};)p eop
%%Page: 115 123
115 122 bop 75 50 a Fz(15.4.)26 b(LES)14 b(SEGMENTS)g(DE)g(M)644
39 y(\023)639 50 y(EMOIRE)g(P)m(AR)m(T)m(A)o(G)1004 39
y(\023)999 50 y(EE)720 b FD(115)179 166 y Fu(15.4.1)55
b(Utilisation)17 b(des)i(segmen)n(ts)e(de)h(m)o(\023)-27
b(emoire)15 b(partag)o(\023)-27 b(ee)236 236 y FB(La)13
b(primitiv)o(e)j FA(shmget)t FB(:)179 298 y FA(#include)g(<sys/shm.h)o
(>)179 344 y(int)i(shmget\(key)o(_t)e(cle,)i(int)h(taille,)e(int)h
(options\);)236 406 y FB(Cr)o(\023)-18 b(eation/ouv)o(erture)15
b(d'un)d(segmen)o(t)h(de)f FA(taille)d FB(o)q(ctets,)j(si)h(le)g
(segmen)o(t)f(existe)h(d)o(\023)-18 b(ej\022)f(a)12 b(il)h(faut)f(que)h
(la)179 452 y FA(taille)d FB(soit)k(inf)o(\023)-18 b(erieure)15
b(ou)d(\023)-18 b(egale)14 b(\022)-19 b(a)13 b(celle)i(du)e(segmen)o(t)
g(que)h(l'on)g(v)o(eut)f(ouvrir.)236 543 y(La)g(primitiv)o(e)j(d'attac)
o(hemen)o(t)d FA(shmat)5 b FB(:)179 606 y FA(#include)16
b(<sys/shm.h)o(>)179 651 y(void)37 b(*shmat\(int)16 b(dipc,)i(const)g
(void)g(*adr,)f(int)i(option\);)236 713 y FB(Cette)9
b(primitiv)o(e)j(est)d(une)g(demande)i(d'attac)o(hemen)o(t)e(du)h
(segmen)o(t)g FA(dipc)d FB(\022)-19 b(a)9 b(l'adresse)h
FA(adr)e FB(de)h(l'espace)179 759 y(d'adressage)h(du)f(pro)q(cessus.)h
(La)e(v)n(aleur)i(de)f(retour)g(est)g(l'adresse)h(o)q(\022)-20
b(u)9 b(l'attac)o(hemen)o(t)h(a)e(\023)-18 b(et)o(\023)g(e)8
b(e\013fectiv)o(emen)o(t)179 805 y(r)o(\023)-18 b(ealis)o(\023)g(e,)14
b(c'est-\022)-19 b(a-dire)14 b(celle)g(attribu)o(\023)-18
b(ee)14 b(au)g(premier)g(o)q(ctet)f(du)g(segmen)o(t)h(\(ou)f(-1)g(en)g
(cas)g(d')o(\023)-18 b(ec)o(hec\).)236 850 y(Le)17 b(c)o(hoix)i(du)e
(param)o(\022)-18 b(etre)18 b FA(adr)e FB(est)h(d)o(\023)-18
b(elicat.)19 b(Il)e(faut)g(en)g(e\013et)h(resp)q(ecter)g(un)f(certain)h
(nom)o(bre)g(de)179 896 y(conditions,)c(v)n(ariables)g(d'une)e(mac)o
(hine)i(\022)-19 b(a)11 b(l'autre)d(:)j(l'alignemen)o(t,)j(la)f(plage)g
(d'adresses)f(autoris)o(\023)-18 b(ees)14 b(aux)179 942
y(segmen)o(ts)g(de)f(m)o(\023)-18 b(emoire)14 b(partag)o(\023)-18
b(ee,)14 b(les)f(adresses)i(de)e(pages)h(virtuelles)i(et)d(ph)o
(ysiques)i(etc.)e(On)g(utilisera)179 987 y(de)d(pref)o(\023)-18
b(erence)11 b FA(adr)19 b(=)g(NULL)p FB(,)8 b(c'est-\022)-19
b(a-dire)11 b(qu'on)g(laisse)h(le)f(soin)h(au)f(syst)o(\022)-18
b(eme)10 b(de)h(s)o(\023)-18 b(electionner)13 b(l'adresse.)236
1033 y(Si)e(l'on)g(v)o(eut)f(quand)h(m)o(^)-18 b(eme)10
b(p)q(ositionner)j(le)d(segmen)o(t)g(dans)h(une)g(certaine)g(zone)f(de)
g(l'espace)h(d'adres-)179 1079 y(sage,)h(on)h(utilise)i(l'indicateur)h
FA(SHM)p 703 1079 12 2 v 13 w(RND)11 b FB(dans)i(le)h(param)o(\022)-18
b(etre)13 b FA(options)d FB(p)q(our)j(que)g(le)g(syst)o(\022)-18
b(eme)13 b(c)o(hoisisse)179 1124 y(une)g(adresse)h(v)n(alable)h(la)f
(plus)g(pro)q(c)o(he)g(p)q(ossible)h(de)f FA(adr)p FB(.)236
1170 y(Remarques)8 b(:)k(l'attac)o(hemen)o(t)h(m)o(ultiple)h(par)f(un)f
(m)o(^)-18 b(eme)12 b(pro)q(cessus)i(n'est)e(pas)g(autoris)o(\023)-18
b(e)14 b(sur)e(tous)h(les)179 1216 y(syst)o(\022)-18
b(emes.)179 1261 y(L'attac)o(hemen)o(t)15 b(n'est)f(v)n(alable)j(que)e
(dans)g(un)h(seul)f(pro)q(cessus,)h(l'adresse)f(d'attac)o(hemen)o(t)h
(n'a)e(aucune)179 1307 y(raison)i(d')o(^)-18 b(etre)14
b(iden)o(tique)j(dans)e(tous)g(les)g(pro)q(cessus,)g(on)g(ne)g(p)q
(ourra)g(donc)g(pas)g(utiliser)i(de)e(structures)179
1353 y(c)o(ha)l(^)-15 b(\020n)o(\023)d(ees)14 b(dans)g(le)g(segmen)o(t)
f(de)g(m)o(\023)-18 b(emoire)14 b(partag)o(\023)-18 b(ee.)236
1444 y(La)13 b(primitv)o(e)i(de)e(d)o(\023)-18 b(etac)o(hemen)o(t)8
b(:)179 1506 y FA(#include)16 b(<sys/shm.h)o(>)179 1552
y(int)i(shmdt)g(\(const)f(void)h(*adr\);)236 1614 y FB(d)o(\023)-18
b(etac)o(he)14 b(le)g(segmen)o(t)f(attac)o(h)o(\023)-18
b(e)14 b(\022)-19 b(a)13 b(l'adresse)h FA(adr)d FB(par)j
FA(shmat)p FB(.)236 1706 y(La)f(primitiv)o(e)j(de)d(con)o(tr^)-19
b(ole)8 b(:)179 1768 y FA(#include)16 b(<sys/shm.h)o(>)179
1814 y(int)i(shmctl\(int)e(dipc,)i(int)g(op,)h(struct)e(shmid_ds)f
(*pshmid\);)236 1876 y FB(est)h(extr)o(^)-18 b(ememen)o(t)18
b(simple,)g(les)f(seules)h(op)o(\023)-18 b(erations)19
b(son)o(t)e(celles)i(qui)f(son)o(t)f(g)o(\023)-18 b(en)o(\023)g
(eriques)19 b(\022)-19 b(a)17 b(tous)g(les)179 1921 y(IPC.)179
1984 y FC(IPC)p 261 1984 14 2 v 15 w(ST)l(A)l(T)k FB(lecture)14
b(de)f(la)h(structure)g FA(shmid)p 893 1984 12 2 v 12
w(ds)179 2046 y FC(IPC)p 261 2046 14 2 v 15 w(SET)21
b FB(p)q(ositionnemen)o(t)16 b(de)d(la)g(structure)h
FA(shmid)p 1008 2046 12 2 v 12 w(ds)179 2108 y FC(IPC)p
261 2108 14 2 v 15 w(RMID)21 b FB(p)q(ermet)13 b(de)g(d)o(\023)-18
b(etruire)15 b(le)e(segmen)o(t)h(\(sup)q(er-utilisateur,)i(ou)d(cr)o
(\023)-18 b(eateur)14 b(du)f(s)o(\023)-18 b(emaphore\))236
2171 y(Une)10 b(autre)h(tec)o(hnique)h(de)e(partage)h(de)f(m)o(\023)-18
b(emoire)11 b(existe,)g(a)o(v)o(ec)f(la)h(pro)r(jection)h(de)e(\014c)o
(hier)h(en)g(m)o(\023)-18 b(emoire)179 2216 y(\(v)o(oir)14
b(section)g(9.5\).)p eop
%%Page: 116 124
116 123 bop 75 50 a FD(116)401 b Fz(CHAPITRE)14 b(15.)40
b(INTER)14 b(PR)o(OCESSUS)g(COMMUNICA)m(TIONS)h(\(I.P)m(.C.\))p
eop
%%Page: 117 125
117 124 bop 1775 50 a FD(117)179 481 y Fw(Chapitre)32
b(16)179 691 y Fy(La)39 b(S)m(\023)-56 b(ecurit)m(\023)g(e)236
906 y FB(La)14 b(s)o(\023)-18 b(ecurit)o(\023)g(e)14
b(est)f(le)h(probl)o(\022)-18 b(eme)15 b(de)f(tout)f(le)h(monde.)g(P)o
(our)f(que)h(la)g(s)o(\023)-18 b(ecurit)o(\023)g(e)15
b(fonctionne,)f(il)h(faut)e(que)179 952 y(toutes)18 b(les)g(p)q
(ersonnes)i(a)o(y)o(an)o(t)e(un)g(acc)o(\022)-18 b(es)18
b(\022)-19 b(a)18 b(une)g(ressource)h(soien)o(t)g(conscien)o(t)g(du)f
(degr)o(\023)-18 b(e)18 b(de)g(s)o(\023)-18 b(ecurit)o(\023)g(e)179
997 y(asso)q(ci)o(\023)g(e)14 b(\022)-19 b(a)13 b(la)h(ressource.)179
1143 y Fv(16.1)66 b(Protection)23 b(des)f(syst)o(\022)-32
b(emes)20 b(d'exploitation)236 1231 y FB(S)o(\023)-18
b(ecuriser)15 b(un)e(syst)o(\022)-18 b(eme,)12 b(c'est)h(prot)o(\023)
-18 b(eger)13 b(ce)g(syst)o(\022)-18 b(eme)13 b(con)o(tre)g(un)g
(fonctionnemen)o(t)h(impr)o(\023)-18 b(evu)15 b(ou)e(d)o(\023)-18
b(e-)179 1277 y(fectueux.)236 1371 y(Il)14 b(p)q(eut)f(s'agir)8
b(:)230 1442 y({)21 b(d'erreurs)11 b(de)g(programmation)h(\(d'un)f
(utilisateur,)i(ou)e(du)g(syst)o(\022)-18 b(eme)10 b(lui-m)o(^)-18
b(eme\))12 b(qui)g(se)e(propagen)o(t)270 1488 y(au)j(syst)o(\022)-18
b(eme)14 b(\(du)f(fait)h(de)f(con)o(tr^)-19 b(oles)14
b(insu\016san)o(ts)h(ou)e(mal)h(e\013ectu)o(\023)-18
b(es\).)230 1556 y({)21 b(d'un)14 b(mauv)n(ais)g(fonctionnemen)o(t)h
(du)e(mat)o(\023)-18 b(eriel.)230 1624 y({)21 b(en\014n,)15
b(d'un)g(op)o(\023)-18 b(erateur,)16 b(concepteur)f(ou)g(r)o(\023)-18
b(ealisateur)17 b(malv)o(eilla)q(n)o(t)g(ou)e(p)q(eu)g(scrupuleux)i
(\(quand)270 1670 y(il)d(s'agit)g(d'informations)h(\014nanci)o(\022)-18
b(eres!\).)179 1741 y(Le)11 b(recensemen)o(t)h(des)g(op)o(\023)-18
b(erations)13 b(frauduleuses)g(aux)f(Etats-Unis)g(au)g(cours)g(d'une)f
(ann)o(\023)-18 b(ee)13 b(a)e(donn)o(\023)-18 b(e)12
b(339)179 1787 y(cas)h(de)g(fraude,)g(p)q(our)h(un)g(co)q(^)-20
b(ut)13 b(d'un)g(milliard)j(de)e(francs.)236 1881 y(La)i(protection)h
(des)f(sites)g(a)e(\023)-18 b(egalemen)o(t)17 b(un)f(co)q(^)-20
b(ut)16 b(tr)o(\022)-18 b(es)15 b(imp)q(ortan)o(t)i(\(temps)f(et)f
(complexit)o(\023)-18 b(e\),)17 b(d'o)q(\022)-20 b(u)179
1927 y(des)13 b(syst)o(\022)-18 b(emes)14 b(de)f(protection)h(qui)h(r)o
(\023)-18 b(esultaien)o(t)15 b(d'un)e(compromis)i(co)q(^)-20
b(ut/e\016cacit)o(\023)i(e.)236 2021 y(Le)11 b(co)q(^)-20
b(ut)11 b(en)g(ressources)h(de)e(la)i(protection)f(\023)-18
b(etan)o(t)11 b(rest)o(\023)-18 b(e)11 b(stationnaire,)h(les)g(syst)o
(\022)-18 b(emes)11 b(et)g(les)g(mac)o(hines)179 2067
y(actuelles)k(plus)f(rapides)h(on)o(t)e(rendu)h(ce)f(co)q(^)-20
b(ut)13 b(moins)h(prohibitif.)179 2112 y(L'id)o(\023)-18
b(ee)14 b(d'un)f(syst)o(\022)-18 b(eme)14 b(de)f(protection)i(est)e(de)
h(traiter)g(les)g(di\013)o(\023)-18 b(eren)o(ts)15 b(t)o(yp)q(es)f(de)f
(probl)o(\022)-18 b(emes)15 b(de)e(mani)o(\022)-18 b(ere)179
2158 y(g)o(\023)g(en)o(\023)g(erale)14 b(et)f(unitaire.)236
2252 y(Implan)o(t)o(\023)-18 b(es)15 b(seuls,)e(les)h(disp)q(ositifs)i
(de)d(protection)i(co)q(^)-20 b(uten)o(t)13 b(c)o(her.)236
2347 y(Heureusemen)o(t,)e(si)h(ces)e(disp)q(ositifs)j(p)q(ermetten)o(t)
e(d'augmen)o(ter)h(les)f(p)q(erformances)h(du)f(logiciel,)i(dans)179
2392 y(des)h(domaines)i(comme)d(celui)j(de)e(la)g(\014abilit)o(\023)-18
b(e)17 b(ou)d(de)g(la)h(r)o(\023)-18 b(esistance)15 b(aux)f(erreurs,)g
(leur)h(co)q(^)-20 b(ut)14 b(relatif)h(di-)179 2438 y(min)o(ue.)f(Si,)g
(de)f(plus,)h(ces)f(disp)q(ositi)q(fs)j(p)q(ermetten)o(t)d(une)h
(gestion)h(des)e(ressources)i(partag)o(\023)-18 b(ees)14
b(plus)g(facile)179 2484 y(et)f(plus)h(s)q(^)-20 b(ure,)13
b(ils)h(p)q(euv)o(en)o(t)g(dev)o(enir)h(comp)o(\023)-18
b(etitifs)14 b(d'un)g(p)q(oin)o(t)g(de)f(vue)h(commercial.)236
2578 y(Il)g(est)f(di\016cile)j(de)d(d)o(\023)-18 b(e\014nir)15
b(pr)o(\023)-18 b(ecis)o(\023)g(emen)o(t)14 b(ce)f(que)h(l'on)g(en)o
(tend)g(par)g(protection)g(d'un)g(syst)o(\022)-18 b(eme)14
b(d'ex-)179 2624 y(ploitation)h(\(et)e(d'information)h(en)f(g)o(\023)
-18 b(en)o(\023)g(eral\),)14 b(tan)o(t)e(les)h(facteurs)g(qui)h(p)q
(euv)o(en)o(t)g(in\015uer)g(sur)f(cette)f(notion)179
2669 y(\(h)o(umains,)j(so)q(ciaux,)f(\023)-18 b(economiques\),)16
b(son)o(t)e(nom)o(breux.)h(On)f(p)q(eut)h(dire)g(cep)q(endan)o(t)g(que)
f(la)h(protection)179 2715 y(se)f(rapp)q(orte)h(\022)-19
b(a)14 b(tout)g(ce)g(par)g(quoi)i(l'information)g(p)q(eut)e(^)-18
b(etre)14 b(mo)q(di\014)o(\023)-18 b(ee,)15 b(divulgu)o(\023)-18
b(ee)17 b(ou)d(d)o(\023)-18 b(etruite.)15 b(Dans)179
2761 y(certains)j(cas,)f(la)h(gestion)h(du)e(tra\014c)h(a)o(\023)-18
b(erien)18 b(par)g(exemple,)g(elle)h(p)q(eut)d(^)-18
b(etre)17 b(la)h(garan)o(tie)h(des)e(p)q(erfor-)179 2806
y(mances)e(du)h(syst)o(\022)-18 b(eme.)15 b(La)g(con\014den)o(tialit)o
(\023)-18 b(e)18 b(d'enregistremen)o(ts)f(\014nanciers,)f(m)o(\023)-18
b(edicaux)17 b(ou)e(p)q(ersonnels)p eop
%%Page: 118 126
118 125 bop 75 50 a FD(118)1094 b Fz(CHAPITRE)14 b(16.)26
b(LA)14 b(S)1649 39 y(\023)1644 50 y(ECURIT)1814 39 y(\023)1809
50 y(E)179 166 y FB(rel)o(\022)-18 b(ev)o(e)13 b(aussi)h(de)f(la)h
(protection,)f(comme)g(le)g(fait)g(qu'un)h(pro)q(cessus)g(utilisateur)h
(ne)e(puisse)g(^)-18 b(etre)13 b(ex)o(\023)-18 b(ecut)o(\023)g(e)179
212 y(en)13 b(mo)q(de)g(syst)o(\022)-18 b(eme.)14 b(La)f(protection)h
(exige)g(en\014n)g(la)g(correction)g(des)f(pro)q(cessus)i(syst)o(\022)
-18 b(eme.)230 289 y({)21 b(p)o(\023)-18 b(erennit)o(\023)g(e)15
b(du)e(syst)o(\022)-18 b(eme)230 361 y({)21 b(con\014den)o(tiali)q(t)o
(\023)-18 b(e)16 b(des)d(donn)o(\023)-18 b(ees)14 b(\(syst)o(\022)-18
b(eme,)13 b(utilisateur,)j(etc.\))230 433 y({)21 b(correction)14
b(du)g(syst)o(\022)-18 b(eme)179 510 y(A)12 b(l'opp)q(os)o(\023)-18
b(e,)15 b(nous)e(ne)h(parlerons)g(pas)g(de)7 b(:)230
587 y({)21 b(protection)15 b(ph)o(ysique)g(de)e(l'ordinateur)i(\(feu,)e
(v)o(ol,)g(coupures,)h(etc.\))230 659 y({)21 b(malv)o(eillan)q(ce)e(ou)
d(incomp)o(\023)-18 b(etence)18 b(de)e(l'op)o(\023)-18
b(erateur)18 b(\(il)f(est)e(\023)-18 b(ev)o(en)o(tuellemen)o(t)18
b(p)q(ossible)g(de)f(limiter)270 704 y(soigneusemen)o(t)e(les)f(privil)
o(\022)-18 b(eges)16 b(du)d(sup)q(er-utilis)q(ateur)j(a\014n)e(de)f(pr)
o(\023)-18 b(eserv)o(er)14 b(le)f(syst)o(\022)-18 b(eme\).)179
781 y(Le)13 b(degr)o(\023)-18 b(e)13 b(de)g(protection)i(du)e(syst)o
(\022)-18 b(eme)14 b(d)o(\023)-18 b(ep)q(end)14 b(de)f(deux)h(facteurs)
7 b(:)230 858 y({)21 b(le)14 b(degr)o(\023)-18 b(e)13
b(de)g(protection)i(des)e(informations)i(qu'il)g(manipule)230
930 y({)21 b(le)14 b(degr)o(\023)-18 b(e)13 b(de)g(con\014ance)i(en)e
(ses)g(logiciels)q(,)i(en)e(particulier)j(le)d(syst)o(\022)-18
b(eme)14 b(d'exploitation.)179 1007 y(Un)i(logiciel)k(est)c(\014able)i
(quand)f(il)h(satisfait)g(correctemen)o(t)f(ses)f(sp)o(\023)-18
b(eci\014cations)20 b(et)c(quand,)h(de)g(plus,)g(il)179
1052 y(est)c(capable)i(de)f(r)o(\023)-18 b(esister)14
b(\022)-19 b(a)14 b(un)g(en)o(vironnemen)o(t)i(impr)o(\023)-18
b(evu)15 b(\(donn)o(\023)-18 b(ees)14 b(erron)o(\023)-18
b(ees,)14 b(pannes,)g(etc.\),)f(soit)h(en)179 1098 y(corrigean)o(t)h
(l'anomalie,)g(soit)f(en)f(la)h(signalan)o(t,)i(mais)e(en)e(\023)-18
b(evitan)o(t)15 b(que)f(les)f(erreurs)h(ne)g(se)f(propagen)o(t)i(et)179
1144 y(ne)e(con)o(taminen)o(t)i(le)e(syst)o(\022)-18
b(eme)14 b(tout)f(en)o(tier.)179 1189 y(La)f(protection,)h(l'in)o(t)o
(\023)-18 b(egrit)o(\023)g(e)14 b(et)d(l'authen)o(ticit)o(\023)-18
b(e)15 b(des)d(donn)o(\023)-18 b(ees)13 b(qui)g(transiten)o(t)h(dans)e
(un)h(syst)o(\022)-18 b(eme)12 b(d'infor-)179 1235 y(mation)i(son)o(t)f
(r)o(\023)-18 b(ealis)o(\023)g(ees)15 b(par)e(les)h(syst)o(\022)-18
b(emes)14 b(cryptographiques)i(\(A)m(THENA)11 b(et)i(Kerb)q(eros)h(au)f
(MIT\).)179 1281 y(Le)e(con\014nemen)o(t)i(des)e(erreurs)h(est)f(obten)
o(u)h(en)g(con)o(tr^)-19 b(olan)o(t)13 b(les)f(acc)o(\022)-18
b(es)11 b(aux)h(en)o(tit)o(\023)-18 b(es)12 b(du)g(syst)o(\022)-18
b(eme)12 b(d'exploi-)179 1326 y(tation,)i(par)f(les)h(domaines)g(de)g
(protection.)179 1527 y Fv(16.2)66 b(G)o(\023)-32 b(en)o(\023)g(eralit)
o(\023)g(es)19 b(sur)k(le)g(con)n(tr^)-34 b(ole)23 b(d'acc)o(\022)-32
b(es)236 1618 y FB(Con)o(tr^)-19 b(ole)14 b(tr)o(\022)-18
b(es)13 b(pr)o(\023)-18 b(ecis)14 b(de)g(l'utilisation)i(des)e
(ressources)g(par)f(les)h(pro)q(cessus.)179 1714 y(Deux)g(niv)o(eaux)8
b(:)230 1791 y({)21 b(un)10 b(niv)o(eau)i(logique)g(\(soft\),)d(celui)i
(du)g(mo)q(d)o(\022)-18 b(ele)11 b(de)f(protection,)h(ensem)o(ble)g(de)
f(r)o(\022)-18 b(egles)11 b(qui)f(d)o(\023)-18 b(e\014nissen)o(t)270
1837 y(quels)15 b(acc)o(\022)-18 b(es)14 b(\(aux)g(ressources\))g(son)o
(t)g(autoris)o(\023)-18 b(es)15 b(et)e(quels)i(acc)o(\022)-18
b(es)14 b(son)o(t)g(in)o(terdits.)h(Ces)e(r)o(\022)-18
b(egles)14 b(son)o(t)270 1882 y(d)o(\023)-18 b(e\014nies)15
b(soit)f(\022)-19 b(a)13 b(la)g(conception)i(du)f(syst)o(\022)-18
b(eme,)13 b(soit)h(par)f(les)h(utilisateurs.)230 1954
y({)21 b(un)13 b(niv)o(eau)h(mat)o(\023)-18 b(eriel)14
b(qui)g(p)q(ermet)f(d'appliquer)i(le)e(mo)q(d)o(\022)-18
b(ele)14 b(r)o(\023)-18 b(eellemen)o(t.)13 b(C'est)f(le)h(r^)-19
b(ole)14 b(des)f(m)o(\023)-18 b(eca-)270 2000 y(nismes)14
b(de)f(protection.)179 2077 y(Le)h(premier)h(doit)f(^)-18
b(etre)13 b(dynamique.)j(P)o(ar)e(con)o(tre,)g(le)h(deuxi)o(\022)-18
b(eme)15 b(doit)f(^)-18 b(etre)14 b(stable)h(p)q(our)g(faciliter)h
(l'im-)179 2123 y(pl)o(\023)-18 b(emen)o(tation,)15 b(le)e(con)o(tr^)
-19 b(ole)15 b(et)e(la)g(\014abilli)q(sati)q(on.)179
2168 y(Les)i(deux)g(doiv)o(en)o(t)i(de)e(surcro)l(^)-15
b(\020t)15 b(^)-18 b(etre)15 b(ind)o(\023)-18 b(ep)q(endan)o(ts)17
b(du)f(mo)q(d)o(\022)-18 b(ele)16 b(p)q(our)f(o\013rir)h(un)g(v)n(aste)
f(ensem)o(ble)h(de)179 2214 y(r)o(\022)-18 b(egles)14
b(p)q(ossibles.)179 2394 y Fu(16.2.1)55 b(Domaines)17
b(de)h(protection)g(et)g(matrices)e(d'acc)o(\022)-27
b(es)236 2472 y FB(On)19 b(formalise)g(le)g(syst)o(\022)-18
b(eme)19 b(comme)f(un)h(ensem)o(ble)h(d'en)o(tit)o(\023)-18
b(es)19 b(activ)o(es,)g(les)g(sujets,)f(un)h(ensem)o(ble)179
2518 y(d'en)o(tit)o(\023)-18 b(es)13 b(accessibles,)i(les)e(ob)r(jets.)
g(Le)f(mo)q(d)o(\022)-18 b(ele)14 b(de)e(protection)j(d)o(\023)-18
b(e\014nit)14 b(quels)f(sujets)g(on)o(t)g(acc)o(\022)-18
b(es)13 b(\022)-19 b(a)12 b(quels)179 2564 y(ob)r(jets)h(et)g(commen)o
(t)g(\(mo)q(dalit)o(\023)-18 b(es)15 b(d'acc)o(\022)-18
b(es\).)236 2614 y(On)13 b(parle)h(alors)g(de)g(droit)g(d'acc)o(\022)
-18 b(es,)13 b(d)o(\023)-18 b(e\014nis)14 b(par)g(le)f(couple)i(\(ob)r
(jet,)e(mo)q(dalit)o(\023)-18 b(es\))236 2665 y(Exemple)8
b(:)13 b(\(\014c)o(hier,)h(lire\))236 2761 y(Le)g(mo)q(d)o(\022)-18
b(ele)16 b(doit)f(\014xer)g(\022)-19 b(a)14 b(tout)g(instan)o(t)h(les)g
(droits)h(d'acc)o(\022)-18 b(es)14 b(don)o(t)h(disp)q(ose)h(c)o(haque)f
(pro)q(cessus.)g(Cet)179 2806 y(ensem)o(ble)f(de)f(droits)i(est)d(le)i
(domaine)h(de)e(protection)h(du)g(pro)q(cessus.)p eop
%%Page: 119 127
119 126 bop 75 50 a Fz(16.3.)26 b(LE)14 b(CHEV)-5 b(AL)15
b(DE)f(TR)o(OIE)1123 b FD(119)11 1054 y
 currentpoint currentpoint translate 1.03244 1.03244 scale neg exch
neg exch translate
 11 1054 a 14
w @beginspecial 0 @llx 0 @lly 436 @urx 216 @ury 4360
@rwi @setspecial
%%BeginDocument: eps/matricedacces1.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-67.0 266.0 translate
1 -1 scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
/Times-Roman findfont 240.00 scalefont setfont
5250 2400 m
gs 1 -1 sc (Ecrire) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
3001 2926 m
gs 1 -1 sc (Lire) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
3001 3226 m
gs 1 -1 sc (Ecrire) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4051 3751 m
gs 1 -1 sc (Lire) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4051 4051 m
gs 1 -1 sc (Ecrire) col-1 show gr
7.500 slw
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 3893 1800 m 5010 1800 l  5010 2668 l  3893 2668 l  clp  gs col-1 s gr 
% Polyline
n 5010 1800 m 6128 1800 l  6128 2668 l  5010 2668 l  clp  gs col-1 s gr 
% Polyline
n 6128 1800 m 7245 1800 l  7245 2668 l  6128 2668 l  clp  gs col-1 s gr 
% Polyline
n 7245 1800 m 8363 1800 l  8363 2668 l  7245 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 3893 2669 m 5010 2669 l  5010 3538 l  3893 3538 l  clp  gs col-1 s gr 
% Polyline
n 5010 2669 m 6128 2669 l  6128 3538 l  5010 3538 l  clp  gs col-1 s gr 
% Polyline
n 6128 2669 m 7245 2669 l  7245 3538 l  6128 3538 l  clp  gs col-1 s gr 
% Polyline
n 7245 2669 m 8363 2669 l  8363 3538 l  7245 3538 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
5250 2100 m
gs 1 -1 sc (Lire) col-1 show gr
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
7500 3900 m
gs 1 -1 sc (Entrer) col-1 show gr
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 3893 3538 m 5010 3538 l  5010 4406 l  3893 4406 l  clp  gs col-1 s gr 
% Polyline
n 5010 3538 m 6128 3538 l  6128 4406 l  5010 4406 l  clp  gs col-1 s gr 
% Polyline
n 6128 3538 m 7245 3538 l  7245 4406 l  6128 4406 l  clp  gs col-1 s gr 
% Polyline
n 7245 3538 m 8363 3538 l  8363 4406 l  7245 4406 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
1200 2326 m
gs 1 -1 sc (Processus) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
1200 3076 m
gs 1 -1 sc (Processus) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
1200 3901 m
gs 1 -1 sc (Processus) col-1 show gr
/Times-Roman findfont 285.00 scalefont setfont
1126 1801 m
gs 1 -1 sc (Sujets) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
2476 2326 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
2476 3076 m
gs 1 -1 sc (2) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
2476 3901 m
gs 1 -1 sc (3) col-1 show gr
/Times-Roman findfont 285.00 scalefont setfont
5026 1051 m
gs 1 -1 sc (Objets) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
3001 1426 m
gs 1 -1 sc (Fichier) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
3976 1426 m
gs 1 -1 sc (Segment) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5101 1426 m
gs 1 -1 sc (Segment) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
6301 1426 m
gs 1 -1 sc (Processus) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
7501 1426 m
gs 1 -1 sc (Editeur) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
3301 1651 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
6751 1651 m
gs 1 -1 sc (2) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4426 1651 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5551 1651 m
gs 1 -1 sc (2) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
3000 2100 m
gs 1 -1 sc (Lire) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4050 2100 m
gs 1 -1 sc (Executer) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
7575 2100 m
gs 1 -1 sc (Entrer) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4050 4350 m
gs 1 -1 sc (Executer) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
6375 4200 m
gs 1 -1 sc (Entrer) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
7500 3000 m
gs 1 -1 sc (Entrer) col-1 show gr
$F2psEnd
restore
%%EndDocument
 @endspecial 11 1054 a
 currentpoint currentpoint translate 1 1.03244 div 1 1.03244 div scale
neg exch neg exch translate
 11 1054 a 707 1145 a Fq(Fig.)13
b FD(16.1)f({)i Fp(Matric)n(e)g(d'ac)n(c)o(\022)-20 b(es)179
1272 y Fu(16.2.2)55 b(Domaines)17 b(de)h(protection)g(restrein)n(ts)236
1344 y FB(Il)11 b(est)g(souhaitable)i(que)e(la)g(matrice)h(d'acc)o
(\022)-18 b(es)11 b(puisse)g(\023)-18 b(ev)o(oluer)12
b(dynamiquemen)o(t.)g(En)f(e\013et,)g(un)g(m)o(^)-18
b(eme)179 1389 y(pro)q(cessus)13 b(p)q(eut)g(a)o(v)o(oir,)f(au)h(cours)
f(de)h(son)f(existence,)h(des)g(b)q(esoins)h(v)n(ariables)g(a\014n)e
(que)h(c)o(haque)g(mo)q(dule)179 1435 y(qui)h(comp)q(ose)g(un)g(pro)q
(cessus)g(ne)f(mette)g(pas)h(en)f(danger)h(des)g(ressources)g(non)g
(utilis)o(\023)-18 b(ees.)15 b(P)o(ar)e(exemple)8 b(:)179
1481 y(un)13 b(mo)q(dule)i(de)e(lecture)h(de)f(donn)o(\023)-18
b(ees,)14 b(un)g(mo)q(dule)h(de)e(calcul,)h(un)g(mo)q(dule)g
(d'impression.)i(On)d(v)n(a)g(donc)179 1526 y(ex)o(\023)-18
b(ecuter)13 b(c)o(haque)h(mo)q(dule)h(dans)f(un)f(domaine)i(de)e
(protection)i(le)e(plus)h(r)o(\023)-18 b(eduit)15 b(p)q(ossible.)236
1573 y(C'est)k(le)g Fx(princip)n(e)e(du)i(moindr)n(e)f(privil)o(\022)
-19 b(e)n(ge)7 b FB(:)18 b(un)i(programme)g(ne)f(p)q(eut)h(endommager)g
(un)f(ob)r(jet)179 1619 y(auquel)14 b(il)h(n'a)e(pas)g(acc)o(\022)-18
b(es)7 b(!)236 1665 y(P)o(our)15 b(mettre)g(en)f(place)i(ces)f
(domaines)h(dynamiques,)g(une)f(p)q(ossibil)q(it)o(\023)-18
b(e)18 b(est)c(de)h(c)o(hanger)g(les)g(droits)179 1711
y(d'acc)o(\022)-18 b(es)12 b(du)g(pro)q(cessus)h(au)f(cours)g(de)g(son)
g(ex)o(\023)-18 b(ecution.)13 b(Une)f(autre)g(p)q(ossibili)q(t)o(\023)
-18 b(e)14 b(est)e(d'a)r(jouter)g(aux)g(ob)r(jets)179
1757 y(le)18 b(t)o(yp)q(e)g("domaine")h(et)e(de)h(con)o(tr^)-19
b(oler)18 b(les)h(acc)o(\022)-18 b(es)17 b(\022)-19 b(a)18
b(la)g(matrice.)g(L')o(\023)-18 b(edition)19 b(de)e(cases)h(de)g(la)g
(matrice)179 1802 y(devien)o(t)c(une)g(op)o(\023)-18
b(eration)14 b(prot)o(\023)-18 b(eg)o(\023)g(ee.)179
1918 y Fu(16.2.3)55 b(Av)m(an)n(tages)19 b(des)g(domaines)e(de)h
(protections)g(restrein)n(ts)236 1989 y FB(Av)n(an)o(tages)c(de)f
(cette)g(souplesse)22 b(:)230 2055 y({)f(le)12 b(maillon)i(faible)8
b(:)i(un)i(syst)o(\022)-18 b(eme)12 b(rigide)h(laisse)g(souv)o(en)o(t)f
(des)f("p)q(oternes")i(\(p)q(ortes)f(d)o(\023)-18 b(erob)o(\023)g
(ees\))12 b(p)q(our)270 2100 y(p)q(ouv)o(oir)j(impl)o(\023)-18
b(emen)o(ter)15 b(certaines)f(op)o(\023)-18 b(erations)9
b(;)230 2165 y({)21 b(si)12 b(les)f(mesures)h(de)f(protection)h(son)o
(t)f(trop)g(p)q(esan)o(tes,)h(l'exp)o(\023)-18 b(erience)13
b(prouv)o(e)f(que)f(l'on)h(cr)o(\023)-18 b(ee)11 b(souv)o(en)o(t)270
2210 y(des)i(mo)o(y)o(ens)h("exceptionnels)q(")i(p)q(our)d(les)h(con)o
(tourner)8 b(;)230 2275 y({)21 b(il)14 b(est)f(in)o(t)o(\023)-18
b(eressan)o(t)15 b(de)e(faire)g(v)n(arier)h(les)g(con)o(tr^)-19
b(oles)14 b(suiv)n(an)o(t)h(les)f(utilisateurs)9 b(;)230
2339 y({)21 b(on)13 b(p)q(eut)h(r)o(\023)-18 b(ealiser)15
b(des)e(acc)o(\022)-18 b(es)13 b(\022)-19 b(a)13 b(la)h(carte)f(sur)g
(certains)i(ob)r(jets)7 b(;)230 2403 y({)21 b(en\014n,)e(certains)g
(probl)o(\022)-18 b(emes)20 b(de)f(protection)g(n)o(\023)-18
b(ecessiten)o(t)20 b(des)f(mesures)f(souples,)i(ce)e(son)o(t)7
b(:)18 b("le)270 2449 y(c)o(hev)n(al)c(de)g(T)m(roie")f(et)g(le)g
(con\014nemen)o(t.)179 2585 y Fv(16.3)66 b(Le)22 b(c)n(hev)l(al)i(de)e
(T)-6 b(roie)236 2669 y FB(Un)10 b(utilisateur)j(fait)d(souv)o(en)o(t)h
(app)q(el)g(\022)-19 b(a)10 b(un)h(certain)g(nom)o(bre)f(de)g
(programmes)h(qu'il)h(n'a)d(pas)h(\023)-18 b(ecrit)10
b(lui-)179 2715 y(m)o(^)-18 b(eme)12 b(\(heureusemen)o(t\),)i(un)e
(\023)-18 b(editeur)14 b(par)f(exemple.)h(Ce)f(programme)g(p)q(eut)f(^)
-18 b(etre)13 b(un)g(c)o(hev)n(al)h(de)f(T)m(roie)7 b(:)179
2761 y(il)13 b(v)n(a)f(pro\014ter)h(des)g(droits)g(donn)o(\023)-18
b(es)13 b(par)g(l'utilisateur)i(p)q(our)e(consulter,)g(copier,)g(mo)q
(di\014er)h(ou)e(alt)o(\023)-18 b(erer)13 b(des)179 2806
y(donn)o(\023)-18 b(ees)14 b(auxquelles)i(il)e(n'est)f(pas)g(cens)o
(\023)-18 b(e)14 b(acc)o(\023)-18 b(eder.)p eop
%%Page: 120 128
120 127 bop 75 50 a FD(120)1094 b Fz(CHAPITRE)14 b(16.)26
b(LA)14 b(S)1649 39 y(\023)1644 50 y(ECURIT)1814 39 y(\023)1809
50 y(E)484 2464 y
 currentpoint currentpoint translate 0.87788 0.87788 scale neg exch
neg exch translate
 484 2464 a 14 w @beginspecial 0 @llx
0 @lly 255 @urx 571 @ury 2550 @rwi @setspecial
%%BeginDocument: eps/matricedacces3.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-50.0 -67.0 translate
 90 rotate
1 -1 scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
/Times-Roman findfont 240.00 scalefont setfont
5250 2400 m
gs 1 -1 sc (Ecrire) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
3001 2926 m
gs 1 -1 sc (Lire) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
3001 3226 m
gs 1 -1 sc (Ecrire) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4051 3751 m
gs 1 -1 sc (Lire) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4051 4051 m
gs 1 -1 sc (Ecrire) col-1 show gr
/Times-Roman findfont 285.00 scalefont setfont
5026 1051 m
gs 1 -1 sc (Objets) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
3001 1426 m
gs 1 -1 sc (Fichier) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
3976 1426 m
gs 1 -1 sc (Segment) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5101 1426 m
gs 1 -1 sc (Segment) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
6301 1426 m
gs 1 -1 sc (Processus) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
7501 1426 m
gs 1 -1 sc (Editeur) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
3301 1651 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
6751 1651 m
gs 1 -1 sc (2) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4426 1651 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5551 1651 m
gs 1 -1 sc (2) col-1 show gr
7.500 slw
% Polyline
n 8370 1800 m 9495 1800 l  9495 2670 l  8370 2670 l  clp  gs col-1 s gr 
% Polyline
n 8370 2670 m 9495 2670 l  9495 3540 l  8370 3540 l  clp  gs col-1 s gr 
% Polyline
n 8370 3540 m 9495 3540 l  9495 4410 l  8370 4410 l  clp  gs col-1 s gr 
% Polyline
n 9495 1800 m 10620 1800 l  10620 2670 l  9495 2670 l  clp  gs col-1 s gr 
% Polyline
n 9495 2670 m 10620 2670 l  10620 3540 l  9495 3540 l  clp  gs col-1 s gr 
% Polyline
n 9495 3540 m 10620 3540 l  10620 4410 l  9495 4410 l  clp  gs col-1 s gr 
% Polyline
n 6135 4980 m 6960 4980 l  gs col-1 s gr 
n 6840.00 4950.00 m 6960.00 4980.00 l 6840.00 5010.00 l gs col-1 s gr
/Times-Roman findfont 240.00 scalefont setfont
4650 5040 m
gs 1 -1 sc (Processus i                         Domaine i) col-1 show gr
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 1800 m 3893 1800 l  3893 2668 l  2776 2668 l  clp  gs col-1 s gr 
% Polyline
n 3893 1800 m 5010 1800 l  5010 2668 l  3893 2668 l  clp  gs col-1 s gr 
% Polyline
n 5010 1800 m 6128 1800 l  6128 2668 l  5010 2668 l  clp  gs col-1 s gr 
% Polyline
n 6128 1800 m 7245 1800 l  7245 2668 l  6128 2668 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
5250 2100 m
gs 1 -1 sc (Lire) col-1 show gr
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
6360 3900 m
gs 1 -1 sc (Entrer) col-1 show gr
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 2669 m 3893 2669 l  3893 3538 l  2776 3538 l  clp  gs col-1 s gr 
% Polyline
n 3893 2669 m 5010 2669 l  5010 3538 l  3893 3538 l  clp  gs col-1 s gr 
% Polyline
n 5010 2669 m 6128 2669 l  6128 3538 l  5010 3538 l  clp  gs col-1 s gr 
% Polyline
n 6128 2669 m 7245 2669 l  7245 3538 l  6128 3538 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 2776 3538 m 3893 3538 l  3893 4406 l  2776 4406 l  clp  gs col-1 s gr 
% Polyline
n 3893 3538 m 5010 3538 l  5010 4406 l  3893 4406 l  clp  gs col-1 s gr 
% Polyline
n 5010 3538 m 6128 3538 l  6128 4406 l  5010 4406 l  clp  gs col-1 s gr 
% Polyline
n 6128 3538 m 7245 3538 l  7245 4406 l  6128 4406 l  clp  gs col-1 s gr 
% Polyline
n 7245 1800 m 8363 1800 l  8363 2668 l  7245 2668 l  clp  gs col-1 s gr 
% Polyline
n 7245 2669 m 8363 2669 l  8363 3538 l  7245 3538 l  clp  gs col-1 s gr 
% Polyline
n 7245 3538 m 8363 3538 l  8363 4406 l  7245 4406 l  clp  gs col-1 s gr 
% Polyline
n 3105 4530 m 3105 4530 l gs col-1 s gr
/Times-Roman findfont 240.00 scalefont setfont
3000 2100 m
gs 1 -1 sc (Lire) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4050 2100 m
gs 1 -1 sc (Executer) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
7575 2100 m
gs 1 -1 sc (Entrer) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4050 4350 m
gs 1 -1 sc (Executer) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
7500 3000 m
gs 1 -1 sc (Entrer) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
7500 3900 m
gs 1 -1 sc (Entrer) col-1 show gr
/Times-Roman findfont 285.00 scalefont setfont
1126 1801 m
gs 1 -1 sc (Sujets) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
2476 2326 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
2476 3076 m
gs 1 -1 sc (2) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
2476 3901 m
gs 1 -1 sc (3) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
1200 2326 m
gs 1 -1 sc (Domaine) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
1200 3076 m
gs 1 -1 sc (Domaine) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
1200 3901 m
gs 1 -1 sc (Domaine) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
8505 1411 m
gs 1 -1 sc (Domaine) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
9585 1411 m
gs 1 -1 sc (Domaine) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
8971 1666 m
gs 1 -1 sc (1) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
9961 1666 m
gs 1 -1 sc (2) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
8640 2130 m
gs 1 -1 sc (Entrer) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
9690 2130 m
gs 1 -1 sc (Entrer) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
8565 3900 m
gs 1 -1 sc (Entrer) col-1 show gr
$F2psEnd
restore
%%EndDocument
 @endspecial 484 2464 a
 currentpoint currentpoint translate 1 0.87788 div 1 0.87788 div scale
neg exch neg exch translate
 484 2464 a 707 2556 a Fq(Fig.)f
FD(16.2)f({)i Fp(Matric)n(e)g(d'ac)n(c)o(\022)-20 b(es)p
eop
%%Page: 121 129
121 128 bop 75 50 a Fz(16.4.)26 b(LE)14 b(CONFINEMENT)1198
b FD(121)11 298 y
 currentpoint currentpoint translate 1.34067 1.34067 scale neg exch
neg exch translate
 11 298 a 14 w @beginspecial 0 @llx
0 @lly 335 @urx 31 @ury 3350 @rwi @setspecial
%%BeginDocument: eps/capacite1.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-165.0 201.0 translate
1 -1 scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
7.500 slw
% Polyline
n 3420 2925 m 5355 2925 l  5355 3330 l  3420 3330 l  clp  gs col-1 s gr 
15.000 slw
% Polyline
n 6405 3090 m 7245 3105 l  gs col-1 s gr 
n 7006.11 3040.72 m 7245.00 3105.00 l 7003.97 3160.71 l gs col-1 s gr
7.500 slw
% Polyline
n 5355 2925 m 6465 2925 l  6465 3330 l  5355 3330 l  clp  gs col-1 s gr 
% Ellipse
n 7837 3090 488 240 0 360 DrawEllipse gs col30 1.00 shd ef gr gs col-1 s gr

% Polyline
n 2775 2925 m 3420 2925 l  3420 3330 l  2775 3330 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
7560 3156 m
gs 1 -1 sc (Objet) col1 show gr
/Times-Roman findfont 240.00 scalefont setfont
2850 3186 m
gs 1 -1 sc (Nom) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
3480 3186 m
gs 1 -1 sc (Modalitees d'acces) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5490 3186 m
gs 1 -1 sc (Pointeur) col-1 show gr
$F2psEnd
restore
%%EndDocument
 @endspecial 11 298 a
 currentpoint currentpoint translate 1 1.34067 div 1 1.34067 div scale
neg exch neg exch translate
 11 298 a 732 389 a Fq(Fig.)12 b
FD(16.3)h({)h Fp(Une)h(c)n(ap)n(acit)o(\023)-20 b(e)11
1196 y
 currentpoint currentpoint translate 0.99391 0.99391 scale neg exch
neg exch translate
 11 1196 a 14 w @beginspecial 0 @llx 0 @lly 453
@urx 180 @ury 4530 @rwi @setspecial
%%BeginDocument: eps/capacite2.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-171.0 314.0 translate
1 -1 scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
7.500 slw
% Ellipse
n 8167 2490 488 240 0 360 DrawEllipse gs col30 1.00 shd ef gr gs col-1 s gr

/Times-Roman findfont 240.00 scalefont setfont
8044 2591 m
gs 1 -1 sc (Code Editeur) col1 show gr
% Polyline
n 4047 2925 m 6056 2925 l  6056 3345 l  4047 3345 l  clp  gs col-1 s gr 
% Polyline
n 6056 2925 m 6450 2925 l  6450 3345 l  6056 3345 l  clp  gs col-1 s gr 
% Polyline
n 2865 3345 m 4047 3345 l  4047 3765 l  2865 3765 l  clp  gs col-1 s gr 
% Polyline
n 4047 3345 m 6056 3345 l  6056 3765 l  4047 3765 l  clp  gs col-1 s gr 
% Polyline
n 6056 3345 m 6450 3345 l  6450 3765 l  6056 3765 l  clp  gs col-1 s gr 
% Polyline
n 2865 3765 m 4047 3765 l  4047 4185 l  2865 4185 l  clp  gs col-1 s gr 
% Polyline
n 4047 3765 m 6056 3765 l  6056 4185 l  4047 4185 l  clp  gs col-1 s gr 
% Polyline
n 6056 3765 m 6450 3765 l  6450 4185 l  6056 4185 l  clp  gs col-1 s gr 
% Polyline
n 2865 4185 m 4047 4185 l  4047 4605 l  2865 4605 l  clp  gs col-1 s gr 
% Polyline
n 4047 4185 m 6056 4185 l  6056 4605 l  4047 4605 l  clp  gs col-1 s gr 
% Polyline
n 6056 4185 m 6450 4185 l  6450 4605 l  6056 4605 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
4230 3210 m
gs 1 -1 sc (Executer) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4230 3642 m
gs 1 -1 sc (Lire,Executer) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4230 4059 m
gs 1 -1 sc (Lire) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
3900 2676 m
gs 1 -1 sc (Modalitees d'acces) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4230 4536 m
gs 1 -1 sc (Lire,Ecrire) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5895 2691 m
gs 1 -1 sc (Pointeur) col-1 show gr
% Ellipse
n 9322 3480 488 240 0 360 DrawEllipse gs col30 1.00 shd ef gr gs col-1 s gr

% Ellipse
n 8947 4230 488 240 0 360 DrawEllipse gs col30 1.00 shd ef gr gs col-1 s gr

% Ellipse
n 8137 4980 488 240 0 360 DrawEllipse gs col30 1.00 shd ef gr gs col-1 s gr

% Polyline
n 2865 2925 m 4047 2925 l  4047 3345 l  2865 3345 l  clp  gs col-1 s gr 
15.000 slw
% Polyline
n 6315 3555 m 8700 3525 l  gs col-1 s gr 
n 8459.26 3468.02 m 8700.00 3525.00 l 8460.77 3588.01 l gs col-1 s gr
% Polyline
n 6300 3990 m 8400 4200 l  gs col-1 s gr 
n 8167.16 4116.42 m 8400.00 4200.00 l 8155.22 4235.82 l gs col-1 s gr
% Polyline
n 6300 3105 m 7665 2625 l  gs col-1 s gr 
n 7418.69 2648.01 m 7665.00 2625.00 l 7458.49 2761.22 l gs col-1 s gr
% Polyline
n 6258 4380 m 7560 4845 l  gs col-1 s gr 
n 7354.16 4707.77 m 7560.00 4845.00 l 7313.80 4820.78 l gs col-1 s gr
/Times-Roman findfont 240.00 scalefont setfont
2910 2661 m
gs 1 -1 sc (Nom) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
8940 3552 m
gs 1 -1 sc (Code Procedure) col1 show gr
/Times-Roman findfont 240.00 scalefont setfont
3030 3240 m
gs 1 -1 sc (Editeur) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
3015 3612 m
gs 1 -1 sc (Proc) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
3045 4044 m
gs 1 -1 sc (Fic1) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
3030 4476 m
gs 1 -1 sc (Fic2) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
7782 5083 m
gs 1 -1 sc (Fichier) col1 show gr
/Times-Roman findfont 240.00 scalefont setfont
8640 4318 m
gs 1 -1 sc (Fichier) col1 show gr
$F2psEnd
restore
%%EndDocument
 @endspecial 11 1196 a
 currentpoint currentpoint translate 1 0.99391 div 1 0.99391 div scale
neg exch neg exch translate
 11 1196 a 651 1287 a Fq(Fig.)13
b FD(16.4)g({)h Fp(Une)h(liste)f(de)h(c)n(ap)n(acit)o(\023)-20
b(es)179 1423 y Fv(16.4)66 b(Le)22 b(con\014nemen)n(t)236
1508 y FB(Le)12 b(probl)o(\022)-18 b(eme)14 b(ici)f(est)f(tout)g
(simplemen)o(t)i(le)e(fait)g(que)h(le)f(programme)h(ne)f(manipule)j
(pas)d(de)g(donn)o(\023)-18 b(ees)179 1554 y(de)11 b(l'utilisateur)j
(mais)f(simplemen)o(t)g(enregistre)f(ses)g(param)o(\022)-18
b(etres)12 b(d'app)q(els)g(\(les)g(utilisateurs)i(\022)-19
b(a)12 b(qui)g(v)o(ous)179 1599 y(en)o(v)o(o)o(y)o(ez)18
b(du)f(courrier)i(par)e(exemple\).)h(Le)f(probl)o(\022)-18
b(eme)19 b(du)e(con\014nemen)o(t)i(est)e(donc)h(de)f(v)o(ous)h(prot)o
(\023)-18 b(eger)179 1645 y(con)o(tre)17 b(ce)g(t)o(yp)q(e)g
(d'extraction)i(d'informations)g(\(ce)e(qui)h(p)q(eut)g(par)f(exemple)g
(^)-18 b(etre)17 b(utilis)o(\023)-18 b(e)19 b(en)f(b)q(ourse)179
1691 y(p)q(our)c(connaitre)g(v)o(otre)f(comp)q(ortemen)o(t)h(d'ac)o
(hat\).)179 1829 y Fv(16.5)66 b(les)22 b(m)o(\023)-32
b(ecanismes)20 b(de)j(con)n(tr^)-34 b(ole)236 1914 y
FB(Acc)o(\022)-18 b(es)13 b(hi)o(\023)-18 b(erarc)o(hiques)236
1960 y(UNIX)12 b(\(4\)/)h(MUL)m(TICS)g(\(8\))g(/)g(VMS)179
2006 y(Listes)h(d'acc)o(\022)-18 b(es)236 2051 y(UNIX/MUL)m(TICS)179
2097 y(Capacit)o(\023)g(es)236 2143 y(Les)17 b(capacit)o(\023)-18
b(es)17 b(son)o(t)g(des)f(triplets)i Fa(\(utilisa)n(teur,)g(dr)o(oits,)
g(pointeur\))p FB(.)e(La)g(manipulati)q(on)j(des)179
2188 y(capacit)o(\023)-18 b(es)13 b(est)f(r)o(\023)-18
b(ealis)o(\023)g(ee)14 b(de)e(fa\030)-17 b(con)12 b(prot)o(\023)-18
b(eg)o(\023)g(ee.)13 b(Le)f(p)q(oin)o(teur)h(n'est)f(pas)h(directemen)o
(t)g(utilisable)i(par)e(l'uti-)179 2234 y(lisateur)f(de)g(la)f(capacit)
o(\023)-18 b(e.)12 b(La)f(capacit)o(\023)-18 b(e)12 b(donne)g(le)f
(droit)h(d'acc)o(\022)-18 b(es)11 b(\022)-19 b(a)11 b(certains)h
(utilisateurs)i(d'une)d(certaine)179 2280 y(ressource.)k(P)o(our)f
(qu'un)h(autre)g(utilisateur)i(puisse)f(utiliser)g(v)o(otre)f
(ressource,)g(v)o(ous)g(dev)o(ez)g(lui)g(donner)179 2325
y(une)e(capacit)o(\023)-18 b(e.)236 2372 y(Changer)14
b(de)f(protection)i(revien)o(t)f(\022)-19 b(a)13 b(c)o(hanger)h(de)f
(C-liste.)236 2420 y(La)g(notion)i(de)e(domaine)i(se)e(mat)o(\023)-18
b(erialise)15 b(par)e(une)h(simple)h(indirection)h(sur)d(une)h(autre)f
(C-liste.)236 2467 y(Comme)d(les)h(capacit)o(\023)-18
b(es)11 b(donnen)o(t)h(un)e(acc)o(\022)-18 b(es)11 b(sans)f(con)o(tr^)
-19 b(ole)12 b(aux)e(ob)r(jets,)g(la)h(protection)h(des)e(capacit)o
(\023)-18 b(es)179 2512 y(doit)13 b(^)-18 b(etre)13 b(absolue.)h(Elle)g
(est)f(donc)h(r)o(\023)-18 b(ealis)o(\023)g(ee)15 b(de)e(fa\030)-17
b(con)13 b(mat)o(\023)-18 b(erielle.)179 2630 y Fu(16.5.1)55
b(Application)12 b(des)h(capacit)o(\023)-27 b(es)12 b(au)h(domaines)e
(de)i(protection)e(res-)179 2688 y(trein)n(ts)236 2761
y FB(Les)i(C-listes)g(son)o(t)g(des)f(ob)r(jets)h(d'un)g(t)o(yp)q(e)f
(n'a)o(y)o(an)o(t)h(qu'un)g(droit)g(d'en)o(tr)o(\023)-18
b(ee,)13 b(la)g(C-liste)g(con)o(tenan)o(t)g(le)179 2806
y(droit)h(r)o(\023)-18 b(eel.)p eop
%%Page: 122 130
122 129 bop 75 50 a FD(122)1094 b Fz(CHAPITRE)14 b(16.)26
b(LA)14 b(S)1649 39 y(\023)1644 50 y(ECURIT)1814 39 y(\023)1809
50 y(E)11 1032 y
 currentpoint currentpoint translate 0.84099 0.84099 scale neg exch
neg exch translate
 11 1032 a 14 w @beginspecial 0 @llx
0 @lly 536 @urx 259 @ury 5360 @rwi @setspecial
%%BeginDocument: eps/capacite3.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-91.0 305.0 translate
1 -1 scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
/Times-Roman findfont 240.00 scalefont setfont
9676 1772 m
gs 1 -1 sc (Objet) col1 show gr
/Times-Roman findfont 240.00 scalefont setfont
1703 4249 m
gs 1 -1 sc (Liste des Capacites) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
1703 4591 m
gs 1 -1 sc (de la Procedure appelante) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5621 5022 m
gs 1 -1 sc (de la Procedure appelee) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5621 4680 m
gs 1 -1 sc (Liste des Capacites) col-1 show gr
7.500 slw
% Polyline
n 5602 839 m 6293 839 l  6293 1238 l  5602 1238 l  clp  gs col-1 s gr 
% Polyline
n 6293 839 m 7599 839 l  7599 1238 l  6293 1238 l  clp  gs col-1 s gr 
% Polyline
n 7599 839 m 7989 839 l  7989 1238 l  7599 1238 l  clp  gs col-1 s gr 
% Polyline
n 5602 1234 m 6293 1234 l  6293 1633 l  5602 1633 l  clp  gs col-1 s gr 
% Polyline
n 6293 1234 m 7599 1234 l  7599 1633 l  6293 1633 l  clp  gs col-1 s gr 
% Polyline
n 7599 1234 m 7989 1234 l  7989 1633 l  7599 1633 l  clp  gs col-1 s gr 
% Polyline
n 5602 1630 m 6293 1630 l  6293 2029 l  5602 2029 l  clp  gs col-1 s gr 
% Polyline
n 6293 1630 m 7599 1630 l  7599 2029 l  6293 2029 l  clp  gs col-1 s gr 
% Ellipse
n 9953 1706 488 240 0 360 DrawEllipse gs col30 1.00 shd ef gr gs col-1 s gr

% Polyline
n 7599 1630 m 7989 1630 l  7989 2029 l  7599 2029 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
6528 1162 m
gs 1 -1 sc (Entrer) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
6577 2539 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
6577 2881 m
gs 1 -1 sc (.) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
6577 3223 m
gs 1 -1 sc (.) col-1 show gr
% Polyline
n 1545 795 m 4305 795 l  4305 3615 l  1545 3615 l  clp  gs col-1 s gr 
% Polyline
n 1545 1905 m 4305 1905 l  4305 2340 l  1545 2340 l  clp  gs col-1 s gr 
% Polyline
n 4080 1905 m 2655 1905 l  2655 2340 l  4080 2340 l  clp  gs col-1 s gr 
15.000 slw
% Polyline
n 4196 2074 m 5584 1103 l  gs col-1 s gr 
n 5352.95 1191.41 m 5584.00 1103.00 l 5421.74 1289.74 l gs col-1 s gr
% Polyline
n 7796 1103 m 9503 1703 l  gs col-1 s gr 
n 9296.48 1566.81 m 9503.00 1703.00 l 9256.68 1680.02 l gs col-1 s gr
7.500 slw
% Polyline
n 5602 2030 m 7997 2030 l  7997 4215 l  5602 4215 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
1710 2235 m
gs 1 -1 sc (C-liste1) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
2925 2190 m
gs 1 -1 sc (Entrer) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5740 1124 m
gs 1 -1 sc (Proc) col-1 show gr
$F2psEnd
restore
%%EndDocument
 @endspecial 11 1032 a
 currentpoint currentpoint translate 1 0.84099 div 1 0.84099 div scale
neg exch neg exch translate
 11 1032 a 498 1124 a Fq(Fig.)f
FD(16.5)f({)i Fp(Changement)i(du)f(domaine)h(de)f(pr)n(ote)n(ction)236
1256 y FB(Cette)k(tec)o(hnique)i(sur)e(les)h(C-listes)f(p)q(ermet)h
(d'implan)o(ter)h(facilemen)o(t)f(le)g(princip)q(e)h(de)e(moindre)179
1302 y(privil)o(\022)-18 b(ege.)236 1348 y(Les)13 b(m)o(\023)-18
b(ecanismes)15 b(d'acc)o(\022)-18 b(es)13 b(m)o(\023)-18
b(emoire)14 b(mo)q(dernes)g(p)q(ermetten)o(t)g(ais)o(\023)-18
b(emen)o(t)14 b(de)f(r)o(\023)-18 b(ealiser)15 b(les)e(capacit)o(\023)
-18 b(es.)236 1393 y(Un)13 b(probl)o(\022)-18 b(eme)15
b(imp)q(ortan)o(t)f(est)f(la)h(r)o(\023)-18 b(ev)o(o)q(cation)236
1439 y(En)12 b(e\013et,)f(une)h(fois)g(que)g(v)o(ous)g(a)o(v)o(ez)f
(donn)o(\023)-18 b(e)13 b(une)e(capacit)o(\023)-18 b(e,)13
b(l'acc)o(\022)-18 b(es)12 b(est)f(d)o(\023)-18 b(e\014nitiv)o(emen)o
(t)14 b(donn)o(\023)-18 b(e.)12 b(P)o(our)179 1485 y(r)o(\023)-18
b(egler)12 b(ce)f(probl)o(\022)-18 b(eme,)13 b(on)e(ne)h(fournira)g
(pas)g(la)g(capacit)o(\023)-18 b(e)12 b(d'acc)o(\022)-18
b(es)12 b(\022)-19 b(a)11 b(un)h(ob)r(jet)g(mais)g(\022)-19
b(a)11 b(un)h(domaine,)g(et)f(on)179 1530 y(d)o(\023)-18
b(etruira)13 b(ce)e(domaine)j(si)e(l'on)g(v)o(eut)g(de)g(nouv)o(eau)i
(in)o(terdire)f(l'acc)o(\022)-18 b(es)13 b(\022)-19 b(a)11
b(l'ob)r(jet.)h(On)g(cr)o(\023)-18 b(ee)12 b(deux)g(capacit)o(\023)-18
b(es)179 1576 y(en)13 b(c)o(haine)h(et)f(l'on)h(d)o(\023)-18
b(etruit)14 b(celle)g(que)g(l'on)f(p)q(oss)o(\022)-18
b(ede)15 b(quand)f(on)o(t)f(v)o(eut)g(retirer)h(l'acc)o(\022)-18
b(es.)p eop
%%Page: 123 131
123 130 bop 75 50 a Fz(16.5.)26 b(LES)14 b(M)322 39 y(\023)317
50 y(ECANISMES)h(DE)f(CONTR)814 39 y(^)807 50 y(OLE)882
b FD(123)129 1213 y
 currentpoint currentpoint translate 0.76128 0.76128 scale neg exch
neg exch translate
 129 1213 a 14 w @beginspecial 0 @llx
0 @lly 518 @urx 300 @ury 5180 @rwi @setspecial
%%BeginDocument: eps/capacite4.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-248.0 349.0 translate
1 -1 scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
7.500 slw
% Polyline
n 6235 3128 m 7838 3128 l  7838 3523 l  6235 3523 l  clp  gs col-1 s gr 
% Polyline
n 5841 3128 m 6235 3128 l  6235 3523 l  5841 3523 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
5979 3413 m
gs 1 -1 sc (O') col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
6768 3432 m
gs 1 -1 sc (Lire) col-1 show gr
% Polyline
n 7806 4191 m 8196 4191 l  8196 4590 l  7806 4590 l  clp  gs col-1 s gr 
% Polyline
n 6203 4191 m 7806 4191 l  7806 4586 l  6203 4586 l  clp  gs col-1 s gr 
% Polyline
n 5809 4191 m 6203 4191 l  6203 4586 l  5809 4586 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
5947 4476 m
gs 1 -1 sc (O') col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
6736 4495 m
gs 1 -1 sc (Lire) col-1 show gr
% Polyline
n 7806 5391 m 8196 5391 l  8196 5790 l  7806 5790 l  clp  gs col-1 s gr 
% Polyline
n 6203 5391 m 7806 5391 l  7806 5786 l  6203 5786 l  clp  gs col-1 s gr 
% Polyline
n 5809 5391 m 6203 5391 l  6203 5786 l  5809 5786 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
5947 5676 m
gs 1 -1 sc (O') col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
6736 5695 m
gs 1 -1 sc (Lire) col-1 show gr
% Polyline
n 6775 834 m 7165 834 l  7165 1233 l  6775 1233 l  clp  gs col-1 s gr 
% Polyline
n 5172 834 m 6775 834 l  6775 1229 l  5172 1229 l  clp  gs col-1 s gr 
% Polyline
n 4778 834 m 5172 834 l  5172 1229 l  4778 1229 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
4916 1119 m
gs 1 -1 sc (O) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5311 1138 m
gs 1 -1 sc (Lire,Ecrire) col-1 show gr
% Polyline
n 6826 1979 m 7216 1979 l  7216 2378 l  6826 2378 l  clp  gs col-1 s gr 
% Polyline
n 5223 1979 m 6826 1979 l  6826 2374 l  5223 2374 l  clp  gs col-1 s gr 
% Polyline
n 4829 1979 m 5223 1979 l  5223 2374 l  4829 2374 l  clp  gs col-1 s gr 
% Polyline
n 7838 3128 m 8228 3128 l  8228 3527 l  7838 3527 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
5287 2283 m
gs 1 -1 sc (Lire,revoquer) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
11077 1084 m
gs 1 -1 sc (Objet O) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4967 2264 m
gs 1 -1 sc (O') col-1 show gr
% Ellipse
n 12258 1575 488 240 0 360 DrawEllipse gs col30 1.00 shd ef gr gs col-1 s gr

/Times-Roman findfont 240.00 scalefont setfont
11981 1641 m
gs 1 -1 sc (Objet) col1 show gr
% Polyline
n 11831 3709 m 12221 3709 l  12221 4108 l  11831 4108 l  clp  gs col-1 s gr 
% Polyline
n 10228 3709 m 11831 3709 l  11831 4104 l  10228 4104 l  clp  gs col-1 s gr 
% Polyline
n 9834 3709 m 10228 3709 l  10228 4104 l  9834 4104 l  clp  gs col-1 s gr 
30.000 slw
% Polyline
	[1 75.0] 75.000000 setdash
n 7027 1346 m 9821 3465 l  gs col-1 s gr 	[] 0 setdash
15.000 slw
n 9666.03 3272.17 m 9821.00 3465.00 l 9593.52 3367.78 l gs col-1 s gr
30.000 slw
% Polyline
	[1 75.0] 75.000000 setdash
n 5134 3390 m 5659 3390 l  gs col-1 s gr 	[] 0 setdash
15.000 slw
n 5419.00 3330.00 m 5659.00 3390.00 l 5419.00 3450.00 l gs col-1 s gr
30.000 slw
% Polyline
	[1 75.0] 75.000000 setdash
n 5115 4459 m 5677 4459 l  gs col-1 s gr 	[] 0 setdash
15.000 slw
n 5437.00 4399.00 m 5677.00 4459.00 l 5437.00 4519.00 l gs col-1 s gr
30.000 slw
% Polyline
	[1 75.0] 75.000000 setdash
n 5096 2490 m 5096 5621 l  5659 5621 l  gs col-1 s gr 	[] 0 setdash
15.000 slw
n 5419.00 5561.00 m 5659.00 5621.00 l 5419.00 5681.00 l gs col-1 s gr
% Interp Spline
n 6990 1084 m
	8913.21 982.57 9747.71 977.82 10328 1065 curveto
	10556.83 1099.38 10870.83 1197.88 11584 1459 curveto
 gs col-1 s gr

n 11379.26 1320.14 m 11584.00 1459.00 l 11338.00 1432.83 l gs col-1 s gr
% Interp Spline
n 7065 2246 m
	8528.35 3032.38 9161.10 3369.88 9596 3596 curveto
	9608.75 3602.63 9627.50 3612.13 9671 3634 curveto
 gs col-1 s gr

n 9483.53 3472.59 m 9671.00 3634.00 l 9429.62 3579.80 l gs col-1 s gr
% Interp Spline
n 8040 3353 m
	8426.49 3346.75 8595.24 3370.00 8715 3446 curveto
	8835.77 3522.64 8868.81 3803.50 8996 3878 curveto
	9100.44 3939.17 9241.19 3948.42 9559 3915 curveto
 gs col-1 s gr

n 9314.04 3880.43 m 9559.00 3915.00 l 9326.59 3999.77 l gs col-1 s gr
% Interp Spline
n 8021 5640 m
	8524.66 5745.28 8749.66 5726.53 8921 5565 curveto
	9222.80 5280.50 8867.53 4666.91 9090 4384 curveto
	9174.79 4276.17 9315.54 4219.92 9653 4159 curveto
 gs col-1 s gr

n 9406.16 4142.59 m 9653.00 4159.00 l 9427.48 4260.68 l gs col-1 s gr
% Interp Spline
n 8059 4421 m
	8415.93 4308.07 8570.68 4261.32 8678 4234 curveto
	8770.05 4210.57 8905.80 4182.32 9221 4121 curveto
 gs col-1 s gr

n 8973.96 4107.94 m 9221.00 4121.00 l 8996.87 4225.73 l gs col-1 s gr
% Interp Spline
n 12071 3915 m
	12108.21 3176.88 12122.21 2858.13 12127 2640 curveto
	12129.67 2518.31 12129.67 2340.31 12127 1928 curveto
 gs col-1 s gr

n 12068.56 2168.38 m 12127.00 1928.00 l 12188.55 2167.61 l gs col-1 s gr
/Times-Roman findfont 240.00 scalefont setfont
9972 3994 m
gs 1 -1 sc (O) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
10367 4013 m
gs 1 -1 sc (Lire,Ecrire) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
10046 3390 m
gs 1 -1 sc (O') col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
8416 2228 m
gs 1 -1 sc (Copie) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4140 4046 m
gs 1 -1 sc (Copies) col-1 show gr
$F2psEnd
restore
%%EndDocument
 @endspecial 129 1213 a
 currentpoint currentpoint translate 1 0.76128 div 1 0.76128 div scale
neg exch neg exch translate
 129 1213 a 591 1304 a Fq(Fig.)13
b FD(16.6)f({)i Fp(T)m(r)n(ansmission)g(d'une)i(c)n(ap)n(acit)o(\023)
-20 b(e)129 2570 y
 currentpoint currentpoint translate 0.76128 0.76128 scale neg exch
neg exch translate
 129 2570 a 14 w @beginspecial 0 @llx
0 @lly 518 @urx 300 @ury 5180 @rwi @setspecial
%%BeginDocument: eps/capacite5.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-248.0 349.0 translate
1 -1 scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
7.500 slw
% Polyline
n 6235 3128 m 7838 3128 l  7838 3523 l  6235 3523 l  clp  gs col-1 s gr 
% Polyline
n 5841 3128 m 6235 3128 l  6235 3523 l  5841 3523 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
5979 3413 m
gs 1 -1 sc (O') col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
6768 3432 m
gs 1 -1 sc (Lire) col-1 show gr
% Polyline
n 7806 4191 m 8196 4191 l  8196 4590 l  7806 4590 l  clp  gs col-1 s gr 
% Polyline
n 6203 4191 m 7806 4191 l  7806 4586 l  6203 4586 l  clp  gs col-1 s gr 
% Polyline
n 5809 4191 m 6203 4191 l  6203 4586 l  5809 4586 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
5947 4476 m
gs 1 -1 sc (O') col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
6736 4495 m
gs 1 -1 sc (Lire) col-1 show gr
% Polyline
n 7806 5391 m 8196 5391 l  8196 5790 l  7806 5790 l  clp  gs col-1 s gr 
% Polyline
n 6203 5391 m 7806 5391 l  7806 5786 l  6203 5786 l  clp  gs col-1 s gr 
% Polyline
n 5809 5391 m 6203 5391 l  6203 5786 l  5809 5786 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
5947 5676 m
gs 1 -1 sc (O') col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
6736 5695 m
gs 1 -1 sc (Lire) col-1 show gr
% Polyline
n 6775 834 m 7165 834 l  7165 1233 l  6775 1233 l  clp  gs col-1 s gr 
% Polyline
n 5172 834 m 6775 834 l  6775 1229 l  5172 1229 l  clp  gs col-1 s gr 
% Polyline
n 4778 834 m 5172 834 l  5172 1229 l  4778 1229 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
4916 1119 m
gs 1 -1 sc (O) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5311 1138 m
gs 1 -1 sc (Lire,Ecrire) col-1 show gr
% Polyline
n 6826 1979 m 7216 1979 l  7216 2378 l  6826 2378 l  clp  gs col-1 s gr 
% Polyline
n 5223 1979 m 6826 1979 l  6826 2374 l  5223 2374 l  clp  gs col-1 s gr 
% Polyline
n 7838 3128 m 8228 3128 l  8228 3527 l  7838 3527 l  clp  gs col-1 s gr 
% Polyline
n 4829 1979 m 5223 1979 l  5223 2374 l  4829 2374 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
10271 4721 m
gs 1 -1 sc (Revocation) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5287 2283 m
gs 1 -1 sc (Lire,revoquer) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4967 2264 m
gs 1 -1 sc (O') col-1 show gr
% Ellipse
n 12258 1575 488 240 0 360 DrawEllipse gs col30 1.00 shd ef gr gs col-1 s gr

/Times-Roman findfont 240.00 scalefont setfont
11981 1641 m
gs 1 -1 sc (Objet) col1 show gr
% Polyline
n 11831 3709 m 12221 3709 l  12221 4108 l  11831 4108 l  clp  gs col-1 s gr 
% Polyline
n 10228 3709 m 11831 3709 l  11831 4104 l  10228 4104 l  clp  gs col-1 s gr 
% Polyline
n 9834 3709 m 10228 3709 l  10228 4104 l  9834 4104 l  clp  gs col-1 s gr 
15.000 slw
% Polyline
	[1 75.0] 75.000000 setdash
n 7027 1346 m 9821 3465 l  gs col-1 s gr 	[] 0 setdash
n 9666.03 3272.17 m 9821.00 3465.00 l 9593.52 3367.78 l gs col-1 s gr
% Polyline
	[1 75.0] 75.000000 setdash
n 5096 2490 m 5096 5621 l  5659 5621 l  gs col-1 s gr 	[] 0 setdash
n 5419.00 5561.00 m 5659.00 5621.00 l 5419.00 5681.00 l gs col-1 s gr
% Polyline
	[1 75.0] 75.000000 setdash
n 5115 4459 m 5677 4459 l  gs col-1 s gr 	[] 0 setdash
n 5437.00 4399.00 m 5677.00 4459.00 l 5437.00 4519.00 l gs col-1 s gr
% Polyline
	[1 75.0] 75.000000 setdash
n 5134 3390 m 5659 3390 l  gs col-1 s gr 	[] 0 setdash
n 5419.00 3330.00 m 5659.00 3390.00 l 5419.00 3450.00 l gs col-1 s gr
% Interp Spline
n 6990 1084 m
	8913.21 982.57 9747.71 977.82 10328 1065 curveto
	10556.83 1099.38 10870.83 1197.88 11584 1459 curveto
 gs col-1 s gr

n 11379.26 1320.14 m 11584.00 1459.00 l 11338.00 1432.83 l gs col-1 s gr
% Interp Spline
n 7065 2246 m
	8528.35 3032.38 9161.10 3369.88 9596 3596 curveto
	9608.75 3602.63 9627.50 3612.13 9671 3634 curveto
 gs col-1 s gr

n 9483.53 3472.59 m 9671.00 3634.00 l 9429.62 3579.80 l gs col-1 s gr
% Interp Spline
n 8040 3353 m
	8426.49 3346.75 8595.24 3370.00 8715 3446 curveto
	8835.77 3522.64 8868.81 3803.50 8996 3878 curveto
	9100.44 3939.17 9241.19 3948.42 9559 3915 curveto
 gs col-1 s gr

n 9314.04 3880.43 m 9559.00 3915.00 l 9326.59 3999.77 l gs col-1 s gr
% Interp Spline
n 8021 5640 m
	8524.66 5745.28 8749.66 5726.53 8921 5565 curveto
	9222.80 5280.50 8867.53 4666.91 9090 4384 curveto
	9174.79 4276.17 9315.54 4219.92 9653 4159 curveto
 gs col-1 s gr

n 9406.16 4142.59 m 9653.00 4159.00 l 9427.48 4260.68 l gs col-1 s gr
% Interp Spline
n 8059 4421 m
	8415.93 4308.07 8570.68 4261.32 8678 4234 curveto
	8770.05 4210.57 8905.80 4182.32 9221 4121 curveto
 gs col-1 s gr

n 8973.96 4107.94 m 9221.00 4121.00 l 8996.87 4225.73 l gs col-1 s gr
/Times-Roman findfont 240.00 scalefont setfont
10046 3390 m
gs 1 -1 sc (O') col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
8416 2228 m
gs 1 -1 sc (Copie) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4140 4046 m
gs 1 -1 sc (Copies) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
11077 1084 m
gs 1 -1 sc (Objet O) col-1 show gr
$F2psEnd
restore
%%EndDocument
 @endspecial 129 2570 a
 currentpoint currentpoint translate 1 0.76128 div 1 0.76128 div scale
neg exch neg exch translate
 129 2570 a 613 2662 a Fq(Fig.)13
b FD(16.7)f({)i Fp(R)o(\023)-20 b(evo)n(c)n(ation)16
b(d'une)f(c)n(ap)n(acit)o(\023)-20 b(e)p eop
%%Page: 124 132
124 131 bop 75 50 a FD(124)1094 b Fz(CHAPITRE)14 b(16.)26
b(LA)14 b(S)1649 39 y(\023)1644 50 y(ECURIT)1814 39 y(\023)1809
50 y(E)179 166 y Fv(16.6)66 b(Les)22 b(A)n(CL)236 252
y FB(Les)f(A)o(CL)f(\(access)h(con)o(trol)h(lists\))g(son)o(t)f(une)g
(extension)i(des)e(mo)q(des)g(de)g(protection)h(standard)179
298 y(d'UNIX.)12 b(Les)h(A)o(CL)f(son)o(t)i(des)f(droits)h(que)g(l'on)g
(d)o(\023)-18 b(e\014nit)14 b(en)f(plus)i(des)e(9)g(bits)h(de)g
(protection)g(classiques,)179 343 y(ils)h(p)q(ermetten)o(t)f(en)g
(particulier)i(d'autoriser)f(l'acc)o(\022)-18 b(es)14
b(ou)g(de)g(le)g(refuser,)g(\022)-19 b(a)14 b(un)g(utilisateur)i(donn)o
(\023)-18 b(e,)15 b(ou)f(\022)-19 b(a)179 389 y(un)13
b(group)q(e)h(donn)o(\023)-18 b(e.)236 436 y(Deux)14
b(commandes)g(p)q(ermetten)o(t)g(de)f(manipuler)i(les)f(A)o(CL,)e(ce)h
(son)o(t)g FA(chacl)e FB(et)i FA(lsacl)p FB(.)179 482
y(La)g(syn)o(taxe)h(de)f(la)h(commande)g(shell)g FA(chacl)5
b FB(:)236 575 y FA(chacl)18 b('\(dr.staff)o(,r)o(-x\))o(\(z)o(ips)o
(tei)o(n.)o(\045,r)o(-x)o(\)\(\045)o(.li)o(ce)o(nce)o(,-)o(--\))o(')f
(proj)236 668 y FB(qui)d(donne)f(sur)g(le)g(\014c)o(hier)h
FA(proj)c FB(les)j(droits)h(de)e(lecture)i(et)e(d')o(\023)-18
b(ecriture)13 b(\022)-19 b(a)13 b(l'utilisateur)i FA(dr)d
FB(du)g(group)q(e)179 713 y FA(staff)g FB(et)h(\022)-19
b(a)14 b(l'utilisateu)q(r)i FA(zipstein)11 b FB(quelque)16
b(soit)e(son)h(group)q(e)g(et)f(qui)h(refuse)f(cet)f(acc)o(\022)-18
b(es)15 b(aux)f(utilisa-)179 759 y(teurs)f(du)h(group)q(e)g
FA(licence)p FB(.)236 852 y FA(chacl)k('\(binome.\045)o(,r)o(wx\))o
(\(\045)o(.@,)o(--x)o(\)\()o(\045.\045)o(,-)o(--\))o(')f(catalogu)o(e)p
1222 852 12 2 v 11 w(projet)236 945 y FB(qui)c(donne)h(le)e(droit)h
(d'acc)o(\022)-18 b(es)13 b(total)f(\022)-19 b(a)12 b(l'utilisateu)q(r)
i FA(binome)c FB(\(quelque)k(soit)e(son)h(group)q(e\),)g(p)q(ermet)f
(le)179 991 y(parcours)h(du)g(r)o(\023)-18 b(ep)q(ertoire)14
b(aux)f(mem)o(bres)g(du)g(group)q(e)g(propri)o(\023)-18
b(etaire)15 b(et)d(refuse)h(l'acc)o(\022)-18 b(es)13
b(\022)-19 b(a)12 b(tous)h(les)g(autres)179 1036 y(utilisateurs.)236
1129 y(Deux)h(sym)o(b)q(oles)h(sp)o(\023)-18 b(eciaux)8
b(:)179 1196 y FA(\045)20 b FB(p)q(our)14 b(n'imp)q(orte)g(qui)g
(\(utilisateur)i(ou)d(group)q(e\))179 1262 y FA(@)20
b FB(p)q(our)14 b(le)f(propri)o(\023)-18 b(etaire)16
b(ou)d(le)h(group)q(e)g(propri)o(\023)-18 b(etaire)236
1329 y(On)13 b(retrouv)o(e)h(aussi)g(les)g(autres)g(syn)o(taxes)g(de)f
FA(chmod)e FB(par)i(exemple)8 b(:)179 1375 y FA(chacl)17
b(\045.\045=r)h(fichier)179 1420 y FB(ou)179 1466 y FA(chacl)f
(@.\045=5)h(fichier)236 1513 y FC(A)o(tten)o(tion)11
b FB(les)i(acl)f(son)o(t)g(d)o(\023)-18 b(etruits)13
b(par)g(la)f(commande)h FA(chmod)d FB(et)h(la)i(commande)g
FA(chacl)c FB(ne)j(p)q(ermet)179 1559 y(pas)19 b(de)g(p)q(ositioner)i
(les)e(autres)g(bits)h(d)o(\023)-18 b(e\014nis)20 b(dans)g(l'ino)q(de)8
b(;)18 b(seuls)i(les)g(9)e(bits)i(de)f(protections)h(son)o(t)179
1604 y(p)q(ositionnabl)q(es)c(par)d FA(chacl)p FB(.)236
1652 y(P)o(our)f(p)q(ositionner)i(les)e(droits)g(standard)g(et)f(des)h
(acl,)f(il)i(faut)e(donc)h(r)o(\023)-18 b(ealiser)13
b(en)e(succession)i(un)f FA(chmod)179 1697 y FB(puis)i(un)g
FA(chacl)p FB(.)236 1745 y(On)f(utilisera)c(:)179 1790
y FA(chacl)17 b('\(prof.\045,rw)o(x\))o(')g(catalogue)p
772 1790 V 10 w(projet)179 1836 y FB(p)q(our)d(les)f(pro)r(jets)h(de)f
(C)f(ou)i(de)f(syst)o(\022)-18 b(eme.)236 1883 y(La)12
b(commande)h FA(lsacl)18 b([fichiers])8 b FB(p)q(ermet)k(de)g(conna)l
(^)-15 b(\020tre)14 b(les)f(acl)f(asso)q(ci)o(\023)-18
b(es)14 b(aux)f(\014c)o(hiers,)g(remar-)179 1929 y(quer)g(qu'\022)-19
b(a)14 b(l'in)o(v)o(erse)g(de)f FA(/bin/ls)30 b FB(cette)13
b(commande)h(n'a)f(pas)g(de)h(param)o(\022)-18 b(etres)13
b(par)h(d)o(\023)-18 b(efaut.)179 2047 y Fu(16.6.1)55
b(App)r(els)18 b(systemes)e Fj(setacl)h Fu(et)h Fj(getacl)236
2120 y FB(On)13 b(trouv)o(era)h(deux)g(app)q(els)h(syst)o(\022)-18
b(emes)13 b(corresp)q(ondan)o(t)c(:)277 2166 y FA(#include)16
b(<sys/acl.h>)277 2257 y(int)i(setacl\()375 2303 y(const)g(char)g
(*path,)375 2348 y(size)p 457 2348 V 12 w(t)i(nentries,)375
2394 y(const)e(struct)f(acl)p 692 2394 V 13 w(entry)h(*acl)277
2440 y(\);)277 2531 y(int)g(fsetacl\()375 2576 y(int)g(fildes,)375
2622 y(size)p 457 2622 V 12 w(t)i(nentries,)375 2668
y(const)e(struct)f(acl)p 692 2668 V 13 w(entry)h(*acl)277
2713 y(\);)236 2806 y FB(Un)9 b(b)q(on)h(exercice)17
b(:)8 b(r)o(\023)-18 b(ecrire)10 b FA(lsacl)d FB(de)i(fa\030)-17
b(con)10 b(qu'il)g(fonctionne)h(d'une)e(mani)o(\022)-18
b(ere)11 b(similaire)h(\022)-19 b(a)9 b FA(/bin/ls)p
FB(.)p eop
%%Page: 125 133
125 132 bop 75 50 a Fz(16.6.)26 b(LES)14 b(A)o(CL)1410
b FD(125)236 166 y FB(Utilisation)16 b(de)e(la)f(commande)h(script)g(p)
q(our)g(mon)o(trer)f(le)h(comp)q(ortemen)o(t)g(des)f(acl.)179
229 y FA(Script)k(started)g(on)i(Fri)f(May)38 b(5)20
b(10:33:20)c(1995)179 274 y($)j(lsacl)f(*)179 320 y(\(dr.\045,rw-)o
(\)\(\045)o(.s)o(taf)o(f,)o(---)o(\)\(\045)o(.\045)o(,--)o(-\))e(fich)
179 366 y(\(dr.\045,rw-)o(\)\(\045)o(.s)o(taf)o(f,)o(---)o(\)\(\045)o
(.\045)o(,--)o(-\))g(file)179 411 y(\(dr.\045,rwx)o(\)\(\045)o(.s)o
(taf)o(f,)o(---)o(\)\(\045)o(.\045)o(,--)o(-\))g(projet)179
457 y($)j(chacl)37 b('\(prof.\045,r)o(wx\))o(')17 b(fich)179
503 y($)i(lsacl)f(*)179 548 y(\(prof.\045,r)o(wx\))o(\(d)o(r.\045)o(,r)
o(w-\))o(\(\045.)o(st)o(aff)o(,-)o(--\))o(\(\045)o(.\045,)o(---)o(\))e
(fich)179 594 y(\(dr.\045,rw-)o(\)\(\045)o(.s)o(taf)o(f,)o(---)o
(\)\(\045)o(.\045)o(,--)o(-\))g(file)179 640 y(\(dr.\045,rwx)o
(\)\(\045)o(.s)o(taf)o(f,)o(---)o(\)\(\045)o(.\045)o(,--)o(-\))g
(projet)179 685 y($)j(chacl)f('\(\045.staff)o(,r)o(x\)')e(fich)179
731 y($)j(lsacl)f(*)179 777 y(\(prof.\045,r)o(wx\))o(\(d)o(r.\045)o(,r)
o(w-\))o(\(\045.)o(st)o(aff)o(,r)o(-x\))o(\(\045)o(.\045,)o(---)o(\))e
(fich)179 822 y(\(dr.\045,rw-)o(\)\(\045)o(.s)o(taf)o(f,)o(---)o
(\)\(\045)o(.\045)o(,--)o(-\))g(file)179 868 y(\(dr.\045,rwx)o
(\)\(\045)o(.s)o(taf)o(f,)o(---)o(\)\(\045)o(.\045)o(,--)o(-\))g
(projet)179 914 y($)j(chacl)f('\(illouz.)o(st)o(aff)o(=')e(fich)179
959 y($)j(lsacl)f(fich)179 1005 y(\(illouz.s)o(taf)o(f,)o(---)o(\)\()o
(pro)o(f.\045)o(,r)o(wx\))o(\(d)o(r.\045)o(,r)o(w-\))o(\(\045.)o(st)o
(aff)o(,r)o(-x\))o(\(\045.)o(\045,)o(---)o(\))e(fich)179
1051 y($)j(chacl)f('\(prof.\045,)o(rx)o(\)')e(.)k(..)179
1096 y($)f(su)g(prof)179 1142 y(Password:)179 1187 y($)g(cat)f(fich)179
1233 y($)h(touch)f(fich)179 1279 y($)h(chacl)f('\(dr.staf)o(f,)o(x\)')e
(fich)179 1324 y(chacl:)h(file)h("fich":)f(Not)i(owner)e(\(errno)g(=)j
(1\))179 1370 y($)f(lsacl)f(*)179 1416 y(\(illouz.s)o(taf)o(f,)o(---)o
(\)\()o(pro)o(f.\045)o(,r)o(wx\))o(\(d)o(r.\045)o(,r)o(w-\))o(\(\045.)o
(st)o(aff)o(,r)o(-x\))o(\(\045.)o(\045,)o(---)o(\))e(fich)179
1461 y(\(dr.\045,rw-)o(\)\(\045)o(.s)o(taf)o(f,)o(---)o(\)\(\045)o
(.\045)o(,--)o(-\))g(file)179 1507 y(\(dr.\045,rwx)o(\)\(\045)o(.s)o
(taf)o(f,)o(---)o(\)\(\045)o(.\045)o(,--)o(-\))g(projet)179
1553 y($)j(exit)f(#)h(du)g(su)179 1598 y($)g(exit)f(#)h(du)g(script)179
1690 y(script)e(done)h(on)h(Fri)f(May)39 b(5)19 b(10:37:18)d(1995)p
eop
%%Page: 126 134
126 133 bop 75 50 a FD(126)1094 b Fz(CHAPITRE)14 b(16.)26
b(LA)14 b(S)1649 39 y(\023)1644 50 y(ECURIT)1814 39 y(\023)1809
50 y(E)p eop
%%Page: 127 135
127 134 bop 1775 50 a FD(127)179 481 y Fw(Chapitre)32
b(17)179 692 y Fy(Multiplexer)k(des)e(en)m(tr)m(\023)-56
b(ees-sorties)236 912 y FB(Dans)18 b(ce)e(c)o(hapitre,)h(nous)h(v)o
(oulons)g(pr)o(\023)-18 b(esen)o(ter)17 b(le)g(probl)o(\022)-18
b(eme)18 b(des)f(atten)o(tes)g(activ)o(es)g(sur)g(plusieurs)179
957 y(descripteurs.)i(Prenons)g(par)f(exemple)h(un)f(cas)g(pratique)i
(assez)e(fr)o(\023)-18 b(equen)o(t)18 b(d'un)h(pro)q(cessus)g(qui)g
(doit)179 1003 y(r)o(\023)-18 b(ealiser)18 b(une)f(comm)o(unication)i
(en)o(tre)d(deux)h(autres,)f(t)o(ypiquemen)o(t)j(un)d(gestionnaire)j
(de)e(mo)q(dem)f(qui)179 1049 y(doit)d(d'une)g(part)f(recev)o(oir)i
(des)e(informations)j(d'un)d(pro)q(cessus)i(utilisateur,)h(d'autre)d
(part)h(recev)o(oir)g(des)179 1094 y(informations)i(v)o(enan)o(t)f(du)f
(mo)q(dem.)236 1143 y(Ce)g(qui)h(nous)g(donne)g(la)g(\014gure)f(17.1.)
236 1193 y(Mais)j(ce)f(pro)q(cessus)h(doit)f(donc)g(passer)h(son)f
(temps)g(\022)-19 b(a)14 b(scruter)h(les)h(deux)f(descripteurs)23
b(:)14 b(celui)i(qui)179 1238 y(lui)g(p)q(ermet)f(de)g(sa)o(v)o(oir)h
(ce)e(que)h(l'utilisateu)q(r)i(tap)q(e)e(et)g(celui)h(qui)g(lui)g(p)q
(ermet)f(de)g(lire)h(les)f(informations)179 1284 y(v)o(enan)o(t)f(de)f
(la)g(ligne.)179 1411 y Fu(17.0.2)55 b(R)o(\023)-27 b(esolution)17
b(a)n(v)n(ec)i(deux)f(pro)r(cessus)236 1487 y FB(Une)12
b(fa\030)-17 b(con)13 b(de)f(r)o(\023)-18 b(esoudre)13
b(le)f(probl)o(\022)-18 b(eme)14 b(est)d(de)i(cr)o(\023)-18
b(eer)12 b(deux)g(pro)q(cessus)20 b(:)11 b(un)i(p)q(our)f(c)o(haque)h
(direction)179 1532 y(de)g(la)h(comm)o(unication)h(\(\014gure)f
(17.2\).)236 1582 y(Mais)f(dans)g(ce)f(cas,)g(nous)h(dev)o(ons)g(g)o
(\023)-18 b(erer)12 b(des)h(probl)o(\022)-18 b(emes)13
b(de)f(terminaison)j(de)d(pro)q(cessus.)h(Quand)g(le)179
1627 y(p)o(\022)-18 b(ere)14 b(est)g(tu)o(\023)-18 b(e)14
b(a)o(v)n(an)o(t)g(le)g(\014ls,)h(nous)f(dev)o(ons)h(alors)g(utiliser)h
(un)e(signal)i(p)q(our)f(que)f(le)g(p)o(\022)-18 b(ere)15
b(dise)f(au)h(\014ls)f(de)179 1673 y(se)f(terminer,)g(etc,)g(et)g(ceci)
g(sans)h(r)o(\023)-18 b(ealiser)15 b(une)e(solution)j(r)o(\023)-18
b(eellemen)o(t)14 b(propre.)179 1800 y Fu(17.0.3)55 b(Solution)18
b(a)n(v)n(ec)h(le)f(mo)r(de)e(non)j(blo)r(quan)n(t)236
1876 y FB(On)d(p)q(eut)h(aussi)h(utiliser)g(des)e(en)o(tr)o(\023)-18
b(ee-sorties)18 b(non)f(blo)q(quan)o(tes.)h(Auquel)f(cas)f(notre)h(pro)
q(cessus)g(de)179 1921 y(gestion)g(mo)q(dem)g(v)n(a)f(r)o(\023)-18
b(ealiser)18 b(sans)f(in)o(terruption)h(des)f(app)q(els)h
FA(read)c FB(sur)i(nos)h(deux)g(descripteurs.)h(Le)179
1967 y(co)q(^)-20 b(ut)13 b(en)f(ressources)i(de)f(cette)f(atten)o(te)h
(activ)o(e)g(est)g(extr)o(^)-18 b(ememen)o(t)13 b(c)o(her,)f(et)h(doit)
f(^)-18 b(etre)12 b(\023)-18 b(evit)o(\023)g(e)13 b(dans)g(le)g(cas)179
2013 y(d'une)g(mac)o(hine)i(en)e(temps)g(partag)o(\023)-18
b(e.)179 2140 y Fu(17.0.4)55 b(Utiliser)17 b(les)h(m)o(\023)-27
b(ecanisme)o(s)16 b(async)n(hrones)236 2216 y FB(On)f(p)q(eut)h
(utiliser)h(des)e(en)o(tr)o(\023)-18 b(ees-sorties)16
b(async)o(hrones)h(et)d(demander)i(au)g(no)o(y)o(au)f(de)g(nous)h(pr)o
(\023)-18 b(ev)o(enir)179 2261 y(par)10 b(un)g(signal)h(qui)g(informe)f
(de)g(l'arriv)o(\023)-18 b(ee)11 b(de)f(donn)o(\023)-18
b(ees)10 b(sur)g(un)g(descripteur.)h(Ce)e(signal)j(est)d(soit)i
FA(SIGPOLL)p FB(,)179 2307 y(soit)j FA(SIGIO)p FB(,)d(mais)k(ce)e
(n'est)h(v)n(alable)i(que)e(sur)g(les)g(descripteurs)h(qui)g(son)o(t)f
(des)g(p)o(\023)-18 b(eriph)o(\023)g(eriques.)16 b(De)e(plus)179
2353 y(ce)g(m)o(\023)-18 b(ecanisme)15 b(ne)f(d)o(\023)-18
b(esigne)15 b(pas)f(le)h(descripteur)g(sur)f(lequel)i(s'est)e(faite)g
(l'arriv)o(\023)-18 b(ee)15 b(de)f(caract)o(\022)-18
b(eres,)14 b(d'o)q(\022)-20 b(u)179 2398 y(de)13 b(nouv)o(elles)i(p)q
(ertes)f(de)f(temps)g(d)q(^)-20 b(ues)14 b(aux)g(app)q(els)g(r)o(\023)
-18 b(ealis)o(\023)g(es)15 b(in)o(utilemen)o(t)h(en)d(mo)q(de)h(non)f
(blo)q(quan)o(t.)129 2707 y
 currentpoint currentpoint translate 0.67686 0.67686 scale neg exch
neg exch translate
 129 2707 a 14 w @beginspecial
0 @llx 0 @lly 583 @urx 75 @ury 5830 @rwi @setspecial
%%BeginDocument: eps/modem.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-125.0 204.0 translate
1 -1 scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
/Times-Roman findfont 240.00 scalefont setfont
2701 2893 m
gs 1 -1 sc (sur un ) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
2701 3235 m
gs 1 -1 sc (terminal) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5251 2552 m
gs 1 -1 sc (Processus ) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5251 2852 m
gs 1 -1 sc (Gestionnaire) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5251 3194 m
gs 1 -1 sc (de modem) col-1 show gr
15.000 slw
% Polyline
n 5101 2176 m 6676 2176 l  6676 3376 l  5101 3376 l  clp  gs col-1 s gr 
% Polyline
n 4275 2550 m 5025 2550 l  gs col-1 s gr 
n 4515.00 2610.00 m 4275.00 2550.00 l 4515.00 2490.00 l  4515.50 2550.50 l 4515.00 2610.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
/Times-Roman findfont 240.00 scalefont setfont
2701 2551 m
gs 1 -1 sc (utilisateur) col-1 show gr
% Polyline
n 5100 3150 m 4200 3150 l  4275 3150 l  gs col-1 s gr 
n 4860.00 3090.00 m 5100.00 3150.00 l 4860.00 3210.00 l  4860.50 3150.50 l 4860.00 3090.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
/Times-Roman findfont 240.00 scalefont setfont
8100 2850 m
gs 1 -1 sc (Modem) col-1 show gr
% Polyline
n 6750 2476 m 7500 2476 l  gs col-1 s gr 
n 6990.00 2536.00 m 6750.00 2476.00 l 6990.00 2416.00 l  6990.50 2476.50 l 6990.00 2536.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
% Polyline
n 7575 3076 m 6675 3076 l  6750 3076 l  gs col-1 s gr 
n 7335.00 3016.00 m 7575.00 3076.00 l 7335.00 3136.00 l  7335.50 3076.50 l 7335.00 3016.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
% Ellipse
n 3225 2812 1125 563 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 8475 2737 1125 563 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 11175 2700 600 300 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 9600 2700 m 10575 2700 l  gs col-1 s gr 
n 9840.00 2760.00 m 9600.00 2700.00 l 9840.00 2640.00 l  9840.50 2700.50 l 9840.00 2760.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
n 10335.00 2640.00 m 10575.00 2700.00 l 10335.00 2760.00 l  10335.50 2700.50 l 10335.00 2640.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
/Times-Roman findfont 240.00 scalefont setfont
10725 2775 m
gs 1 -1 sc (Ligne) col-1 show gr
$F2psEnd
restore
%%EndDocument
 @endspecial 129 2707 a
 currentpoint currentpoint translate 1 0.67686 div 1 0.67686 div scale
neg exch neg exch translate
 129 2707 a 617 2798 a Fq(Fig.)g
FD(17.1)f({)i Fp(Un)h(gestionair)n(e)f(de)h(mo)n(dem)p
eop
%%Page: 128 136
128 135 bop 75 50 a FD(128)569 b Fz(CHAPITRE)14 b(17.)27
b(MUL)m(TIPLEXER)14 b(DES)f(ENTR)1570 39 y(\023)1565
50 y(EES-SOR)m(TIES)129 593 y
 currentpoint currentpoint translate 0.67686 0.67686 scale neg exch
neg exch translate
 129 593 a 14 w @beginspecial
0 @llx 0 @lly 583 @urx 166 @ury 5830 @rwi @setspecial
%%BeginDocument: eps/modem2.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-125.0 254.0 translate
1 -1 scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
/Times-Roman findfont 240.00 scalefont setfont
2701 2893 m
gs 1 -1 sc (sur un ) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
2701 3235 m
gs 1 -1 sc (terminal) col-1 show gr
15.000 slw
% Polyline
n 5027 3002 m 6602 3002 l  6602 4202 l  5027 4202 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
5176 3226 m
gs 1 -1 sc (Processus ) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5176 3526 m
gs 1 -1 sc (Gestionnaire) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5176 3751 m
gs 1 -1 sc (de modem) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5476 4051 m
gs 1 -1 sc (\(fils\)) col-1 show gr
% Ellipse
n 3225 2812 1125 563 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 8475 2737 1125 563 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 11175 2700 600 300 0 360 DrawEllipse gs col-1 s gr

/Times-Roman findfont 240.00 scalefont setfont
2701 2551 m
gs 1 -1 sc (utilisateur) col-1 show gr
% Polyline
n 9600 2700 m 10575 2700 l  gs col-1 s gr 
n 9840.00 2760.00 m 9600.00 2700.00 l 9840.00 2640.00 l  9840.50 2700.50 l 9840.00 2760.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
n 10335.00 2640.00 m 10575.00 2700.00 l 10335.00 2760.00 l  10335.50 2700.50 l 10335.00 2640.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
/Times-Roman findfont 240.00 scalefont setfont
5551 2551 m
gs 1 -1 sc (\(pere\)) col-1 show gr
% Polyline
n 4275 2550 m 5175 1950 l  gs col-1 s gr 
n 4507.97 2466.79 m 4275.00 2550.00 l 4441.41 2366.95 l  4475.19 2417.37 l 4507.97 2466.79 l clp gs 0.00 setgray ef gr gs col-1 s gr
% Polyline
n 4950 3525 m 4200 3150 l  4275 3150 l  gs col-1 s gr 
n 4762.17 3364.00 m 4950.00 3525.00 l 4708.50 3471.33 l  4735.84 3418.17 l 4762.17 3364.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
% Polyline
n 6600 2026 m 7500 2476 l  gs col-1 s gr 
n 6787.83 2187.00 m 6600.00 2026.00 l 6841.50 2079.67 l  6815.16 2133.83 l 6787.83 2187.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
% Polyline
n 7575 3076 m 6525 3601 l  gs col-1 s gr 
n 7333.50 3129.67 m 7575.00 3076.00 l 7387.17 3237.00 l  7360.84 3183.83 l 7333.50 3129.67 l clp gs 0.00 setgray ef gr gs col-1 s gr
% Polyline
n 5102 1502 m 6677 1502 l  6677 2702 l  5102 2702 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
10725 2775 m
gs 1 -1 sc (Ligne) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
8100 2850 m
gs 1 -1 sc (Modem) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5251 1726 m
gs 1 -1 sc (Processus ) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5251 2026 m
gs 1 -1 sc (Gestionnaire) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
5251 2251 m
gs 1 -1 sc (de modem) col-1 show gr
$F2psEnd
restore
%%EndDocument
 @endspecial 129 593 a
 currentpoint currentpoint translate 1 0.67686 div 1 0.67686 div scale
neg exch neg exch translate
 129 593 a 433 684 a Fq(Fig.)g
FD(17.2)f({)i Fp(Un)h(gestionair)n(e)f(de)i(mo)n(dem)f(ave)n(c)g(deux)h
(pr)n(o)n(c)n(essus)179 819 y Fv(17.1)66 b(Les)22 b(outils)h(de)g(s)o
(\023)-32 b(election)236 904 y FB(La)14 b(solution)i(vien)o(t)f(d'un)f
(syst)o(\022)-18 b(eme)15 b(de)f(s)o(\023)-18 b(election)15
b(qui)g(prend)g(un)f(param)o(\022)-18 b(etre)15 b(un)f(ensem)o(ble)h
(de)f(des-)179 949 y(cripteur,)g(et)g(p)q(eut)g(tester)g(si)g(l'un)g
(de)g(ses)g(descripteurs)i(est)d(pr)o(\022)-18 b(es)14
b(\022)-19 b(a)14 b(satisfaire)h(un)f(app)q(el)i(de)d
FA(read)p FB(.)f(Cet)179 995 y(app)q(el)i(est)f(blo)q(quan)o(t)i
(jusqu'\022)-19 b(a)14 b(l'arriv)o(\023)-18 b(ee)14 b(de)f(caract)o
(\022)-18 b(eres)14 b(sur)f(un)h(des)f(descripteurs)i(de)e(l'ensem)o
(ble.)179 1111 y Fu(17.1.1)55 b(La)19 b(primitiv)m(e)d
Fj(select)236 1182 y FB(Nous)e(fournisson)o(t)g(\022)-19
b(a)13 b(la)h(primitiv)o(e)h FA(select)5 b FB(:)230 1248
y({)21 b(Les)13 b(descripteurs)i(que)f(nous)f(v)o(oulons)i(scruter.)230
1312 y({)21 b(Les)15 b(conditions)j(de)d(r)o(\023)-18
b(ev)o(eil)16 b(sur)g(c)o(haque)g(descripteur)g(\(en)f(atten)o(te)h(de)
f(lecture,)f(\023)-18 b(ecriture,)15 b(\023)-18 b(ev)o(\022)g(ene-)270
1358 y(men)o(t)s(?\))230 1422 y({)21 b(Com)o(bien)14
b(de)f(temps)h(nous)f(v)o(oulons)i(attendre.)236 1488
y(La)e(fonction)i(retourne)f(p)q(our)f(c)o(haque)h(descripteur)h(s'il)f
(est)f(pr)o(^)-18 b(et)13 b(en)h(lecture,)e(\023)-18
b(ecriture,)14 b(ou)g(si)f(l')o(\023)-18 b(ev)o(\022)g(e-)179
1533 y(nemen)o(t)17 b(a)h(eu)f(lieu,)h(et)f(aussi)i(le)e(nom)o(bre)h
(de)f(descripteur)i(pr)o(^)-18 b(ets.)17 b(Cette)g(information)i(nous)f
(p)q(ermet)179 1579 y(ensuite)c(d'app)q(eler)h FA(read)c
FB(ou)i FA(write)e FB(sur)i(le\(s\))h(b)q(on\(s\))g(descripteur\(s\).)
179 1655 y FA(#include)36 b(<sys/type)o(s.h)o(>)179 1701
y(#include)g(<sys/time)o(.h>)179 1746 y(#include)g(<unistd.h)o(>)179
1838 y(int)18 b(select\(int)e(maxfd,)395 1883 y(fd_set)h(*readfds,)395
1929 y(fd_set)g(*writefds)o(,)395 1975 y(fd_set)g(*exceptfd)o(s)395
2020 y(struct)g(timeval)g(*delai\);)236 2095 y FB(Retourne)d(le)g(nom)o
(bre)g(de)f(descripteurs)i(pr)o(^)-18 b(ets,)13 b(0)g(en)g(cas)g
(d'expiration)j(du)d(d)o(\023)-18 b(elai.)236 2187 y(P)o(aram)o(\023)g
(etrage)14 b(du)g(d)o(\023)-18 b(elai)8 b(:)179 2254
y FA(struct)17 b(timeval)g({)257 2300 y(long)h(tv_sec;)257
2345 y(long)g(tv_usec;)179 2391 y(};)179 2466 y(delai)f(==)i(NULL)h
FB(Blo)q(quan)o(t,)14 b(atten)o(te)f(in\014nie)179 2530
y FA(delai->tv)p 360 2530 12 2 v 10 w(sec)19 b(==)g(0)g(&&)g(delai->tv)
p 786 2530 V 10 w(usec)g(==)f(0)40 b FB(Non)13 b(blo)q(quan)o(t,)i
(retour)f(imm)o(\023)-18 b(ediat.)179 2595 y FA(delai->tv)p
360 2595 V 10 w(sec)19 b Ft(>)g FA(0)h(&&)e(delai->tv)p
777 2595 V 11 w(usec)g Ft(>)p FA(0)40 b FB(Semi)15 b(blo)q(quan)o(t,)i
(atten)o(te)e(jusqu'\022)-19 b(a)15 b(ce)f(qu'un)h(des-)270
2640 y(cripteur)f(soit)g(pr)o(^)-18 b(et)13 b(ou)h(que)f(le)h(d)o(\023)
-18 b(elai)14 b(en)g(secondes)g(plus)g(microsecondes)h(soit)e(\023)-18
b(ecoul)o(\023)g(e.)236 2715 y(Les)14 b(trois)g(p)q(oin)o(teurs)h(\()p
FA(readfds)p FB(,)c FA(writefds)o FB(,)f(et)k FA(exceptfds)o
FB(\))c(sur)k(des)g(ensem)o(bles)h(de)f(descripteurs)179
2761 y(son)o(t)i(utilis)o(\023)-18 b(es)18 b(p)q(our)e(indiquer)i(en)e
(en)o(tr)o(\023)-18 b(ee)16 b(les)g(situations)i(qui)f(nous)f(in)o(t)o
(\023)-18 b(eressen)o(t.)17 b(C'est)e(\022)-19 b(a)15
b(priori)j(\(cela)179 2806 y(p)q(eut)10 b(v)n(arier)h(a)o(v)o(ec)f
(l'impl)o(\023)-18 b(emen)o(tation)q(\))12 b(des)e(tableaux)i(de)e
(bits)g(a)o(v)o(ec)g(un)h(bit)f(p)q(our)h(c)o(haque)f(descripteur)i(du)
p eop
%%Page: 129 137
129 136 bop 75 50 a Fz(17.1.)26 b(LES)14 b(OUTILS)g(DE)g(S)552
39 y(\023)547 50 y(ELECTION)1008 b FD(129)179 166 y FB(tableau)14
b(de)f(descripteurs)i(du)e(pro)q(cessus.)h(L'en)o(tier)f
FA(maxfd)e FB(est)h(la)i(p)q(osition)h(du)e(dernier)h(bit)g
(signi\014catif)179 212 y(de)f(ce)g(tableau)h(de)g(bits.)236
258 y(Les)f(seules)i(fa\030)-17 b(cons)13 b(de)g(manipuler)j(ces)d
(ensem)o(bles)h(de)g(descripteurs)h(son)o(t)7 b(:)230
320 y({)21 b(Cr)o(\023)-18 b(eation)230 383 y({)21 b(A\013ectation)230
445 y({)g(Utilisation)16 b(d'une)e(des)f(quatre)h(macros)f(suiv)n(an)o
(tes)8 b(:)270 516 y FA(FD)p 312 516 12 2 v 13 w(ZERO\(fd)p
465 516 V 12 w(set)18 b(fdset\))h FB(RAZ)13 b(de)g(l'ensem)o(ble.)270
570 y FA(FD)p 312 570 V 13 w(SET\(int)k(fd,)i(fd)p 601
570 V 13 w(set)g(*fdset\))f FB(P)o(ositionne)d(le)f(bit)f(fd)g(a)g(1.)
270 624 y FA(FD)p 312 624 V 13 w(CLR\(int)k(fd,)i(fd)p
601 624 V 13 w(set)g(*fdset\))f FB(P)o(ositionne)d(le)f(bit)f(fd)g
(\022)-19 b(a)13 b(0)270 678 y FA(FD)p 312 678 V 13 w(ISSET\(int)k(fd,)
h(fd)p 640 678 V 13 w(set)h(*fdset\))f FB(vrai)c(si)f(le)h(bit)g(fd)f
(est)g(\022)-19 b(a)13 b(1)g(dans)g(l'ensem)o(ble.)236
749 y(Un)i(descripteur)i(est)e(consid)o(\023)-18 b(er)o(\023)g(e)16
b(comme)f(pr)o(^)-18 b(et)15 b(en)g(lecture)h(si)f(un)h(app)q(el)g
FA(read)d FB(dessus)j(ne)f(sera)g(pas)179 795 y(blo)q(quan)o(t.)e(De)e
(m)o(^)-18 b(eme,)11 b(un)g(descripteur)i(est)e(consid)o(\023)-18
b(er)o(\023)g(e)13 b(comme)e(pr)o(^)-18 b(et)11 b(en)g(\023)-18
b(ecriture)12 b(si)f(un)h(app)q(el)g FA(write)d FB(ne)179
841 y(sera)j(pas)g(blo)q(quan)o(t.)h(Les)e(exceptions)j(/)c(\023)-18
b(ev)o(\022)g(enemen)o(ts)13 b(son)o(t)f(d)o(\023)-18
b(e\014nis)13 b(p)q(our)f(les)h(lignes)g(de)f(comm)o(unication)179
886 y(qui)i(accepten)o(t)g(les)f Fx(messages)f(hors)h(b)n(ande)g
FB(comme)h(les)f FA(sockets)d FB(en)k(mo)q(de)f(datagramme.)179
997 y Fu(17.1.2)55 b(La)19 b(primitiv)m(e)d Fj(poll)236
1067 y FB(La)d(primitiv)o(e)j FA(poll)11 b FB(fournit)j(un)f(service)i
(pro)q(c)o(he)e(de)h FA(select)c FB(a)o(v)o(ec)j(une)h(autre)f(forme)g
(d'in)o(terface.)179 1138 y FA(#include)j(<stropts.h)o(>)179
1184 y(#include)g(<poll.h>)179 1230 y(int)i(poll\(struc)o(t)f(pollfd)g
(fdarray[])o(,)355 1275 y(unsigned)g(long)h(nfds,)355
1321 y(int)215 b(timeout)218 1367 y(\);)179 1458 y(struct)17
b(pollfd)g({)336 1504 y(int)57 b(fd;)336 1549 y(short)17
b(events;)336 1595 y(short)g(revents;)179 1641 y(};)236
1712 y FB(Ici)d(on)f(sp)o(\023)-18 b(eci\014e)15 b(la)e(liste)i(de)e
(descripteurs)i(et)e(ce)f(que)i(l'on)g(v)o(eut)f(sur)g(c)o(hacun)h
(d'eux.)236 1757 y(La)f(v)n(aleur)i(de)e(retour)g(est)g(-1)g(en)g(cas)h
(d'erreur,)f(0)g(si)g(le)h(temps)f(d'atten)o(te)h FA(timeout)29
b FB(est)12 b(\023)-18 b(ecoul)o(\023)g(e,)14 b(ou)179
1803 y(un)e(en)o(tier)g(p)q(ositif)h(indiquan)o(t)h(le)e(nom)o(bre)h
(de)e(descripteurs)j(p)q(our)e(lesquels)i FA(poll)9 b
FB(a)j(c)o(hang)o(\023)-18 b(e)12 b(la)g(v)n(aleur)h(du)179
1849 y(c)o(hamp)g FA(revents)p FB(.)236 1894 y(Les)f(\023)-18
b(ev)o(\022)g(enemen)o(ts)14 b(son)o(t)g(ici)8 b(:)179
1940 y(P)o(our)13 b(les)g(\023)-18 b(ev)o(\022)g(enemen)o(ts)14
b(de)f FA(events)t FB(:)179 2003 y FC(POLLIN)19 b FB(Donn)o(\023)-18
b(ees)15 b(non)e(prioritaire)j(p)q(euv)o(en)o(t)d(^)-18
b(etre)13 b(lues.)179 2065 y FC(POLLRDNORM)20 b FB(idem.)179
2128 y FC(POLLRDBAND)g FB(Donn)o(\023)-18 b(ees)15 b(non)e(prioritaire)
j(non)d(normales)i(p)q(euv)o(en)o(t)e(^)-18 b(etre)13
b(lues.)179 2190 y FC(POLLPRI)20 b FB(Donn)o(\023)-18
b(ees)14 b(prioritaire)i(p)q(euv)o(en)o(t)d(^)-18 b(etre)13
b(lues.)179 2252 y FC(POLLOUT)20 b FB(Donn)o(\023)-18
b(ees)20 b(non)f(prioritaire)j(p)q(euv)o(en)o(t)d(^)-18
b(etre)17 b(\023)-18 b(ecrites,)19 b(les)h(messages)f(de)g(haute)h
(priorit)o(\023)-18 b(e)270 2298 y(p)q(euv)o(en)o(t)14
b(toujours)f(^)-18 b(etres)12 b(\023)-18 b(ecrits.)179
2361 y FC(POLL)-5 b(WRNORM)20 b FB(idem)179 2423 y FC(POLL)-5
b(WRBAND)20 b FB(Donn)o(\023)-18 b(ees)14 b(non)g(prioritaire)i(non)d
(normales)i(p)q(euv)o(en)o(t)e(^)-18 b(etre)12 b(\023)-18
b(ecrites)14 b(sans)f(blo)q(quer.)236 2486 y(P)o(our)h(les)f
FA(revents)e FB(\(v)n(aleurs)j(de)f(retour)g(de)h(la)f(primitiv)o(e)j
FA(poll)p FB(\))t(:)179 2557 y FC(POLLIN,POLLRDNORM,POLLRDBAND,POLLPRI)
j FB(les)13 b(donn)o(\023)-18 b(ees)15 b(son)o(t)e(l\022)-19
b(a.)179 2619 y FC(POLLOUT,POLL)-5 b(WRNORM,)14 b(POLL)-5
b(WRBAND)20 b FB(l')o(\023)-18 b(ecriture)14 b(est)f(p)q(ossible)179
2681 y FC(POLLERR)20 b FB(Une)13 b(erreur)h(a)f(eu)g(lieu.)179
2744 y FC(POLLHUP)20 b FB(La)13 b(ligne)h(a)e(\023)-18
b(et)o(\023)g(e)13 b(coup)o(\023)-18 b(ee.)179 2806 y
FC(POLLNV)-5 b(AL)20 b FB(Descripteur)15 b(in)o(v)n(alide.)p
eop
%%Page: 130 138
130 137 bop 75 50 a FD(130)569 b Fz(CHAPITRE)14 b(17.)27
b(MUL)m(TIPLEXER)14 b(DES)f(ENTR)1570 39 y(\023)1565
50 y(EES-SOR)m(TIES)236 166 y FB(Le)g(mo)q(de)h(de)f(blo)q(cage)i(de)e
(la)g(primitiv)o(e)j FA(poll)11 b FB(d)o(\023)-18 b(ep)q(end)14
b(du)g(param)o(\022)-18 b(etre)13 b FA(timeout)179 229
y FC(timeout)h(==)h(INFTIM)20 b FB(Blo)q(quan)o(t,)14
b(INFTIM)e(est)h(d)o(\023)-18 b(e\014ni)15 b(dans)f FA(stropts.h)o
FB(.)179 291 y FC(timeout)g(==)h(0)21 b FB(Non)13 b(blo)q(quan)o(t.)179
353 y FC(timeout)h Ft(>)h FC(0)20 b FB(Semi)14 b(blo)q(quan)o(t,)h
(atten)o(te)e(de)g FA(timeout)e FB(micro)i(secondes.)236
423 y Fv(Un)25 b(Exemple)39 b FB(A)o(tten)o(te)14 b(de)g(donn)o(\023)
-18 b(ees)16 b(sur)e(ifd1)h(et)f(ifd2,)g(de)h(place)g(p)q(our)f(\023)
-18 b(ecrire)14 b(sur)h(ofd,)179 468 y(a)o(v)o(ec)e(un)h(d)o(\023)-18
b(elai)14 b(maxim)o(um)g(de)g(10)f(seconds)8 b(:)218
514 y FA(#include)17 b(<poll.h>)218 560 y(struct)g(pollfd)h(fds[3];)218
605 y(int)g(ifd1,)g(ifd2,)g(ofd,)g(count;)218 697 y(fds[0].fd)e(=)j
(ifd1;)218 742 y(fds[0].eve)o(nt)o(s)e(=)i(POLLNORM;)218
788 y(fds[1].fd)d(=)j(ifd2;)218 834 y(fds[1].eve)o(nt)o(s)e(=)i
(POLLNORM;)218 879 y(fds[2].fd)d(=)j(ofd;)218 925 y(fds[2].eve)o(nt)o
(s)e(=)i(POLLOUT;)218 971 y(count)f(=)h(poll\(fds,)d(3,)j(10000\);)238
1016 y(if)f(\(count)g(==)h(-1\))f Fr(f)375 1062 y FA(perror\("p)o(oll)e
(failed"\);)395 1108 y(exit\(1\);)238 1153 y Fr(g)238
1199 y FA(if)i(\(count==0\))355 1245 y(printf\("Ri)o(en)e(\\n"\);)238
1290 y(if)i(\(fds[0].rev)o(en)o(ts)e(&)k(POLLNORM)o(\))355
1336 y(printf\("Do)o(nn\023)-21 b(ees)16 b(a)j(lire)f(sur)h
(ifd\045d\\n",)d(fds[0].fd\))o(;)238 1382 y(if)i(\(fds[1].rev)o(en)o
(ts)e(&)k(POLLNORM)o(\))355 1427 y(printf\("Do)o(nn\023)-21
b(ees)16 b(a)j(lire)f(sur)h(ifd\045d\\n",)d(fds[1].fd\))o(;)238
1473 y(if)i(\(fds[2].rev)o(en)o(ts)e(&)k(POLLOUT\))355
1519 y(printf\("De)c(la)j(place)f(sur)g(fd\045d\\n",)f(fds[2].f)o(d\);)
179 1629 y Fu(17.1.3)55 b(Les)18 b(extensions)f(de)i
Fj(read)e Fu(et)h Fj(write)236 1699 y FB(Une)i(extension)h
FA(readv,)c(writev)g FB(de)i FA(read)e FB(et)i FA(write)e
FB(p)q(ermet)j(en)f(un)h(seul)g(app)q(el)h(syst)o(\022)-18
b(eme)19 b(de)179 1744 y(r)o(\023)-18 b(ealiser)11 b(l')o(\023)-18
b(ecriture)10 b(de)g(plusieurs)i(zones)e(m)o(\023)-18
b(emoire)10 b(non)g(con)o(tigu)o(\177)-18 b(es,)11 b(ce)e(qui)h(p)q
(ermet)g(d'acc)o(\023)-18 b(elerer)10 b(certaines)179
1790 y(en)o(tr)o(\023)-18 b(ees-sorties)14 b(structur)o(\023)-18
b(ees.)14 b(Mais)g(aussi)g(de)f(mieux)h(organiser)h(les)f(app)q(els)g
(syst)o(\022)-18 b(eme)14 b(dans)g(notre)f(cas.)179 1852
y FA(#include)j(<sys/types)o(.h>)179 1898 y(#include)g(<sys/uio.h)o(>)
179 1989 y(ssize_t)h(readv\(int)f(fd,)i(const)g(struct)f(iovec)h
(iov[],)f(int)i(iovl\);)179 2035 y(ssize_t)e(writev\(in)o(t)f(fd,)j
(const)f(struct)f(iovec)h(iov[],)f(int)h(iovl\);)179
2126 y(struct)f(iovec)h({)257 2172 y(void)g(*iov_base)e(;)257
2218 y(int)58 b(iov_len;)179 2263 y(};)179 2394 y Fv(17.2)66
b(une)22 b(solution)i(m)n(ulti-activi)q(t)o(\023)-32
b(es)236 2477 y FB(L'utilisation)17 b(de)c(plusieurs)i(activit)o(\023)
-18 b(es)15 b(\(threads,)e(v)o(oir)h(c)o(hapitre)h(18\))e(p)q(ermet)g
(de)g(r)o(\023)-18 b(ealiser)15 b(plusieurs)179 2523
y(app)q(els)e(de)e FA(read)e FB(en)j(sim)o(ultan)o(\023)-18
b(e,)13 b(le)e(premier)h FA(read)e FB(qui)i(se)f(d)o(\023)-18
b(eblo)q(que)13 b(en)o(traine)g(l'ex)o(\023)-18 b(ecution)13
b(de)f(l'activit)o(\023)-18 b(e)179 2568 y(le)14 b(r)o(\023)-18
b(ealisan)o(t,)16 b(ainsi)g(le)f(co)q(^)-20 b(ut)14 b(est)g(minimal.)i
(Le)e(seul)h(probl)o(\022)-18 b(eme)15 b(est)f(d'a)o(v)o(oir)i(a)e(g)o
(\023)-18 b(erer)14 b(cette)g(m)o(ultiplici)q(t)o(\023)-18
b(e)179 2614 y(d'activit)o(\023)g(es,)19 b(ce)f(qui)g(est)g(dans)h(le)f
(cas)g(de)g(notre)g(mo)q(dem)g(assez)g(facile)h(car)f(les)g(deux)h
(activit)o(\023)-18 b(es)19 b(son)o(t)179 2660 y(ind)o(\023)-18
b(ep)q(endan)o(tes)16 b(\(comm)o(unication)f(F)m(ull)g(Duplex\).)236
2705 y(P)o(our)i(une)g(situation)h(plus)g(complexe)g(comme)e(un)h(serv)
o(eur)g(de)f(partage)h(de)g(donn)o(\023)-18 b(ees,)17
b(des)g(m)o(\023)-18 b(eca-)179 2751 y(nismes)14 b(d'exclusion)h(m)o
(utuelle)g(en)o(tre)e(activit)o(\023)-18 b(es)15 b(devron)o(t)e(^)-18
b(etre)13 b(mis)h(en)f(o)q(euvre.)p eop
%%Page: 131 139
131 138 bop 1775 50 a FD(131)179 478 y Fw(Chapitre)32
b(18)179 685 y Fy(Les)38 b(micro-no)m(y)m(aux)236 901
y FB(Le)10 b(princip)q(e)j(des)e(micro-no)o(y)o(aux,)h(fortemen)o(t)e
(inspir)o(\023)-18 b(e)12 b(de)f(l'appro)q(c)o(he)g(ob)r(jet,)g
(consiste)g(\022)-19 b(a)10 b(d)o(\023)-18 b(ecoup)q(er)12
b(le)179 947 y(blo)q(c)i(monolithique)i(qu'est)d(le)h(syst)o(\022)-18
b(eme)13 b(d'exploitatio)q(n,)i(en)e(un)h(ensem)o(ble)g(coh)o(\023)-18
b(eren)o(t)14 b(de)f(mo)q(dules,)h(qui)179 993 y(constituen)o(t)i
(autan)o(t)g(de)f(services)h(sp)o(\023)-18 b(ecialis)o(\023)g(es)17
b(sur)e(lesquels)i(il)f(su\016ra)g(de)e("branc)o(her")j(des)e(in)o
(terfaces.)179 1038 y(Ces)d(micro-no)o(y)o(aux)j(son)o(t)e(en)g(g)o
(\023)-18 b(en)o(\023)g(eral)14 b(in)o(terfac)o(\023)-18
b(es)14 b(a)o(v)o(ec)f(un)g(ensem)o(ble)h(d'app)q(els)h(syst)o(\022)-18
b(eme)13 b(de)g(t)o(yp)q(e)g(unix)179 1084 y(ce)g(qui)h(p)q(ermet)f(de)
g(r)o(\023)-18 b(eutiliser)16 b(des)d(application)q(s)j(comme)d(par)g
(exemple)h(les)g(shells.)236 1130 y(Ce)g(qui)i(distingue)h(les)e(syst)o
(\022)-18 b(emes)15 b(\022)-19 b(a)14 b(micro-no)o(y)o(aux)i(des)f
(syst)o(\022)-18 b(emes)15 b(classiques)i(est)d(la)h(structure)g(en)179
1175 y(mo)q(dules)f(logiciels)i(ind)o(\023)-18 b(ep)q(endan)o(ts,)16
b(app)q(el)o(\023)-18 b(es)14 b(mo)q(dules)h(syst)o(\022)-18
b(emes.)13 b(Chacun)g(d'eux)h(est)e(sp)o(\023)-18 b(ecialiste)16
b(d'un)179 1221 y(fonctionnemen)o(t)f(de)e(base)g(du)h(syst)o(\022)-18
b(eme)13 b(d'exploitatio)q(n)c(:)230 1281 y({)21 b(gestion)14
b(des)g(pro)q(cessus)g(\(ex)o(\023)-18 b(ecution,)14
b(sc)o(heduling)q(\))230 1337 y({)21 b(gestion)14 b(de)g(la)f(m)o(\023)
-18 b(emoire)14 b(\(m)o(\023)-18 b(emoire)14 b(virtuelle\))230
1394 y({)21 b(gestion)14 b(des)g(en)o(tr)o(\023)-18 b(ees/sorties)230
1451 y({)21 b(gestion)14 b(des)g(messages)g(\(IPC\))236
1511 y(Au-dessus)i(de)e(ces)h(mo)q(dules)h(se)e(trouv)o(e)h(l'in)o
(terface)g(de)g(programmation)h(qui)g(est)e(elle)i(aussi)g(ind)o(\023)
-18 b(e-)179 1556 y(p)q(endan)o(te)14 b(et)f(donc)h(th)o(\023)-18
b(eoriquemen)o(t)15 b(in)o(terc)o(hangeable)h(\(en)d(g)o(\023)-18
b(en)o(\023)g(eral)14 b(une)g(in)o(terface)g(unix-p)q(osix\).)236
1602 y(Sous)h(ces)f(mo)q(dules,)h(on)e(trouv)o(e)i(le)f(micro-no)o(y)o
(au)h(qui)g(en)f(g)o(\023)-18 b(en)o(\023)g(eral)15 b(se)f(limite)h
(\022)-19 b(a)14 b(la)g(gestion)h(des)f(IPC)179 1648
y(en)o(tre)f(mo)q(dules)i(comme)e(par)g(exemple)h(MA)o(CH.)236
1693 y(Quelques)h(syst)o(\022)-18 b(emes)14 b(\022)-19
b(a)13 b(micro-no)o(y)o(au)8 b(:)14 b FC(MA)o(CH,)h(CHOR)o(US)179
1802 y Fu(18.0.1)55 b(Les)18 b(atouts)h(des)f(micro-no)n(y)n(aux)236
1872 y FB(Les)g(di\013)o(\023)-18 b(eren)o(ts)20 b(mo)q(dules)g(du)e
(syst)o(\022)-18 b(eme)17 b(\023)-18 b(etan)o(t)18 b(d)o(\023)-18
b(e\014nis)20 b(au)e(niv)o(eau)i("utilisateur")h(et)d(pas)g(dans)h(le)
179 1917 y(no)o(y)o(au,)12 b(il)h(est)e(donc)h(plus)h(facile)g(de)f
(les)g("debugger",)h(de)f(les)g(am)o(\023)-18 b(eliorer)13
b(etc)f(...)e(\(ceci)i(n'est)g(pas)g(toujours)179 1963
y(vrai)i(en)f(pratique\).)h(Seul)g(le)g(micro-no)o(y)o(au)h(lui-m)o(^)
-18 b(eme)14 b(n)o(\023)-18 b(ecessite)14 b(des)g(debuggeurs)h(sp)o
(\023)-18 b(eciaux.)236 2008 y(La)15 b(con\014guration)i(du)f(syst)o
(\022)-18 b(eme)15 b(se)f(trouv)o(e)i(simpli\014)o(\023)-18
b(ee)17 b(car)e(elle)h(ne)f(demande)h(plus)g(de)f(recompiler)179
2054 y(le)f(no)o(y)o(au,)g(\022)-19 b(a)13 b(c)o(haque)h(a)r(jout)g(ou)
g(retrait)g(de)f(fonctionnali)q(t)o(\023)-18 b(es)16
b(dans)e(le)g(syst)o(\022)-18 b(eme)7 b(:)13 b(Oracle,)h(mo)q(dem,)f(t)
o(yp)q(e)179 2100 y(disques)i(di\013)o(\023)-18 b(eren)o(ts)14
b(etc.)236 2145 y(C'est)f(l'a)o(v)o(enir.)236 2191 y(C'est)g(mieux)h
(adapt)o(\023)-18 b(e)14 b(aux)f(mac)o(hines)i(m)o(ulti-pro)q
(cesseurs,)g(aux)f(r)o(\023)-18 b(eseaux.)179 2299 y
Fu(18.0.2)55 b(Quelques)17 b(probl)o(\022)-27 b(emes)236
2369 y FB(Un)15 b(syst)o(\022)-18 b(eme)14 b(plus)i(len)o(t,)f(qui)g
(utilise)i(en)d(prop)q(ortion)j(b)q(eaucoup)f(plus)f(de)g(m)o(\023)-18
b(emoire)15 b(p)q(our)g(lui)h(mais)179 2415 y(aussi)e(p)q(our)g(tous)f
(les)h(services)g(qu'il)h(rend.)179 2544 y Fv(18.1)66
b(Le)28 b(syst)o(\022)-32 b(eme)26 b(MA)n(CH)h(\(Carnegie)h(Mellon)h
(Univ)n(er-)179 2619 y(sit)n(y)23 b(CMU\))236 2701 y
FB(Le)13 b(syst)o(\022)-18 b(eme)14 b(Mac)o(h)f(est)g(donc)h(un)f(syst)
o(\022)-18 b(eme)14 b(a)o(v)o(ec)f(un)h(micro-no)o(y)o(au)g(orien)o(t)o
(\023)-18 b(e)14 b(comm)o(unication.)236 2747 y(Le)f(syst)o(\022)-18
b(eme)14 b(fournit)g(les)f(services)i(suiv)n(an)o(ts)8
b(:)230 2806 y({)21 b(T^)-19 b(ac)o(hes)13 b(m)o(ultiples)p
eop
%%Page: 132 140
132 139 bop 75 50 a FD(132)949 b Fz(CHAPITRE)14 b(18.)27
b(LES)14 b(MICR)o(O-NO)o(Y)m(A)o(UX)484 1200 y
 currentpoint currentpoint translate 0.69922 0.69922 scale neg exch
neg exch translate
 484 1200
a 14 w @beginspecial 0 @llx 0 @lly 321 @urx 369 @ury
3210 @rwi @setspecial
%%BeginDocument: eps/micro-noyaux.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /estroke {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /efill {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath unpagectm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /apstroke {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc pie chord or {
        closepath
    } if crlinalph setalpha pie not chord not and {
        crfrtarw {
            2 copy crlinw exch gsave newpath angle1 1 add cos radius mul radius add angle1 1 add sin radius mul radius add moveto angle1 cos radius mul radius add angle1 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if crendarw {
            2 copy crlinw exch gsave newpath angle2 1 sub cos radius mul radius add angle2 1 sub sin radius mul radius add moveto angle2 cos radius mul radius add angle2 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if
    } if crlincp setlinecap crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /apfill {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup 5 -2 roll arc pie chord or {
        closepath
    } if 1 xscale div 1 yscale div scale crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /mkepath {
    dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def /closed exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc closed pie or chord or {
        closepath
    } if unpagectm
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
0 0 321 369 rectclip
-164.949249 -245 translate
164.949249 245 320.001526 368.011353 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 2.6 def
0.75 0 0 0.75 81.248032 101.792114 sc4mt astore 0.75 0 0 0.75 81.248032 101.792114 sc5mt astore 132 303 378 -35 0.75 0 0 0.75 83.998032 45.292114 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Materiel ) [16.001999 0 7.992004 0 5.003998 0 7.992004 0 5.994003 0 5.003998 0 7.992004 0 5.003998 0 0 0] 180 360 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 152.248032 -13.957886] dotx
/esave save def 0.75 0 0 0.75 81.248032 101.792114 sc4mt astore 0.75 0 0 0.75 81.248032 101.792114 sc6mt astore 90 180 156 84 1.637427 1 85.5 false false 1.023466 0 0 0.505714 23.61087 188.079239 sc5mt astore apstroke esave restore
/esave save def 0.75 0 0 0.75 81.248032 101.792114 sc4mt astore -0.75 0 0 0.75 447.248047 101.792114 sc6mt astore 90 180 156 84 1.637427 1 85.5 false false -1.023466 0 0 0.505714 624.385254 188.079239 sc5mt astore apstroke esave restore
(\(micro-\) noyau ) [5.993988 0 14.003998 0 5.003998 0 7.992004 0 5.993988 0 9 0 5.993988 0 5.993988 0 4.5 0 9 0 8.820007 0 9 0 7.992004 0 9 0 0 0] 270 312 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 68.248032 55.042114] dotx
0.75 0 0 0.75 81.248032 101.792114 sc4mt astore 0.75 0 0 0.75 81.248032 101.792114 sc6mt astore 63.405441 1 -1 131 447 0.75 0 0 0.75 67.748032 142.292114 sc5mt astore estroke
0.75 0 0 0.75 81.248032 101.792114 sc4mt astore 0.75 0 0 0.75 81.248032 101.792114 sc6mt astore 63.405441 1 -1 131 447 0.75 0 0 0.75 189.248032 94.292114 sc5mt astore estroke
0.75 0 0 0.75 81.248032 101.792114 sc4mt astore 0.75 0 0 0.75 81.248032 101.792114 sc6mt astore 63.405441 1 -1 131 447 0.75 0 0 0.75 290.498047 178.292114 sc5mt astore estroke
/crlinred 0.5 def /crlingrn 0.5 def /crlinblu 0.5 def /strinclr true def
0.75 0 0 0.75 81.248032 101.792114 sc4mt astore 0.75 -6.556708e-08 -6.556708e-08 -0.75 81.248077 1047.786377 sc5mt astore 132 303 378 -35 0.074603 -5.550652e-09 -7.704132e-08 -0.75 159.900436 813.036377 sc6mt astore rstroke
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/esave save def 0.75 0 0 0.75 81.248032 101.792114 sc4mt astore 0.75 -6.556708e-08 -6.556708e-08 -0.75 81.248077 1047.786377 sc6mt astore 90 180 156 84 1.637427 1 85.5 false false 1.023466 -8.947421e-08 -4.421096e-08 -0.505714 11.110886 671.749268 sc5mt astore apstroke esave restore
/esave save def 0.75 0 0 0.75 81.248032 101.792114 sc4mt astore -0.75 6.556708e-08 -6.556708e-08 -0.75 447.248108 1047.786377 sc6mt astore 90 180 156 84 1.637427 1 85.5 false false -1.023466 8.947421e-08 -4.421096e-08 -0.505714 611.135254 671.749207 sc5mt astore apstroke esave restore
/crlinred 0.5 def /crlingrn 0.5 def /crlinblu 0.5 def /strinclr true def
0.75 0 0 0.75 105.248032 101.792114 sc4mt astore 0.75 -6.556708e-08 -6.556708e-08 -0.75 81.248077 1047.786377 sc5mt astore 132 303 378 -35 0.074603 -5.550652e-09 -7.704132e-08 -0.75 188.100433 813.036377 sc6mt astore rstroke
0.75 0 0 0.75 129.248032 101.792114 sc4mt astore 0.75 -6.556708e-08 -6.556708e-08 -0.75 81.248077 1047.786377 sc5mt astore 132 303 378 -35 0.074603 -5.550652e-09 -7.704132e-08 -0.75 216.30043 813.036377 sc6mt astore rstroke
0.75 0 0 0.75 153.248032 101.792114 sc4mt astore 0.75 -6.556708e-08 -6.556708e-08 -0.75 81.248077 1047.786377 sc5mt astore 132 303 378 -35 0.074603 -5.550652e-09 -7.704132e-08 -0.75 244.500443 813.036377 sc6mt astore rstroke
0.75 0 0 0.75 177.248032 101.792114 sc4mt astore 0.75 -6.556708e-08 -6.556708e-08 -0.75 81.248077 1047.786377 sc5mt astore 132 303 378 -35 0.074603 -5.550652e-09 -7.704132e-08 -0.75 272.700439 813.036377 sc6mt astore rstroke
0.75 0 0 0.75 201.248032 101.792114 sc4mt astore 0.75 -6.556708e-08 -6.556708e-08 -0.75 81.248077 1047.786377 sc5mt astore 132 303 378 -35 0.074603 -5.550652e-09 -7.704132e-08 -0.75 300.900452 813.036377 sc6mt astore rstroke
0.75 0 0 0.75 225.248032 101.792114 sc4mt astore 0.75 -6.556708e-08 -6.556708e-08 -0.75 81.248077 1047.786377 sc5mt astore 132 303 378 -35 0.074603 -5.550652e-09 -7.704132e-08 -0.75 329.100403 813.036377 sc6mt astore rstroke
0.75 0 0 0.75 249.248032 101.792114 sc4mt astore 0.75 -6.556708e-08 -6.556708e-08 -0.75 81.248077 1047.786377 sc5mt astore 132 303 378 -35 0.074603 -5.550652e-09 -7.704132e-08 -0.75 357.300415 813.036377 sc6mt astore rstroke
0.75 0 0 0.75 273.248047 101.792114 sc4mt astore 0.75 -6.556708e-08 -6.556708e-08 -0.75 81.248077 1047.786377 sc5mt astore 132 303 378 -35 0.074603 -5.550652e-09 -7.704132e-08 -0.75 385.500427 813.036377 sc6mt astore rstroke
0.75 0 0 0.75 297.248047 101.792114 sc4mt astore 0.75 -6.556708e-08 -6.556708e-08 -0.75 81.248077 1047.786377 sc5mt astore 132 303 378 -35 0.074603 -5.550652e-09 -7.704132e-08 -0.75 413.700439 813.036377 sc6mt astore rstroke
(utilisateurs r\335els ) [9 0 5.003998 0 5.003998 0 5.003998 0 5.003998 0 7.001999 0 7.992004 0 5.003998 0 7.992004 0 9 0 5.994003 0 7.001999 0 4.5 0 5.994003 0 7.992004 0 7.992004 0 5.003998 0 7.001999 0 0 0] 94 698 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 192.998032 71.792114] dotx
(Interface \(appels syst\334mes\) ) [5.994003 0 9 0 5.003998 0 7.991997 0 5.994003 0 5.814003 0 7.992004 0 7.992004 0 7.992004 0 4.5 0 5.994003 0 7.992004 0 9 0 9 0 7.992004 0 5.003998 0 7.001999 0 4.5 0 7.001999 0 9 0 7.001999 0 5.003998 0 7.992004 0 14.003998 0 7.992004 0 7.002014 0 5.993988 0 0 0] 92 528 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 165.998032 170.792114] dotx
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crendarw true def
/crfrtarw true def
0.75 0 0 0.75 81.248032 101.792114 sc4mt astore 0.75 0 0 0.75 81.248032 101.792114 sc5mt astore -19.829102 -57.504395 222.914551 573.252197 0.75 0 0 0.75 81.248032 101.792114 sc6mt astore ssl
0.75 0 0 0.75 81.248032 101.792114 sc4mt astore 0.75 0 0 0.75 81.248032 101.792114 sc5mt astore 26.786499 -10.044922 226.60675 376.522461 0.75 0 0 0.75 81.248032 101.792114 sc6mt astore ssl
0.75 0 0 0.75 81.248032 101.792114 sc4mt astore 0.75 0 0 0.75 81.248032 101.792114 sc5mt astore 129.6875 31.611328 256.15625 460.694336 0.75 0 0 0.75 81.248032 101.792114 sc6mt astore ssl
0.75 0 0 0.75 81.248032 101.792114 sc4mt astore 0.75 0 0 0.75 81.248032 101.792114 sc5mt astore 17.090302 -23.33667 408.692566 580.922546 0.75 0 0 0.75 81.248032 101.792114 sc6mt astore ssl
0.75 0 0 0.75 81.248032 101.792114 sc4mt astore 0.75 0 0 0.75 81.248032 101.792114 sc5mt astore 16.519592 14.454651 418.740204 395.272675 0.75 0 0 0.75 81.248032 101.792114 sc6mt astore ssl
(E/S ) [10.998001 0 5.003998 0 10.007996 0 0 0] 73 339 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 146.498032 173.042114] dotx
(M\335moire ) [16.001999 0 7.991997 0 14.003998 0 9 0 5.003998 0 5.994003 0 7.991997 0 0 0] 69 318 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 257.498047 138.542114] dotx
(Processus ) [10.007996 0 5.994003 0 9 0 7.991997 0 7.991997 0 7.001999 0 7.001999 0 9 0 7.001999 0 0 0] 72 331 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 356.498047 219.542114] dotx
end
grestore
%%EndDocument
 @endspecial 484 1200 a
 currentpoint currentpoint translate 1 0.69922 div 1 0.69922 div scale
neg exch neg exch translate
 484 1200 a 341 1291 a Fq(Fig.)f
FD(18.1)g({)h Fp(Plusieurs)g(mo)n(dules)h(syst)o(\022)-20
b(eme)15 b(qui)g(utilisent)f(un)i(noyau)g(r)o(\023)-20
b(e)n(duit)230 1425 y FB({)21 b(Threads)14 b(m)o(ultiples)h(dans)f(c)o
(haque)g(t^)-19 b(ac)o(he)13 b(\(a)o(v)o(ec)h(sc)o(heduling\).)230
1489 y({)21 b(P)o(artage)14 b(\015exible)h(de)e(m)o(\023)-18
b(emoire)14 b(en)o(tre)f(t^)-19 b(ac)o(hes)230 1553 y({)21
b(Un)13 b(syst)o(\022)-18 b(eme)13 b(de)h(comm)o(unication)h(in)o
(ter-pro)q(cessus)g(par)f(\014les)g(de)f(messages)h(e\016cace)f(et)g(s)
o(\023)-18 b(ecuris)o(\023)g(e)230 1617 y({)21 b(La)13
b(pro)r(jection)i(de)e(\014c)o(hiers)h(en)f(m)o(\023)-18
b(emoire)230 1681 y({)21 b(Le)13 b(no)o(y)o(au)h(lui-m)o(^)-18
b(eme)14 b(ne)g(fournit)g(que)f(les)g(\023)-18 b(el)o(\023)g(emen)o(ts)
14 b(les)g(plus)g(essen)o(tiels,)g(c'est-\022)-19 b(a-dire)353
1735 y(sc)o(heduling)353 1790 y(IPC)353 1845 y(gestion)14
b(de)g(la)f(m)o(\023)-18 b(emoire)14 b(virtuelle)236
1909 y(T)m(ous)f(ces)g(services)g(et)g(les)g(autres)g(son)o(t)g
(fournis)h(\022)-19 b(a)12 b(tra)o(v)o(ers)h(l'utilisatio)q(n)i(d'un)e
(seul)h(t)o(yp)q(e)f(d'IPC)f(\(les)179 1955 y(messages\).)179
2090 y Fv(18.2)66 b(Le)22 b(no)n(y)n(au)h(MA)n(CH)236
2174 y FB(En)d(pratique,)h(le)g(no)o(y)o(au)f(ne)g(fournit)h(que)f(les)
h(services)g(n)o(\023)-18 b(ecessaires)21 b(\022)-19
b(a)20 b(l'impl)o(\023)-18 b(emen)o(tation)23 b(d'un)179
2220 y(syst)o(\022)-18 b(eme)17 b(de)g(comm)o(unication)i(en)o(tre)e
(di\013)o(\023)-18 b(eren)o(ts)19 b(pro)q(cessus)f(utilisateurs)h
(\(les)f(mo)q(dules)g(syst)o(\022)-18 b(eme)17 b(par)179
2265 y(exemple\).)236 2312 y(P)o(our)j(cela,)f(le)g(no)o(y)o(au)h
(fournit)g(un)f(certain)h(nom)o(bre)g(d'abstractions)h(utilisables)h
(par)e(le)f(niv)o(eau)179 2357 y(mo)q(dule)14 b(ou)g(utilisateur.)h(En)
e(particulier)230 2422 y({)21 b(T)m(asks)13 b(\(t^)-19
b(ac)o(hes\))230 2486 y({)21 b(Threads)230 2550 y({)g(P)o(orts)230
2613 y({)g(Messages)236 2678 y(Les)13 b(fonctions)i(du)e(no)o(y)o(aux)i
(son)o(t)e(donc)230 2743 y({)21 b(cr)o(\023)-18 b(eation)14
b(et)f(gestion)i(des)e(t^)-19 b(ac)o(hes)13 b(et)g(threads)230
2806 y({)21 b(gestion)14 b(des)g(p)q(orts)p eop
%%Page: 133 141
133 140 bop 75 50 a Fz(18.2.)26 b(LE)14 b(NO)o(Y)m(A)o(U)g(MA)o(CH)1225
b FD(133)230 166 y FB({)21 b(manipulatio)q(ns)16 b(de)d(base)h(des)f
(messages)230 227 y({)21 b(gestion)14 b(de)g(la)f(m)o(\023)-18
b(emoire)14 b(virtuelle)230 287 y({)21 b(sc)o(heduling)179
396 y Fu(18.2.1)55 b(Les)18 b(T^)-28 b(ac)n(hes)19 b(et)f(les)g
(Threads)236 466 y FB(Dans)12 b(les)f(syst)o(\022)-18
b(emes)12 b(UNIX)e(classiques,)j(une)e(abstraction)i(fondamen)o(tale)f
(a)e(\023)-18 b(et)o(\023)g(e)11 b(d)o(\023)-18 b(e\014nie)18
b(:)11 b(le)g(pro)q(ces-)179 512 y(sus.)f(Cette)g(abstraction)j
(recouvre)e(\022)-19 b(a)11 b(la)g(fois)g(un)g(ensem)o(ble)h(de)f
(ressources)g(\(essen)o(tiellement)i(de)d(l'espace)179
558 y(d'adressage,)k(mais)h(aussi)g(\014c)o(hiers)g(ouv)o(erts)f(et)g
(autres\))g(et)f(une)i(unit)o(\023)-18 b(e)15 b(d'ex)o(\023)-18
b(ecution)15 b(unique,)g(une)f(seule)179 603 y(activit)o(\023)-18
b(e.)236 649 y(On)17 b(trouv)o(e)f(dans)h(les)g(pro)q(cessus)h(d'une)e
(part)h(un)f(programme)h(que)g(le)g(pro)q(cessus)g(ex)o(\023)-18
b(ecute)17 b(et)f(un)179 694 y(ensem)o(ble)d(de)e(donn)o(\023)-18
b(ees)13 b(que)f(le)f(programme)i(manipule)g(\(d)o(\023)-18
b(ecomp)q(os)o(\023)g(e)13 b(en)f(donn)o(\023)-18 b(ees)12
b(et)f(pile\).)i(Historique-)179 740 y(men)o(t,)g(la)h(notion)h(de)e(r)
o(\023)-18 b(een)o(trance)15 b(a)e(app)q(ort)o(\023)-18
b(e)14 b(la)h(p)q(ossibilit)o(\023)-17 b(e)16 b(de)d(faire)h(partager)g
(la)g(zone)g(programme)h(\022)-19 b(a)179 786 y(plusieurs)15
b(pro)q(cessus,)f(c)o(hacun)g(a)o(y)o(an)o(t)g(une)f(zone)h(de)f(donn)o
(\023)-18 b(ees)14 b(di\013)o(\023)-18 b(eren)o(te.)236
831 y(Cette)15 b(abstraction)j(mon)o(tre)d(ses)h(limites)h(a)o(v)o(ec)f
(l'arriv)o(\023)-18 b(ee)17 b(des)f(mac)o(hines)h(m)o(ulti-pro)q
(cessus)h(et)d(l'ar-)179 877 y(c)o(hitecture)j(logiciell)q(e)i(clien)o
(ts/serv)o(eurs)g(dans)e(laquelle)i(un)e(serv)o(eur)g(se)f(d)o(\023)-18
b(em)o(ultipli)q(e)20 b(p)q(our)e(servir)g(les)179 923
y(di\013)o(\023)-18 b(eren)o(ts)14 b(clien)o(ts.)236
968 y(P)o(our)g(r)o(\023)-18 b(ep)q(ondre)14 b(\022)-19
b(a)13 b(cette)g(demande,)h(une)f(premi)o(\022)-18 b(ere)14
b(appro)q(c)o(he)h(a)d(\023)-18 b(et)o(\023)g(e)13 b(de)g(s)o(\023)-18
b(eparer)14 b(les)f(deux)h(comp)q(o-)179 1014 y(san)o(tes)g(essen)o
(tielles)i(du)d(pro)q(cessus,)h(c'est-\022)-19 b(a-dire)14
b(d'une)g(part)f(les)h(ressources)h(ph)o(ysiques,)g(d'autre)e(part)179
1060 y(les)i(activit)o(\023)-18 b(es)15 b(\(unit)o(\023)-18
b(es)16 b(d'ex)o(\023)-18 b(ecution\))15 b(sur)g(ces)f(ressources)h
(\(ligh)o(t)h(pro)q(cess)f(de)f(SUN\).)f(Cette)h(id)o(\023)-18
b(ee)15 b(a)f(fait)179 1105 y(son)e(c)o(hemin)g(et)g(l'on)g(parle)g
(d'en)o(vironnemen)o(t)i(d'ex)o(\023)-18 b(ecution)13
b(p)q(our)f(les)g(ressources)h(partag)o(\023)-18 b(ees)12
b(|)g(ce)f(son)o(t)179 1151 y(les)i(t^)-19 b(ac)o(hes)14
b(\(tasks)f(MA)o(CH\))g(|)g(et)g(l'on)g(parle)h(d'activit)o(\023)-18
b(es)15 b(\(threads)f(of)f(con)o(trol\).)236 1197 y(Sous)h(MA)o(CH)230
1258 y({)21 b(une)11 b(t^)-19 b(ac)o(he)11 b(est)f(un)h(en)o
(vironnemen)o(t)i(d'ex)o(\023)-18 b(ecution,)12 b(c'est)e(l'unit)o
(\023)-18 b(e)12 b(de)f(base)g(de)f(protection)j(p)q(our)e(l'al-)270
1304 y(lo)q(cation)j(des)e(ressources)h(\(c'est)e(la)h(t^)-19
b(ac)o(he)12 b(qui)h(est)f(propri)o(\023)-18 b(etaire)14
b(des)e(ressources\).)g(Elle)h(comp)q(orte)270 1349 y(un)h(espace)f
(d'adressage)h(\(4)f(Go\))g(et)g(des)h(droits)g(d'acc)o(\022)-18
b(es)13 b(prot)o(\023)-18 b(eg)o(\023)g(es)14 b(\022)-19
b(a)13 b(certains)h(p)q(orts.)230 1410 y({)21 b(Une)9
b(thread)h(est)g(l'unit)o(\023)-18 b(e)10 b(d'ex)o(\023)-18
b(ecution)11 b(de)f(base.)f(C'est)g(un)h(pro)q(cessus)g(\(une)g
(activit)o(\023)-18 b(e\))11 b(qui)f(s'ex)o(\023)-18
b(ecute)270 1455 y(dans)10 b(la)g(t^)-19 b(ac)o(he)9
b(\(et)g(uniquemen)o(t)i(dans)f(la)g(t^)-19 b(ac)o(he\).)9
b(Elle)h(est)f(constitu)o(\023)-18 b(ee)11 b(essen)o(tiellemen)o(t)h
(d'un)d(sous-)270 1501 y(ensem)o(ble)14 b(du)f(P)m(.C.B.)e(\(Pro)q
(cessus)i(Con)o(trol)h(Blo)q(c)o(k)f(d'UNIX\))6 b(:)12
b(les)h(registres,)g(une)g(p)q(osition)i(dans)270 1547
y(la)f(pile,)g(un)f(segmen)o(t)h(de)f(pile)i(propre,)e(un)h(p)q(oin)o
(teur)g(dans)g(le)g(programme.)179 1608 y(Une)9 b(thread)g(donn)o(\023)
-18 b(ee)10 b(ne)f(s'ex)o(\023)-18 b(ecute)9 b(que)h(dans)f(une)h(t^)
-19 b(ac)o(he)9 b(donn)o(\023)-18 b(ee,)10 b(mais)f(une)h(t^)-19
b(ac)o(he)9 b(p)q(eut)g(a)o(v)o(oir)h(plusieurs)179 1653
y(threads.)15 b(T)m(outes)g(les)g(threads)g(partagen)o(t)h(les)f
(ressources)h(de)f(la)g(t^)-19 b(ac)o(he.)15 b(Comme)f(la)h(t^)-19
b(ac)o(he)15 b(est)g(l'unit)o(\023)-18 b(e)179 1699 y(de)13
b(protection,)h(les)g(threads)g(ne)f(son)o(t)g(pas)h(prot)o(\023)-18
b(eg)o(\023)g(ees)14 b(les)f(unes)h(des)f(autres)7 b(!!)236
1745 y(Les)13 b(t^)-19 b(ac)o(hes)14 b(son)o(t)f(sc)o(hedul)o(\023)-18
b(ees)15 b(comme)e(les)h(pro)q(cessus)g(UNIX.)236 1790
y(A)f(l'in)o(t)o(\023)-18 b(erieur)16 b(d'une)e(t^)-19
b(ac)o(he,)14 b(les)g(di\013)o(\023)-18 b(eren)o(tes)15
b(threads)f(son)o(t)g(par)g(d)o(\023)-18 b(efaut)14 b(sc)o(hedul)o
(\023)-18 b(ees)15 b(al)o(\023)-18 b(eatoiremen)o(t)179
1836 y(\(m)o(^)g(eme)13 b(priorit)o(\023)-18 b(e\).)14
b(Une)f(thread)h(ne)f(s'ex)o(\023)-18 b(ecute)13 b(que)h(si)f(elle)i
(et)e(sa)g(t^)-19 b(ac)o(he)13 b(son)o(t)g(ex)o(\023)-18
b(ecutables.)179 1946 y Fu(18.2.2)55 b(P)n(orts)19 b(&)g(Messages)236
2016 y FB(T)m(outes)10 b(les)g(comm)o(unications)i(en)o(tre)d(les)h
(di\013)o(\023)-18 b(eren)o(ts)11 b(mo)q(dules)g(\(et)e(ob)r(jets\))h
(du)f(syst)o(\022)-18 b(eme)10 b(son)o(t)g(r)o(\023)-18
b(ealis)o(\023)g(ees)179 2061 y(par)13 b(des)g(messages)8
b(!)236 2107 y(T)m(rois)14 b(abstractions)h(son)o(t)e(utilis)o(\023)-18
b(ees)16 b(p)q(our)d(impl)o(\023)-18 b(emen)o(ter)15
b(et)e(manipuler)i(le)f(syst)o(\022)-18 b(eme)13 b(de)h(messages:)230
2168 y({)21 b(p)q(orts)230 2228 y({)g(p)q(orts)14 b(set)f(\(ensem)o
(bles)h(de)f(p)q(orts\))230 2289 y({)21 b(messages)236
2350 y(Un)9 b(p)q(ort)h(est)f(un)g(canal)i(de)e(comm)o(unication)j
(prot)o(\023)-18 b(eg)o(\023)g(e)10 b(\(impl)o(\023)-18
b(emen)o(t)o(\023)g(e)11 b(par)e(une)h(\014le)g(de)f(messages)h
(\014nie\),)179 2395 y(sur)16 b(lequel)i(des)f(messages)g(p)q(euv)o(en)
o(t)f(^)-18 b(etre)16 b(en)o(v)o(o)o(y)o(\023)-18 b(es)17
b(et)f(qui)i(son)o(t)e(plac)o(\023)-18 b(es)17 b(dans)g(la)g(\014le)g
(\022)-19 b(a)17 b(la)f(r)o(\023)-18 b(eception.)179
2441 y(C'est)14 b(aussi)j(sous)f(MA)o(CH)f(l'unit)o(\023)-18
b(e)16 b(de)g(r)o(\023)-18 b(ef)o(\023)g(erence)16 b(des)f(ob)r(jets)7
b(:)15 b(tout)g(ob)r(jet)h(n'est)f(conn)o(u)i(que)e(par)h(son)179
2487 y(p)q(ort.)g(T)m(oute)g(op)o(\023)-18 b(eration)19
b(du)d(syst)o(\022)-18 b(eme)17 b(consiste)h(\022)-19
b(a)16 b(en)o(v)o(o)o(y)o(er)i(des)e(messages)h(v)o(ers)g(le)g(p)q(ort)
g(d'un)g(ob)r(jet.)179 2532 y(Ainsi)e(quand)h(une)f(t^)-19
b(ac)o(he)14 b(est)g(cr)o(\023)-18 b(ee,)14 b(le)h(p)q(ort)g(asso)q(ci)
o(\023)-18 b(e)15 b(est)f(cr)o(\023)-18 b(ee)15 b(sim)o(ultan)o(\023)
-18 b(emen)o(t,)16 b(quand)f(une)g(t^)-19 b(ac)o(he)15
b(est)179 2578 y(d)o(\023)-18 b(etruite)14 b(son)f(p)q(ort)h(est)f
(aussi)h(d)o(\023)-18 b(etruit.)236 2624 y(Un)17 b(p)q(ort)g(set)f
(\(ensem)o(ble)i(de)f(p)q(orts\))g(est)g(une)g(\014le)g(con)o(tenan)o
(t)h(les)f(di\013)o(\023)-18 b(eren)o(tes)19 b(\014les)e(des)g(p)q
(orts)g(de)179 2669 y(l'ensem)o(ble.)12 b(Une)f(thread)h(p)q(eut)f(gr^)
-19 b(ace)11 b(\022)-19 b(a)11 b(ces)g(ensem)o(bles)i(de)e(p)q(orts)g
(attendre)h(un)f(message)h(sur)f(di\013)o(\023)-18 b(eren)o(ts)179
2715 y(p)q(orts)13 b(en)g(m)o(^)-18 b(eme)13 b(temps.)236
2761 y(Un)f(message)h(est)f(une)g(unit)o(\023)-18 b(e)13
b(de)f(comm)o(unication)j(en)o(tre)d(ob)r(jets)18 b(:)12
b(un)g(message)g(est)g(en)o(v)o(o)o(y)o(\023)-18 b(e)13
b(au)f(p)q(ort)179 2806 y(qui)j(repr)o(\023)-18 b(esen)o(te)15
b(l'ob)r(jet.)f(Un)f(message)i(est)f(une)g(unit)o(\023)-18
b(e)15 b(de)g(donn)o(\023)-18 b(ees)15 b(constitu)o(\023)-18
b(ee)15 b(de)f(deux)h(parties)22 b(:)13 b(un)p eop
%%Page: 134 142
134 141 bop 75 50 a FD(134)949 b Fz(CHAPITRE)14 b(18.)27
b(LES)14 b(MICR)o(O-NO)o(Y)m(A)o(UX)179 166 y FB(header)d(de)f(taille)i
(\014xe)e(et)g(le)g(corps)h(des)f(donn)o(\023)-18 b(ees)12
b(comp)q(os)o(\023)-18 b(e)10 b(de)h(z)o(\023)-18 b(ero)10
b(ou)g(plusieurs)j(ob)r(jets)d(t)o(yp)o(\023)-18 b(es)10
b(\(donn)o(\023)-18 b(ees)179 212 y(t)o(yp)o(\023)g(ees\).)236
258 y(Le)11 b(header)g(d)o(\023)-18 b(ecrit)12 b(la)f(taille,)i(le)e(t)
o(yp)q(e)g(et)f(la)i(destination)h(du)e(message.)g(Le)f(corps)i(con)o
(tien)o(t)f(le)h(con)o(ten)o(u)179 304 y(ou)h(un)h(p)q(oin)o(teur)g
(sur)g(le)f(con)o(ten)o(u)h(du)g(message.)236 350 y(Il)g(n'y)f(a)g(pas)
g(de)g(limite)i(ni)f(sur)f(la)h(taille)h(ni)f(sur)f(le)h(con)o(ten)o(u)
g(des)f(messages.)236 395 y(A)h(l'in)o(v)o(erse)i(des)f(\014les)g(de)g
(message)g(des)g(IPC)e(standard)j(d'UNIX,)d(il)j(est)e(p)q(ossible)j
(d')o(\023)-18 b(ec)o(hanger)15 b(des)179 441 y(p)q(oin)o(teurs)j(en)o
(tre)e(t^)-19 b(ac)o(hes.)16 b(Les)g(con)o(v)o(ersions)i(d'adressages)f
(en)o(tre)f(les)h(m)o(\023)-18 b(emoires)17 b(virtuelles)h(des)e
(di\013)o(\023)-18 b(e-)179 487 y(ren)o(tes)14 b(t^)-19
b(ac)o(hes)14 b(\023)-18 b(etan)o(t)15 b(r)o(\023)-18
b(ealis)o(\023)g(ees)16 b(automatiquemen)o(t)h(dans)e(presque)g(tous)g
(les)g(cas)21 b(:)14 b(c'est)g(un)h(a)o(v)n(an)o(tage)179
532 y(ind)o(\023)-18 b(eniable,)14 b(qui)f(p)q(ermet)f(par)g(exemple)g
(de)g(r)o(\023)-18 b(ealiser)13 b(un)f FA(fork)e FB(par)i(un)g(simple)h
(message)f(con)o(tenan)o(t)g(tout)179 578 y(l'espace)i(d'adressage)g
(de)f(la)h(t^)-19 b(ac)o(he)13 b(r)o(\023)-18 b(ealisan)o(t)15
b(le)f FA(fork)5 b FB(!)236 624 y(Le)16 b(no)o(y)o(au)h(ne)e(manipule)j
(que)f(des)f(messages.)g(Les)f(seules)i(in)o(terruptions)i(bas)d(niv)o
(eau)h(son)o(t)f(celles)179 670 y(a\013)o(\023)-18 b(eren)o(tes)14
b(a)f(la)h(gestion)h(des)e(messages.)h(Les)f(autres)h(son)o(t)g(r)o
(\023)-18 b(ealis)o(\023)g(ees)15 b(par)e(des)h(en)o(v)o(ois)h(de)e
(messages)h(par)179 715 y(le)f(p)q(ort)h(de)f(la)h(t^)-19
b(ac)o(he.)236 761 y(Les)12 b(threads)g(p)q(euv)o(en)o(t)h(utiliser)g
(les)g(p)q(orts)f(p)q(our)g(comm)o(uniquer)h(en)o(tre)f(elles)h(dans)f
(une)g(m)o(^)-18 b(eme)12 b(t^)-19 b(ac)o(he,)179 807
y(ou)13 b(a)o(v)o(ec)h(une)g(autre)g(t^)-19 b(ac)o(he,)13
b(et)g(de)h(plus,)g(comme)f(les)h(p)q(orts)g(son)o(t)g("visibles")i(au)
e(niv)o(eau)h(du)f(r)o(\023)-18 b(eseau,)13 b(on)179
853 y(p)q(eut)g(comm)o(uniquer)i(a)o(v)o(ec)f(un)f(ob)r(jet)g(sur)h
(une)f(autre)g(mac)o(hine)8 b(!)179 964 y Fu(18.2.3)55
b(T)-5 b(ask)19 b(Threads)g(&)f(P)n(orts)236 1035 y FB(Les)10
b(t^)-19 b(ac)o(hes)10 b(et)g(les)g(Threads)h(son)o(t)f(repr)o(\023)-18
b(esen)o(t)o(\023)g(ees)11 b(par)f(des)g(p)q(orts)g(\(les)h(p)q(orts)f
(son)o(t)g(des)g(\014les)h(de)f(message)179 1080 y(iden)o(ti\014)o
(\023)-18 b(ees\).)236 1126 y(Le)13 b(p)q(ort)h(de)f(la)g(t^)-19
b(ac)o(he)14 b(ou)f(de)g(la)h(thread)f(p)q(ermet)h(au)f(syst)o(\022)-18
b(eme)13 b(d'iden)o(ti\014er)i(quelle)g(t^)-19 b(ac)o(he)14
b(ou)f(thread)179 1172 y(doit)g(^)-18 b(etre)13 b(a\013ect)o(\023)-18
b(ee)13 b(par)h(un)f(app)q(el)i(syst)o(\022)-18 b(eme)13
b(donn)o(\023)-18 b(e.)236 1218 y([Sous)19 b(UNIX,)d(ce)i(r^)-19
b(ole)19 b(d'iden)o(ti\014cation)i(est)d(r)o(\023)-18
b(ealis)o(\023)g(e)19 b(par)f(la)h(table)g(des)f(pro)q(cessus)h(et)f
(le)g(pid)h(du)179 1263 y(pro)q(cessus.])236 1309 y FA(task_self\(\))6
b FB(et)j FA(thread_self)o(\(\))d FB(retourne)11 b(le)f(p)q(ort)g(asso)
q(ci)o(\023)-18 b(e)12 b(\022)-19 b(a)9 b(la)i(t^)-19
b(ac)o(he,)10 b(ou)g(la)g(thread)h(qui)g(ex)o(\023)-18
b(ecute)179 1355 y(la)13 b(primitiv)o(e.)236 1401 y(Une)19
b(t^)-19 b(ac)o(he)18 b(ou)g(Thread)h(p)q(eut)g(a)o(v)o(oir)g(acc)o
(\022)-18 b(es)18 b(au)h(p)q(ort)f(d'une)h(autre)f(\(t^)-19
b(ac)o(he)19 b(ou)f(thread\))h(et)f(p)q(eut)179 1447
y(r)o(\023)-18 b(ealiser)14 b(des)g(app)q(els)g(syst)o(\022)-18
b(eme)14 b(p)q(our)g(ou)f(a)o(v)o(ec)g(cette)g(autre)g(t^)-19
b(ac)o(he/thread.)179 1579 y Fv(18.3)66 b(Les)22 b(threads)g(POSIX)236
1662 y FB(Organisation)e(en)d(m)o(\023)-18 b(emoire)18
b(p)q(our)g(un)g(pro)q(cessus)g(UNIX)f(a)o(v)o(ec)g(plusieurs)j
(threads)k(:)17 b(v)o(oir)h(\014gure)179 1708 y(18.2.)179
1820 y Fu(18.3.1)55 b Fj(fork)17 b Fu(et)h Fj(exec)236
1890 y FB(Apr)o(\022)-18 b(es)20 b(un)g FA(fork)p FB(,)d(le)j(\014ls)g
(ne)g(con)o(tien)o(t)g(qu'une)g(seule)h(activit)o(\023)-18
b(e)21 b(\(celle)f(qui)h(a)e(ex)o(\023)-18 b(ecut)o(\023)g(e)20
b(le)g FA(fork)p FB(\).)179 1935 y(A)o(tten)o(tion)13
b(aux)f(v)n(ariables)i(d'exclusion)h(m)o(utuelle)e(\(qui)g(fon)o(t)f
(partie)h(de)f(l'espace)h(d'adressage)g(partag)o(\023)-18
b(e\))179 1981 y(qui)12 b(son)o(t)f(conserv)o(\023)-18
b(ees)13 b(apr)o(\022)-18 b(es)11 b(le)h FA(fork\(\))d
FB(et)i(don)o(t)g(le)h(con)o(ten)o(u)g(ne)f(v)n(arie)h(pas.)g(Ainsi)g
(si)g(une)g(activit)o(\023)-18 b(e)12 b(a)g(pris)179
2027 y(le)h(s)o(\023)-18 b(emaphore)13 b(a)o(v)n(an)o(t)g(le)f
FA(fork\(\))p FB(,)e(si)j(l'activit)o(\023)-18 b(e)14
b(principale)h(c)o(herc)o(he)e(\022)-19 b(a)12 b(prendre)i(ce)e(s)o
(\023)-18 b(emaphore)13 b(apr)o(\022)-18 b(es)13 b(le)179
2072 y FA(fork\(\))d FB(elle)15 b(sera)e(ind)o(\023)-18
b(e\014nimen)o(t)16 b(blo)q(qu)o(\023)-18 b(ee.)236 2118
y(Apr)o(\022)g(es)17 b(un)h FA(exec)p FB(,)d(le)i(pro)q(cessus)h(ne)f
(con)o(tien)o(t)i(plus)f(que)f(la)h(thread)f(qui)h(a)f(ex)o(\023)-18
b(ecut)o(\023)g(e)18 b(l'une)f(des)h(six)179 2164 y(commandes)12
b FA(exec)p FB(.)d(P)o(as)j(de)f(probl)o(\022)-18 b(eme)13
b(a)o(v)o(ec)f(les)g(s)o(\023)-18 b(emaphores)12 b(comme)g(l'espace)g
(d'adressage)h(a)e(c)o(hang)o(\023)-18 b(e.)179 2276
y Fu(18.3.2)55 b(Les)18 b(noms)g(de)g(fonctions)179 2346
y FA(pthread[_)o(obj)o(et)o(]_o)o(pe)o(rat)o(ion)o([_)o(np])236
2418 y FB(o)q(\022)-20 b(u)179 2481 y FC(ob)r(jet)21
b FB(d)o(\023)-18 b(esigne)17 b(si)g(il)g(est)g(pr)o(\023)-18
b(esen)o(t)16 b(le)h(t)o(yp)q(e)g(de)f(l'ob)r(jet)h(auquel)g(la)g
(fonction)h(s'applique.)g(Les)e(v)n(aleurs)270 2526 y(p)q(ossibles)g
(de)d(ob)r(jet)g(p)q(euv)o(en)o(t)g(^)-18 b(etre)353
2581 y FA(cond)11 b FB(p)q(our)j(une)g(v)n(ariable)h(de)e(condition)353
2635 y FA(mutex)e FB(p)q(our)j(un)f(s)o(\023)-18 b(emaphore)14
b(d'exclusion)i(m)o(utuelle)179 2698 y FC(op)o(\023)-21
b(eration)20 b FB(d)o(\023)-18 b(esigne)15 b(l'op)o(\023)-18
b(eration)15 b(a)e(r)o(\023)-18 b(ealiser,)14 b(par)g(exemple)g
FA(create)p FB(,)c FA(exit)h FB(ou)j FA(init)236 2761
y FB(le)h(su\016xe)g FA(np)e FB(indique,)k(si)e(il)g(est)f(pr)o(\023)
-18 b(esen)o(t,)15 b(qu'il)g(s'agit)g(d'une)g(fon)o(tion)g(non)g(p)q
(ortable,)h(c'est-\022)-19 b(a-dire)179 2806 y(Hors)13
b(Norme.)p eop
%%Page: 135 143
135 142 bop 75 50 a Fz(18.3.)26 b(LES)14 b(THREADS)g(POSIX)1147
b FD(135)484 2092 y
 currentpoint currentpoint translate 0.93204 0.93204 scale neg exch
neg exch translate
 484 2092 a 14 w @beginspecial 0 @llx
0 @lly 240 @urx 348 @ury 2400 @rwi @setspecial
%%BeginDocument: eps/micro-noyaux-pile.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 239.963928 347.315948 rectclip
-91.036072 -284.282196 translate
91.036072 284.282196 239.963928 347.315948 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 2.6 def
0.75 0 0 0.75 52.786072 114.725189 sc4mt astore 0.75 0 0 0.75 52.786072 114.725189 sc5mt astore 147 596 196 -195 0.75 0 0 0.75 -1.213928 165.725189 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Donn\335es de la Tache  ) [12.996002 0 9 0 9 0 9 0 7.992004 0 7.992004 0 7.001999 0 4.5 0 9 0 7.992004 0 4.5 0 5.004013 0 7.992004 0 4.175995 0 9.558014 0 7.992004 0 7.992004 0 9 0 7.992004 0 4.5 0 0 0] 163 577 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 2.536072 185.225189] dotx
/crlinw 2.1 def
0.75 0 0 0.75 52.786072 114.725189 sc4mt astore 0.75 0 0 0.75 52.786072 114.725189 sc5mt astore 144 465 180 -64 0.4375 0 0 0.773438 97.786072 104.576752 sc6mt astore rstroke
(Scheduling Registres Pile noyau ) [10.007996 0 7.992004 0 9 0 7.992004 0 9 0 9 0 5.003998 0 5.003998 0 9 0 9 0 -81 -20.088013 12.005997 0 7.722 0 9 0 5.003998 0 7.001999 0 5.003998 0 5.994003 0 7.992004 0 7.001999 0 -66.725998 -20.088013 10.007996 0 5.003998 0 5.003998 0 7.992004 0 4.5 0 9 0 8.820007 0 9 0 7.992004 0 9 0 0 0] 147.050003 447.835999 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 52.786072 115.475189] dotx
(r\335pertoire de travail umask  Descripteurs Acc\334s aux tables de pages \011    * programme     * donn\335es globales \011    * pile globale  \011Propri\335taires  ) [5.994003 0 7.992004 0 9 0 7.992004 0 5.994003 0 5.003998 0 9 0 5.003998 0 5.994003 0 7.992004 0 4.5 0 9 0 7.991989 0 4.5 0 5.003998 0 5.993988 0 7.631989 0 8.549988 0 7.992004 0 5.003998 0 5.003998 0 -141.13797 -20.088013 9 0 14.003998 0 7.992004 0 7.001999 0 9 0 4.5 0 -51.498001 -20.088013 12.996002 0 7.992004 0 7.001999 0 7.992004 0 5.994003 0 5.003998 0 9 0 5.003998 0 7.992004 0 9 0 5.994003 0 7.001999 0 -90.972015 -20.088013 12.996002 0 7.992004 0 7.992004 0 7.992004 0 7.001999 0 4.5 0 7.992004 0 9 0 9 0 4.5 0 5.003998 0 7.991989 0 9 0 5.003998 0 7.992004 0 7.002014 0 4.5 0 9 0 7.992004 0 4.5 0 9 0 7.992004 0 9 0 7.992004 0 7.002014 0 -187.938049 -20.088013 0 0 4.5 0 4.5 0 4.5 0 4.5 0 9 0 4.5 0 9 0 5.994003 0 9 0 9 0 5.994003 0 7.992004 0 14.003998 0 14.003998 0 7.992004 0 -114.480011 -20.087997 4.5 0 4.5 0 4.5 0 4.5 0 9 0 4.5 0 9 0 9 0 9 0 9 0 7.992004 0 7.992004 0 7.002014 0 4.5 0 9 0 5.003998 0 9 0 9 0 7.992004 0 5.003998 0 7.992004 0 7.002014 0 -154.980042 -20.087997 0 0 4.5 0 4.5 0 4.5 0 4.5 0 9 0 4.5 0 9 0 5.003998 0 5.003998 0 7.992004 0 4.5 0 9 0 5.003998 0 9 0 9 0 7.992004 0 5.003998 0 7.992004 0 4.5 0 -120.492004 -20.087997 0 0 10.007996 0 5.994003 0 9 0 9 0 5.994003 0 5.003998 0 7.992004 0 5.003998 0 7.992004 0 5.003998 0 5.994003 0 7.992004 0 7.001999 0 -91.980011 -20.087997 0 0] 167 340 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 -11.713928 344.975189] dotx
(Donn\335es de  laThread 1 ) [12.996002 0 9 0 9 0 9 0 7.991997 0 7.991997 0 7.001999 0 4.5 0 9 0 7.992004 0 4.5 0 -88.973999 -20.088013 5.003998 0 7.991997 0 10.998001 0 9 0 5.994003 0 7.991997 0 7.991997 0 9 0 4.5 0 8.999992 0 0 0] 52 435 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 52.786072 115.475189] dotx
0.75 0 0 0.75 52.786072 114.725189 sc4mt astore 0.75 0 0 0.75 52.786072 114.725189 sc5mt astore 144 465 180 -64 0.4375 0 0 0.773438 150.286072 55.076752 sc6mt astore rstroke
(Scheduling Registres Pile noyau ) [10.007996 0 7.992004 0 9 0 7.992004 0 9 0 9 0 5.003998 0 5.003998 0 9 0 9 0 -81 -20.088013 12.005997 0 7.722 0 9 0 5.003998 0 7.001999 0 5.003998 0 5.994003 0 7.992004 0 7.001999 0 -66.725998 -20.088013 10.007996 0 5.003998 0 5.003998 0 7.992004 0 4.5 0 9 0 8.820007 0 9 0 7.992004 0 9 0 0 0] 147.050003 447.835999 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 105.286072 65.975189] dotx
(Donn\335es de  laThread 2 ) [12.996002 0 9 0 9 0 9 0 7.991997 0 7.991997 0 7.001999 0 4.5 0 9 0 7.992004 0 4.5 0 -88.973999 -20.088013 5.003998 0 7.991997 0 10.998001 0 9 0 5.994003 0 7.991997 0 7.991997 0 9 0 4.5 0 8.999992 0 0 0] 52 435 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 105.286072 65.975189] dotx
0.75 0 0 0.75 52.786072 114.725189 sc4mt astore 0.75 0 0 0.75 52.786072 114.725189 sc5mt astore 144 465 180 -64 0.4375 0 0 0.773438 188.536072 5.576752 sc6mt astore rstroke
(Scheduling Registres Pile noyau ) [10.007996 0 7.992004 0 9 0 7.992004 0 9 0 9 0 5.003998 0 5.003998 0 9 0 9 0 -81 -20.088013 12.005997 0 7.722 0 9 0 5.003998 0 7.001999 0 5.003998 0 5.994003 0 7.992004 0 7.001999 0 -66.725998 -20.088013 10.007996 0 5.003998 0 5.003998 0 7.992004 0 4.5 0 9 0 8.820007 0 9 0 7.992004 0 9 0 0 0] 147.050003 447.835999 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 143.536072 16.475189] dotx
(Donn\335es de  laThread 3 ) [12.996002 0 9 0 9 0 9 0 7.991997 0 7.991997 0 7.001999 0 4.5 0 9 0 7.992004 0 4.5 0 -88.973999 -20.088013 5.003998 0 7.991997 0 10.998001 0 9 0 5.994003 0 7.991997 0 7.991997 0 9 0 4.5 0 8.999992 0 0 0] 52 435 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 143.536072 16.475189] dotx
<b7b7b720> [6.299988 0 6.299988 0 6.299988 0 0 0] 280 224 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 97.036072 119.975189] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 2092 a
 currentpoint currentpoint translate 1 0.93204 div 1 0.93204 div scale
neg exch neg exch translate
 484 2092 a 139 2183 a Fq(Fig.)13
b FD(18.2)g({)g Fp(Or)n(ganisation)i(m)o(\023)-20 b(emoir)n(e,)14
b(p)n(artage)h(des)g(fonctions)g(entr)n(e)g(le)g(pr)n(o)n(c)n(essus)f
(et)h(les)g(activit)o(\023)-20 b(es)p eop
%%Page: 136 144
136 143 bop 75 50 a FD(136)949 b Fz(CHAPITRE)14 b(18.)27
b(LES)14 b(MICR)o(O-NO)o(Y)m(A)o(UX)179 166 y Fu(18.3.3)55
b(les)18 b(noms)g(de)g(t)n(yp)r(es)179 237 y FA(pthread[_)o(obj)o(et)o
(]_t)236 309 y FB(a)o(v)o(ec)c FA(objet)d FB(prenan)o(t)i(comme)h(v)n
(aleur)g FA(cond)p FB(,)d FA(mutex)g FB(ou)i(rien)h(p)q(our)g(une)f
(thread.)179 422 y Fu(18.3.4)55 b(A)n(ttributs)19 b(d'une)f(activit)o
(\023)-27 b(e)236 493 y FB(Iden)o(ti\014cation)13 b(d'une)d(pthread)18
b(:)9 b(le)i(TID)e(de)i(t)o(yp)q(e)f(pthread)p 1117 493
12 2 v 15 w(t)g(obten)o(u)g(par)h(un)f(app)q(el)i(\022)-19
b(a)9 b(la)i(primitiv)o(e)e(:)179 557 y FA(pthread_t)16
b(pthread_s)o(elf)o(\(vo)o(id)o(\);)236 621 y FB(p)q(our)e(le)g(pro)q
(cessus)g(propri)o(\023)-18 b(etaire)179 685 y FA(pid_t)17
b(getpid\(void)o(\);)236 749 y FB(Les)12 b(di\013)o(\023)-18
b(eren)o(tes)13 b(activit)o(\023)-18 b(es)14 b(d'un)e(pro)q(cessus)h
(son)o(t)e(n)o(um)o(\023)-18 b(erot)o(\023)g(ees)13 b(\022)-19
b(a)12 b(partir)g(de)g(1.)f(Un)h(pro)q(cessus)g(UNIX)179
794 y(standard)i(a)f(une)h(seule)g(activit)o(\023)-18
b(e)14 b(de)g(n)o(um)o(\023)-18 b(ero)13 b(1.)236 840
y(P)o(our)j(tuer)g(une)g(activit)o(\023)-18 b(e)17 b(donn)o(\023)-18
b(ee)17 b(dans)f(un)g(pro)q(cessus)h(donn)o(\023)-18
b(e,)16 b(on)g(utilisera)i(la)e(commande)h(shell)179
886 y FA(kill)11 b FB(a)o(v)o(ec)i(comme)g(param)o(\022)-18
b(etre)14 b FA(pid.tid)p FB(.)179 932 y(Exemple:)236
977 y(kill)h(-9)e(12345.3)236 1023 y(En)j(POSIX,)e(le)i(fait)g(de)f
(tuer)g(la)h(thread)g(de)f(n)o(um)o(\023)-18 b(ero)16
b(1)f(a)g(p)q(our)h(e\013et)g(de)f(tuer)h(le)f(pro)q(cessus)i(ainsi)179
1069 y(que)c(toutes)h(les)f(autres)h(threads)f(\023)-18
b(ev)o(en)o(tuelles)15 b(du)e(pro)q(cessus.)236 1115
y(P)o(our)h(tester)f(l')o(\023)-18 b(egalit)o(\023)g(e)15
b(de)e(deux)h(pthreads)g(on)f(utilise)179 1179 y FA(int)18
b(pthread_eq)o(ual)o(\(p)o(thr)o(ead)o(_t)e(tid1,)i(pthread_t)e
(tid2\);)179 1292 y Fu(18.3.5)55 b(Cr)o(\023)-27 b(eation)18
b(et)g(terminaison)f(des)h(activit)o(\023)-27 b(es)179
1367 y Fi(Cr)o(\023)k(eation)179 1438 y FA(int)18 b(pthread_cr)o(eat)o
(e)e(\(pthread_t)114 b(*p_tid,)571 1483 y(pthread_at)o(tr)o(_t)16
b(attr,)571 1529 y(void)214 b(*\(*fonctio)o(n\))16 b(\(void)i(*arg\),)
571 1575 y(void)214 b(*arg)551 1620 y(\);)236 1693 y
FB(La)13 b(cr)o(\023)-18 b(eation)15 b(et)d(l'activ)n(ation)k(d'une)d
(activit)o(\023)-18 b(e)15 b(retourne)f(-1)f(en)g(cas)g(d'ec)o(hec,)g
(0)g(sinon.)230 1756 y({)21 b(le)14 b(tid)f(de)h(la)f(nouv)o(elle)j
(thread)d(est)g(plac)o(\023)-18 b(e)14 b(\022)-19 b(a)13
b(l'adresse)i FA(p_tid)230 1820 y FB({)21 b FA(attr)11
b FB(attribut)j(de)g(l'activit)o(\023)-18 b(e)15 b(\(ordonnancemen)o
(t\),)f(utiliser)i FA(pthread)p 1317 1820 V 11 w(attr)p
1408 1820 V 13 w(default)230 1883 y FB({)21 b(la)11 b(param)o(\022)-18
b(etre)11 b FA(fonction)c FB(corresp)q(ond)12 b(\022)-19
b(a)10 b(la)h(fonction)h(ex)o(\023)-18 b(ecut)o(\023)g(ee)11
b(par)g(l'activit)o(\023)-18 b(e)12 b(apr)o(\022)-18
b(es)11 b(sa)f(cr)o(\023)-18 b(eation)8 b(:)270 1929
y(il)18 b(s'agit)f(donc)g(de)g(son)g(p)q(oin)o(t)h(d'en)o(tr)o(\023)-18
b(ee)16 b(\(comme)h(la)g(fonction)h FA(main)d FB(p)q(our)i(les)g(pro)q
(cessus\).)h(Un)270 1974 y(retour)13 b(de)h(cette)f(fonction)h(corresp)
q(ondra)h(\022)-19 b(a)13 b(la)g(terminaison)j(de)d(cette)g(activit)o
(\023)-18 b(e.)230 2037 y({)21 b(le)14 b(param)o(\022)-18
b(etre)13 b FA(arg)f FB(est)h(transmis)h(\022)-19 b(a)13
b(la)h(fonction)g(au)f(lancemen)o(t)i(de)e(l'activit)o(\023)-18
b(e.)179 2142 y Fi(T)l(erminaison)179 2213 y FB(a\))13
b(les)g(app)q(els)i(UNIX)d FA(exit)f FB(et)p 651 2213
V 27 w FA(exit)g FB(terminen)o(t)k(toutes)e(les)h(threads)g(du)f(pro)q
(cessus.)179 2259 y(b\))g(T)m(erminaison)i(d'une)e(thread)198
2332 y FA(int)19 b(pthread_e)o(xit)d(\(int)i(*p_status)o(\);)236
2404 y(p)p 258 2404 V 14 w(status)8 b FB(co)q(de)j(retour)g(de)g(la)g
(thread,)g(comme)f(dans)i(les)f(pro)q(cessus)h(UNIX)d(la)i(thread)h
(est)e(zom)o(bi\014)o(\023)-18 b(ee)179 2450 y(p)q(our)16
b(attendre)g(la)f(lecture)i(du)e(co)q(de)h(de)f(retour)h(par)g(une)f
(autre)h(thread.)f(A)g(l'in)o(v)o(erse)i(des)f(pro)q(cessus,)179
2495 y(comme)10 b(il)h(p)q(eut)g(y)f(a)o(v)o(oir)h(plusieurs)i(threads)
e(qui)g(attenden)o(t,)f(la)h(thread)g(zom)o(bie)g(n'est)f(pas)h(lib)o
(\023)-18 b(er)o(\023)g(ee)11 b(par)g(la)179 2541 y(lecture)i(du)h(p)p
383 2541 V 14 w(status,)e(il)i(faut)f(p)q(our)g(cela)h(utiliser)h(une)e
(commande)h(sp)o(\023)-18 b(eciale)14 b(qui)g(p)q(ermettra)f(de)g(lib)o
(\023)-18 b(erer)179 2587 y(e\013ectiv)o(emen)o(t)14
b(l'espace)g(m)o(\023)-18 b(emoire)14 b(utilis)o(\023)-18
b(e)16 b(par)d(la)h(thread.)236 2633 y(Cette)f(destruction)i(est)e
(explicitemen)o(t)j(demand)o(\023)-18 b(ee)14 b(par)f(la)h(commande)179
2697 y FA(int)k(pthread_de)o(tac)o(h)e(\(pthread_t)g(*p_tid\);)236
2761 y FB(Si)f(un)f(tel)g(app)q(el)g(a)g(lieu)h(alors)f(que)g
(l'activit)o(\023)-18 b(e)16 b(est)d(en)h(cours)g(d'ex)o(\023)-18
b(ecution,)15 b(cela)f(indique)i(seulemen)o(t)179 2806
y(qu'\022)-19 b(a)13 b(l'ex)o(\023)-18 b(ecution)15 b(de)e
FA(pthread_ex)o(it)c FB(les)14 b(ressources)g(seron)o(t)g(restitu)o
(\023)-18 b(ees.)p eop
%%Page: 137 145
137 144 bop 75 50 a Fz(18.4.)26 b(SYNCHR)o(ONISA)m(TION)1174
b FD(137)484 936 y
 currentpoint currentpoint translate 0.93587 0.93587 scale neg exch
neg exch translate
 484 936 a 14 w @beginspecial 0 @llx
0 @lly 239 @urx 208 @ury 2390 @rwi @setspecial
%%BeginDocument: eps/threaderrno.eps

% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 239 207.909668 rectclip
-180 -464 translate
180 464 239 207.909668 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
0.75 0 0 0.75 74.877167 141.536682 sc4mt astore 0.75 0 0 0.75 74.877167 141.536682 sc5mt astore 141 640 88 -209 0.75 0 0 0.75 74.877167 141.536682 sc6mt astore rstroke
/txtdraw true def
/txlndraw true def
(Thread 1 ) [10.998001 0 9 0 5.994003 0 7.992004 0 7.992004 0 9 0 4.5 0 9 0 0 0] 141 689 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 80.877167 115.286682] dotx
0.75 0 0 0.75 74.877167 141.536682 sc4mt astore 0.75 0 0 0.75 74.877167 141.536682 sc5mt astore 141 640 88 -209 0.75 0 0 0.75 246.627167 143.036682 sc6mt astore rstroke
(Thread 2 ) [10.998001 0 9 0 5.994003 0 7.992004 0 7.992004 0 9 0 4.5 0 9 0 0 0] 141 689 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 252.627167 116.786682] dotx
(extern int errno; ) [7.722 0 9 0 5.003998 0 7.992004 0 5.994003 0 9 0 4.5 0 5.003998 0 9 0 5.003998 0 4.5 0 7.992004 0 5.993988 0 5.993988 0 9 0 9 0 5.003998 0 0 0] 226 689 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 74.877167 141.536682] dotx
/crlinw 2 def
/crendarw true def
0.75 0 0 0.75 74.877167 141.536682 sc5mt astore crlinw 0.75 0 0 0.75 74.877167 141.536682 sc6mt astore 210.627167 599.792236 210.627167 599.786682 arow
false 0.75 0 0 0.75 74.877167 141.536682 sc5mt astore sstrt
systemdict
begin
181 611 181 636 setbbox
181 636 moveto
181 636 181 611 181 611 curveto
end
/nspans 1 def 0.75 0 0 0.75 74.877167 141.536682 sc5mt astore 0.75 0 0 0.75 74.877167 141.536682 sc6mt astore splstroke
0.75 0 0 0.75 74.877167 141.536682 sc5mt astore crlinw 0.75 0 0 0.75 74.877167 141.536682 sc6mt astore 380.127594 555.540039 380.127167 555.536682 arow
false 0.75 0 0 0.75 74.877167 134.036682 sc5mt astore sstrt
systemdict
begin
171 556 414 598 setbbox
182 598 moveto
182 598 176 579 191 578 curveto
206 577 385 579 397 578 curveto
409 577 407 562 407 562 curveto
end
/nspans 3 def 0.75 0 0 0.75 74.877167 141.536682 sc5mt astore 0.75 0 0 0.75 74.877167 141.536682 sc6mt astore splstroke
/crendarw false def
/crfrtarw true def
0.75 0 0 0.75 74.877167 141.536682 sc5mt astore crlinw 0.75 -6.556708e-08 -6.556708e-08 -0.75 74.877213 980.036682 sc6mt astore 210.626953 503.789551 210.627151 503.786682 arow
false 0.75 -6.556708e-08 -6.556708e-08 -0.75 74.127213 950.036682 sc5mt astore sstrt
systemdict
begin
177 556 414 625 setbbox
181.999985 595 moveto
181.999985 595 181 582 193 578 curveto
205 574 400 580.999939 405 574.999939 curveto
410 568.999939 408 558.999939 408 558.999939 curveto
end
/nspans 3 def 0.75 0 0 0.75 74.877167 141.536682 sc5mt astore 0.75 -6.556708e-08 -6.556708e-08 -0.75 74.877213 980.036682 sc6mt astore splstroke
(access ) [7.992004 0 7.992004 0 7.992004 0 7.992004 0 7.001999 0 7.001999 0 0 0] 180 326 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 61.377167 341.786682] dotx
(open ) [9 0 9 0 7.992004 0 9 0 0 0] 234 364 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 195.627167 265.286682] dotx
(Lecture incorrecte ) [10.998001 0 7.992004 0 7.992004 0 5.003998 0 9 0 5.994003 0 7.992004 0 -54.972015 -20.088013 5.003998 0 9 0 7.992004 0 9 0 5.994003 0 5.994003 0 7.992004 0 7.992004 0 5.003998 0 7.992004 0 0 0] 197 394 /Times-Roman [ 18 1 mul 0 0 18 0 0 ] [0.75 0 0 0.75 41.127167 187.286682] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 484 936 a
 currentpoint currentpoint translate 1 0.93587 div 1 0.93587 div scale
neg exch neg exch translate
 484 936 a 368 1027 a Fq(Fig.)13
b FD(18.3)g({)g Fp(Changement)j(de)f(la)g(valeur)g Fh(errno)e
Fp(p)n(ar)i(une)h(autr)n(e)e(thr)n(e)n(ad)179 1149 y
Fv(18.4)66 b(Sync)n(hronisation)236 1232 y FB(T)m(rois)14
b(m)o(\023)-18 b(ecanismes)14 b(de)f(sync)o(hronisati)q(on)j(in)o
(ter-activit)o(\023)-18 b(es)9 b(:)230 1291 y({)21 b(la)14
b(primitiv)o(e)h FA(join)230 1348 y FB({)21 b(les)14
b(s)o(\023)-18 b(emaphores)14 b(d'exclusion)i(m)o(utuelle)230
1405 y({)21 b(les)14 b(conditions)h(\()o(\023)-18 b(ev)o(\022)g(enemen)
o(ts\))179 1513 y Fu(18.4.1)55 b(Le)18 b(mo)r(d)o(\022)-27
b(ele)16 b(fork/join)i(\(P)n(aterson\))236 1583 y FB(Les)13
b(rendez-v)o(ous)8 b(:)13 b(join)236 1629 y(La)g(primitiv)o(e)179
1686 y FA(int)18 b(pthread_jo)o(in)e(\(pthread_t)g(tid,)i(int)g
(**status\);)236 1743 y FB(p)q(ermet)11 b(de)g(susp)q(endre)h(l'ex)o
(\023)-18 b(ecution)13 b(de)d(l'activit)o(\023)-18 b(e)13
b(couran)o(te)e(jusqu'\022)-19 b(a)11 b(ce)f(que)h(l'activit)o(\023)-18
b(e)13 b FA(tid)c FB(ex)o(\023)-18 b(ecute)179 1788 y(un)12
b(app)q(el)i(\(implicite)h(ou)d(explicite\))j(\022)-19
b(a)12 b FA(pthread)p 900 1788 12 2 v 12 w(exit)p FB(.)e(Si)i
(l'activit)o(\023)-18 b(e)15 b FA(tid)10 b FB(est)i(d)o(\023)-18
b(ej\022)f(a)13 b(termin)o(\023)-18 b(ee,)12 b(le)h(retour)179
1834 y(est)g(imm)o(\023)-18 b(ediat,)14 b(et)f(le)g(co)q(de)h(de)f
(retour)h(de)f(l'activit)o(\023)-18 b(e)15 b(vis)o(\023)-18
b(ee)14 b(est)e(\023)-18 b(egal)14 b(\022)-19 b(a)13
b(**status)h(\(double)g(indirection\).)179 1880 y(La)f(primitiv)o(e)i
(retourne)20 b(:)236 1925 y(0)13 b(en)h(cas)f(de)g(succ)o(\022)-18
b(es)236 1971 y(-1)13 b(en)g(cas)h(d'erreur)179 2036
y FC(EINV)-5 b(AL)20 b FB(si)14 b(le)f FA(tid)f FB(est)h(incorrect)179
2093 y FC(ESR)o(CH)19 b FB(activit)o(\023)-18 b(e)15
b(inexistan)o(te)179 2150 y FC(EDEADLOCK)20 b FB(l'atten)o(te)13
b(de)h(l'activit)o(\023)-18 b(e)15 b(sp)o(\023)-18 b(eci\014)o(\023)g
(ee)14 b(conduit)h(\022)-19 b(a)13 b(un)g(in)o(terblo)q(cage.)179
2258 y Fu(18.4.2)55 b(Le)27 b(probl)o(\022)-27 b(eme)25
b(de)j(l'exclusion)d(m)n(utuelle)g(sur)j(les)f(v)m(ariables)179
2316 y(g)o(\023)-27 b(er)o(\023)g(ees)17 b(par)i(le)f(no)n(y)n(au)236
2386 y FB(Il)13 b(est)g(n)o(\023)-18 b(ecessaire)14 b(d'a)o(v)o(oir)g
(plusieurs)h(v)n(ariables)g FA(errno)p FB(,)10 b(une)j(par)g(activit)o
(\023)-18 b(e.)14 b(En)f(e\013et)g(cette)f(v)n(ariable)179
2432 y(globale)17 b(p)q(ourrait)e(^)-18 b(etre)14 b(c)o(hang)o(\023)-18
b(ee)16 b(par)f(une)g(autre)g(activit)o(\023)-18 b(e.)16
b(V)m(oir)f(plus)h(loin)g(commen)o(t)f(d)o(\023)-18 b(e\014nir)17
b(des)e(v)n(a-)179 2477 y(riables)g(globales)g(lo)q(cales)g(\022)-19
b(a)13 b(c)o(haque)h(activit)o(\023)-18 b(e.)179 2586
y Fu(18.4.3)55 b(Les)18 b(s)o(\023)-27 b(emaphores)17
b(d'exclusion)g(m)n(utuelle)236 2656 y FB(Ces)c(s)o(\023)-18
b(emaphores)14 b(binaires)i(p)q(ermetten)o(t)d(d'assurer)h(l'exclusion)
i(m)o(utuelle.)230 2715 y({)21 b(Il)9 b(faut)g(d)o(\023)-18
b(e\014nir)11 b(un)e(ob)r(jet)g(de)h(t)o(yp)q(e)f FA(pthread)p
913 2715 V 11 w(mutex)p 1024 2715 V 13 w(t)f FB(qui)i(corresp)q(ond)g
(\022)-19 b(a)9 b(un)h(ensem)o(ble)g(d'attributs)270
2761 y(de)j(t)o(yp)q(e)h FA(pthread)p 550 2761 V 11 w(mutexattr)p
741 2761 V 11 w(t)270 2806 y FB(\(on)f(utilisera)j(en)d(g)o(\023)-18
b(en)o(\023)g(eral)14 b(la)g(constan)o(te)g FA(pthread)p
1026 2806 V 11 w(mutexattr)p 1217 2806 V 11 w(default)c
FB(\).)p eop
%%Page: 138 146
138 145 bop 75 50 a FD(138)949 b Fz(CHAPITRE)14 b(18.)27
b(LES)14 b(MICR)o(O-NO)o(Y)m(A)o(UX)230 166 y FB({)21
b(Initialiser)16 b(la)e(v)n(ariable)h(par)e(un)h(app)q(el)g(\022)-19
b(a)13 b(la)h(fonction)270 236 y FA(int)19 b(pthread_)o(mut)o(ex_)o(in)
o(it\()o(pt)o(hre)o(ad_)o(mu)o(tex)o(_t)94 b(*p_mutex,)721
282 y(pthread_mu)o(tex)o(at)o(tr_)o(t)16 b(attr\);)230
352 y FB({)21 b(On)13 b(p)q(ourra)h(d)o(\023)-18 b(etruire)14
b(le)g(s)o(\023)-18 b(emaphore)14 b(par)f(un)h(app)q(el)g(\022)-19
b(a)13 b(la)h(fonction)270 422 y FA(int)19 b(pthread_)o(mut)o(ex_)o(de)
o(str)o(oy)o(\(pt)o(hre)o(ad)o(_mu)o(te)o(x_t)d(*p_mutex\))o(;)179
533 y Fu(18.4.4)55 b(Utilisation)17 b(des)i(s)o(\023)-27
b(emaphores)236 602 y FB(Op)o(\023)-18 b(eration)15 b(P)k(:)179
648 y(Un)13 b(app)q(el)h(\022)-19 b(a)13 b(la)h(fonction)179
710 y FA(pthread_m)o(ute)o(x_)o(loc)o(k)i(\(pthread_mu)o(te)o(x_t)g
(*pmutex\);)236 772 y FB(p)q(ermet)10 b(\022)-19 b(a)10
b(une)g(activit)o(\023)-18 b(e)12 b(de)e(r)o(\023)-18
b(ealiser)11 b(une)f(op)o(\023)-18 b(eration)12 b(P)d(sur)h(le)h(s)o
(\023)-18 b(emaphore.)10 b(Si)h(le)f(s)o(\023)-18 b(emaphore)11
b(est)e(d)o(\023)-18 b(ej\022)f(a)179 817 y(utilis)o(\023)h(e,)17
b(l'activit)o(\023)-18 b(e)17 b(est)e(blo)q(qu)o(\023)-18
b(ee)17 b(jusqu'\022)-19 b(a)16 b(la)g(r)o(\023)-18 b(ealisation)18
b(de)e(l'op)o(\023)-18 b(eration)17 b(V)e(\(par)h(une)f(autre)h
(activit)o(\023)-18 b(e\))179 863 y(qui)14 b(lib)o(\022)-18
b(erera)15 b(le)e(s)o(\023)-18 b(emaphore.)236 909 y(Op)o(\023)g
(eration)15 b(P)e(non)g(blo)q(quan)o(te)22 b(:)179 971
y FA(pthread_m)o(ute)o(x_)o(try)o(lo)o(ck)16 b(\(pthread_m)o(ute)o(x_)o
(t)h(*pmutex\);)179 1032 y FB(ren)o(v)o(oie)d(1)f(si)h(le)f(s)o(\023)
-18 b(emaphore)14 b(est)f(libre)179 1078 y(0)g(si)g(le)h(s)o(\023)-18
b(emaphore)14 b(est)f(o)q(ccup)o(\023)-18 b(e)14 b(par)f(une)h(autre)f
(activit)o(\023)-18 b(e)179 1124 y(-1)13 b(en)g(cas)g(d'erreur.)236
1215 y(Op)o(\023)-18 b(eration)15 b(V)k(:)179 1261 y(Un)13
b(app)q(el)h(\022)-19 b(a)13 b(la)h(fonction)179 1323
y FA(pthread_m)o(ute)o(x_)o(unl)o(oc)o(k\(p)o(thr)o(ea)o(d_m)o(ut)o
(ex_)o(t)i(*pmutex\);)236 1384 y FB(r)o(\023)-18 b(ealise)15
b(la)f(lib)o(\023)-18 b(eration)16 b(du)d(s)o(\023)-18
b(emaphore)14 b(d)o(\023)-18 b(esign)o(\023)g(e.)179
1495 y Fu(18.4.5)55 b(Les)18 b(conditions)g(\()o(\023)-27
b(ev)o(\022)g(enemen)n(ts\))236 1564 y FB(Les)12 b(conditions)j(p)q
(ermetten)o(t)e(de)f(blo)q(quer)i(une)e(activit)o(\023)-18
b(e)14 b(sur)e(une)h(atten)o(te)f(d')o(\023)-18 b(ev)o(\022)g(enemen)o
(t.)12 b(P)o(our)h(cela)179 1610 y(l'activit)o(\023)-18
b(e)17 b(doit)f(p)q(oss)o(\023)-18 b(eder)16 b(un)f(s)o(\023)-18
b(emaphore,)16 b(l'activit)o(\023)-18 b(e)17 b(p)q(eut)f(alors)g(lib)o
(\023)-18 b(erer)17 b(le)e(s)o(\023)-18 b(emaphore)16
b(sur)g(l')o(\023)-18 b(ev)o(\022)g(ene-)179 1656 y(men)o(t,)10
b(c'est-\022)-19 b(a-dire)7 b(:)j(elle)i(lib)o(\022)-18
b(ere)13 b(le)e(s)o(\023)-18 b(emaphore,)11 b(se)g(blo)q(que)h(en)f
(atten)o(te)g(de)g(l')o(\023)-18 b(ev)o(\022)g(enemen)o(t,)11
b(\022)-19 b(a)11 b(la)g(r)o(\023)-18 b(eception)179
1701 y(de)13 b(l')o(\023)-18 b(ev)o(\022)g(enemen)o(t)14
b(elle)h(reprend)f(le)f(s)o(\023)-18 b(emaphore.)236
1747 y FC(Initialisation)10 b FB(d'une)k(v)n(ariable)h(de)e(t)o(yp)q(e)
h FA(pthread_)o(con)o(d_t)179 1809 y(int)k(pthread_co)o(nd_)o(in)o(it)e
(\(pthread_c)o(ond)o(_t)g(*p_cond,)h(pthread_c)o(on)o(dat)o(tr)o(_t)f
(attr\);)236 1871 y FB(L'atten)o(te)d(sur)h(une)f(condition)179
1933 y FA(int)18 b(pthread_co)o(nd_)o(wa)o(it)e(\(pthread_c)o(ond)o(_t)
g(*p_cond,)h(pthread_m)o(ut)o(ex_)o(t)f(*p_mutex\);)236
1995 y FB(T)m(rois)d(\023)-18 b(etap)q(es)219 2057 y(1.)21
b(lib)o(\023)-18 b(eration)16 b(sur)d(s)o(\023)-18 b(emaphore)14
b(*p)p 739 2057 12 2 v 15 w(m)o(utex)219 2118 y(2.)21
b(activit)o(\023)-18 b(e)15 b(mise)e(en)h(sommeil)g(sur)f(l')o(\023)-18
b(ev)o(\022)g(enemen)o(t)219 2180 y(3.)21 b(r)o(\023)-18
b(eception)15 b(de)e(l')o(\023)-18 b(ev)o(\022)g(enemen)o(t,)14
b(r)o(\023)-18 b(ecup)o(\023)g(eration)15 b(du)e(s)o(\023)-18
b(emaphore)236 2242 y(La)20 b(condition)h(est)f(ind)o(\023)-18
b(ep)q(endan)o(te)22 b(de)d(l')o(\023)-18 b(ev)o(\023)g(enemen)o(t)20
b(et)g(n'est)f(pas)g(n)o(\023)-18 b(ecessairemen)o(t)22
b(v)n(alide)f(\022)-19 b(a)19 b(la)179 2288 y(r)o(\023)-18
b(eception)14 b(\(cf.)e(exemple\).)236 2334 y(Exemple,)i(le)g
(programme)g(suiv)n(an)o(t:)179 2395 y FA(pthread_m)o(ute)o(x_)o(t)j
(m;)179 2441 y(pthread_c)o(ond)o(_t)36 b(cond;)179 2487
y(int)254 b(condition)16 b(=)j(0;)179 2578 y(void)f(*ecoute\(v)o(oid)e
(*beurk\))179 2624 y({)257 2669 y(pthread_mu)o(tex)o(_l)o(ock)o(\(m\))o
(;)257 2715 y(sleep\(5\);)257 2761 y(while)i(\(!conditi)o(on\))336
2806 y(pthread_c)o(on)o(d_w)o(ait)o(\(c)o(ond)o(,)e(m\);)p
eop
%%Page: 139 147
139 146 bop 75 50 a Fz(18.4.)26 b(SYNCHR)o(ONISA)m(TION)1174
b FD(139)257 166 y FA(pthread_mu)o(tex)o(_u)o(nlo)o(ck\()o(m\))o(;)257
258 y(pthread_mu)o(tex)o(_l)o(ock)o(\(pr)o(in)o(t\);)257
303 y(printf\(")17 b(Condition)f(realisee\\)o(n"\))o(;)257
349 y(pthread_mu)o(tex)o(_u)o(nlo)o(ck\()o(pr)o(int)o(\);)179
395 y(})179 486 y(main\(\))179 532 y({)257 577 y(pthread_t)g(lathread;)
257 669 y(pthread_cr)o(eat)o(e\()o(lat)o(hre)o(ad)o(,)h(pthread_)o(att)
o(r_d)o(ef)o(aul)o(t,)f(ecoute,)h(NULL\);)257 714 y(sleep\(1\);)257
760 y(pthread_mu)o(tex)o(_l)o(ock)o(\(m\))o(;)257 806
y(condition)f(=)k(1;)257 851 y(pthread_mu)o(tex)o(_u)o(nlo)o(ck\()o
(m\))o(;)257 897 y(pthread_co)o(nd_)o(si)o(gna)o(l\(c)o(on)o(d\);)179
943 y(})236 1052 y FB(Un)12 b(autre)h(exemple)g(d'utilisation)i(de)e
(condition)h(a)o(v)o(ec)f(deux)f(threads)h(qui)g(utilisen)o(t)i(deux)e
(tamp)q(ons)179 1098 y(p)q(our)c(r)o(\023)-18 b(ealiser)11
b(la)e(commande)h(cp,)f(a)o(v)o(ec)g(une)g(activit)o(\023)-18
b(e)10 b(resp)q(onsable)h(de)e(la)h(lecture)g(et)e(l'autre)i(de)f(l')o
(\023)-18 b(ecriture.)179 1144 y(Les)19 b(conditions)i(p)q(ermetten)o
(t)f(de)f(sync)o(hroniser)i(les)e(deux)h(threads.)f(Ici)h(nous)f
(utilisons)j(la)e(syn)o(taxe)179 1189 y(NeXT/MA)o(CH.)179
1254 y FA(#include)c(<sdtio.h>)179 1300 y(#include)g(<fcntl.h>)179
1345 y(#import)36 b(<mach/cthr)o(ead)o(s.h)o(>)179 1437
y(enum)18 b({)h(BUFFER_A_L)o(IR)o(E)e(=)i(1,)g(BUFFER_A_)o(EC)o(RIR)o
(E)e(=)i(-1)g(};)179 1528 y(mutex_t)95 b(lock1;)37 b(/*)19
b(variables)d(de)j(protectio)o(n)e(et)h(d'exclusion)e(*/)179
1574 y(condition)o(_t)g(cond1;)179 1665 y(char)i(buff1[BUF)o(SIZ)o(];)
179 1711 y(int)38 b(nb_lu1;)179 1756 y(int)g(etat1)18
b(=)h(BUFFER_A_)o(LIR)o(E;)179 1802 y(int)38 b(ds,)18
b(dd;)156 b(/*)19 b(descripte)o(urs)d(source)h(et)i(destinatio)o(n)d
(*/)179 1893 y(lire\(\))174 b(/*)19 b(activite)d(lecture)h(*/)179
1939 y({)257 1985 y(for\(;;\))37 b({)19 b(/*)g(lecture)e(dans)h(le)h
(buffer)e(1)i(*/)336 2030 y(mutex_loc)o(k\()o(loc)o(k1\))o(;)336
2076 y(while)e(\(etat1)h(==)h(BUFFER_A)o(_EC)o(RI)o(RE\))414
2121 y(condition_)o(wai)o(t\()o(con)o(d1)o(,)e(lock1\);)336
2167 y(nb_lu1)g(=)i(read\(ds,)e(buff1,)g(BUFSIZ\);)336
2213 y(if)i(\(nb_lu1)d(==)j(0\))336 2258 y({)414 2304
y(etat1)f(=)h(BUFFER_A_E)o(CR)o(IRE)o(;)414 2350 y(condition_)o(sig)o
(na)o(l\(c)o(on)o(d1\))o(;)414 2395 y(mutex_unlo)o(ck\()o(lo)o(ck1)o
(\);)414 2441 y(break;)336 2487 y(})336 2532 y(etat1)e(=)j(BUFFER_A_)o
(EC)o(RIR)o(E;)336 2578 y(condition)o(_s)o(ign)o(al\()o(co)o(nd1)o(\);)
336 2624 y(mutex_unl)o(oc)o(k\(l)o(ock)o(1\))o(;)257
2669 y(})179 2715 y(})179 2806 y(ecrire\(\))p eop
%%Page: 140 148
140 147 bop 75 50 a FD(140)949 b Fz(CHAPITRE)14 b(18.)27
b(LES)14 b(MICR)o(O-NO)o(Y)m(A)o(UX)179 166 y FA({)257
212 y(for\(;;\))257 258 y({)19 b(/*)g(ecriture)e(du)i(buffer)e(1)i(*/)
336 303 y(mutex_loc)o(k\()o(loc)o(k1\))o(;)336 349 y(while)e(\(etat1)h
(==)h(BUFFER_A)o(_LI)o(RE)o(\))414 395 y(condition_)o(wai)o(t\()o(con)o
(d1)o(,)e(lock1\);)336 440 y(if)i(\(nb_lu1)d(==)j(0\))336
486 y({)414 532 y(mutex_unlo)o(ck\()o(lo)o(ck1)o(\);)414
577 y(exit\(0\);)336 623 y(})336 669 y(write\(dd,)d(buff1,)h(nb_lu1\);)
336 714 y(mutex_unl)o(oc)o(k\(l)o(ock)o(1\))o(;)336 760
y(etat1)g(=)j(BUFFER_A_)o(LI)o(RE;)336 806 y(condition)o(_s)o(ign)o
(al\()o(co)o(nd1)o(\);)257 851 y(})179 897 y(})179 988
y(main\(\))179 1034 y({)257 1080 y(ds)78 b(=)19 b(open\(argv[)o(1],)d
(O_RDONLY\))o(;)257 1125 y(dd)78 b(=)19 b(open\(argv[)o(2],)d
(O_WRONLY|)o(O_)o(TRU)o(NC|)o(O_)o(CRE)o(AT)o(,)h(0666\);)257
1171 y(lock1)h(=)h(mutex_allo)o(c\(\))o(;)257 1217 y(cond1)f(=)h
(condition_)o(all)o(oc)o(\(\);)257 1308 y(cthread_fo)o(rk\()o(\(c)o
(thr)o(ead)o(_f)o(n_t)o(\)l)o(ire)o(,)d(\(any_t\)0\);)257
1354 y(ecrire\(\);)g(/*)j(la)g(thread)e(principale)f(realise)h(les)h
(ecritures)f(*/)179 1399 y(})179 1535 y Fv(18.5)66 b(Ordonnancemen)n(t)
23 b(des)f(activit)o(\023)-32 b(es)179 1632 y Fu(18.5.1)55
b(L'ordonnancemen)n(t)17 b(POSIX)i(des)g(activit)o(\023)-27
b(es)236 1704 y FB(L'ordonnancemen)o(t)11 b(des)f(activit)o(\023)-18
b(es)11 b(DCE)e(bas)o(\023)-18 b(e)9 b(sur)h(POSIX)f(est)g(tr)o(\022)
-18 b(es)9 b(similaire)j(\022)-19 b(a)9 b(l'ordonnancemen)o(t)179
1749 y(des)g(activit)o(\023)-18 b(es)11 b(sous)f(MA)o(CH.)e(Deux)i(v)n
(aleurs)g(p)q(ermetten)o(t)g(de)f(d)o(\023)-18 b(e\014nir)11
b(le)e(mo)q(de)h(d'ordonnancemen)o(t)h(d'une)179 1795
y(activit)o(\023)-18 b(e)21 b(:)179 1841 y(la)13 b(p)q(olitiqu)q(e)i
(et)e(la)h(priorit)o(\023)-18 b(e.)179 1886 y(P)o(our)10
b(manipuler)i(ces)d(deux)i(v)n(aleurs,)f(il)h(v)o(ous)f(faut)f(cr)o
(\023)-18 b(eer)10 b(un)g(ob)r(jet)g(attribut)g(d'activit)o(\023)-18
b(e)11 b(\()p FA(pthread_att)o(r)p FB(\))179 1932 y(en)k(app)q(elan)o
(t)i FA(pthread_att)o(r_)o(cre)o(at)o(e\(\))o FB(,)12
b(puis)17 b(c)o(hanger)f(les)g(v)n(aleurs)g(par)g(d)o(\023)-18
b(efaut)16 b(a)o(v)o(ec)f(les)h(fonctions)179 1978 y(d)o(\023)-18
b(ecrites)15 b(plus)h(loin)g(et)e(cr)o(\023)-18 b(eer)15
b(la)g(pthread)g(a)o(v)o(ec)g(cet)f(ob)r(jet)g FA(pthread_att)o(r)p
FB(.)d(Ou)j(bien)i(la)f(pthread)g(p)q(eut)179 2023 y(elle-m)o(^)-18
b(eme)14 b(c)o(hanger)g(ses)f(deux)h(v)n(aleurs,)g(priorit)o(\023)-18
b(e)15 b(et)e(p)q(olitique.)236 2070 y(Les)g(fonctions)i(son)o(t)7
b(:)179 2136 y FA(#include)16 b(<pthread.h)o(>)179 2182
y(pthread_a)o(ttr)o(_s)o(ets)o(ch)o(ed\()o(pth)o(re)o(ad_)o(at)o(tr_)o
(t)g(*attr,)i(int)g(politique\))o(;)236 2247 y FB(Les)13
b(di\013)o(\023)-18 b(eren)o(tes)15 b(p)q(olitiques)h(p)q(ossibles)g
(son)o(t)7 b(:)179 2313 y FC(SCHED)p 337 2313 14 2 v
15 w(FIF)o(O)20 b FB(La)10 b(thread)h(la)h(plus)g(prioritaire)h(s'ex)o
(\023)-18 b(ecute)11 b(jusqu'\022)-19 b(a)11 b(ce)g(qu'elle)h(blo)q
(que.)g(Si)f(il)h(y)f(a)f(plus)270 2358 y(d'une)j(pthread)h(de)f
(priorit)o(\023)-18 b(e)15 b(maxim)o(um,)f(la)f(premi)o(\022)-18
b(ere)14 b(qui)g(obtien)o(t)g(le)g(cpu)f(s'ex)o(\023)-18
b(ecute)13 b(jusqu'\022)-19 b(a)14 b(ce)270 2404 y(qu'elle)h(blo)q
(que.)179 2468 y FC(SCHED)p 337 2468 V 15 w(RR)21 b FB(Round)12
b(Robin.)h(La)e(thread)h(la)g(plus)h(prioritaire)g(s'ex)o(\023)-18
b(ecute)12 b(jusqu'\022)-19 b(a)12 b(ce)f(qu'elle)i(blo)q(que.)270
2514 y(Les)g(threads)h(de)f(m)o(^)-18 b(eme)13 b(priorit)o(\023)-18
b(e)15 b(maxim)o(um)f(son)o(t)f(organis)o(\023)-18 b(ees)15
b(a)o(v)o(ec)f(le)f(princip)q(e)i(du)f(tourniquet,)270
2559 y(c'est-\022)-19 b(a-dire)14 b(qu'il)g(existe)h(un)e(quan)o(tum)h
(de)g(temps)f(au)h(b)q(out)g(duquel)g(le)g(cpu)g(est)f(pr)o(\023)-18
b(eempt)o(\023)g(e)14 b(p)q(our)270 2605 y(une)g(autre)f(thread)h(\(v)o
(oire)g(Chapitre)g(6)f(sur)g(les)h(Pro)q(cessus\).)179
2669 y FC(SCHED)p 337 2669 V 15 w(OTHER)20 b FB(Comp)q(ortemen)o(t)10
b(par)f(d)o(\023)-18 b(efaut.)9 b(T)m(ous)g(les)h(threads)g(son)o(t)f
(dans)h(le)g(m)o(^)-18 b(eme)9 b(touniquet,)270 2715
y(il)19 b(n'y)e(a)g(pas)h(de)g(niv)o(eau)h(de)e(priorit)o(\023)-18
b(e,)19 b(ceci)f(p)q(ermet)f(l'absence)i(de)f(famine.)f(Mais)i(les)f
(threads)270 2761 y(a)o(v)o(ec)d(une)f(p)q(olitiqu)q(e)j
FA(SCHED)p 693 2761 12 2 v 12 w(FIFO)12 b FB(ou)j FA(SCHED)p
952 2761 V 12 w(RR)e FB(p)q(euv)o(en)o(t)j(placer)f(les)g(threads)g
FA(SCHED)p 1573 2761 V 12 w(OTHER)d FB(en)270 2806 y(situation)j(de)f
(famine.)p eop
%%Page: 141 149
141 148 bop 75 50 a Fz(18.6.)26 b(LES)14 b(V)-5 b(ARIABLES)15
b(SP)590 39 y(\023)585 50 y(ECIFIQUES)836 39 y(\022)829
50 y(A)f(UNE)g(THREAD)614 b FD(141)179 166 y FC(SCHED)p
337 166 14 2 v 15 w(F)o(G)p 414 166 V 15 w(NP)20 b FB(\(option)d(DCE)f
(non)g(p)q(ortable\))h(M)o(^)-18 b(eme)16 b(p)q(olitique)i(que)e
FA(SCHED)p 1449 166 12 2 v 13 w(OTHER)d FB(mais)j(l'or-)270
212 y(donnanceur)f(p)q(eut)f(faire)e(\023)-18 b(ev)o(oluer)15
b(les)e(priorit)o(\023)-18 b(es)15 b(des)e(threads)h(p)q(our)g(assurer)
g(l')o(\023)-18 b(equit)o(\023)g(e.)179 273 y FC(SCHED)p
337 273 14 2 v 15 w(BG)p 418 273 V 16 w(NP)20 b FB(\(option)f(DCE)e
(non)h(p)q(ortable\))h(M)o(^)-18 b(eme)17 b(p)q(olitique)k(que)c
FA(SCHED)p 1466 273 12 2 v 12 w(FG)p 1518 273 V 14 w(NP)p
FB(,)f(mais)i(les)270 318 y(threads)10 b(a)o(v)o(ec)f(une)g(p)q
(olitique)j FA(SCHED)p 809 318 V 12 w(FIFO)7 b FB(ou)i
FA(SCHED)p 1057 318 V 12 w(RR)f FB(p)q(euv)o(en)o(t)i(placer)g(les)f
(threads)h FA(SCHED)p 1651 318 V 12 w(BG)p 1703 318 V
13 w(NP)270 364 y FB(en)j(situation)j(de)d(famine.)179
432 y FA(pthread_a)o(ttr)o(_s)o(etp)o(ri)o(o\(p)o(thr)o(ea)o(d_a)o(tt)o
(r_t)j(*attr,)h(int)i(prio\);)236 500 y FB(La)13 b(priorit)o(\023)-18
b(e)15 b(v)n(arie)f(dans)g(un)f(in)o(terv)n(alle)j(d)o(\023)-18
b(e\014ni)14 b(par)g(la)f(p)q(olitique)q(:)179 546 y(PRI)p
249 546 V 14 w(OTHER)p 404 546 V 13 w(MIN)g Ft(<)p FB(=)g(prio)h
Ft(<)p FB(=)e(PRI)p 800 546 V 14 w(OTHER)p 955 546 V
14 w(MAX)179 592 y(PRI)p 249 592 V 14 w(FIF)o(O)p 356
592 V 13 w(MIN)h Ft(<)p FB(=)g(prio)h Ft(<)p FB(=)e(PRI)p
752 592 V 14 w(FIF)o(O)p 859 592 V 14 w(MAX)179 637 y(PRI)p
249 637 V 14 w(RR)p 319 637 V 14 w(MIN)h Ft(<)p FB(=)f(prio)i
Ft(<)p FB(=)f(PRI)p 716 637 V 14 w(RR)p 786 637 V 14
w(MAX)179 683 y(PRI)p 249 683 V 14 w(F)o(G)p 317 683
V 14 w(MIN)p 409 683 V 13 w(NP)g Ft(<)p FB(=)g(prio)h
Ft(<)p FB(=)e(PRI)p 782 683 V 14 w(F)o(G)p 850 683 V
14 w(MAX)p 957 683 V 14 w(NP)179 729 y(PRI)p 249 729
V 14 w(BG)p 320 729 V 14 w(MIN)p 412 729 V 14 w(NP)g
Ft(<)p FB(=)h(prio)h Ft(<)p FB(=)e(PRI)p 785 729 V 15
w(BG)p 857 729 V 14 w(MAX)p 964 729 V 13 w(NP)236 820
y(Ces)f(deux)h(fonctions)g(retournen)o(t)g(0)f(en)g(cas)g(de)g(succ)o
(\022)-18 b(es)12 b(et)f(-1)f(sinon.)i(La)f(v)n(aleur)h(de)g
FC(errno)f FB(indiquan)o(t)179 866 y(si)i(l'erreur)h(est)f(une)h
(question)g(de)g(param)o(\022)-18 b(etres)13 b(ou)h(de)f(p)q
(ermission.)236 911 y(Les)i(deux)g(fonctions)g(que)g(l'on)g(p)q(eut)f
(app)q(eler)i(sur)f(une)f(pthread)i(p)q(our)e(c)o(hanger)i(sa)e
(priorit)o(\023)-18 b(e)16 b(ou)e(sa)179 957 y(p)q(olitique)i(son)o(t)7
b(:)179 1018 y FA(pthread_s)o(etp)o(ri)o(o\(p)o(th)o(rea)o(d_t)16
b(*unepthre)o(ad)o(,)h(int)h(prio\);)179 1063 y(pthread_s)o(ets)o(ch)o
(ed\()o(pt)o(hre)o(ad_)o(t)e(*unepthrea)o(d,)g(int)j(politique)o(,)e
(int)h(prio\);)236 1124 y FB(Il)9 b(est)g(p)q(ossible)i(de)e(conna)l(^)
-15 b(\020tre)11 b(la)e(priorit)o(\023)-18 b(e)10 b(ou)f(la)h(p)q
(olitique)i(d'une)d(pthread)h(ou)f(d'un)g(ob)r(jet)g(pthread)p
1688 1124 V 15 w(attr)179 1170 y(a)o(v)o(ec)e(:)179 1230
y FA(pthread_a)o(ttr)o(_g)o(etp)o(ri)o(o\(p)o(thr)o(ea)o(d_a)o(tt)o
(r_t)16 b(*attr,int)g(prio\);)179 1276 y(pthread_a)o(ttr)o(_g)o(ets)o
(ch)o(ed\()o(pth)o(re)o(ad_)o(at)o(tr_)o(t)g(*attr,int)h(politique)o
(\);)179 1322 y(pthread_g)o(etp)o(ri)o(o\(p)o(th)o(rea)o(d_t)f
(*unepthre)o(ad)o(,)h(int)h(prio\);)179 1367 y(pthread_g)o(ets)o(ch)o
(ed\()o(pt)o(hre)o(ad_)o(t)e(*unepthrea)o(d,)g(int)j(politique)o(\);)
179 1498 y Fv(18.6)66 b(Les)22 b(v)l(ariables)i(sp)o(\023)-32
b(eci\014ques)22 b(\022)-33 b(a)21 b(une)h(thread)236
1580 y FB(Av)o(ec)12 b(un)h(pro)q(cessus)g(m)o(ulti-threads,)h(nous)f
(sommes)f(dans)h(une)f(situation)i(de)f(partage)f(de)h(donn)o(\023)-18
b(ees.)179 1626 y(T)m(outes)10 b(les)h(donn)o(\023)-18
b(ees)11 b(du)g(pro)q(cessus)g(son)o(t)f(\022)-19 b(a)11
b(priori)g(manipulabl)q(es)i(par)e(toutes)f(les)h(threads.)f(Or)g
(certaines)179 1672 y(donn)o(\023)-18 b(ees)16 b(son)o(t)f(critiques)h
(et)f(di\016cilemen)o(t)i(partageables.)f(Premi)o(\022)-18
b(eremen)o(t)16 b(ce)f(son)o(t)g(les)g(donn)o(\023)-18
b(ees)16 b(de)f(la)179 1717 y(biblioth)o(\022)-18 b(equ)q(e)19
b(standard.)f(P)o(our)f(les)h(fonctions)g(de)f(la)g(biblioth\022)-18
b(eque)20 b(standard,)e(on)f(p)q(eut)g(r)o(\023)-18 b(esoudre)18
b(le)179 1763 y(probl)o(\022)-18 b(eme)14 b(en)f(utilisan)o(t)j(un)e(s)
o(\023)-18 b(emaphore)14 b(d'exclusion)h(m)o(utuelle)g
FA(pthread_mu)o(te)o(x_t)9 b FB(p)q(our)14 b(POSIX.)236
1809 y(Mais)20 b(certaines)f(v)n(ariables)h(ne)f(p)q(euv)o(en)o(t)f(^)
-18 b(etre)18 b(prot)o(\023)-18 b(eg)o(\023)g(ees.)19
b(C'est)e(le)i(cas)f(de)h(la)g(v)n(ariables)h FA(errno)p
FB(,)179 1854 y(comme)d(nous)g(l'a)o(v)o(ons)h(vu)f(pr)o(\023)-18
b(ec)o(\023)g(edemmen)o(t.)17 b(P)o(our)h(cette)e(v)n(ariable,)j(la)e
(solution)i(est)e(d'a)o(v)o(oir)g(une)h(v)n(a-)179 1900
y(riable)d(par)e(thread.)g(Ainsi)i(le)e(\014c)o(hier)h
FA(<errno.h>)c FB(est)j(mo)q(di\014)o(\023)-18 b(e)14
b(et)f(con)o(tien)o(t)8 b(:)179 2006 y FA(extern)17 b(int)i(*_errno\()o
(\);)179 2052 y(#define)e(errno)g(\(*_errno\(\)\))236
2113 y FB(La)e(v)n(aleur)g FA(errno)e FB(est)h(obten)o(ue)i(par)e(une)h
(fonction)h(qui)g(retourne)f(la)g(v)n(aleur)h(de)e FA(errno)f
FB(asso)q(ci)o(\023)-18 b(ee)16 b(\022)-19 b(a)179 2158
y(la)13 b(thread)h(qui)g(fait)g(l'app)q(el)g(\022)-19
b(a)p 637 2158 V 27 w FA(errno)11 b FB(.)179 2268 y Fu(18.6.1)55
b(Princip)r(e)17 b(g)o(\023)-27 b(en)o(\023)g(eral)18
b(des)g(donn)o(\023)-27 b(ees)19 b(sp)o(\023)-27 b(eci\014ques,)17
b(POSIX)236 2338 y FB(L'id)o(\023)-18 b(ee)13 b(des)f(donn)o(\023)-18
b(ees)13 b(sp)o(\023)-18 b(eci\014que)13 b(est)f(de)g(cr)o(\023)-18
b(eer)12 b(un)g(v)o(ecteur)g(p)q(our)g(c)o(haque)h(donn)o(\023)-18
b(ee)13 b(sp)o(\023)-18 b(eci\014que.)13 b(Ainsi)179
2384 y(p)q(our)20 b(des)f(donn)o(\023)-18 b(ees)20 b(sp)o(\023)-18
b(eci\014que)21 b(statiques,)f(c)o(haque)g(thread)g(p)q(oss)o(\022)-18
b(ede)20 b(son)g(propre)g(exemplaire.)h(Les)179 2429
y(donn)o(\023)-18 b(ees)14 b(sp)o(\023)-18 b(eci\014ques)15
b(son)o(t)f(iden)o(ti\014)o(\023)-18 b(ees)15 b(par)e(des)h(cl)o(\023)
-18 b(es)13 b(de)h(t)o(yp)q(e)f FA(pthread_ke)o(y_)o(t)p
FB(.)179 2539 y Fu(18.6.2)55 b(Cr)o(\023)-27 b(eation)18
b(de)h(cl)o(\023)-27 b(es)236 2609 y FB(La)10 b(cr)o(\023)-18
b(eation)11 b(d'une)g(cl)o(\023)-18 b(e)10 b(est)g(li)o(\023)-18
b(ee)11 b(\022)-19 b(a)10 b(la)g(cr)o(\023)-18 b(eation)11
b(d'un)g(tableau)g(statique)g(\(v)n(ariable)h(globale\),)g
(initialis\023)-18 b(e)179 2654 y(\022)f(a)13 b(NULL)f(\022)-19
b(a)13 b(la)h(cr)o(\023)-18 b(eation.)14 b(La)f(fonction)179
2715 y FA(#include)j(<pthread.h)o(>)179 2761 y(int)i(pthread_ke)o(ycr)o
(ea)o(te)e(\(pthread_k)o(ey_)o(t)g(*p_cle,)630 2806 y(void)194
b(\(*destructe)o(ur)o(\)\(v)o(oid)16 b(*valeur\)\))o(;)p
eop
%%Page: 142 150
142 149 bop 75 50 a FD(142)949 b Fz(CHAPITRE)14 b(18.)27
b(LES)14 b(MICR)o(O-NO)o(Y)m(A)o(UX)236 166 y FB(p)q(ermet)h(la)f(cr)o
(\023)-18 b(eation)15 b(du)g(tableau,)g(0)e(succ)o(\022)-18
b(es)15 b(et)f(-1)f(ec)o(hec.)h(La)g(structure)h(p)q(oin)o(t)o(\023)-18
b(ee)15 b(par)f FA(p_cle)e FB(nous)179 212 y(p)q(ermettra)18
b(d'acc)o(\022)-18 b(eder)19 b(aux)f(v)n(aleurs)i(sto)q(c)o(k)o(\023)
-18 b(ees,)18 b(la)h(cl)o(\023)-18 b(e)19 b(est)e(\023)-18
b(evidemmen)o(t)19 b(la)g(m)o(^)-18 b(eme)18 b(p)q(our)g(toutes)h(les)
179 258 y(threads.)d(Le)g(param)o(\022)-18 b(etre)17
b FA(destruct)o(eur)12 b FB(de)k(t)o(yp)q(e)g(p)q(oin)o(teur)i(sur)e
(fonction)h(prenan)o(t)g(un)g(p)q(oin)o(teur)g(sur)179
303 y(v)o(oid)c(en)g(param)o(\022)-18 b(etre)12 b(et)g(ren)o(v)o(o)o(y)
o(an)o(t)i(v)o(oid,)f(donne)g(l'adresse)g(d'une)g(fonction)h(qui)f(est)
f(ex)o(\023)-18 b(ecut)o(\023)g(ee)13 b(\022)-19 b(a)12
b(la)h(ter-)179 349 y(minaison)h(de)e(la)g(thread)g(\(ce)g(qui)h(p)q
(ermet)f(de)f(faire)i(le)f(m)o(\023)-18 b(enage\).)12
b(Si)g(ce)g(p)q(oin)o(teur)h(est)f(n)o(ul,)g(l'information)179
395 y(n'est)h(pas)g(d)o(\023)-18 b(etruite)14 b(\022)-19
b(a)13 b(la)h(terminaison)h(de)f(l'activit)o(\023)-18
b(e.)179 505 y Fu(18.6.3)55 b(Lecture/)o(\023)-27 b(ecriture)16
b(d'une)i(v)m(ariable)f(sp)o(\023)-27 b(eci\014que)236
575 y FB(La)13 b(fonction)179 637 y FA(#include)j(<pthread.h)o(>)179
683 y(int)i(pthread_ge)o(tsp)o(ec)o(ifi)o(c)f(\(pthread)o(_ke)o(y_)o(t)
g(*p_cl\023)-20 b(e,)17 b(void)h(**pvaleur)o(\);)236
745 y FB(p)q(ermet)13 b(la)g(lecture)h(de)e(la)i(v)n(aleur)f(qui)h(est)
e(copi)o(\023)-18 b(e)14 b(\022)-19 b(a)12 b(l'adresse)i
FA(pvaleur)c FB(retourne)j(0)f(ou)h(-1)f(selon)i(que)179
791 y(l'app)q(el)h(\022)-19 b(a)13 b(r)o(\023)-18 b(eussi)14
b(ou)f(non.)g(La)g(fonction)179 853 y FA(#include)j(<pthread.h)o(>)179
899 y(int)i(pthread_se)o(tsp)o(ec)o(ifi)o(c)f(\(pthread)o(_ke)o(y_)o(t)
g(*p_cl\023)-20 b(e,)17 b(void)h(*valeur\);)236 961 y
FB(p)q(ermet)c(l')o(\023)-18 b(ecriture)15 b(\022)-19
b(a)14 b(l'emplacemen)o(t)h(sp)o(\023)-18 b(eci\014)o(\023)g(e)16
b(de)d FA(valeur)f FB(retourne)i(0)g(ou)g(-1)f(selon)i(que)f(l'app)q
(el)i(a)179 1007 y(r)o(\023)-18 b(eussit)14 b(ou)f(non.)179
1138 y Fv(18.7)66 b(Les)14 b(fonctions)h(standardes)g(utilisan)n(t)j
(des)d(zones)f(sta-)179 1212 y(tiques)236 1295 y FB(Certaines)h
(fonctions)h(standardes)f(comme)f FA(ttyname\(\))d FB(ou)j
FA(readdir\(\))c FB(retourne)15 b(l'adresse)g(d'une)179
1341 y(zone)c(statique.)g(Plusieurs)i(threads)e(en)g(concurrence)g(p)q
(euv)o(en)o(t)h(donc)f(nous)g(amener)g(\022)-19 b(a)10
b(des)h(situations)i(in-)179 1386 y(coh)o(\023)-18 b(eren)o(tes.)11
b(La)g(solution)i(des)e(s)o(\023)-18 b(emaphores)12 b(d'exclusion)g
(\023)-18 b(etan)o(t)11 b(co)q(^)-20 b(uteuse,)11 b(ces)g(fonctions)h
(son)o(t)f(r)o(\023)-18 b(e)o(\023)g(ecrites)179 1432
y(p)q(our)14 b(la)f(biblioth)o(\022)-18 b(eq)q(ue)16
b(de)d(thread)h(de)f(fa\030)-17 b(con)13 b(\022)-19 b(a)12
b(^)-18 b(etre)13 b(r)o(\023)-18 b(een)o(tran)o(tes.)236
1478 y(A)o(tten)o(tion)14 b(les)g(probl)o(\022)-18 b(emes)15
b(de)e(r)o(\023)-18 b(een)o(trance)14 b(p)q(euv)o(en)o(t)h(a)o(v)o(oir)
f(lieu)h(en)e(utilisan)o(t)j(des)d(app)q(els)i(syst)o(\022)-18
b(emes)179 1523 y(non)13 b(r)o(\023)-18 b(een)o(tran)o(t)14
b(dans)g(les)g(handlers)g(de)g(signaux)21 b(!)12 b(Ceci)i(sans)f
(utiliser)j(de)d(threads)20 b(!)p eop
%%Page: 143 151
143 150 bop 1775 50 a FD(143)179 478 y Fw(Chapitre)32
b(19)179 686 y Fy(En)m(tr)m(\023)-56 b(ees-sorties)40
b(a)m(v)-6 b(anc)m(\023)-56 b(ees)236 897 y FB(Les)12
b(en)o(tr)o(\023)-18 b(ees-sorties)12 b(a)o(v)n(anc)o(\023)-18
b(ees)12 b(son)o(t)g(des)f(en)o(tr)o(\023)-18 b(ees-sorties)13
b(qui)f(p)q(ermetten)o(t)g(de)f(faire)h(abstraction)h(du)179
943 y(r)o(\023)-18 b(eseau)10 b(ou)g(d'utiliser)i(le)f(proto)q(cole)g
(UDP)f(a)o(v)o(ec)g(des)g(commandes)h(d'en)o(v)o(oi)g(et)f(de)g(r)o
(\023)-18 b(eception)11 b(de)f(messages.)179 989 y(Les)j(deux)h
(grandes)h(familles)g(de)f(syst)o(\022)-18 b(emes)14
b(UNIX)e(on)o(t)i(prop)q(os)o(\023)-18 b(e)15 b(c)o(hacune)f(leur)g(m)o
(\023)-18 b(etho)q(de.)14 b(D'une)g(part)179 1034 y(les)f
FA(streams)d FB(de)j(SYS)g(V,)f(et)g(d'autre)h(part)g(les)h
FA(sockets)9 b FB(de)k(BSD.)g(Dans)h(les)f(deux)h(cas,)e(le)h(princip)q
(e)i(de)179 1080 y(conserv)n(ation)g(de)d(l'in)o(terface)i
FA(read)d FB(et)h FA(write)31 b FB(a)11 b(\023)-18 b(et)o(\023)g(e)13
b(conserv)o(\023)-18 b(e)13 b(au)g(maxim)o(um.)h(Le)e(c)o(hoix)i
FC(POSIX)f FB(est)179 1126 y(l'utilisatio)q(n)j(de)d
FA(sockets)p FB(.)179 1258 y Fv(19.1)66 b(Les)22 b(streams)236
1341 y FB(Les)14 b(en)o(tr)o(\023)-18 b(ees-sorties)15
b(a)o(v)n(anc)o(\023)-18 b(ees)14 b(d)o(\023)-18 b(ecrites)15
b(ici)f(son)o(t)g(sp)o(\023)-18 b(eci\014ques)16 b(au)e(syst)o(\022)-18
b(eme)14 b(V.4)f(d'A)m(TT,)f(les)i(outils)179 1386 y(corresp)q(ondan)o
(t)e(sous)f(BSD)g(son)o(t)g(les)g(so)q(c)o(k)o(ets,)g(qui)g(gr^)-19
b(ace)11 b(\022)-19 b(a)10 b(leurs)h(p)q(ossibil)q(it)o(\023)-18
b(es)14 b(r)o(\023)-18 b(eseaux,)11 b(on)o(t)e(\023)-18
b(ete)10 b(c)o(hoisies)179 1432 y(dans)k(la)f(norme)h(POSIX.)236
1478 y(On)f(trouv)o(e)h(dans)g(les)g(impl)o(\023)-18
b(emen)o(tations)16 b(Syst)o(\022)-18 b(eme)14 b(V.4)e(un)i(m)o(\023)
-18 b(ecanisme)14 b(d'in)o(terfa\030)-17 b(cage)15 b(des)e(driv)o(ers)
179 1523 y(de)k(p)o(\023)-18 b(eriph)o(\023)g(eriques)19
b(app)q(el)o(\023)-18 b(e)18 b FA(streams)p FB(.)c(\(A)o(tten)o(tion)j
(ce)g(ne)g(son)o(t)f(pas)i(les)f(canaux)h(de)e(la)i(biblioth)o(\022)-18
b(eque)q(s)179 1569 y(standard\).)12 b(Les)g(streams)g(am)o(\023)-18
b(elioren)o(t)14 b(le)e(pr)o(\023)-18 b(ec)o(\023)g(eden)o(t)12
b(m)o(\023)-18 b(ecanisme)13 b(de)f FA(clist)e FB(utilis)o(\023)-18
b(e)14 b(p)q(our)e(bu\013eriser)i(les)179 1615 y(en)o(tr)o(\023)-18
b(ees-sorties.)236 1661 y(Le)12 b(stream)f(fournit)i(un)f(canal)h
(bidirectionnel)i(en)o(tre)d(le)g(pro)q(cessus)h(et)e(le)h(driv)o(er)h
(de)e(terminal)j(\(ou)d(de)179 1706 y(pseudo-terminal\))k(\(v)o(oir)f
(\014gure)f(19.1\).)f(Un)h(app)q(ort)h(des)f FA(streams)c
FB(est)k(de)g(p)q(ouv)o(oir)h(ins)o(\023)-18 b(erer)14
b(un)f(mo)q(dule)179 1752 y(de)f(traitemen)o(t)h(en)o(tre)f(la)h(t)o(^)
-18 b(ete)12 b(du)h(stream)f(et)g(le)h(driv)o(er)g(de)f(terminal)i
(comme)e(le)h(mon)o(tre)f(la)h(\014gure)g(19.2.)236 1798
y(Le)f(mo)q(dule)h(de)f(traitemen)o(t)h(doit)f(^)-18
b(etre)11 b(link)o(\023)-18 b(e)14 b(au)e(no)o(y)o(au)h(p)q(our)f
(fonctionner,)h(ce)f(qui)h(limite)h(la)e(p)q(ort)o(\023)-18
b(ee)179 1843 y(de)13 b(cet)g(a)r(jout.)236 1889 y(Les)18
b(streams)h(o\013ren)o(t)f(des)h(fonctionnalit)o(\023)-18
b(es)21 b(plus)e(larges)g(que)g(les)f(deux)h(app)q(els)h(classiques)g
FA(read)179 1935 y FB(et)c FA(write)p FB(.)d(Il)k(est)f(p)q(ossible)j
(sur)d(les)h FA(streams)c FB(d'utiliser)19 b(deux)e(app)q(els)g
FA(putmsg)d FB(et)i FA(putpmsg)d FB(qui)k(p)q(er-)179
1981 y(metten)o(t)e(d'en)o(v)o(o)o(y)o(er)i(des)f(informations)i
("express")f(ou)f(des)g(informations)i(de)e(con)o(tr^)-19
b(ole)17 b(\(des)f(signaux)179 2026 y(par)d(exemple\).)h(Ceci)f(p)q
(ermet)h(en)f(particulier)j(de)d(r)o(\023)-18 b(ealiser)15
b(un)e(mo)q(dule)i(de)e(traitemen)o(t)h(R)o(\023)-18
b(eseau,)13 b(qui)h(v)n(a)179 2072 y(p)q(ermettre)i(d'utiliser)j(un)d
(\014c)o(hier)i(\022)-19 b(a)16 b(distance)i(comme)e(un)h(\014c)o(hier)
g(lo)q(cal,)h(tout)e(en)g(p)q(ermettan)o(t)h(gr^)-19
b(ace)179 2118 y(\022)g(a)15 b FA(putmsg)i(et)i(getmsg)13
b FB(de)i(p)q(ouv)o(oir)j(en)o(v)o(o)o(y)o(er)e(des)f(commandes)i(au)e
(mo)q(dule)i(de)f(traitemen)o(t)g(ou)g(d'en-)179 2163
y(v)o(o)o(y)o(er)g(des)f(messages)h(hord)g(bande.)g(On)g(ne)f(trouv)o
(era)h(des)g(impl)o(\023)-18 b(emen)o(tations)19 b(des)c(streams)h(que)
g(dans)179 2209 y(les)d(impl)o(\023)-18 b(emen)o(tation)q(s)16
b(de)d(Systeme)h(V.4.)e(Ce)g(qui)i(n'est)f(pas)h(le)f(cas)h(des)f(HP)g
(a)o(v)o(ec)g(le)g(syst)o(\022)-18 b(eme)14 b(9.)179
2341 y Fv(19.2)66 b(Les)22 b(so)r(c)n(k)n(ets)236 2424
y FB(Les)9 b(so)q(c)o(k)o(ets)g(on)o(t)f(\023)-18 b(et)o(\023)g(e)9
b(cr)o(\023)-18 b(ees)9 b(dans)g(l'impl)o(\023)-18 b(emen)o(tati)q(on)
12 b(BSD.)d(Ils)g(p)q(ermetten)o(t)g(de)g(r)o(\023)-18
b(ealiser)11 b(des)d(\023)-18 b(ec)o(hanges)179 2469
y(in)o(terpro)q(cessus)17 b(sans)f(liens)h(d'h)o(\023)-18
b(eritage,)16 b(et)g(m)o(^)-18 b(eme)15 b(ce)g(qui)h(est)g(le)f(p)q
(oin)o(t)i(fort,)e(en)o(tre)g(pro)q(cessus)i(s'ex)o(\023)-18
b(e-)179 2515 y(cutan)o(t)14 b(sur)h(des)f(mac)o(hines)i(di\013)o(\023)
-18 b(eren)o(tes.)15 b(La)f(comm)o(unication)j(se)d(faisan)o(t)h(alors)
h(gr^)-19 b(ace)14 b(\022)-19 b(a)14 b(un)h(r)o(\023)-18
b(eseau)14 b(de)179 2561 y(fa\030)-17 b(con)13 b(transparen)o(te)h(p)q
(our)g(l'utilisateur.)236 2606 y(Les)f(so)q(c)o(k)o(ets)g(son)o(t)g
(des)g(liens)i(bidirectionnel)q(s)g(de)e(comm)o(unication,)i(ils)f(on)o
(t)e(\023)-18 b(et)o(\023)g(e)13 b(mis)g(au)g(p)q(oin)o(t)h(p)q(our)179
2652 y(p)q(ouv)o(oir)h(manipuler)g(de)e(fa\030)-17 b(con)14
b(homog)o(\022)-18 b(ene)14 b(les)f(comm)o(unications)j(en)o(tre)d(mac)
o(hines.)236 2698 y(Les)g(so)q(c)o(k)o(ets)h(on)o(t)e(\023)-18
b(et)o(\023)g(e)13 b(d)o(\023)-18 b(e\014nis)15 b(de)e(fa\030)-17
b(con)13 b(\022)-19 b(a)13 b(p)q(ouv)o(oir)i(uni\014er)g(tous)e(les)h
(syst)o(\022)-18 b(emes)14 b(de)f(comm)o(unication)179
2744 y(in)o(ter)h(pro)q(cessus)g(\(IPC\))e(\022)-19 b(a)13
b(un)h(tr)o(\022)-18 b(es)13 b(haut)g(niv)o(eau,)i(en)e(p)q(ermettan)o
(t)g(\022)-19 b(a)13 b(la)h(fois:)230 2806 y({)21 b(de)12
b(garder)g(une)g(compatibilit)o(\023)-17 b(e)14 b(ascendan)o(te)f(a)o
(v)o(ec)e(le)h(princip)q(e)i(fondamen)o(tal)f(des)f(\014ltres)g(UNIX)f
(et)p eop
%%Page: 144 152
144 151 bop 75 50 a FD(144)750 b Fz(CHAPITRE)14 b(19.)27
b(ENTR)1332 39 y(\023)1327 50 y(EES-SOR)m(TIES)14 b(A)-5
b(V)g(ANC)1762 39 y(\023)1757 50 y(EES)661 1005 y
 currentpoint currentpoint translate 0.60747 0.60747 scale neg exch
neg exch translate
 661
1005 a 14 w @beginspecial 0 @llx 0 @lly 230 @urx 286
@ury 2300 @rwi @setspecial
%%BeginDocument: eps/streams.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-242.0 352.0 translate
1 -1 scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
/Times-Roman findfont 240.00 scalefont setfont
4351 1426 m
gs 1 -1 sc (Processus Utilisateur) col-1 show gr
7.500 slw
% Polyline
	[66.7] 0 setdash
n 4050 2175 m 6750 2175 l  6750 5850 l  4050 5850 l  clp  gs col-1 s gr 	[] 0 setdash
% Polyline
n 5250 1575 m 5250 1575 l gs col-1 s gr
15.000 slw
% Polyline
n 4875 1650 m 4875 1650 l gs col-1 s gr
7.500 slw
% Polyline
n 6075 1650 m 6075 1650 l gs col-1 s gr
15.000 slw
% Polyline
n 5400 1575 m 5400 2550 l  gs col-1 s gr 
n 5340.00 1815.00 m 5400.00 1575.00 l 5460.00 1815.00 l  5400.50 1815.50 l 5340.00 1815.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
n 5460.00 2310.00 m 5400.00 2550.00 l 5340.00 2310.00 l  5400.50 2310.50 l 5460.00 2310.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
7.500 slw
% Polyline
n 4201 1126 m 6526 1126 l  6526 1576 l  4201 1576 l  clp  gs col-1 s gr 
15.000 slw
% Polyline
n 5400 3525 m 5400 4500 l  gs col-1 s gr 
n 5340.00 3765.00 m 5400.00 3525.00 l 5460.00 3765.00 l  5400.50 3765.50 l 5340.00 3765.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
n 5460.00 4260.00 m 5400.00 4500.00 l 5340.00 4260.00 l  5400.50 4260.50 l 5460.00 4260.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
/Times-Roman findfont 240.00 scalefont setfont
4575 5175 m
gs 1 -1 sc (pseudo tty driver) col-1 show gr
7.500 slw
% Polyline
n 4275 2626 m 6526 2626 l  6526 3525 l  4275 3525 l  clp  gs col-1 s gr 
% Polyline
n 4201 4576 m 6525 4576 l  6525 5475 l  4201 5475 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
7200 4050 m
gs 1 -1 sc (Noyau) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4351 2926 m
gs 1 -1 sc (Tete du Stream) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4350 3225 m
gs 1 -1 sc (appels systemes) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4950 4875 m
gs 1 -1 sc (tty driver) col-1 show gr
$F2psEnd
restore
%%EndDocument
 @endspecial 661 1005 a
 currentpoint currentpoint translate 1 0.60747 div 1 0.60747 div scale
neg exch neg exch translate
 661 1005 a 754 1096 a Fq(Fig.)12
b FD(19.1)h({)h Fp(Un)h(str)n(e)n(am)484 2551 y
 currentpoint currentpoint translate 0.70358 0.70358 scale neg exch
neg exch translate
 484 2551
a 14 w @beginspecial 0 @llx 0 @lly 319 @urx 378 @ury
3190 @rwi @setspecial
%%BeginDocument: eps/streams2.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-173.0 444.0 translate
1 -1 scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
/Times-Roman findfont 240.00 scalefont setfont
4351 1426 m
gs 1 -1 sc (Processus Utilisateur) col-1 show gr
7.500 slw
% Polyline
n 4202 5852 m 6526 5852 l  6526 6751 l  4202 6751 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
4951 6151 m
gs 1 -1 sc (tty driver) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4576 6451 m
gs 1 -1 sc (pseudo tty driver) col-1 show gr
15.000 slw
% Polyline
n 3262 2926 m 3262 4951 l  gs col-1 s gr 
n 3202.00 3166.00 m 3262.00 2926.00 l 3322.00 3166.00 l  3262.50 3166.50 l 3202.00 3166.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
/Times-Roman findfont 240.00 scalefont setfont
2887 5401 m
gs 1 -1 sc (Montee) col-1 show gr
% Polyline
n 7724 5026 m 7724 3001 l  gs col-1 s gr 
n 7784.00 4786.00 m 7724.00 5026.00 l 7664.00 4786.00 l  7724.50 4786.50 l 7784.00 4786.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
/Times-Roman findfont 240.00 scalefont setfont
7282 5401 m
gs 1 -1 sc (Descente) col-1 show gr
7.500 slw
% Polyline
n 5250 1575 m 5250 1575 l gs col-1 s gr
15.000 slw
% Polyline
n 4875 1650 m 4875 1650 l gs col-1 s gr
7.500 slw
% Polyline
n 4201 1126 m 6526 1126 l  6526 1576 l  4201 1576 l  clp  gs col-1 s gr 
% Polyline
n 6075 1650 m 6075 1650 l gs col-1 s gr
/Times-Roman findfont 240.00 scalefont setfont
6150 7350 m
gs 1 -1 sc (Noyau) col-1 show gr
15.000 slw
% Polyline
n 5400 1575 m 5400 2550 l  gs col-1 s gr 
n 5340.00 1815.00 m 5400.00 1575.00 l 5460.00 1815.00 l  5400.50 1815.50 l 5340.00 1815.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
n 5460.00 2310.00 m 5400.00 2550.00 l 5340.00 2310.00 l  5400.50 2310.50 l 5460.00 2310.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
% Polyline
n 5400 3525 m 5400 4125 l  gs col-1 s gr 
n 5340.00 3765.00 m 5400.00 3525.00 l 5460.00 3765.00 l  5400.50 3765.50 l 5340.00 3765.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
n 5460.00 3885.00 m 5400.00 4125.00 l 5340.00 3885.00 l  5400.50 3885.50 l 5460.00 3885.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
7.500 slw
% Polyline
n 4275 2626 m 6526 2626 l  6526 3525 l  4275 3525 l  clp  gs col-1 s gr 
% Polyline
	[66.7] 0 setdash
n 4050 2175 m 6750 2175 l  6750 7050 l  4050 7050 l  clp  gs col-1 s gr 	[] 0 setdash
15.000 slw
% Polyline
n 5400 5250 m 5400 5850 l  gs col-1 s gr 
n 5340.00 5490.00 m 5400.00 5250.00 l 5460.00 5490.00 l  5400.50 5490.50 l 5340.00 5490.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
n 5460.00 5610.00 m 5400.00 5850.00 l 5340.00 5610.00 l  5400.50 5610.50 l 5460.00 5610.00 l clp gs 0.00 setgray ef gr gs col-1 s gr
7.500 slw
% Polyline
n 4500 4201 m 6150 4201 l  6150 5100 l  4500 5100 l  clp  gs col-1 s gr 
/Times-Roman findfont 240.00 scalefont setfont
4351 2926 m
gs 1 -1 sc (Tete du Stream) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4350 3225 m
gs 1 -1 sc (appels systemes) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4800 4500 m
gs 1 -1 sc (Module de) col-1 show gr
/Times-Roman findfont 240.00 scalefont setfont
4800 4875 m
gs 1 -1 sc (Traitement) col-1 show gr
$F2psEnd
restore
%%EndDocument
 @endspecial 484 2551 a
 currentpoint currentpoint translate 1 0.70358 div 1 0.70358 div scale
neg exch neg exch translate
 484 2551 a 551 2642 a Fq(Fig.)e
FD(19.2)f({)i Fp(Ajout)h(d'un)g(mo)n(dule)g(de)g(tr)n(aitement)p
eop
%%Page: 145 153
145 152 bop 75 50 a Fz(19.3.)26 b(CR)254 39 y(\023)249
50 y(EA)m(TION)14 b(D'UN)f(SOCKET)1054 b FD(145)270 166
y FB(des)13 b(redirections)j(a)o(v)o(ec)d(l'utilisati)q(on)j(des)d
(descripteurs.)230 233 y({)21 b(d'utiliser)15 b(des)e(proto)q(coles)h
(div)o(ers,)f(en)g(particulier)i(d'en)o(v)o(o)o(y)o(er)f(des)e
(messages)i("Hors-Bande")f(qui)270 279 y(p)q(euv)o(en)o(t)h(doubler)h
(les)f(autres)f(informations)i(sur)f(la)f(ligne.)179
348 y(C'est)f(un)i(ob)r(jet)f(abstrait)h(qui)g(p)q(eut)f(^)-18
b(etre)13 b(manipul)o(\023)-18 b(e)15 b(comme)e(un)h(descripteur)g(de)g
(\014c)o(hier.)236 396 y(Les)19 b(so)q(c)o(k)o(ets)f(son)o(t)h(p)q(our)
g(un)f(pro)q(cessus)i(utilisables)h(comme)e(des)f(\014c)o(hiers,)h(les)
g(app)q(els)h(syst)o(\022)-18 b(emes)179 441 y FA(read)15
b FB(et)i FA(write)e FB(fonctionnen)o(t)j(normalemen)o(t)h(sur)e(des)g
(so)q(c)o(k)o(ets)h(ouv)o(erts)g(en)f(mo)q(de)g(stream.)g(La)g(pri-)179
487 y(mitv)o(e)d FA(socket)31 b FB(de)14 b(cr)o(\023)-18
b(eation)15 b(de)g(so)q(c)o(k)o(et)f(retourne)h(un)f(en)o(tier)h
(indiquan)o(t)h(une)f(en)o(tr)o(\023)-18 b(ee)14 b(de)g(la)g(table)h
(des)179 533 y(descripteur.)236 580 y(La)j(structure)f(\023)-18
b(equiv)n(alen)o(te)20 b(\022)-19 b(a)18 b(l'ino)q(de)h(des)f(\014c)o
(hiers)h(est)f(une)g(structure)g FA(struct)g(socket)d
FB(d)o(\023)-18 b(e\014nie)179 626 y(dans)14 b(le)f(\014c)o(hier)h
FA(<sys/socke)o(t.h)o(>)p FB(.)236 674 y(A)g(l'in)o(v)o(erse)i(des)f
(\014c)o(hiers,)g(les)g(so)q(c)o(k)o(ets)g(n'on)o(t)g(d'existence)g
(que)g(lorsqu'ils)i(son)o(t)e(r)o(\023)-18 b(ef)o(\023)g(erenc)o(\023)g
(es)14 b(par)h(un)179 720 y(pro)q(cessus.)179 862 y Fv(19.3)66
b(Cr)o(\023)-32 b(eation)21 b(d'un)i(so)r(c)n(k)n(et)236
948 y FB(La)13 b(cr)o(\023)-18 b(eation)15 b(d'un)e(so)q(c)o(k)o(et)h
(se)f(fait)g(gr^)-19 b(ace)13 b(\022)-19 b(a)13 b(l'app)q(el)179
1030 y FA(int)18 b(s_desc)g(=)h(socket)e(\(int)h(domain,)f(int)h(type,)
g(int)h(protocol\))o(;)236 1109 y FB(Le)12 b Fx(Domaine)d
FB(est)j(un)g(terme)f(r)o(\023)-18 b(eseau)12 b(qui)h(d)o(\023)-18
b(esigne)13 b(un)f(ensem)o(ble)g(de)g(proto)q(coles)h(de)f(comm)o
(unication)179 1155 y(en)o(tre)f(mac)o(hines.)h(Le)e(domaine)j(p)q
(ermet)e(de)g(d)o(\023)-18 b(e\014nir)12 b(correctemen)o(t)f(l'adresse)
h(p)q(our)g(le)f(r)o(\023)-18 b(eseau)11 b(du)g(so)q(c)o(k)o(et.)236
1203 y(En)17 b(e\013et)h(comme)e(nous)i(l'a)o(v)o(ons)g(vu)f(dans)h(le)
f(cas)g(de)g(tub)q(es,)g(quand)h(deux)g(pro)q(cessus)g(n'on)o(t)f(pas)
179 1249 y(de)d(lien)h(d'h)o(\023)-18 b(eritage,)15 b(il)g(faut)f
(utiliser)i(des)e(tub)q(es)h(nomm)o(\023)-18 b(es)14
b(p)q(our)h(p)q(ouv)o(oir)g(les)g(faire)f(comm)o(uniquer)i(par)179
1294 y(tub)q(es.)g(Ici)g(p)q(our)g(que)g(deux)h(pro)q(cessus)g(puisse)g
(comm)o(uniquer)h(par)e(so)q(c)o(k)o(et,)f(il)i(faut)f(qu'un)g(pro)q
(cessus)179 1340 y(cr)o(\023)-18 b(ee)15 b(un)g(so)q(c)o(k)o(et)g(puis)
h(lui)g(d)o(\023)-18 b(e\014nisse)17 b(une)e(adresse)g(dans)h(le)f
(domaine,)h(le)f(deuxi)o(\022)-18 b(eme)17 b(pro)q(cessus)f(p)q(ourra)
179 1386 y(ensuite)e(se)f(connecter)h(au)f(so)q(c)o(k)o(et)h(ainsi)h
(nomm)o(\023)-18 b(e.)236 1434 y(On)13 b(trouv)o(era)h(dans)g
FA(<sys/sock)o(et.)o(h>)9 b FB(les)14 b(di\013)o(\023)-18
b(eren)o(ts)15 b(domaines)g(supp)q(ort)o(\023)-18 b(es)14
b(par)f(exemple)8 b(:)236 1481 y(AF)p 292 1481 12 2 v
14 w(UNIX)k(\(p)q(our)i(tous)f(les)h(proto)q(coles)h(in)o(ternes\))179
1527 y(AF)p 235 1527 V 13 w(INET)e(\(p)q(our)g(les)h(proto)q(coles)h
(ARP)m(A)d(in)o(ternet\))179 1573 y(AF)p 235 1573 V 13
w(CCITT)g(\(X25\))179 1618 y(AF)p 235 1618 V 13 w(NS)h(\()g(c)o(hez)g
(Xero)o(x)g(\))179 1664 y(AF)p 235 1664 V 13 w(APPLET)m(ALK)179
1710 y(etc)236 1758 y(Le)e(domaine)i(d)o(\023)-18 b(e\014nit)12
b(aussi)g(la)g(liste)g(des)g(proto)q(coles)g(utilisabl)q(es.)i(Les)d
(di\013)o(\023)-18 b(eren)o(ts)12 b(proto)q(coles)h(ne)e(son)o(t)179
1803 y(pas)i(utilisabl)q(es)j(dans)e(tous)f(les)h(domaines.)179
1945 y Fv(19.4)66 b(Les)32 b(di\013)o(\023)-32 b(eren)n(tes)32
b(formes)f(de)h(comm)n(unication)i(par)179 2020 y(so)r(c)n(k)n(et)236
2107 y FB(Le)13 b(t)o(yp)q(e)h(p)q(ermet)f(de)g(d)o(\023)-18
b(e\014nir)15 b(le)e(t)o(yp)q(e)h(de)f(comm)o(unication)j(v)o(oulue.)
179 2152 y(P)o(armi)e(les)f(propri)o(\023)-18 b(et)o(\023)g(es)15
b(d'une)e(transmission,)j(on)d(trouv)o(e)7 b(:)219 2221
y(1.)21 b(les)14 b(donn)o(\023)-18 b(ees)14 b(son)o(t)f(livr)o(\023)-18
b(ees)15 b(dans)f(l'ordre)219 2288 y(2.)21 b(sans)14
b(duplication)219 2355 y(3.)21 b(sans)14 b(p)q(erte)219
2421 y(4.)21 b(en)13 b(pr)o(\023)-18 b(eserv)n(an)o(t)14
b(les)g(b)q(ornes)g(des)f(messages)219 2488 y(5.)21 b(a)o(v)o(ec)13
b(des)h(messages)g("express")g(hors-bande.)219 2555 y(6.)21
b(comm)o(unication)16 b(orien)o(t)o(\023)-18 b(ee-connexion)16
b(=)d("mo)q(de)h(connect)o(\023)-18 b(e".)236 2624 y(Les)13
b(tub)q(es,)h(par)f(exemple,)h(on)o(t)f(les)h(trois)g(premi)o(\022)-18
b(eres)14 b(propri)o(\023)-18 b(et)o(\023)g(es,)14 b(mais)g(pas)f(la)h
(quatri)o(\022)-18 b(eme.)179 2669 y(La)13 b(sixi)o(\022)-18
b(eme)14 b(propri)o(\023)-18 b(et)o(\023)g(e)14 b(est)f(un)g(mo)q(de)h
(de)f(comm)o(unication)i(o)q(\022)-20 b(u)13 b(l'on)h(d)o(\023)-18
b(e\014nit)14 b(sur)f(le)h(r)o(\023)-18 b(eseau)13 b(un)g(canal)h(de)
179 2715 y(transmission,)d(ce)e(qui)h(p)q(ermet)g(d')o(\023)-18
b(eviter)10 b(d'en)o(v)o(o)o(y)o(er)g(a)o(v)o(ec)f(c)o(haque)h(message)
g(l'adresse)g(du)g(so)q(c)o(k)o(et)g(d'en)o(v)o(oi.)179
2761 y(A)j(la)h(place,)g(un)f(\023)-18 b(ec)o(hange)14
b(d'iden)o(tit)o(\023)-18 b(e)15 b(est)f(r)o(\023)-18
b(ealis)o(\023)g(e)15 b(a)o(v)n(an)o(t)f(le)g(d)o(\023)-18
b(ebut)14 b(de)f(la)h(comm)o(unication)i(propremen)o(t)179
2806 y(dite.)d(Il)h(est)f(en)o(tendu)h(qu'il)g(ne)f(sera)h(pas)f(p)q
(ossible)i(de)f(se)f(connecter)h(\022)-19 b(a)13 b(partir)h(d'un)f
(troisi)o(\022)-18 b(eme)15 b(so)q(c)o(k)o(et.)p eop
%%Page: 146 154
146 153 bop 75 50 a FD(146)750 b Fz(CHAPITRE)14 b(19.)27
b(ENTR)1332 39 y(\023)1327 50 y(EES-SOR)m(TIES)14 b(A)-5
b(V)g(ANC)1762 39 y(\023)1757 50 y(EES)236 166 y FB(On)10
b(p)q(eut)h(par)f(exemple)h(si)g(l'on)g(utilise)h(une)e(ligne)i("\022)
-19 b(a)10 b(la")h(TRANSP)m(A)o(C)e(v)o(ouloir)j(utiliser)h(un)d(syst)o
(\022)-18 b(eme)179 212 y(o)q(\022)e(u)16 b(les)h(messages)g(ne)f(son)o
(t)g(pas)h(d)o(\023)-18 b(ecoup)o(\023)g(es)17 b(\(propri)o(\023)-18
b(et)o(\023)g(e)17 b(4\),)f(et)g(o)q(\022)-20 b(u)16
b(les)h(messages)f(p)q(euv)o(en)o(t)h(\023)-18 b(ev)o(en)o(tuelle-)179
258 y(men)o(t)12 b(^)-18 b(etre)13 b(p)q(erdus)h(\(ligne)h(mo)q(dem\))f
(ou)f(dupliqu)o(\023)-18 b(es,)16 b(en)d(e\013et)h(TRANSP)m(A)o(C)e
(utilise)j(un)f(algorithme)h(de)179 303 y(transmission)g(qui)f(p)q(eut)
g(a)o(v)o(oir)g(p)q(our)g(cons)o(\023)-18 b(equence)14
b(la)g(duplicatio)q(n)i(de)d(paquets)h(d'informations.)236
349 y(Les)f(t)o(yp)q(es)h(les)g(plus)g(utilis)o(\023)-18
b(es)15 b(son)o(t)7 b(:)179 412 y FC(SOCK)p 307 412 14
2 v 15 w(STREAM)20 b FB(connexion)f(\022)-19 b(a)17 b(double)h(sens)f
(a)o(v)o(ec)g(les)g(propri)o(\023)-18 b(et)o(\023)g(es)18
b(1,2,3)f(et)e(\023)-18 b(ev)o(en)o(tuellemen)o(t)19
b(la)270 457 y(propri)o(\023)-18 b(et)o(\023)g(e)15 b(5.)179
520 y FC(SOCK)p 307 520 V 15 w(DGRAM)21 b FB(datagrammes,)13
b(propri)o(\023)-18 b(et)o(\023)g(e)15 b(4)e(uniquemen)o(t.)179
582 y FC(SOCK)p 307 582 V 15 w(RA)-5 b(W)21 b FB(\(cru\))13
b(aucun)i(proto)q(cole,)g(uniquemen)o(t)g(par)f(le)g(sup)q(er)g
(utilisateur,)i(p)q(ermet)e(de)g(mani-)270 628 y(puler)g(directemen)o
(t)h(l'in)o(terface)f(de)f(comm)o(unication)j(bas)d(niv)o(eau.)179
690 y FC(SOCK)p 307 690 V 15 w(SEQP)l(A)o(CKET)20 b FB(1,2,3.)13
b(Le)g(lecteur)i(doit)f(y)f(lire)i(un)f(paquet)g(\022)-19
b(a)13 b(c)o(haque)i(lecture.)f(D)o(\023)-18 b(e\014ni)15
b(uni-)270 736 y(quemen)o(t)f(dans)g(le)f(domaine)i(AF)p
766 736 12 2 v 13 w(NS)e(\(Xero)o(x\))236 799 y(Les)e(proto)q(coles)h
(son)o(t)e(en)h(g)o(\023)-18 b(eneral)12 b(sp)o(\023)-18
b(eci\014ques)12 b(au)f(domaine,)g(l'utilisati)q(on)i(de)e(la)g(v)n
(aleur)g(z)o(\023)-18 b(ero)11 b(p)q(our)g(le)179 844
y(proto)q(cole)i(laisse)g(au)e(syst)o(\022)-18 b(eme)12
b(le)g(soin)g(de)g(s)o(\023)-18 b(electionner)14 b(lui-m)o(^)-18
b(eme)12 b(le)g(b)q(on)g(proto)q(cole)h(dans)f(le)g(domaine.)179
976 y Fv(19.5)66 b(D)o(\023)-32 b(e\014nition)22 b(de)h(l'adresse)f
(d'un)h(so)r(c)n(k)n(et)236 1059 y FB(Dans)13 b(le)g(cas)f(de)h(deux)g
(pro)q(cessus)g(qui)g(n'on)o(t)g(pas)f(d'anc)o(^)-18
b(etres)13 b(comm)o(uns,)g(il)g(faut)f(donner)i(au)e(so)q(c)o(k)o(et)
179 1104 y(une)17 b(adresse)g(\(un)g(nom\))g(qui)g(v)n(a)g(p)q
(ermettre)g(\022)-19 b(a)16 b(di\013)o(\023)-18 b(eren)o(ts)19
b(pro)q(cessus)f(de)e(se)h(branc)o(her)g(sur)g(la)g(b)q(onne)179
1150 y(ligne.)e(Comme)f(nous)g(l'a)o(v)o(ons)h(indiqu)o(\023)-18
b(e)17 b(plus)e(haut,)f(le)g(t)o(yp)q(e)h(de)f(l'adresse)h(d)o(\023)-18
b(ep)q(end)15 b(du)f(domaine.)i(Mais)179 1196 y(une)d(seule)h(primitiv)
o(e)i(r)o(\023)-18 b(ealise)14 b(l'asso)q(ciation)i(d'une)e(adresse)g
(\022)-19 b(a)13 b(une)g(so)q(c)o(k)o(et,)g(c'est)g(la)h(primitiv)o(e)9
b(:)179 1259 y FA(int)18 b(bind\(int)f(descripte)o(ur,)f(struct)h
(sockaddr)g(*adresse)o(,)g(int)h(longeur_ad)o(res)o(se)o(\);)236
1321 y FB(Un)d(app)q(el)i(\022)-19 b(a)15 b(cette)f(fonction)j(r)o
(\023)-18 b(ealise)16 b(un)g(attac)o(hemen)o(t)f(\(bind\))i(du)e(so)q
(c)o(k)o(et)h(de)f(descripteur)h(donn)o(\023)-18 b(e)179
1367 y(\022)f(a)12 b(l'adresse)i(p)q(oin)o(t)o(\023)-18
b(ee)14 b(par)f FA(adresse)c FB(qui)14 b(est)f(supp)q(os)o(\023)-18
b(ee)13 b(^)-18 b(etre)12 b(de)h(taille)h FA(longeur)p
1365 1367 V 12 w(adresse)p FB(.)9 b(Retourne)14 b(-1)179
1412 y(en)f(cas)g(d'ec)o(hec.)236 1458 y(La)f(taille)h(des)f(adresses)g
(de)g(so)q(c)o(k)o(et)g(v)n(arie)g(en)f(fonction)i(du)f(domaine)h(de)e
(comm)o(unication)k(utilis)o(\023)-18 b(e,)13 b(les)179
1504 y(adresses)f(son)o(t)g(donc)g(structur)o(\023)-18
b(ees)12 b(comme)g(des)f(c)o(haines)i(du)f(P)o(ascal)c(:)j(la)h
(longueur)h(en)f(premier)g(sur)g(deux)179 1550 y(o)q(ctets)h(suivie)j
(de)d(l'adresse)i(r)o(\023)-18 b(eelle)15 b(\(en)e(g)o(\023)-18
b(en)o(\023)g(eral,)15 b(une)f(zone)g(de)f(14)h(o)q(ctets)g(est)f(r)o
(\023)-18 b(eserv)o(\023)g(ee)14 b(p)q(our)g(l'adresse)179
1595 y(r)o(\023)-18 b(eelle\).)236 1641 y(Une)14 b(seule)g(adresse)h
(est)e(asso)q(ci)o(\023)-18 b(ee)15 b(\022)-19 b(a)13
b(un)h(so)q(c)o(k)o(et)g(donn)o(\023)-18 b(e)14 b(sur)g(une)g(mac)o
(hine,)g(par)g(con)o(tre)g(le)g(domaine)179 1687 y(de)g(comm)o
(unication)k(p)q(eut)d(p)q(ermettre)g(l'utilisation)j(r)o(\023)-18
b(ep)o(\023)g(et)o(\023)g(ee)15 b(d'une)g(m)o(^)-18 b(eme)14
b(adresse,)h(le)g(courrier)g(\023)-18 b(elec-)179 1732
y(tronique)14 b(par)g(exemple.)179 1864 y Fv(19.6)66
b(Utilisation)24 b(des)e(so)r(c)n(k)n(ets)236 1947 y
FB(Les)14 b(so)q(c)o(k)o(ets)g(son)o(t)g(donc)h(un)f(regroup)q(emen)o
(t)h(sous)f(un)g(m)o(^)-18 b(eme)14 b(formalisme)h(d'un)f(ensem)o(ble)h
(de)f(pro-)179 1992 y(to)q(coles)g(de)f(comm)o(unication.)j(Nous)d
(regardons)h(ici)g(quelques)h(cas)e(d'utilisati)q(ons.)179
2103 y Fu(19.6.1)55 b(Utilisation)17 b(lo)r(cal)h(AF)p
866 2103 17 2 v 20 w(UNIX)236 2173 y FB(Il)c(est)e(p)q(ossible)k
(d'utiliser)f(les)e(so)q(c)o(k)o(ets)h(comme)f(des)g(tub)q(es,)g(et)g
(une)h(fonction)g(sp)o(\023)-18 b(eci\014que)15 b(existe)e(qui)179
2219 y(cr)o(\023)-18 b(ee)16 b(deux)h(so)q(c)o(k)o(ets)g(don)o(t)g(le)g
(comp)q(ortemen)o(t)h(est)e(iden)o(tique)j(\022)-19 b(a)16
b(celui)i(que)f(l'on)g(obtien)o(t)h(a)o(v)o(ec)f(l'app)q(el)179
2265 y FA(pipe)p FB(,)11 b(c'est)h(la)i(primitiv)o(e)9
b(:)179 2327 y FA(void)18 b(socketpai)o(r)f(\(int)h(domain,)f(int)h
(type,)g(int)g(protocol,)e(int)j(sv[]\).)236 2390 y FB(que)14
b(l'on)g(app)q(ellera)h(a)o(v)o(ec)e(les)h(param)o(\022)-18
b(etres)14 b(suiv)n(an)o(t)g(p)q(our)g(cr)o(\023)-18
b(eer)13 b(un)g(tub)q(e)8 b(:)179 2453 y FA(socketpai)o(r\(A)o(F_)o
(UNI)o(X,)16 b(SOCK_STREA)o(M,)g(0,)j(tube\);)236 2515
y FB(les)h(deux)h(so)q(c)o(k)o(ets)f(cr)o(\023)-18 b(ees)19
b(son)o(t)h(imm)o(\023)-18 b(ediatemen)o(t)21 b(utilisabl)q(es)i
(exactemen)o(t)d(comme)f(un)h(tub)q(e,)g(et)179 2561
y(comme)12 b(les)h(tub)q(es,)f(ces)g(deux)h(so)q(c)o(k)o(ets)f(n'on)o
(t)h(pas)f(de)g(nom.)g(Remarquer)h(que)g(ces)f(deux)h(so)q(c)o(k)o(ets)
f(resten)o(t)179 2607 y(utilisables)17 b(dans)d(les)h(deux)f(sens.)g(P)
o(our)g(a)o(v)o(oir)h(un)f(comp)q(ortmen)o(t)g(similaire)j(\022)-19
b(a)13 b(cette)h(paire)g(de)g(so)q(c)o(k)o(ets,)179 2652
y(nous)g(devrions)g(a)o(v)o(ec)g(des)f(tub)q(es)h(cr)o(\023)-18
b(eer)13 b(deux)h(tub)q(es)f(dirig)o(\023)-18 b(es)15
b(c)o(hacun)f(dans)g(un)g(sens.)236 2698 y(La)e(structure)h(d'adresse)f
(p)q(our)h(le)f(domaine)i(AF)p 956 2698 12 2 v 13 w(UNIX)d(est)h(comme)
g(p)q(our)h(les)f(tub)q(es)h(une)f(r)o(\023)-18 b(ef)o(\023)g(erence)
179 2744 y(de)13 b(l'arb)q(orescence.)h(Elle)h(est)e(de)g(t)o(yp)q(e)g
FA(struct)18 b(sockaddr)p 1062 2744 V 11 w(un)12 b FB(d)o(\023)-18
b(e\014ni)14 b(dans)g(le)g(\014c)o(hier)g FA(<sys/un.h)o(>)i
FB(:)179 2806 y FA(struct)h(sockaddr_u)o(n)f({)p eop
%%Page: 147 155
147 154 bop 75 50 a Fz(19.7.)26 b(LE)14 b(MODE)g(CONNECT)617
39 y(\023)612 50 y(E)1135 b FD(147)336 166 y FA(short)57
b(sun_famil)o(y;)75 b(/*)19 b(AF_UNIX)e(*/)336 212 y(char)77
b(sun_path[)o(10)o(8];)16 b(/*)j(reference)d(*/)179 258
y(};)236 335 y FB(La)d(primitiv)o(e)j FA(bind)11 b FB(ne)i(fonctione)i
(que)e(si)h(la)f(r)o(\023)-18 b(ef)o(\023)g(erence)14
b(n'existe)g(pas.)179 471 y Fu(19.6.2)55 b(Utilisation)17
b(a)n(v)n(ec)i(le)f(concept)g(INTERNET)236 550 y FB(In)o(ternet)c(est)f
(une)h(norme)g(de)f(comm)o(unication)j(r)o(\023)-18 b(eseau)14
b(largemen)o(t)h(utilis)o(\023)-18 b(ee)15 b(par)f("the)g(net")f(qui)i
(est)179 596 y(souv)o(en)o(t)f(r)o(\023)-18 b(ef)o(\023)g(erenc)o(\023)
g(e)14 b(par)f(TCP/IP)m(,)g(qui)h(son)o(t)g(les)g(deux)g(proto)q(coles)
h(principaux.)h(Cette)c(norme)i(p)q(ermet)179 641 y(l'in)o
(terconnection)i(de)d(tous)h(les)f(r)o(\023)-18 b(eseaux)14
b(quelle)h(que)f(soit)f(leur)h(tec)o(hnologie.)236 692
y(Les)f(so)q(c)o(k)o(ets)h(AF)p 492 692 12 2 v 14 w(INET)e(utiliserons)
k(les)e(supp)q(orts)g(TCP/IP)f(de)g(v)o(otre)g(mac)o(hine.)236
743 y(Les)e(adresses)h(son)o(t)g(de)f(la)h(forme)e FA(struct)18
b(sockaddr)p 1025 743 V 11 w(in)10 b FB(d)o(\023)-18
b(e\014nie)12 b(dans)g(le)g(\014c)o(hier)g FA(<netinet/i)o(n.)o(h>)s
FB(:)179 826 y FA(struct)17 b(in_addr)g({)39 b(/*)19
b(adrsse)e(internet)f(192.103.134)o(.8)o(6)h(->)i(fillmore)d(*/)336
872 y(u_long)h(s_addr;)179 917 y(};)179 1009 y(struct)g(sockaddr_i)o(n)
f({)336 1054 y(short)57 b(sin_famil)o(y;)16 b(/*)j(AF_INET)e(*/)336
1100 y(u_short)g(sin_port;)55 b(/*)19 b(numero)e(de)i(port)f(*/)336
1146 y(struct)37 b(in_addr)17 b(sin_addr)o(;)336 1191
y(char)77 b(sin_zero[)o(8])o(;/*)16 b(Huit)i(z\023)-20
b(eros)18 b(utilis\023)-20 b(es)16 b(comme)i(masque)f(ailleurs)g(*/)179
1237 y(};)236 1315 y FB(Ainsi)e(l'attac)o(hemen)o(t)g(v)n(a)f(se)f
(faire)h(sur)g(une)g(mac)o(hine,)g(et)g(sur)g(cette)f(mac)o(hine)i(le)f
(so)q(c)o(k)o(et)g(sera)g(atta-)179 1360 y(c)o(h)o(\023)-18
b(e)15 b(\022)-19 b(a)16 b(un)g(certain)g(p)q(ort)g(\(en)o(tier\))g
(qui)h(p)q(ermet)e(de)h(di\013)o(\023)-18 b(erencier)18
b(les)e(di\013)o(\023)-18 b(eren)o(ts)17 b(so)q(c)o(k)o(ets)f
(utilisabl)q(es)i(de)179 1406 y(l'ext)o(\023)-18 b(erieur.)236
1457 y(Les)12 b(serv)o(eurs)h(doiv)o(en)o(t)h(donc)e(rendre)h(public)h
(leur)f(n)o(um)o(\023)-18 b(ero)12 b(de)h(p)q(ort,)f(p)q(our)g(que)h
(les)f(clien)o(ts)i(puissen)o(t)179 1502 y(se)f(connecter.)236
1553 y(Le)g(syst)o(\022)-18 b(eme)14 b(a)f(un)g(certain)h(nom)o(bre)g
(de)f(p)q(orts)h(r)o(\023)-18 b(eserv)o(\023)g(es)13
b(\(IPPOR)m(T)p 1249 1553 V 14 w(RESER)l(VED\).)236 1604
y(Les)j(clien)o(ts)h(n'on)o(t)f(pas)f(d'in)o(t)o(\023)-18
b(er)o(^)g(et)17 b(\022)-19 b(a)15 b(a)o(v)o(oir)i(un)e(p)q(ort)h(pr)o
(\023)-18 b(ed)o(\023)g(e\014ni,)17 b(en)f(sp)o(\023)-18
b(eci\014an)o(t)17 b(INADDR)p 1592 1604 V 14 w(ANY)e(le)179
1650 y(syst)o(\022)-18 b(eme)16 b(c)o(hoisit)h(un)f(p)q(ort)g(libre,)h
(ce)f(qui)f(\023)-18 b(evite)17 b(les)f(con\015its)h(\(le)f(bind)h(est)
f(implicite)i(lors)e(du)h(premier)179 1695 y(en)o(v)o(oi\).)236
1746 y(A)o(tten)o(tion)8 b(:)15 b(l'acc)o(\022)-18 b(es)17
b(partag)o(\023)-18 b(e)17 b(aux)f(p)q(orts)g(imp)q(ose)i(les)e(m)o(^)
-18 b(emes)16 b(con)o(train)o(tes)i(que)e(toute)g(autre)h(res-)179
1792 y(source)c(du)h(syst)o(\022)-18 b(eme.)179 1948
y Fv(19.7)66 b(Le)22 b(mo)r(de)g(connect)o(\023)-32 b(e)236
2040 y FB(Dans)13 b(une)f(liaison)i(en)d(mo)q(de)h(connect)o(\023)-18
b(e)13 b(\(propri)o(\023)-18 b(et)o(\023)g(e)13 b(6\),)e(il)h(faut)g
(initiali)q(ser)i(la)e(comm)o(unication)i(en)o(tre)179
2086 y(les)f(deux)h(pro)q(cessus.)g(P)o(our)g(cela)f(on)h(utilisera)h
(un)f(app)q(el)g(\022)-19 b(a)13 b(la)h(primitiv)o(e)9
b(:)179 2169 y FA(int)18 b(connect)f(\(int)h(socket,)f(struct)g
(sockaddr)g(*server,)f(int)j(serveradd)o(rle)o(n\);)236
2246 y FB(dans)14 b(le)g(pro)q(cessus)g(clien)o(t.)236
2297 y(Le)f(pro)q(cessus)i(serv)o(eur)e(doit)h(en)f(premier)h(lieu)h
(indiquer)g(gr^)-19 b(ace)14 b(\022)-19 b(a)13 b(la)g(primitiv)o(e)179
2380 y FA(int)18 b(listen)g(\(int)g(socket,)f(int)h(nombre\);)236
2458 y FB(le)c(nom)o(bre)g(de)f(connexions)i(qui)f(p)q(euv)o(en)o(t)f
(^)-18 b(etre)13 b(bu\013eris)o(\023)-18 b(ees)15 b(\(mise)f(en)f
(atten)o(te)g(d'un)h(accept\).)236 2509 y(Les)j(connexions)h(son)o(t)f
(ensuite)g(re\030)-17 b(cues)17 b(l'une)g(apr)o(\022)-18
b(es)17 b(l'autre)f(dans)h(le)g(pro)q(cessus)h(serv)o(eur)e(a)o(v)o(ec)
h(la)179 2554 y(primitiv)o(e)9 b(:)179 2637 y FA(int)18
b(nsock)g(=)h(accept)e(\(int)i(s,)f(struct)g(sockaddr)e(*client,)h(int)
h(*clientadd)o(r\);)236 2715 y FB(A)o(tten)o(tion)8 b(:)13
b FA(accept)e FB(ren)o(v)o(oie)k(un)f(nouv)o(eau)i(descripteur)f(de)f
(so)q(c)o(k)o(et,)g(c'est)f(sur)h(ce)g(nouv)o(eau)h(so)q(c)o(k)o(et)179
2761 y(que)h(sera)h(r)o(\023)-18 b(ealis)o(\023)g(e)17
b(la)g(connexion)i(en)o(tre)d(clien)o(t)h(et)f(serv)o(eur.)h(Le)f(so)q
(c)o(k)o(et)g(d'origine)i(ne)f(sert)f(que)g(de)h(\014le)179
2806 y(d'atten)o(te)c(des)g(demandes)i(de)e(connexion)i(par)e
FA(connect)p FB(.)p eop
%%Page: 148 156
148 155 bop 75 50 a FD(148)750 b Fz(CHAPITRE)14 b(19.)27
b(ENTR)1332 39 y(\023)1327 50 y(EES-SOR)m(TIES)14 b(A)-5
b(V)g(ANC)1762 39 y(\023)1757 50 y(EES)179 166 y Fv(19.8)66
b(La)34 b(comm)n(unication)i(par)e(messages)e(a)n(v)n(ec)i(les)g(so-)
179 241 y(c)n(k)n(ets)236 331 y FB(les)14 b(primitiv)o(es)i(d'en)o(v)o
(oi)e(de)f(messages)7 b(:)179 423 y FA(#include)16 b(<sys/types)o(.h>)
179 468 y(#include)g(<sys/socke)o(t.h)o(>)179 560 y(int)i(send\(int)f
(s,)i(char)f(*)h(msg,)f(int)g(len,)g(int)h(flags\);)e(/*)i(mode)f
(connect\023)-20 b(e)16 b(seulement)g(*/)179 651 y(int)i(sendto\(int)e
(s,)j(char)f(*)h(msg,)f(int)h(len,)f(int)g(flags,)395
697 y(struct)f(sockaddr)f(*to,)i(int)h(tolen\);)179 788
y(int)f(sendmsg\(in)o(t)f(s,)h(struct)g(msghdr)f(msg[],)g(int)i
(flags\);)179 879 y(flags:)198 925 y(MSG_OOB)194 b(/*)19
b(process)e(out-of-b)o(and)f(data)i(*/)198 971 y(MSG_DONTROU)o(TE)75
b(/*)19 b(bypass)e(routing,)f(use)j(direct)e(interface)f(*/)236
1058 y FB(la)f(v)n(aleur)h(de)e(retour)h(-1)e(n'indique)k(pas)e(que)f
(le)h(message)g(n'a)f(pas)g(\023)-18 b(et)o(\023)g(e)14
b(d)o(\023)-18 b(elivr)o(\023)g(e,)15 b(mais)g(uniquemen)o(t)179
1104 y(une)e(erreur)h(lo)q(cale.)g(Si)g(errno)f(==)g(EMSGSIZE,)h(le)f
(message)h(est)f(trop)g(long)i(et)d(n'a)h(pas)g(\023)-18
b(et)o(\023)g(e)13 b(en)o(v)o(o)o(y)o(\023)-18 b(e.)236
1153 y(R)o(\023)g(eception)15 b(de)e(messages:)179 1232
y FA(int)18 b(cc)h(=)g(recv)f(\(int)g(s,)h(char)f(*buf,)g(int)g(len,)h
(int)f(flags\);)179 1324 y(int)g(cc)h(=)g(recvfrom)e(\(int)h(s,)h(char)
f(*buf,)f(int)i(len,)f(int)g(flags,)551 1369 y(struct)g(sockaddr)e
(*from,)i(int)g(*fromlen\);)179 1461 y(int)g(cc)h(=)g(recvmsg)e(\(int)h
(s,)h(struct)e(msghdr)h(msg[],)f(int)h(flags\);)179 1598
y(flags:)277 1643 y(MSG_PEEK)75 b(/*)19 b(peek)f(at)h(incoming)d
(message)h(*/)179 1735 y(messages:)179 1780 y(struct)g(msghdr)g({)257
1826 y(caddr_t)115 b(msg_name;)193 b(/*)19 b(optional)d(address)h(*/)
257 1872 y(int)195 b(msg_namele)o(n;)134 b(/*)19 b(size)f(of)h(address)
e(*/)257 1917 y(struct)h(iovec)f(*msg_iov;)193 b(/*)19
b(scatter/g)o(at)o(her)d(array)i(*/)257 1963 y(int)195
b(msg_iovlen)o(;)154 b(/*)19 b(#)g(elements)d(in)j(msg_iov)e(*/)257
2009 y(caddr_t)115 b(msg_accrig)o(hts)o(;)95 b(/*)19
b(access)e(rights)g(sent/recei)o(ved)f(*/)257 2054 y(int)195
b(msg_accrig)o(hts)o(le)o(n;)179 2100 y(};)236 2175 y
FB(On)10 b(utilisera)i(la)e(primitiv)o(e)i FA(ioctl)c
FB(p)q(our)i(manipuler)i(les)e(propri)o(\023)-18 b(et)o(\023)g(es)12
b(du)e(so)q(c)o(k)o(et)g(comme)f(par)h(exemple)179 2220
y(le)j(mo)q(de)h(non)f(blo)q(quan)o(t)j(en)d(lecture.)236
2270 y(Quelques)i(primitiv)o(es)g(annexes:)236 2320 y(P)o(our)f(conna)l
(^)-15 b(\020tre)14 b(l'adresse)h(du)e(so)q(c)o(k)o(et)g(asso)q(ci)o
(\023)-18 b(e)15 b(\(en)e(mo)q(de)g(connect)o(\023)-18
b(e\))8 b(:)257 2399 y FA(getpeernam)o(e\(i)o(nt)16 b(s,)j(struct)e
(sockaddr)g(*name,)g(int)h(*namelen\);)236 2474 y FB(Donne)c(le)g(nom)f
(du)h(so)q(c)o(k)o(et)f(s)7 b(:)277 2553 y FA(getsockna)o(me\()o(in)o
(t)17 b(s,)i(struct)e(sockaddr)f(*name,)i(int)g(*namelen\);)236
2628 y FB(En\014n)c(les)g(primitiv)o(es)h(suiv)n(an)o(tes)g(p)q
(ermetten)o(t)f(de)f(manipuler)i(certaines)g(options)8
b(:)257 2707 y FA(getsockopt)o(\(in)o(t)16 b(s,)j(int)g(level,)e(int)h
(optname,)f(char)h(*optval,)f(int)h(*optlen\);)257 2798
y(setsockopt)o(\(in)o(t)e(s,)j(int)g(level,)e(int)h(optname,)f(char)h
(*optval,)f(int)h(optlen\);)p eop
%%Page: 149 157
149 156 bop 75 50 a Fz(19.9.)26 b(A)o(CC)283 39 y(\022)278
50 y(ES)14 b(R)379 39 y(\023)374 50 y(ESEA)o(U)g(SOUS)h(UNIX)1015
b FD(149)179 166 y Fv(19.9)66 b(Acc)o(\022)-32 b(es)20
b(r)o(\023)-32 b(eseau)21 b(sous)g(Unix)236 249 y FB(Fic)o(hiers)15
b(de)e(con\014guration)j(\(/etc/...\))179 320 y FA(#)j(Network)e
(services,)f(Internet)h(style)179 365 y(#)179 411 y(systat)194
b(11/tcp)f(users)179 457 y(ftp)254 b(21/tcp)179 502 y(telnet)194
b(23/tcp)179 548 y(smtp)234 b(25/tcp)193 b(mail)179 639
y(#)19 b(<internet)d(address>)76 b(<officia)o(l)17 b(hostname>)f
(<aliases>)179 685 y(#)179 731 y(192.134.1)o(03.)o(86)36
b(rome)18 b(#)h(Serveur)e(-HP)h(9000s755)179 822 y(#)h(Internet)e
(server)g(configura)o(tio)o(n)f(database)179 867 y(#)179
913 y(systat)37 b(stream)g(tcp)97 b(nowait)36 b(/etc/miscd)114
b(systatd)179 959 y(#systat)17 b(dgram)57 b(udp)97 b(wait)76
b(/etc/miscd)114 b(systatd)179 1004 y(daytime)17 b(stream)37
b(tcp)97 b(nowait)36 b(/etc/miscd)114 b(daytimed)236
1121 y FB(Une)12 b(biblioth)o(\022)-18 b(equ)q(e)14 b(de)e(fonctions)g
(p)q(ermet)g(la)g(manipulati)q(on)i(de)e(la)g(base)g(de)g(donn)o(\023)
-18 b(ees)13 b(INTERNET:)179 1166 y FA(gethostid)o(\(\),)j(gethostby)o
(nam)o(e\()o(\))h(,gethost)o(bya)o(ddr)o(\(\))25 b FB(\(pas)9
b(de)g(distinction)i(ma)r(juscule/min)o(u)q(scul)q(e\))236
1212 y(Un)h(standard)i(de)e(repr)o(\023)-18 b(esen)o(tation)14
b(des)e(nom)o(bres)h(p)q(ermet)f(le)h(d)o(\023)-18 b(eco)q(dage)13
b(par)g(des)f(mac)o(hines)i(d'arc)o(hi-)179 1258 y(tectures)f(di\013)o
(\023)-18 b(eren)o(tes,)15 b(ex:)d(h)o(tonl\(\))i(=)f(host)h(to)e(net)o
(w)o(ork)i(long.)p eop
%%Page: 150 158
150 157 bop 75 50 a FD(150)750 b Fz(CHAPITRE)14 b(19.)27
b(ENTR)1332 39 y(\023)1327 50 y(EES-SOR)m(TIES)14 b(A)-5
b(V)g(ANC)1762 39 y(\023)1757 50 y(EES)p eop
%%Page: 151 159
151 158 bop 1775 50 a FD(151)179 478 y Fw(Chapitre)32
b(20)179 685 y Fy(Bibliographie)236 901 y FB(J.-M.)12
b(Ri\017et.)i Fx(L)n(a)f(pr)n(o)n(gr)n(amation)e(sous)h
FB(UNIX.)f(Ediscience,)k(1993.)f(Le)f(man)o(uel)h(de)f(r)o(\023)-18
b(ef)o(\023)g(erence.)236 993 y(A.T)m(anen)o(baum.)15
b Fx(Syst)o(\022)-19 b(emes)13 b(d'exploitatio)o(n,)f(sysyt)o(\022)-19
b(emes)13 b(c)n(entr)n(alis)o(\023)-19 b(es,)12 b(syst)o(\022)-19
b(emes)13 b(distribu)o(\023)-19 b(es.)12 b FB(In)o(ter-)179
1038 y(Editions,)j(1994.)e(Cours)g(g)o(\023)-18 b(en)o(\023)g(eral)15
b(sur)e(les)g(syt)o(\022)-18 b(emes)14 b(d'exploitation.)236
1130 y(M.)d(Bac)o(h.)g Fx(The)g(design)e(of)i(the)g(UNIX)f(op)n(er)n
(ating)f(system.)g FB(1986.)i(Pren)o(tice-Hall,)h(Englew)o(o)q(o)q(d)g
(Cli\013s,)179 1175 y(N.J.)f(ISBN)i(0-13-201757-1)236
1267 y(J.)c(Beauquier)j(&)e(B.)g(B)o(\023)-18 b(erard)10
b(Syst)o(\022)-18 b(emes)11 b(d'exploitation)i(concepts)e(et)f
(algorithmes.)h(1991.)g(McGra)o(w-)179 1312 y(Hill.)j(ISBN)f
(2-7042-1221-X)236 1404 y(W.R.)g(Stev)o(ens,)h Fx(UNIX)e(Network)g(Pr)n
(o)n(gr)n(amming.)g FB(1990)h(Pren)o(tice-Hall,)i(Englew)o(o)q(o)q(d)g
(Cli\013s,)f(N.J.)236 1495 y(W.R.)c(Stev)o(ens,)h Fx(A)n(dvanc)n(e)n(d)
d(Pr)n(o)n(gr)n(amming)i(in)h(the)f(UNIX)g(Envir)n(onnement)c
FB(Addison-W)m(esley)14 b(ISBN)179 1541 y(0-201-56317-7)p
eop
%%Page: 152 160
152 159 bop 75 50 a FD(152)1562 b Fz(INDEX)75 404 y Fy(Index)179
612 y FB(/dev/n)o(ull,)15 b(85)179 657 y(/dev/pt)o(y)m(,)f(90)179
703 y(/dev/tt)o(y)m(,)f(84)179 749 y Fx(moniteur)f(r)o(\023)-19
b(esident)p FB(,)10 b(1)179 838 y(acc)o(\022)-18 b(es)13
b(direct,)h(25)179 884 y(acc)o(\022)-18 b(es)13 b(s)o(\023)-18
b(equen)o(tiel,)15 b(25)179 930 y(Allo)q(cation)g(con)o(tigu)o(\177)-18
b(e,)15 b(57)179 975 y(app)q(els)f(syst)o(\022)-18 b(emes)p
264 1021 12 2 v 276 1021 a FA(exit)p FB(,)11 b(29)262
1067 y FA(brk)p FB(,)g(48)262 1113 y FA(cfgetispe)o(ed)p
FB(,)e(90)262 1159 y FA(cfgetospe)o(ed)p FB(,)g(90)262
1204 y FA(cfsetispe)o(ed)p FB(,)g(90)262 1250 y FA(cfsetospe)o(ed)p
FB(,)g(90)262 1296 y FA(chdir)p FB(,)h(47)262 1342 y
FA(chroot)p FB(,)g(47)262 1387 y FA(close)p FB(,)g(36)262
1433 y FA(creat)p FB(,)g(34)262 1479 y FA(dup)p FB(,)h(35)262
1525 y FA(dup2)p FB(,)g(36)262 1571 y FA(exec)p FB(,)g(39)262
1616 y FA(execle)p FB(,)f(49)262 1662 y FA(execlp)p FB(,)g(49)262
1708 y FA(execv)p FB(,)g(49)262 1754 y FA(execve)p FB(,)g(38,)j(49)262
1799 y FA(execvp)p FB(,)d(49)262 1845 y FA(exit)p FB(,)h(45)262
1891 y FA(fchdir)p FB(,)f(47)262 1937 y FA(fork)p FB(,)h(38,)i(39,)f
(44,)h(48)262 1982 y FA(getgrp2)p FB(,)d(85)262 2028
y FA(getpgrp)p FB(,)g(47,)i(85)262 2074 y FA(getpgrp2)p
FB(,)d(47)262 2120 y FA(getpid)p FB(,)h(47)262 2166 y
FA(getppid)p FB(,)g(47)262 2211 y FA(getsid)p FB(,)g(86)262
2257 y FA(introduct)o(ion)o FB(,)g(31)262 2303 y FA(ioctl)p
FB(,)g(90)262 2349 y FA(isatty)p FB(,)g(84)262 2394 y
FA(kill)p FB(,)h(91,)i(92)262 2440 y FA(mkfifo)p FB(,)d(80)262
2486 y FA(mknod)p FB(,)g(80)262 2532 y FA(mmap)p FB(,)h(74)262
2578 y FA(munmap)p FB(,)f(74)262 2623 y FA(nice)p FB(,)h(48)262
2669 y FA(open)p FB(,)g(31)262 2715 y FA(pause)p FB(,)f(97,)j(99)262
2761 y FA(pipe)p FB(,)e(77)262 2806 y FA(read)p FB(,)g(34,)i(79)1216
612 y FA(sbrk)p FB(,)e(48)1216 657 y FA(setgid)p FB(,)f(47)1216
703 y FA(setpgid)p FB(,)f(85)1216 749 y FA(setsid)p FB(,)h(84)1216
795 y FA(setuid)p FB(,)g(47)1216 841 y FA(sigaction)o
FB(,)g(98,)j(99)1216 887 y FA(siginterr)o(up)o(t)p FB(,)d(97)1216
933 y FA(siglongjm)o(p)p FB(,)f(96)1216 978 y FA(signal)p
FB(,)h(93)1216 1024 y FA(sigpause)p FB(,)f(97)1216 1070
y FA(sigprocma)o(sk)o FB(,)h(98)1216 1116 y FA(sigsetjmp)o
FB(,)g(96)1216 1162 y FA(sleep)p FB(,)g(45)1216 1208
y FA(tcdrain)p FB(,)f(89)1216 1254 y FA(tcflush)p FB(,)g(89)1216
1299 y FA(tcgetattr)o FB(,)h(89)1216 1345 y FA(tcgetgrp)p
FB(,)f(86)1216 1391 y FA(tcgetsid)p FB(,)g(85)1216 1437
y FA(tcsetattr)o FB(,)h(89)1216 1483 y FA(tcsetpgrp)o
FB(,)g(86)1216 1529 y FA(times)p FB(,)g(46)1216 1574
y FA(ttyname)p FB(,)f(84)1216 1620 y FA(ulimit)p FB(,)h(47)1216
1666 y FA(umask)p FB(,)g(48)1216 1712 y FA(write)p FB(,)g(34,)j(80)1133
1758 y(arri)o(\022)-18 b(ere)14 b(plan,)g(85)1133 1848
y(Best-\014t,)f(63)1133 1894 y(biblioth)o(\022)-18 b(eque)q(s,)15
b(5)1133 1940 y(b)q(o)q(ot)e(blo)q(c,)h(10)1133 1986
y(bu\013er)g(cac)o(he,)f(17)1133 2032 y(bu\013erisation,)i(27)1133
2078 y(bu\013eriser,)f(17)1133 2168 y(c)o(hargemen)o(t)g(dynamique,)h
(68)1133 2214 y(compactage,)e(63)1133 2304 y(Demand)h(P)o(aging,)g(68)
1133 2350 y(Demand-P)o(aging,)h(56)1133 2396 y(droits,)e(7)1133
2442 y(d)o(\023)-18 b(esarmer,)13 b(43)1133 2533 y(ENIA)o(C,)e(1)1133
2578 y(exclusion)k(m)o(utuelle,)g(51)1133 2669 y(famine,)e(51)1133
2715 y(F)o(CFS,)f(53)1133 2761 y(\013s,)h(16)1133 2806
y(\014c)o(hier,)h(7)p eop
%%Page: 153 161
153 160 bop 75 50 a Fz(INDEX)1563 b FD(153)262 166 y
FB(ordinaires,)15 b(8)262 212 y(ph)o(ysiques,)g(8)262
258 y(sp)o(\023)-18 b(eciaux,)14 b(8)179 304 y(\014c)o(hiers)262
350 y(ino)q(des,)g(9)179 395 y(\014fo,)f(80)179 441 y
FA(FILE)p FB(,)e(23)179 487 y(First-\014t,)i(63)179 576
y(group)q(e,)g(7,)g(9)179 666 y(handler,)h(92)179 756
y(ino)q(des,)g(9,)f(11)179 801 y(in)o(terruption,)i(42)179
847 y(in)o(tr,)e(84,)g(91)179 937 y(lazy)h(sw)o(app)q(er,)f(68)179
983 y(load,)h(56)179 1028 y(long)q(jmp,)g(92)179 1118
y(masquer,)f(43)179 1164 y(mk\014fo,)g(80)179 1253 y(no)o(y)o(au,)g(5)
179 1343 y(ordonnancemen)o(t,)i(51,)d(64)179 1389 y(o)o(v)o(erla)o(ys,)
i(67)179 1478 y(page)f(fault,)h(68)179 1524 y(pages,)f(63)179
1570 y(p)q(endan)o(t,)h(92)179 1616 y(ph)o(ysique,)h(83)179
1661 y(pile,)f(39)179 1707 y(p)q(oin)o(teur)g(de)g(\014c)o(hier,)g(25)
179 1753 y(premier)g(plan,)g(85)179 1799 y(priorit)o(\023)-18
b(e,)14 b(55)179 1845 y(pro)q(cessus,)g(37)179 1890 y(pro)q(cessus)262
1936 y($D)o(A)m(T)m(A$,)e(38)262 1982 y($TEXT$,)g(38)262
2028 y(accum)o(ulateur,)i(41)262 2074 y(c)o(hangemen)o(t)g(de)f(con)o
(texte,)h(41)262 2119 y(comm)o(utation)g(de)g(mot)f(d')o(\023)-18
b(etat,)12 b(41,)h(42)262 2165 y(compteur)h(ordinal,)g(41)262
2211 y(con)o(text,)f(41)262 2257 y(cr)o(\023)-18 b(eation,)14
b(38)262 2303 y(decomp)q(osition,)h(37)262 2348 y(format)e(de)g(\014c)o
(hier,)h(38)262 2394 y(mo)q(de)f(d'un,)g(43)262 2440
y(mot)g(d')o(\023)-18 b(etat,)12 b(41)262 2486 y(niv)o(eau)i(d'in)o
(terruption,)i(42)262 2532 y FA(struct)h(proc)p FB(,)11
b(37)262 2577 y(recouvremen)o(t,)j(38)262 2623 y(sw)o(apin,)g(45)262
2669 y(sw)o(ap)q(out,)f(45)262 2715 y(table)h(des)f(pro)q(cessus,)h(39)
262 2761 y(table)g(des)f(r)o(\023)-18 b(egions)15 b(par)e(pro)q
(cessus,)h(39)262 2806 y FA(struct)j(user)p FB(,)11 b(37)1216
166 y(zone)i(u,)g(39,)g(46)1215 212 y(\023)-18 b(etats,)12
b(43,)h(45)1133 258 y(propri)o(\023)-18 b(etaire,)15
b(7,)d(9)1133 303 y(pr)o(\023)-18 b(eemption,)14 b(53)1133
349 y(pseudo-terminaux,)h(83,)e(90)1133 437 y(quit,)g(84,)g(91)1133
525 y(redirection,)i(24)1133 571 y(registre)f(barri)o(\022)-18
b(ere,)13 b(59)1133 616 y(registre)h(base,)f(60)1133
662 y(Round)h(Robin,)g(54)1133 708 y(r)o(\023)-18 b(ef)o(\023)g
(erence,)13 b(7)1133 796 y(SIGHUP)m(,)f(84,)h(91)1133
841 y(SIGINT,)f(91)1133 887 y(signaux,)i(91)1216 933
y(kill,)g(91)1133 978 y(SJF,)e(53)1133 1024 y(static,)h(84)1133
1070 y FA(stdio.h)p FB(,)c(23)1133 1115 y(stdlib)1216
1161 y FA(printf)p FB(,)h(23)1216 1207 y FA(scanf)p FB(,)g(23)1133
1253 y(stdlib)1216 1298 y FA(atexit)p FB(,)g(30)1216
1344 y FA(clearerr)p FB(,)f(30)1216 1390 y FA(exit)p
FB(,)i(29)1216 1435 y FA(fclose)p FB(,)f(27)1216 1481
y FA(feof)p FB(,)h(25,)h(30)1216 1527 y FA(fflush)p FB(,)e(27)1216
1572 y FA(fopen)p FB(,)g(24)1216 1618 y FA(fread)p FB(,)g(25)1216
1664 y FA(freopen)p FB(,)f(24,)k(27)1216 1710 y FA(fseek)p
FB(,)d(26)1216 1755 y FA(ftell)p FB(,)g(26)1216 1801
y FA(fwrite)p FB(,)g(25)1216 1847 y FA(mkdir)p FB(,)g(30)1216
1892 y FA(perror)p FB(,)g(30)1216 1938 y FA(remove)p
FB(,)g(29)1216 1984 y FA(rename)p FB(,)g(29)1216 2029
y FA(rewind)p FB(,)g(26)1216 2075 y FA(rmdir)p FB(,)g(30)1216
2121 y FA(setbuf)p FB(,)g(28)1216 2167 y FA(setbuffer)o
FB(,)g(28)1216 2212 y FA(setligneb)o(uf)o FB(,)g(28)1216
2258 y FA(setvbuf)p FB(,)f(28)1216 2304 y FA(stderr)p
FB(,)h(23)1216 2349 y FA(stdin)p FB(,)g(23)1216 2395
y FA(stdout)p FB(,)g(23)1216 2441 y FA(system)p FB(,)g(29)1216
2487 y FA(tmpfile)p FB(,)f(25)1216 2532 y FA(tmpnam)p
FB(,)h(25)1216 2578 y FA(Xalloc)p FB(,)g(39)1133 2624
y(sup)q(er)j(blo)q(c,)h(10)1133 2669 y(susp,)f(84,)g(91)1133
2715 y(sw)o(ap,)f(60,)h(67)1133 2761 y(sync)o(hronisation,)j(80)1133
2806 y(Syst)o(\022)-18 b(eme)13 b(de)h(Gestion)g(de)f(Fic)o(hiers,)h(7)
p eop
%%Page: 154 162
154 161 bop 75 50 a FD(154)1562 b Fz(INDEX)179 166 y
FB(tas,)13 b(39)179 212 y(terminal)h(de)g(con)o(tr^)-19
b(ole,)14 b(84)179 258 y(termios,)f(86)179 303 y(traitemen)o(t)h(par)f
(lots,)g(1)179 349 y(tub)q(es,)g(77)179 395 y(tub)q(es)g(nomm)o(\023)
-18 b(es,)14 b(80)179 482 y(W)m(orst-\014t,)f(63)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
